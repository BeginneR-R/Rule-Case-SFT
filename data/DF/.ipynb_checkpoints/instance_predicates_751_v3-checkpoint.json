[
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“工厂爆炸事件” — 表示工厂发生的爆炸事件\",\n            \"Chemical=“易燃化学品” — 表示涉及的危险化学品为易燃化学品\"\n        ],\n        \"instance_logicexpression\": [\n            \"ChemicalAccident(工厂爆炸事件) ↔ (CauseInjury(工厂爆炸事件) ∧ CausePropertyDamage(工厂爆炸事件) ∧ CauseEnvironmentalPollution(工厂爆炸事件)) ∧ (Production(易燃化学品) ∨ Operation(易燃化学品) ∨ Storage(易燃化学品) ∨ Transportation(易燃化学品) ∨ Usage(易燃化学品) ∨ Disposal(易燃化学品)) ∧ ¬(MiningAccident(工厂爆炸事件) ∨ ToxicGasPoisoning(工厂爆炸事件) ∨ ExplosionAccident(工厂爆炸事件) ∨ BlastingAccident(工厂爆炸事件))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“化工厂泄漏事件” — 表示化工厂发生的化学品泄漏事件\",\n            \"Chemical=“有毒化学品” — 表示涉及的危险化学品为有毒化学品\"\n        ],\n        \"instance_logicexpression\": [\n            \"ChemicalAccident(化工厂泄漏事件) ↔ (CauseInjury(化工厂泄漏事件) ∧ CausePropertyDamage(化工厂泄漏事件) ∧ CauseEnvironmentalPollution(化工厂泄漏事件)) ∧ (Production(有毒化学品) ∨ Operation(有毒化学品) ∨ Storage(有毒化学品) ∨ Transportation(有毒化学品) ∨ Usage(有毒化学品) ∨ Disposal(有毒化学品)) ∧ ¬(MiningAccident(化工厂泄漏事件) ∨ ToxicGasPoisoning(化工厂泄漏事件) ∨ ExplosionAccident(化工厂泄漏事件) ∨ BlastingAccident(化工厂泄漏事件))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“运输途中化学品泄漏” — 表示运输途中发生的化学品泄漏事件\",\n            \"Chemical=“腐蚀性化学品” — 表示涉及的危险化学品为腐蚀性化学品\"\n        ],\n        \"instance_logicexpression\": [\n            \"ChemicalAccident(运输途中化学品泄漏) ↔ (CauseInjury(运输途中化学品泄漏) ∧ CausePropertyDamage(运输途中化学品泄漏) ∧ CauseEnvironmentalPollution(运输途中化学品泄漏)) ∧ (Production(腐蚀性化学品) ∨ Operation(腐蚀性化学品) ∨ Storage(腐蚀性化学品) ∨ Transportation(腐蚀性化学品) ∨ Usage(腐蚀性化学品) ∨ Disposal(腐蚀性化学品)) ∧ ¬(MiningAccident(运输途中化学品泄漏) ∨ ToxicGasPoisoning(运输途中化学品泄漏) ∨ ExplosionAccident(运输途中化学品泄漏) ∨ BlastingAccident(运输途中化学品泄漏))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“实验室化学品爆炸” — 表示实验室发生的化学品爆炸事件\",\n            \"Chemical=“实验用化学品” — 表示涉及的危险化学品为实验用化学品\"\n        ],\n        \"instance_logicexpression\": [\n            \"ChemicalAccident(实验室化学品爆炸) ↔ (CauseInjury(实验室化学品爆炸) ∧ CausePropertyDamage(实验室化学品爆炸) ∧ CauseEnvironmentalPollution(实验室化学品爆炸)) ∧ (Production(实验用化学品) ∨ Operation(实验用化学品) ∨ Storage(实验用化学品) ∨ Transportation(实验用化学品) ∨ Usage(实验用化学品) ∨ Disposal(实验用化学品)) ∧ ¬(MiningAccident(实验室化学品爆炸) ∨ ToxicGasPoisoning(实验室化学品爆炸) ∨ ExplosionAccident(实验室化学品爆炸) ∨ BlastingAccident(实验室化学品爆炸))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"国务院：国务院\",\n            \"国务院安委会：国务院安委会\",\n            \"安全监管总局：安全监管总局\",\n            \"应急指挥中心：国家安全生产应急救援指挥中心\",\n            \"领导小组：危险化学品事故应急工作领导小组\",\n            \"安全监管总局局长：张伟\",\n            \"安全监管总局分管副局长：李强\"\n        ],\n        \"instance_logicexpression\": [\n            \"UnifiedLeadership(国务院, 国务院安委会) ∧ Responsible(安全监管总局, 指导协调应急救援工作) ∧ HandleSpecifically(应急指挥中心, 应急救援工作)\",\n            \"Establish(安全监管总局, 领导小组) ∧ LeaderOf(领导小组, 安全监管总局局长) ∧ DeputyLeaderOf(领导小组, 安全监管总局分管副局长)\",\n            \"MemberUnit(领导小组, 办公厅) ∧ MemberUnit(领导小组, 政策法规司) ∧ MemberUnit(领导小组, 安全生产协调司) ∧ MemberUnit(领导小组, 调度统计司) ∧ MemberUnit(领导小组, 危险化学品安全监督管理司) ∧ MemberUnit(领导小组, 应急救援指挥中心) ∧ MemberUnit(领导小组, 机关服务中心) ∧ MemberUnit(领导小组, 通信信息中心) ∧ MemberUnit(领导小组, 化学品登记中心)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"国务院：国务院\",\n            \"国务院安委会：国务院安委会\",\n            \"安全监管总局：安全监管总局\",\n            \"应急指挥中心：国家安全生产应急救援指挥中心\",\n            \"领导小组：危险化学品事故应急工作领导小组\",\n            \"安全监管总局局长：王芳\",\n            \"安全监管总局分管副局长：赵明\"\n        ],\n        \"instance_logicexpression\": [\n            \"UnifiedLeadership(国务院, 国务院安委会) ∧ Responsible(安全监管总局, 指导协调应急救援工作) ∧ HandleSpecifically(应急指挥中心, 应急救援工作)\",\n            \"Establish(安全监管总局, 领导小组) ∧ LeaderOf(领导小组, 安全监管总局局长) ∧ DeputyLeaderOf(领导小组, 安全监管总局分管副局长)\",\n            \"MemberUnit(领导小组, 办公厅) ∧ MemberUnit(领导小组, 政策法规司) ∧ MemberUnit(领导小组, 安全生产协调司) ∧ MemberUnit(领导小组, 调度统计司) ∧ MemberUnit(领导小组, 危险化学品安全监督管理司) ∧ MemberUnit(领导小组, 应急救援指挥中心) ∧ MemberUnit(领导小组, 机关服务中心) ∧ MemberUnit(领导小组, 通信信息中心) ∧ MemberUnit(领导小组, 化学品登记中心)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“办公厅” — 表示负责应急值守的部门为办公厅\",\n            \"l=“安全监管总局领导” — 表示安全监管总局的领导\",\n            \"co=“中央办公厅” — 表示报送《值班信息》的中央办公厅\",\n            \"sco=“国务院办公厅” — 表示报送《值班信息》的国务院办公厅\",\n            \"d=“国务院有关部门” — 表示抄送的国务院有关部门\",\n            \"s=“事故现场” — 表示需派工作组前往的事故现场\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o EmergencyDuty(办公厅) ∧ ∀l (ReportAccident(办公厅, 安全监管总局领导) ∧ ConveyDirectives(办公厅, 安全监管总局领导)) ∧ ∀co ∀sco SubmitDutyInfo(办公厅, 中央办公厅, 国务院办公厅) ∧ ∀d CopyToDepartments(办公厅, 国务院有关部门) ∧ ∀l ReceiveDirectives(办公厅, 安全监管总局领导) ∧ ∀l ReportForApproval(办公厅, 安全监管总局领导) ∧ SuperviseImplementation(办公厅) ∧ ∀s (SendWorkGroup(办公厅, 事故现场) → (InformAuthorities(办公厅, 国务院有关部门) ∧ CoordinateMatters(办公厅)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“办公厅” — 表示负责应急值守的部门为办公厅\",\n            \"l=“党中央领导” — 表示党中央的领导\",\n            \"co=“中央办公厅” — 表示报送《值班信息》的中央办公厅\",\n            \"sco=“国务院办公厅” — 表示报送《值班信息》的国务院办公厅\",\n            \"d=“事发地省级政府” — 表示抄送的事发地省级政府\",\n            \"s=“化工厂事故现场” — 表示需派工作组前往的化工厂事故现场\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o EmergencyDuty(办公厅) ∧ ∀l (ReportAccident(办公厅, 党中央领导) ∧ ConveyDirectives(办公厅, 党中央领导)) ∧ ∀co ∀sco SubmitDutyInfo(办公厅, 中央办公厅, 国务院办公厅) ∧ ∀d CopyToDepartments(办公厅, 事发地省级政府) ∧ ∀l ReceiveDirectives(办公厅, 党中央领导) ∧ ∀l ReportForApproval(办公厅, 党中央领导) ∧ SuperviseImplementation(办公厅) ∧ ∀s (SendWorkGroup(办公厅, 化工厂事故现场) → (InformAuthorities(办公厅, 事发地省级政府) ∧ CoordinateMatters(办公厅)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“政策法规司” — 表示负责事故信息发布的部门\",\n            \"i=“事故信息” — 表示需要发布的信息\",\n            \"m=“新华社” — 表示与政策法规司联系的媒体之一\",\n            \"l=“事故现场” — 表示新闻发布的地点\"\n        ],\n        \"instance_logicexpression\": [\n            \"ResponsibleForRelease(政策法规司, 事故信息) → (Contact(政策法规司, 中宣部) ∧ Contact(政策法规司, 国务院新闻办) ∧ Contact(政策法规司, 新华社) ∧ Contact(政策法规司, 人民日报社) ∧ Contact(政策法规司, 中央人民广播电台) ∧ Contact(政策法规司, 中央电视台) ∧ AssistInRelease(政策法规司, 新华社, 事故现场) → GuidePublicOpinion(政策法规司, 新华社))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“政策法规司” — 表示负责事故信息发布的部门\",\n            \"i=“事故信息” — 表示需要发布的信息\",\n            \"m=“人民日报社” — 表示与政策法规司联系的媒体之一\",\n            \"l=“事故现场” — 表示新闻发布的地点\"\n        ],\n        \"instance_logicexpression\": [\n            \"ResponsibleForRelease(政策法规司, 事故信息) → (Contact(政策法规司, 中宣部) ∧ Contact(政策法规司, 国务院新闻办) ∧ Contact(政策法规司, 新华社) ∧ Contact(政策法规司, 人民日报社) ∧ Contact(政策法规司, 中央人民广播电台) ∧ Contact(政策法规司, 中央电视台) ∧ AssistInRelease(政策法规司, 人民日报社, 事故现场) → GuidePublicOpinion(政策法规司, 人民日报社))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“政策法规司” — 表示负责事故信息发布的部门\",\n            \"i=“事故信息” — 表示需要发布的信息\",\n            \"m=“中央电视台” — 表示与政策法规司联系的媒体之一\",\n            \"l=“事故现场” — 表示新闻发布的地点\"\n        ],\n        \"instance_logicexpression\": [\n            \"ResponsibleForRelease(政策法规司, 事故信息) → (Contact(政策法规司, 中宣部) ∧ Contact(政策法规司, 国务院新闻办) ∧ Contact(政策法规司, 新华社) ∧ Contact(政策法规司, 人民日报社) ∧ Contact(政策法规司, 中央人民广播电台) ∧ Contact(政策法规司, 中央电视台) ∧ AssistInRelease(政策法规司, 中央电视台, 事故现场) → GuidePublicOpinion(政策法规司, 中央电视台))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“化工厂” — 表示事故场景在化工厂\",\n            \"i=“张三” — 表示安全监察专员为张三\",\n            \"r=“化工事故应急处理规定” — 表示领导发出的指示和相关规定\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s∀i∀r (Accident(“化工厂”) ∧ Instruction(Leader, “化工事故应急处理规定”) → (GoTo(“张三”, “化工厂”) ∧ Participate(“张三”, “化工厂”, “应急救援”) ∧ Participate(“张三”, “化工厂”, “调查”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“矿井” — 表示事故场景在矿井\",\n            \"i=“李四” — 表示安全监察专员为李四\",\n            \"r=“矿山安全生产规章” — 表示领导发出的指示和相关规定\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s∀i∀r (Accident(“矿井”) ∧ Instruction(Leader, “矿山安全生产规章”) → (GoTo(“李四”, “矿井”) ∧ Participate(“李四”, “矿井”, “应急救援”) ∧ Participate(“李四”, “矿井”, “调查”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“港口” — 表示事故场景在港口\",\n            \"i=“王五” — 表示安全监察专员为王五\",\n            \"r=“港口作业安全管理条例” — 表示领导发出的指示和相关规定\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s∀i∀r (Accident(“港口”) ∧ Instruction(Leader, “港口作业安全管理条例”) → (GoTo(“王五”, “港口”) ∧ Participate(“王五”, “港口”, “应急救援”) ∧ Participate(“王五”, “港口”, “调查”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“建筑工地” — 表示事故场景在建筑工地\",\n            \"i=“赵六” — 表示安全监察专员为赵六\",\n            \"r=“建筑施工安全规章” — 表示领导发出的指示和相关规定\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s∀i∀r (Accident(“建筑工地”) ∧ Instruction(Leader, “建筑施工安全规章”) → (GoTo(“赵六”, “建筑工地”) ∧ Participate(“赵六”, “建筑工地”, “应急救援”) ∧ Participate(“赵六”, “建筑工地”, “调查”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“调度统计司” — 表示调度统计司负责应急值守\",\n            \"i=“化工厂爆炸事故” — 表示接收和处置的事故信息为化工厂爆炸事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀i (EmergencyDuty(调度统计司) → (ReceiveAccidentInfo(调度统计司, 化工厂爆炸事故) ∧ HandleAccidentInfo(调度统计司, 化工厂爆炸事故) ∧ ReportToLeader(调度统计司, 化工厂爆炸事故) ∧ ForwardToOffice(调度统计司, 化工厂爆炸事故) ∧ ForwardToCommandCenter(调度统计司, 化工厂爆炸事故)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“调度统计司” — 表示调度统计司负责应急值守\",\n            \"i=“矿难事故” — 表示接收和处置的事故信息为矿难事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀i (EmergencyDuty(调度统计司) → (ReceiveAccidentInfo(调度统计司, 矿难事故) ∧ HandleAccidentInfo(调度统计司, 矿难事故) ∧ ReportToLeader(调度统计司, 矿难事故) ∧ ForwardToOffice(调度统计司, 矿难事故) ∧ ForwardToCommandCenter(调度统计司, 矿难事故)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“调度统计司” — 表示调度统计司负责应急值守\",\n            \"i=“交通事故” — 表示接收和处置的事故信息为交通事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀i (EmergencyDuty(调度统计司) → (ReceiveAccidentInfo(调度统计司, 交通事故) ∧ HandleAccidentInfo(调度统计司, 交通事故) ∧ ReportToLeader(调度统计司, 交通事故) ∧ ForwardToOffice(调度统计司, 交通事故) ∧ ForwardToCommandCenter(调度统计司, 交通事故)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“调度统计司” — 表示调度统计司负责应急值守\",\n            \"i=“火灾事故” — 表示接收和处置的事故信息为火灾事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀i (EmergencyDuty(调度统计司) → (ReceiveAccidentInfo(调度统计司, 火灾事故) ∧ HandleAccidentInfo(调度统计司, 火灾事故) ∧ ReportToLeader(调度统计司, 火灾事故) ∧ ForwardToOffice(调度统计司, 火灾事故) ∧ ForwardToCommandCenter(调度统计司, 火灾事故)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“调度统计司” — 表示调度统计司负责应急值守\",\n            \"i=“化工厂爆炸事故救援处理工作指导意见” — 表示起草的事故救援处理工作指导意见\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀i (EmergencyDuty(调度统计司) → (DraftGuidance(调度统计司, 化工厂爆炸事故救援处理工作指导意见) → TrackRescue(调度统计司) ∧ ContinueReportRescue(调度统计司)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“危险化学品安全监督管理司” — 表示危险化学品安全监督管理司\",\n            \"u=“化工厂” — 表示事故单位为化工厂\",\n            \"i=“化工厂事故应急处理流程” — 表示提供给化工厂的事故应急处理流程信息\",\n            \"s=“化工厂” — 表示事故场景在化工厂\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀u ∀i ∀s (Accident(化工厂) ∧ Department(危险化学品安全监督管理司) ∧ Unit(化工厂) → (ProvideInformation(危险化学品安全监督管理司, 化工厂, 化工厂事故应急处理流程) ∧ ParticipateInEmergencyRescue(危险化学品安全监督管理司, 化工厂) ∧ ParticipateInInvestigation(危险化学品安全监督管理司, 化工厂)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“危险化学品安全监督管理司” — 表示危险化学品安全监督管理司\",\n            \"u=“炼油厂” — 表示事故单位为炼油厂\",\n            \"i=“炼油厂事故应急响应措施” — 表示提供给炼油厂的事故应急响应措施信息\",\n            \"s=“炼油厂” — 表示事故场景在炼油厂\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀u ∀i ∀s (Accident(炼油厂) ∧ Department(危险化学品安全监督管理司) ∧ Unit(炼油厂) → (ProvideInformation(危险化学品安全监督管理司, 炼油厂, 炼油厂事故应急响应措施) ∧ ParticipateInEmergencyRescue(危险化学品安全监督管理司, 炼油厂) ∧ ParticipateInInvestigation(危险化学品安全监督管理司, 炼油厂)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“危险化学品安全监督管理司” — 表示危险化学品安全监督管理司\",\n            \"u=“化学品仓库” — 表示事故单位为化学品仓库\",\n            \"i=“化学品仓库事故处理指南” — 表示提供给化学品仓库的事故处理指南信息\",\n            \"s=“化学品仓库” — 表示事故场景在化学品仓库\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀u ∀i ∀s (Accident(化学品仓库) ∧ Department(危险化学品安全监督管理司) ∧ Unit(化学品仓库) → (ProvideInformation(危险化学品安全监督管理司, 化学品仓库, 化学品仓库事故处理指南) ∧ ParticipateInEmergencyRescue(危险化学品安全监督管理司, 化学品仓库) ∧ ParticipateInInvestigation(危险化学品安全监督管理司, 化学品仓库)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“危险化学品安全监督管理司” — 表示危险化学品安全监督管理司\",\n            \"u=“制药厂” — 表示事故单位为制药厂\",\n            \"i=“制药厂事故应急操作手册” — 表示提供给制药厂的事故应急操作手册信息\",\n            \"s=“制药厂” — 表示事故场景在制药厂\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀u ∀i ∀s (Accident(制药厂) ∧ Department(危险化学品安全监督管理司) ∧ Unit(制药厂) → (ProvideInformation(危险化学品安全监督管理司, 制药厂, 制药厂事故应急操作手册) ∧ ParticipateInEmergencyRescue(危险化学品安全监督管理司, 制药厂) ∧ ParticipateInInvestigation(危险化学品安全监督管理司, 制药厂)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“应急指挥中心” — 表示应急指挥中心\",\n            \"o=“立即启动应急预案” — 表示下达的指令为立即启动应急预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"指示(应急指挥中心) → IssueOrder(应急指挥中心, 立即启动应急预案)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“应急指挥中心” — 表示应急指挥中心\",\n            \"r=“化工厂爆炸事故救援” — 表示事故应急救援工作为化工厂爆炸事故救援\"\n        ],\n        \"instance_logicexpression\": [\n            \"指示(应急指挥中心) → CoordinateGuide(应急指挥中心, 化工厂爆炸事故救援)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“应急指挥中心” — 表示应急指挥中心\",\n            \"p=“化工厂爆炸事故救援方案” — 表示应急救援建议方案为化工厂爆炸事故救援方案\"\n        ],\n        \"instance_logicexpression\": [\n            \"指示(应急指挥中心) → ProposePlan(应急指挥中心, 化工厂爆炸事故救援方案)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“应急指挥中心” — 表示应急指挥中心\",\n            \"s=“化工厂爆炸事故救援进展” — 表示事故救援情况为化工厂爆炸事故救援进展\"\n        ],\n        \"instance_logicexpression\": [\n            \"指示(应急指挥中心) → TrackSituation(应急指挥中心, 化工厂爆炸事故救援进展) ∧ ReportToLeader(应急指挥中心, 化工厂爆炸事故救援进展)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“应急指挥中心” — 表示应急指挥中心\",\n            \"e=“化工安全专家组” — 表示专家咨询为化工安全专家组\"\n        ],\n        \"instance_logicexpression\": [\n            \"指示(应急指挥中心) → CoordinateExperts(应急指挥中心, 化工安全专家组) ∧ ProvideSupport(化工安全专家组, 化工厂爆炸事故救援)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“应急指挥中心” — 表示应急指挥中心\",\n            \"r=“救援设备和人员” — 表示调集的相关资源为救援设备和人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"指示(应急指挥中心) → MobilizeResources(应急指挥中心, 救援设备和人员)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=“事故现场安全检查” — 表示事故应急处置过程中的任务为事故现场安全检查\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t (EmergencyResponse(“事故现场安全检查”) → LogisticsSupport(“事故现场安全检查”) ∧ Responsible(机关服务中心, “事故现场安全检查”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“救援物资调配” — 表示事故应急处置过程中的任务为救援物资调配\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t (EmergencyResponse(“救援物资调配”) → LogisticsSupport(“救援物资调配”) ∧ Responsible(机关服务中心, “救援物资调配”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“事故现场人员疏散” — 表示事故应急处置过程中的任务为事故现场人员疏散\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t (EmergencyResponse(“事故现场人员疏散”) → LogisticsSupport(“事故现场人员疏散”) ∧ Responsible(机关服务中心, “事故现场人员疏散”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“事故现场医疗救护” — 表示事故应急处置过程中的任务为事故现场医疗救护\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t (EmergencyResponse(“事故现场医疗救护”) → LogisticsSupport(“事故现场医疗救护”) ∧ Responsible(机关服务中心, “事故现场医疗救护”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“通信信息中心A” — 表示通信信息中心为通信信息中心A\",\n            \"Network=“外网” — 表示网络为外网\",\n            \"Network=“内网” — 表示网络为内网\"\n        ],\n        \"instance_logicexpression\": [\n            \"通信信息中心(通信信息中心A) → (Ensure(通信信息中心A, 外网) ∧ Ensure(通信信息中心A, 内网) ∧ Operational(外网) ∧ Operational(内网))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“通信信息中心B” — 表示通信信息中心为通信信息中心B\",\n            \"i=“化工厂爆炸事故” — 表示事故信息为化工厂爆炸事故\",\n            \"r=“救援队伍已到达现场” — 表示救援进展为救援队伍已到达现场\",\n            \"Channel=“官方网站” — 表示发布信息的渠道是官方网站\"\n        ],\n        \"instance_logicexpression\": [\n            \"通信信息中心(通信信息中心B) ∧ 事故信息(化工厂爆炸事故) ∧ 救援进展(救援队伍已到达现场) → Publish(通信信息中心B, 化工厂爆炸事故, 官方网站) ∧ Publish(通信信息中心B, 救援队伍已到达现场, 官方网站)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“通信信息中心C” — 表示通信信息中心为通信信息中心C\",\n            \"i=“地震灾害救援信息” — 表示事故信息为地震灾害救援信息\",\n            \"r=“救援物资已发放” — 表示救援进展为救援物资已发放\",\n            \"Channel=“应急响应网站” — 表示发布信息的渠道是应急响应网站\"\n        ],\n        \"instance_logicexpression\": [\n            \"通信信息中心(通信信息中心C) ∧ 事故信息(地震灾害救援信息) ∧ 救援进展(救援物资已发放) → Publish(通信信息中心C, 地震灾害救援信息, 应急响应网站) ∧ Publish(通信信息中心C, 救援物资已发放, 应急响应网站)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“通信信息中心D” — 表示通信信息中心为通信信息中心D\",\n            \"i=“洪水灾害紧急疏散” — 表示事故信息为洪水灾害紧急疏散\",\n            \"r=“临时避难所已建立” — 表示救援进展为临时避难所已建立\",\n            \"Channel=“公共信息发布平台” — 表示发布信息的渠道是公共信息发布平台\"\n        ],\n        \"instance_logicexpression\": [\n            \"通信信息中心(通信信息中心D) ∧ 事故信息(洪水灾害紧急疏散) ∧ 救援进展(临时避难所已建立) → Publish(通信信息中心D, 洪水灾害紧急疏散, 公共信息发布平台) ∧ Publish(通信信息中心D, 临时避难所已建立, 公共信息发布平台)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“化学品基本数据库” — 表示化学品登记中心负责建立的数据库\",\n            \"c=“化学品甲的基本数据” — 表示关于化学品甲的数据\",\n            \"p=“事故救援” — 表示提供数据的目的是事故救援\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀d∀p (ResponsibleForEstablishing(化学品登记中心, “化学品基本数据库”) ∧ BasicDatabase(“化学品基本数据库”) → (ChemicalData(“化学品甲的基本数据”) ∧ ProvideData(化学品登记中心, “化学品甲的基本数据”, AccidentRescue) ∧ ProvideData(化学品登记中心, “化学品甲的基本数据”, InvestigationHandling)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“化学品基本数据库” — 表示化学品登记中心负责建立的数据库\",\n            \"c=“化学品乙的安全信息” — 表示关于化学品乙的安全信息\",\n            \"p=“调查处理” — 表示提供数据的目的是调查处理\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀d∀p (ResponsibleForEstablishing(化学品登记中心, “化学品基本数据库”) ∧ BasicDatabase(“化学品基本数据库”) → (ChemicalData(“化学品乙的安全信息”) ∧ ProvideData(化学品登记中心, “化学品乙的安全信息”, AccidentRescue) ∧ ProvideData(化学品登记中心, “化学品乙的安全信息”, InvestigationHandling)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“化学品基本数据库” — 表示化学品登记中心负责建立的数据库\",\n            \"c=“化学品丙的应急措施” — 表示关于化学品丙的应急措施\",\n            \"p=“事故救援” — 表示提供数据的目的是事故救援\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀d∀p (ResponsibleForEstablishing(化学品登记中心, “化学品基本数据库”) ∧ BasicDatabase(“化学品基本数据库”) → (ChemicalData(“化学品丙的应急措施”) ∧ ProvideData(化学品登记中心, “化学品丙的应急措施”, AccidentRescue) ∧ ProvideData(化学品登记中心, “化学品丙的应急措施”, InvestigationHandling)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“化学品基本数据库” — 表示化学品登记中心负责建立的数据库\",\n            \"c=“化学品丁的环境影响” — 表示关于化学品丁的环境影响\",\n            \"p=“调查处理” — 表示提供数据的目的是调查处理\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀d∀p (ResponsibleForEstablishing(化学品登记中心, “化学品基本数据库”) ∧ BasicDatabase(“化学品基本数据库”) → (ChemicalData(“化学品丁的环境影响”) ∧ ProvideData(化学品登记中心, “化学品丁的环境影响”, AccidentRescue) ∧ ProvideData(化学品登记中心, “化学品丁的环境影响”, InvestigationHandling)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“化工厂爆炸” — 表示事故情况为化工厂爆炸\",\n            \"部门：环保局\"\n        ],\n        \"instance_logicexpression\": [\n            \"NeedCooperation(化工厂爆炸) → CoordinateSupport(国务院安委会办公室, 环保局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“河流污染” — 表示由事故灾难造成的突发环境污染事件为河流污染\",\n            \"办公室：国务院安委会办公室\"\n        ],\n        \"instance_logicexpression\": [\n            \"EnvironmentalPollution(河流污染) → UnifiedCommand(国务院安委会办公室)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“矿难事故” — 表示事故情况为矿难事故\",\n            \"部门：卫生局\"\n        ],\n        \"instance_logicexpression\": [\n            \"NeedCooperation(矿难事故) → CoordinateSupport(国务院安委会办公室, 卫生局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“工业区火灾” — 表示由事故灾难造成的突发环境污染事件为工业区火灾\",\n            \"办公室：国务院安委会办公室\"\n        ],\n        \"instance_logicexpression\": [\n            \"EnvironmentalPollution(工业区火灾) → UnifiedCommand(国务院安委会办公室)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“化学品泄漏” — 表示事故情况为化学品泄漏\",\n            \"部门：消防局\"\n        ],\n        \"instance_logicexpression\": [\n            \"NeedCooperation(化学品泄漏) → CoordinateSupport(国务院安委会办公室, 消防局)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“市级人民政府” — 表示相应的地方人民政府为市级人民政府\",\n            \"c=“市级应急救援指挥部” — 表示现场应急救援指挥部为市级应急救援指挥部\",\n            \"Leader=“市长” — 表示地方政府负责人为市长\",\n            \"RescueTeams=“消防队、医疗队” — 表示参与应急救援的队伍和人员包括消防队和医疗队\",\n            \"Incident=“化工厂爆炸” — 表示事故为化工厂爆炸\",\n            \"RescueStatus=“进行中” — 表示救援情况为进行中\",\n            \"GeneralSafetyRegulation=“安全监管总局” — 表示报告的接收方为安全监管总局\",\n            \"NeedAssistance=“是” — 表示需要外部力量增援\",\n            \"AssistanceDetails=“需要重型机械和专业排爆队伍” — 表示需要的救援力量和装备为重型机械和专业排爆队伍\",\n            \"l=“应急局局长” — 表示有关领导为应急局局长\",\n            \"s=“化工厂爆炸现场” — 表示事故现场为化工厂爆炸现场\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀c (FormCommandCenter(市级人民政府, 市级应急救援指挥部) → (ActAsCommander(市长, 市级应急救援指挥部) ∧ ResponsibleForCommand(市级应急救援指挥部, 消防队、医疗队)))\",\n            \"∀c∀i (ResponsibleForCommand(市级应急救援指挥部, 消防队、医疗队) ∧ Incident(化工厂爆炸) → ReportTo(市级应急救援指挥部, 安全监管总局, 化工厂爆炸, 进行中))\",\n            \"∀c (ResponsibleForCommand(市级应急救援指挥部, 消防队、医疗队) ∧ NeedAssistance是 → RequestAssistance(市级应急救援指挥部, 安全监管总局, 需要重型机械和专业排爆队伍))\",\n            \"∀l∀s (FamiliarWith(应急局局长, 化工厂爆炸现场) → (ResponsibleForCommand(市级应急救援指挥部, 消防队、医疗队)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“省级人民政府” — 表示相应的地方人民政府为省级人民政府\",\n            \"c=“省级应急救援指挥部” — 表示现场应急救援指挥部为省级应急救援指挥部\",\n            \"Leader=“省长” — 表示地方政府负责人为省长\",\n            \"RescueTeams=“救援直升机队、潜水队” — 表示参与应急救援的队伍和人员包括救援直升机队和潜水队\",\n            \"Incident=“海上油轮泄漏” — 表示事故为海上油轮泄漏\",\n            \"RescueStatus=“完成” — 表示救援情况为完成\",\n            \"GeneralSafetyRegulation=“安全监管总局” — 表示报告的接收方为安全监管总局\",\n            \"NeedAssistance=“否” — 表示不需要外部力量增援\",\n            \"l=“副省长” — 表示有关领导为副省长\",\n            \"s=“海上油轮泄漏现场” — 表示事故现场为海上油轮泄漏现场\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀c (FormCommandCenter(省级人民政府, 省级应急救援指挥部) → (ActAsCommander(省长, 省级应急救援指挥部) ∧ ResponsibleForCommand(省级应急救援指挥部, 救援直升机队、潜水队)))\",\n            \"∀c∀i (ResponsibleForCommand(省级应急救援指挥部, 救援直升机队、潜水队) ∧ Incident(海上油轮泄漏) → ReportTo(省级应急救援指挥部, 安全监管总局, 海上油轮泄漏, 完成))\",\n            \"∀c (ResponsibleForCommand(省级应急救援指挥部, 救援直升机队、潜水队) ∧ NeedAssistance否 → ¬RequestAssistance(省级应急救援指挥部, 安全监管总局, 无需增援))\",\n            \"∀l∀s (FamiliarWith(副省长, 海上油轮泄漏现场) → (ResponsibleForCommand(省级应急救援指挥部, 救援直升机队、潜水队)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“安全生产事故灾难信息” — 表示安全监管总局负责统一接收、处理、统计分析的信息\",\n            \"s=“安全监管总局” — 表示接收处理信息的机构\",\n            \"Agency=“安全监管总局” — 表示核实信息的机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i ∀s (ReceiveProcessInfo(安全监管总局, “安全生产事故灾难信息”) ∧ VerifyInfo(安全监管总局, “安全生产事故灾难信息”) → ReportInfo(安全监管总局, 国务院, “安全生产事故灾难信息”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“地方各级安全生产监督管理部门” — 表示监控和信息分析的机构\",\n            \"s=“危险化学品重大危险源” — 表示监控分析的来源\",\n            \"e=“可能引发危险化学品事故的其他灾害和事件的信息” — 表示监控分析的信息\",\n            \"Level=“Ⅱ级以上” — 表示事故等级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀s ∀e (MonitorAnalyze(地方各级安全生产监督管理部门, 危险化学品重大危险源, “可能引发危险化学品事故的其他灾害和事件的信息”) ∧ AccidentLevel('Ⅱ级以上', “可能引发危险化学品事故的其他灾害和事件的信息”) → ReportInfo(地方各级安全生产监督管理部门, 安全监管总局, “可能引发危险化学品事故的其他灾害和事件的信息”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“特别重大安全生产事故灾难” — 表示特别重大事故\",\n            \"u=“单位负责人” — 表示接到报告的单位负责人\",\n            \"l=“事故现场有关人员报告的信息” — 表示事故现场有关人员报告的信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p ∀u ∀l (VerySeriousAccident(“特别重大安全生产事故灾难”) → (ReportInfo(“特别重大安全生产事故灾难”, “单位负责人”, “事故现场有关人员报告的信息”) ∧ ReportInfo(“单位负责人”, 当地人民政府, “事故现场有关人员报告的信息”) ∧ ReportInfo(当地人民政府, 上级政府, “事故现场有关人员报告的信息”) ∧ (AccidentLevel('Ⅰ级', “特别重大安全生产事故灾难”) → (ReportInfo(当地人民政府, 国务院, “特别重大安全生产事故灾难”) ∧ ReportInfo(当地人民政府, 安全监管总局, “特别重大安全生产事故灾难”))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“特别重大安全生产事故灾难信息” — 表示需要上报的特别重大事故信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g (ReportInfo(省（区、市）人民政府, 国务院, “特别重大安全生产事故灾难信息”) → (ReportInfo(省（区、市）人民政府, 安全监管总局, “特别重大安全生产事故灾难信息”) ∧ (“特别重大安全生产事故灾难信息” 发生后 2小时内))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“市级应急救援指挥机构” — 表示市级安全生产应急救援指挥机构\",\n            \"i=“化工厂化学品泄漏” — 表示可能导致安全生产事故灾难的信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀i (ConfirmInfo(“市级应急救援指挥机构”, “化工厂化学品泄漏”) → (DeterminePlan(“市级应急救援指挥机构”) ∧ NotifyAction(“市级应急救援指挥机构”, d)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“省级应急救援指挥机构” — 表示省级安全生产应急救援指挥机构\",\n            \"h=“国家级应急救援指挥机构” — 表示上级应急救援指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (RequestSupport(“省级应急救援指挥机构”, “国家级应急救援指挥机构”) → (h = HigherCommandInstitution(“省级应急救援指挥机构”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“重大矿山事故” — 表示发生的重大安全生产事故灾难\",\n            \"RegulationAuthority=“安全监管总局” — 表示安全监管总局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (MajorAccident(“重大矿山事故”) → (CloseMonitor(“安全监管总局”, “重大矿山事故”) ∧ PrepareEmergency(“安全监管总局”) ∧ (ReportToStateCouncil(“安全监管总局”) ∨ InformOtherParties(“安全监管总局”))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=“地震预警信息” — 表示事故灾难预警信息\",\n            \"Office=“国务院安委会办公室” — 表示国务院安委会办公室\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (AnalyzeWarningInfo(“国务院安委会办公室”) → (SuggestIssueWarning(“国务院安委会办公室”, StateCouncil)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"A=“化学品工厂火灾事故” — 表示事故类型为化学品工厂火灾\",\n            \"S=“Ⅰ” — 表示事故严重性为Ⅰ级\",\n            \"R=“社区” — 表示事故影响范围为社区\",\n            \"L=“1.5亿” — 表示事故造成的直接经济损失为1.5亿元\",\n            \"C=“50人” — 表示事故造成的人员伤亡为50人\",\n            \"NeedExternalRescue(A) — 表示事故需要外部力量的应急救援\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A (AccidentType(A) ∧ ImpactRange(A, 社区) ∧ (Casualty(A, 50) ∨ ImpactRange(A, 10万) ∨ EconomicLoss(A, 1.5亿) ∨ NeedExternalRescue(A)) → EmergencyResponseLevel(A, Ⅰ))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“化工厂爆炸事故” — 表示事故类型为化工厂爆炸\",\n            \"S=“Ⅰ” — 表示事故严重性为Ⅰ级\",\n            \"R=“居民” — 表示事故影响范围为居民\",\n            \"L=“2亿” — 表示事故造成的直接经济损失为2亿元\",\n            \"C=“80人” — 表示事故造成的人员伤亡为80人\",\n            \"NeedExternalRescue(A) — 表示事故需要外部力量的应急救援\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A (AccidentType(A) ∧ ImpactRange(A, 居民) ∧ (Casualty(A, 80) ∨ ImpactRange(A, 10万) ∨ EconomicLoss(A, 2亿) ∨ NeedExternalRescue(A)) → EmergencyResponseLevel(A, Ⅰ))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“危险化学品泄漏事故” — 表示事故类型为危险化学品泄漏\",\n            \"S=“Ⅰ” — 表示事故严重性为Ⅰ级\",\n            \"R=“社区” — 表示事故影响范围为社区\",\n            \"L=“1.2亿” — 表示事故造成的直接经济损失为1.2亿元\",\n            \"C=“60人” — 表示事故造成的人员伤亡为60人\",\n            \"NeedExternalRescue(A) — 表示事故需要外部力量的应急救援\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A (AccidentType(A) ∧ ImpactRange(A, 社区) ∧ (Casualty(A, 60) ∨ ImpactRange(A, 10万) ∨ EconomicLoss(A, 1.2亿) ∨ NeedExternalRescue(A)) → EmergencyResponseLevel(A, Ⅰ))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“运输途中化学品泄漏” — 表示事故类型为运输途中化学品泄漏\",\n            \"S=“Ⅰ” — 表示事故严重性为Ⅰ级\",\n            \"R=“居民” — 表示事故影响范围为居民\",\n            \"L=“1.1亿” — 表示事故造成的直接经济损失为1.1亿元\",\n            \"C=“40人” — 表示事故造成的人员伤亡为40人\",\n            \"NeedExternalRescue(A) — 表示事故需要外部力量的应急救援\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A (AccidentType(A) ∧ ImpactRange(A, 居民) ∧ (Casualty(A, 40) ∨ ImpactRange(A, 10万) ∨ EconomicLoss(A, 1.1亿) ∨ NeedExternalRescue(A)) → EmergencyResponseLevel(A, Ⅰ))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"A=“化工厂火灾” — 表示在化工厂发生的火灾事故\",\n            \"C=“周边社区” — 表示事故危及的社区\",\n            \"N1=15 — 表示事故造成的死亡人数\",\n            \"M1=7000 — 表示事故造成的直接经济损失金额\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A ∀C ∀N1 ∀N2 ∀N3 ∀M1 ∀M2 (Accident(“化工厂火灾”, ChemicalFire) → (EndangerSafety(“化工厂火灾”, “周边社区”) ∧ (Casualties(“化工厂火灾”, 15) ∧ 10 ≤ 15 ∧ 15 ≤ 29) ∨ (EconomicLoss(“化工厂火灾”, 7000) ∧ 5000 ≤ 7000 ∧ 7000 ≤ 10000)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“化学品仓库爆炸” — 表示在化学品仓库发生的爆炸事故\",\n            \"C=“附近居民区” — 表示事故危及的社区\",\n            \"N2=75 — 表示事故造成的中毒人数\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A ∀C ∀N1 ∀N2 ∀N3 ∀M1 ∀M2 (Accident(“化学品仓库爆炸”, Explosion) → (EndangerSafety(“化学品仓库爆炸”, “附近居民区”) ∧ (Poisoning(“化学品仓库爆炸”, 75) ∧ 50 ≤ 75 ∧ 75 ≤ 100)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“运输途中化学品泄漏” — 表示在运输途中发生的化学品泄漏事故\",\n            \"C=“途径村庄” — 表示事故危及的社区\",\n            \"M2=8500 — 表示事故造成的直接经济损失金额\",\n            \"SocialImpact — 表示事故造成了重大社会影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A ∀C ∀N1 ∀N2 ∀N3 ∀M1 ∀M2 (Accident(“运输途中化学品泄漏”, Leak) → (EndangerSafety(“运输途中化学品泄漏”, “途径村庄”) ∧ (EconomicLoss(“运输途中化学品泄漏”, 8500) ∧ 5000 ≤ 8500 ∧ 8500 ≤ 10000) ∨ SocialImpact(“运输途中化学品泄漏”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“化工厂有毒气体泄漏” — 表示在化工厂发生的有毒气体泄漏事故\",\n            \"C=“工厂周边社区” — 表示事故危及的社区\",\n            \"N1=22 — 表示事故造成的死亡人数\",\n            \"N3=SocialImpact — 表示事故造成了重大社会影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A ∀C ∀N1 ∀N2 ∀N3 ∀M1 ∀M2 (Accident(“化工厂有毒气体泄漏”, Leak) → (EndangerSafety(“化工厂有毒气体泄漏”, “工厂周边社区”) ∧ (Casualties(“化工厂有毒气体泄漏”, 22) ∧ 10 ≤ 22 ∧ 22 ≤ 29) ∨ SocialImpact(“化工厂有毒气体泄漏”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"A=“化工厂火灾” — 表示在化工厂发生的火灾事故\",\n            \"C=“周边社区” — 表示事故危及的社区\",\n            \"N1=5 — 表示事故造成的死亡人数\",\n            \"N2=40 — 表示事故造成的中毒人数\",\n            \"N3=1000万 — 表示事故造成的直接经济损失\",\n            \"N4=“较大” — 表示事故造成的社会影响级别\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A ∀C ∀N1 ∀N2 ∀N3 ∀N4 (Accident(“化工厂火灾”, ChemicalFire) ∨ Accident(A, Explosion) ∨ Accident(A, Leak) → (EndangerSafety(“化工厂火灾”, “周边社区”) ∧ (Casualties(“化工厂火灾”, 5) ∧ 3 ≤ 5 ∧ 5 ≤ 9) ∨ (Poisoning(“化工厂火灾”, 40) ∧ 30 ≤ 40 ∧ 40 ≤ 50) ∨ (EconomicLoss(“化工厂火灾”, 1000万) ∧ 1000万 > Threshold) ∨ (SocialImpact(“化工厂火灾”, “较大”) ∧ “较大” > Threshold))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“化学品仓库爆炸” — 表示在化学品仓库发生的爆炸事故\",\n            \"C=“附近居民区” — 表示事故危及的社区\",\n            \"N1=7 — 表示事故造成的死亡人数\",\n            \"N2=35 — 表示事故造成的中毒人数\",\n            \"N3=800万 — 表示事故造成的直接经济损失\",\n            \"N4=“较大” — 表示事故造成的社会影响级别\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A ∀C ∀N1 ∀N2 ∀N3 ∀N4 (Accident(“化学品仓库爆炸”, ChemicalFire) ∨ Accident(A, Explosion) ∨ Accident(A, Leak) → (EndangerSafety(“化学品仓库爆炸”, “附近居民区”) ∧ (Casualties(“化学品仓库爆炸”, 7) ∧ 3 ≤ 7 ∧ 7 ≤ 9) ∨ (Poisoning(“化学品仓库爆炸”, 35) ∧ 30 ≤ 35 ∧ 35 ≤ 50) ∨ (EconomicLoss(“化学品仓库爆炸”, 800万) ∧ 800万 > Threshold) ∨ (SocialImpact(“化学品仓库爆炸”, “较大”) ∧ “较大” > Threshold))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“运输途中化学品泄漏” — 表示在运输途中发生的化学品泄漏事故\",\n            \"C=“沿途村庄” — 表示事故危及的社区\",\n            \"N1=3 — 表示事故造成的死亡人数\",\n            \"N2=45 — 表示事故造成的中毒人数\",\n            \"N3=1500万 — 表示事故造成的直接经济损失\",\n            \"N4=“重大” — 表示事故造成的社会影响级别\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A ∀C ∀N1 ∀N2 ∀N3 ∀N4 (Accident(“运输途中化学品泄漏”, ChemicalFire) ∨ Accident(A, Explosion) ∨ Accident(A, Leak) → (EndangerSafety(“运输途中化学品泄漏”, “沿途村庄”) ∧ (Casualties(“运输途中化学品泄漏”, 3) ∧ 3 ≤ 3 ∧ 3 ≤ 9) ∨ (Poisoning(“运输途中化学品泄漏”, 45) ∧ 30 ≤ 45 ∧ 45 ≤ 50) ∨ (EconomicLoss(“运输途中化学品泄漏”, 1500万) ∧ 1500万 > Threshold) ∨ (SocialImpact(“运输途中化学品泄漏”, “重大”) ∧ “重大” > Threshold))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"A=“化工厂火灾” — 表示在化工厂发生的火灾事故\",\n            \"C=“周边社区” — 表示事故危及的社区\",\n            \"Type=“火灾事故” — 表示事故类型为火灾\",\n            \"Number=2 — 表示事故造成的死亡人数\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A ∀C (Accident(“化工厂火灾”, ChemicalProcess) ∧ EndangerSafety(“化工厂火灾”, “周边社区”) → (Casualties(“化工厂火灾”, 2) ∨ Poisoning(“化工厂火灾”, ≤30) ∨ SocialImpact(“化工厂火灾”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“化学品泄漏” — 表示在化学品储存过程中发生的泄漏事故\",\n            \"C=“附近居民区” — 表示事故危及的社区\",\n            \"Type=“泄漏事故” — 表示事故类型为泄漏\",\n            \"Number=0 — 表示事故没有造成死亡\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A ∀C (Accident(“化学品泄漏”, ChemicalProcess) ∧ EndangerSafety(“化学品泄漏”, “附近居民区”) → (Casualties(“化学品泄漏”, 0) ∨ Poisoning(“化学品泄漏”, ≤30) ∨ SocialImpact(“化学品泄漏”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“运输途中爆炸” — 表示在化学品运输过程中发生的爆炸事故\",\n            \"C=“沿途村庄” — 表示事故危及的社区\",\n            \"Type=“爆炸事故” — 表示事故类型为爆炸\",\n            \"Number=3 — 表示事故造成的死亡人数\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A ∀C (Accident(“运输途中爆炸”, ChemicalProcess) ∧ EndangerSafety(“运输途中爆炸”, “沿途村庄”) → (Casualties(“运输途中爆炸”, 3) ∨ Poisoning(“运输途中爆炸”, ≤30) ∨ SocialImpact(“运输途中爆炸”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“废弃处置中毒” — 表示在废弃危险化学品处置过程中发生的中毒事故\",\n            \"C=“周边学校” — 表示事故危及的社区\",\n            \"Type=“中毒事故” — 表示事故类型为中毒\",\n            \"Number=25 — 表示事故造成的中毒人数\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A ∀C (Accident(“废弃处置中毒”, ChemicalProcess) ∧ EndangerSafety(“废弃处置中毒”, “周边学校”) → (Casualties(“废弃处置中毒”, ≤3) ∨ Poisoning(“废弃处置中毒”, 25) ∨ SocialImpact(“废弃处置中毒”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"E=“化工厂A” — 表示化工厂A在其所在地政府发生事故\",\n            \"G=“市政府X” — 表示化工厂A所在地的市政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E∀G (Accident(化工厂A, 市政府X) → (ActivateEmergencyPlan(化工厂A, 市政府X) ∧ Report(市政府X)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“化工厂A” — 表示化工厂A发生Ⅰ级事故\",\n            \"G=“市政府X” — 表示化工厂A所在地的市政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E∀G (LevelIAccident(化工厂A) → ActivateNationalPlan(市政府X))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"G=“省政府Y” — 表示省级人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀G (ProvincialDecide(省政府Y) → (∃E Accident(E, 省政府Y) ∧ LevelIAccident(E) → ActivateNationalPlan(省政府Y)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"G=“市政府X” — 表示市政府\",\n            \"E=“化工厂B” — 表示化工厂B在其所在地政府发生事故，且不是Ⅰ级事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀G (ActivateCorrespondingPlan(市政府X) → (∃E Accident(化工厂B, 市政府X) ∧ ¬LevelIAccident(化工厂B)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"G=“市政府X” — 表示市政府请求上一级救援\",\n            \"E=“化工厂B” — 表示化工厂B在其所在地政府发生事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀G (RequestUpperRescue(市政府X) → (ActivateCorrespondingPlan(市政府X) ∧ ¬有能力(市政府X)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“化工厂爆炸” — 表示事故场景为化工厂爆炸\",\n            \"Level=“Ⅰ级” — 表示事故等级为Ⅰ级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s ((ChemicalIncident(s, 'Ⅰ级') ∨ ProvincialRequest(s) ∨ SuperiorInstruction(s) ∨ LeaderNecessity(s) ∨ OtherPlanNecessity(s)) → EmergencyPlanActivated(s, '启动'))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“工业园区化学品泄漏” — 表示事故场景为工业园区化学品泄漏\",\n            \"ProvincialRequest(s) — 表示接到省级人民政府关于危险化学品事故救援增援请求\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s ((ChemicalIncident(s, 'Ⅰ级') ∨ ProvincialRequest(s) ∨ SuperiorInstruction(s) ∨ LeaderNecessity(s) ∨ OtherPlanNecessity(s)) → EmergencyPlanActivated(s, '启动'))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“港口化学品仓库火灾” — 表示事故场景为港口化学品仓库火灾\",\n            \"SuperiorInstruction(s) — 表示接到上级关于危险化学品事故救援增援的指示\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s ((ChemicalIncident(s, 'Ⅰ级') ∨ ProvincialRequest(s) ∨ SuperiorInstruction(s) ∨ LeaderNecessity(s) ∨ OtherPlanNecessity(s)) → EmergencyPlanActivated(s, '启动'))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“化工厂泄漏” — 表示事故场景为化工厂泄漏\",\n            \"LeaderNecessity(s) — 表示安全监管总局领导认为有必要启动应急预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s ((ChemicalIncident(s, 'Ⅰ级') ∨ ProvincialRequest(s) ∨ SuperiorInstruction(s) ∨ LeaderNecessity(s) ∨ OtherPlanNecessity(s)) → EmergencyPlanActivated(s, '启动'))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“化学品运输途中事故” — 表示事故场景为化学品运输途中事故\",\n            \"OtherPlanNecessity(s) — 表示执行其他应急预案时需要本启动预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s ((ChemicalIncident(s, 'Ⅰ级') ∨ ProvincialRequest(s) ∨ SuperiorInstruction(s) ∨ LeaderNecessity(s) ∨ OtherPlanNecessity(s)) → EmergencyPlanActivated(s, '启动'))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“化工厂爆炸” — 表示事故场景为化工厂爆炸\",\n            \"Level=“Ⅱ级” — 表示事故等级为Ⅱ级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (AccidentLevel(s, 'Ⅱ级') ∨ EmergencyPlanActivated(s, '省级') → EmergencyPlanActivated(s, '准备状态'))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“省级应急救援指挥机构” — 表示省级应急救援指挥机构\",\n            \"i=“Ⅱ级” — 表示Ⅱ级危险化学品事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(省级应急救援指挥机构) ∧ IncidentLevel(Ⅱ级, 'Ⅱ级以上') → ReportAccident(省级应急救援指挥机构, Ⅱ级)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“化工厂A” — 表示化工厂A\",\n            \"i=“Ⅲ级” — 表示Ⅲ级危险化学品事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"Enterprise(化工厂A) ∧ IncidentLevel(Ⅲ级, 'Ⅱ级以上') → DirectReport(化工厂A, Ⅲ级)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“危险化学品事故现场应急救援指挥部” — 表示危险化学品事故现场应急救援指挥部\",\n            \"i=“事故X” — 表示事故X\"\n        ],\n        \"instance_logicexpression\": [\n            \"CommandCenter(危险化学品事故现场应急救援指挥部, '危险化学品事故现场应急救援指挥部') ∧ Incident(事故X) → TrackAndReport(危险化学品事故现场应急救援指挥部, IncidentDevelopment(事故X), RescueProgress(事故X), PossibleImpact(事故X))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“省级应急救援指挥机构” — 表示省级应急救援指挥机构\",\n            \"i=“事故Y” — 表示事故Y\",\n            \"Issues=“资源不足” — 表示需要上级协调解决的问题为资源不足\",\n            \"Support=“技术支持” — 表示需要提供的支援为技术支持\"\n        ],\n        \"instance_logicexpression\": [\n            \"CommandCenter(省级应急救援指挥机构, '省级应急救援指挥机构') ∧ Incident(事故Y) → ProposeIssuesAndSupport(省级应急救援指挥机构, 资源不足, 技术支持)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“省级应急救援指挥机构” — 表示省级应急救援指挥机构\",\n            \"i=“危险化学品泄漏事故” — 表示危险化学品泄漏事故\",\n            \"Level=“Ⅱ级” — 表示事故级别为Ⅱ级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀i (ReceiveReport(省级应急救援指挥机构, Ⅱ级, 危险化学品泄漏事故) → ReportToHigherAuthority(省级应急救援指挥机构, 危险化学品泄漏事故))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“化工厂A” — 表示化工厂A\",\n            \"i=“危险化学品爆炸事故” — 表示危险化学品爆炸事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e∀i (DirectReport(化工厂A, 危险化学品爆炸事故) → Incident(化工厂A, Ⅱ级以上, 危险化学品爆炸事故))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“危险化学品事故现场应急救援指挥部” — 表示危险化学品事故现场应急救援指挥部\",\n            \"i=“危险化学品火灾事故” — 表示危险化学品火灾事故\",\n            \"Progress=“救援工作正在进行中” — 表示救援工作进展\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀i (TrackAndReport(危险化学品事故现场应急救援指挥部, 危险化学品火灾事故, 救援工作正在进行中) → (ReportToHigherAuthority(危险化学品事故现场应急救援指挥部, 危险化学品火灾事故) ∧ RequestSupport(危险化学品事故现场应急救援指挥部, 需要更多救援设备, 提供救援设备)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“地方安全生产监督管理部门” — 表示地方安全生产监督管理部门\",\n            \"i=“危险化学品泄漏事故” — 表示危险化学品泄漏事故\",\n            \"Issue=“需要疏散周边居民” — 表示需要疏散周边居民\",\n            \"Support=“协调警力支援” — 表示协调警力支援\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀i (TrackAndReport(地方安全生产监督管理部门, 危险化学品泄漏事故, 事故影响范围扩大) → (ReportToHigherAuthority(地方安全生产监督管理部门, 危险化学品泄漏事故) ∧ RequestSupport(地方安全生产监督管理部门, 需要疏散周边居民, 协调警力支援)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"安全监管总局办公厅向国务院办公厅上报事故信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"ReportAccident(安全监管总局办公厅, 国务院办公厅)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"领导小组研究解决危险化学品事故中的救援问题\",\n            \"领导小组协调增援\"\n        ],\n        \"instance_logicexpression\": [\n            \"StudySolve(领导小组, 救援问题)\",\n            \"CoordinateSupport(领导小组)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"安全监管总局通知外交部有港澳台或外国人员在事故中伤亡、失踪、被困\"\n        ],\n        \"instance_logicexpression\": [\n            \"Notify(安全监管总局, 外交部)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"事故发生地化学品登记办公室与区域化学事故应急救援抢救中心建立联系\",\n            \"事故发生地化学品登记办公室与安全监管总局建立联系\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishContact(事故发生地化学品登记办公室, 区域化学事故应急救援抢救中心)\",\n            \"EstablishContact(事故发生地化学品登记办公室, 安全监管总局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"事故发生地化学品登记办公室与区域化学事故应急救援抢救中心共享现场数据监测信息\",\n            \"事故发生地化学品登记办公室与安全监管总局共享应急救援资源分布信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"ShareInformation(事故发生地化学品登记办公室, 区域化学事故应急救援抢救中心, 现场数据监测)\",\n            \"ShareInformation(事故发生地化学品登记办公室, 安全监管总局, 应急救援资源分布信息)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"危险化学品事故应急救援相关信息通过传真传输现场数据监测信息\",\n            \"危险化学品事故应急救援相关信息通过电话传输气象信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"TransferInformation(传真, 现场数据监测)\",\n            \"TransferInformation(电话, 气象信息)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"张三在危险化学品事故中被困，并且是外国人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"CasualtyMissingTrapped(张三, 被困) ∧ PersonType(张三, 外国)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"李四在危险化学品事故中伤亡，并且是港澳台人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"CasualtyMissingTrapped(李四, 伤亡) ∧ PersonType(李四, 港澳台)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“化工厂” — 表示事故发生在化工厂\",\n            \"Company=“化工厂有限公司” — 表示发生事故的企业为化工厂有限公司\",\n            \"Government=“当地市政府” — 表示当地政府负责成立现场应急救援指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"事故发生(化工厂) → (ActivatePlan(化工厂有限公司) ∧ OrganizeRescue(化工厂有限公司) ∧ EstablishCommandCenter(当地市政府))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“危险化学品事故” — 表示预案启动针对的是危险化学品事故\",\n            \"Regulatory=“安全监管总局” — 表示安全监管总局负责协调指挥\",\n            \"Resources=“救援队伍和物资” — 表示需要调动的资源包括救援队伍和物资\",\n            \"Experts=“化工安全专家组” — 表示组织专家指导现场救援工作\",\n            \"AdjacentAreas=“相邻市” — 表示事故发生地相邻地区需要配合、支援救援工作\",\n            \"Military=“武警部队” — 表示必要时请求武警部队参加应急救援\"\n        ],\n        \"instance_logicexpression\": [\n            \"预案启动(危险化学品事故) → (CoordinateCommand(安全监管总局) ∧ MobilizeResources(安全监管总局, 救援队伍和物资) ∧ GuideRescue(化工安全专家组, 当地市政府) ∧ DevelopPlan(当地市政府, 化工安全专家组) ∧ NotifyEmergencyPlan(安全监管总局, 次生灾害) ∧ CoordinateSupport(安全监管总局, 相邻市) ∨ RequestSupport(安全监管总局, 武警部队))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“化工厂爆炸” — 表示事态发展为化工厂爆炸这一急剧恶化的特殊险情\",\n            \"c=“现场应急救援指挥部” — 表示现场应急救援指挥部\",\n            \"e=“化工安全专家组” — 表示专家组\",\n            \"a=“环保组织” — 表示有关方面的环保组织\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s∀c∀e∀a (RapidDeteriation(“化工厂爆炸”) → (ConsiderOpinion(“现场应急救援指挥部”, “化工安全专家组”, “环保组织”) ∧ LegalAction(“现场应急救援指挥部”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“跨省危险化学品泄漏应急处置方案” — 表示涉及跨省的危险化学品泄漏紧急处置方案\",\n            \"r=“安全监管总局” — 表示安全监管总局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (CrossRegionImpact(“跨省危险化学品泄漏应急处置方案”) → (CoordinateImplementation(“安全监管总局”, “跨省危险化学品泄漏应急处置方案”) ∨ ReportToStateCouncil(“跨省危险化学品泄漏应急处置方案”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“地震引发重大灾害” — 表示事态发展为地震引发重大灾害这一急剧恶化的特殊险情\",\n            \"c=“地震应急救援指挥部” — 表示地震应急救援指挥部\",\n            \"e=“地质专家” — 表示地质专家\",\n            \"a=“地方政府” — 表示地方政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s∀c∀e∀a (RapidDeteriation(“地震引发重大灾害”) → (ConsiderOpinion(“地震应急救援指挥部”, “地质专家”, “地方政府”) ∧ LegalAction(“地震应急救援指挥部”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“全国性网络安全事件应急处置方案” — 表示涉及跨领域的全国性网络安全事件紧急处置方案\",\n            \"r=“安全监管总局” — 表示安全监管总局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (CrossRegionImpact(“全国性网络安全事件应急处置方案”) → (CoordinateImplementation(“安全监管总局”, “全国性网络安全事件应急处置方案”) ∨ ReportToStateCouncil(“全国性网络安全事件应急处置方案”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“化工厂爆炸事故” — 表示危险化学品事故为化工厂爆炸事故\",\n            \"扩散情况=“氯气泄漏” — 表示化学品泄漏的扩散情况为氯气泄漏\",\n            \"辐射热=“高温” — 表示火焰辐射热为高温\",\n            \"爆炸范围=“100米” — 表示爆炸所涉及到的范围为100米\",\n            \"通往事故现场的主要干道=“化工厂路” — 表示通往事故现场的主要干道为化工厂路\"\n        ],\n        \"instance_logicexpression\": [\n            \"危险化学品事故(化工厂爆炸事故) → (ReceiveAlarm(化工厂爆炸事故) ∧ IsolateIncidentScene(化工厂爆炸事故) ∧ ActivateEmergencyPlan(化工厂爆炸事故) ∧ EstablishQuarantineZone(化工厂爆炸事故, 氯气泄漏, 高温, 100米) ∧ ImplementTrafficControl(化工厂路))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“工人A” — 表示可能受威胁的人员为工人A\",\n            \"危险区域=“化工厂爆炸区域” — 表示危险区域为化工厂爆炸区域\",\n            \"安全区域=“化工厂外安全区” — 表示安全区域为化工厂外安全区\",\n            \"建筑物或其他设施=“化工厂办公楼” — 表示建筑物或其他设施为化工厂办公楼\"\n        ],\n        \"instance_logicexpression\": [\n            \"可能受威胁(工人A) → (Evacuate(工人A, 化工厂爆炸区域, 化工厂外安全区) ∨ ShelterInPlace(工人A, 化工厂办公楼))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“化工厂办公楼” — 表示需要就地保护的设施为化工厂办公楼\"\n        ],\n        \"instance_logicexpression\": [\n            \"需要就地保护(化工厂办公楼) → CloseFacilities(化工厂办公楼)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“化工厂爆炸事故” — 表示危险化学品事故为化工厂爆炸事故\",\n            \"根据事故特点和引发物质的不同防护措施=“穿戴防化服和呼吸器” — 表示根据事故特点和引发物质的不同防护措施为穿戴防化服和呼吸器\"\n        ],\n        \"instance_logicexpression\": [\n            \"危险化学品事故(化工厂爆炸事故) → OnsiteControl(化工厂爆炸事故, 穿戴防化服和呼吸器)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“化工厂火灾” — 表示发生的危险化学品事故为化工厂火灾事故\",\n            \"Location=“化工厂储存区” — 表示火灾发生的位置\",\n            \"Category=“压缩气体” — 表示引起火灾的物质类别\",\n            \"Technology=“泡沫灭火” — 表示所需的火灾应急救援处置技术\",\n            \"Expert=“李博士” — 表示所需的火灾应急救援处置专家\",\n            \"Environment=“居民区” — 表示火灾发生区域的周围环境\",\n            \"Source=“化工厂化学品仓库” — 表示周围区域存在的重大危险源\",\n            \"Method=“隔离灭火” — 表示确定火灾扑救的基本方法\",\n            \"Consequence=“可能引发爆炸” — 表示火灾可能导致的后果\",\n            \"Scale=“大规模” — 表示火灾可能导致的后果对周围区域的可能影响规模\",\n            \"Degree=“严重” — 表示火灾可能导致的后果对周围区域的可能影响程度\",\n            \"Measure=“人员疏散” — 表示火灾可能导致后果的主要控制措施\",\n            \"Force=“公安消防队伍” — 表示可能需要调动的应急救援力量\"\n        ],\n        \"instance_logicexpression\": [\n            \"ChemicalIncident(化工厂火灾) → (DetermineFireLocation(化工厂储存区) ∧ MaterialCategory(压缩气体) ∧ EmergencyRescueTechnology(泡沫灭火) ∧ EmergencyRescueExpert(李博士) ∧ SurroundingEnvironment(居民区) ∧ MajorHazardSource(化工厂化学品仓库) ∧ FireExtinguishingMethod(隔离灭火) ∧ FireConsequence(可能引发爆炸) ∧ ImpactScaleAndDegree(大规模, 严重) ∧ ControlMeasure(人员疏散) ∧ EmergencyRescueForce(公安消防队伍))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“炼油厂爆炸” — 表示发生的危险化学品事故为炼油厂爆炸事故\",\n            \"Location=“炼油厂精炼区” — 表示火灾发生的位置\",\n            \"Category=“液化气体” — 表示引起火灾的物质类别\",\n            \"Technology=“水雾灭火” — 表示所需的火灾应急救援处置技术\",\n            \"Expert=“王工程师” — 表示所需的火灾应急救援处置专家\",\n            \"Environment=“工业区” — 表示火灾发生区域的周围环境\",\n            \"Source=“炼油厂原油储罐” — 表示周围区域存在的重大危险源\",\n            \"Method=“冷却灭火” — 表示确定火灾扑救的基本方法\",\n            \"Consequence=“有毒气体泄漏” — 表示火灾可能导致的后果\",\n            \"Scale=“中规模” — 表示火灾可能导致的后果对周围区域的可能影响规模\",\n            \"Degree=“中等” — 表示火灾可能导致的后果对周围区域的可能影响程度\",\n            \"Measure=“医疗救护” — 表示火灾可能导致后果的主要控制措施\",\n            \"Force=“企业消防队伍” — 表示可能需要调动的应急救援力量\"\n        ],\n        \"instance_logicexpression\": [\n            \"ChemicalIncident(炼油厂爆炸) → (DetermineFireLocation(炼油厂精炼区) ∧ MaterialCategory(液化气体) ∧ EmergencyRescueTechnology(水雾灭火) ∧ EmergencyRescueExpert(王工程师) ∧ SurroundingEnvironment(工业区) ∧ MajorHazardSource(炼油厂原油储罐) ∧ FireExtinguishingMethod(冷却灭火) ∧ FireConsequence(有毒气体泄漏) ∧ ImpactScaleAndDegree(中规模, 中等) ∧ ControlMeasure(医疗救护) ∧ EmergencyRescueForce(企业消防队伍))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“化工厂” — 表示爆炸事故场景在化工厂\",\n            \"Type=“化学爆炸” — 表示爆炸类型为化学爆炸\",\n            \"Category=“气体” — 表示引起爆炸的物质类别为气体\",\n            \"Technology=“泡沫灭火技术” — 表示所需的爆炸应急救援处置技术为泡沫灭火技术\",\n            \"Expert=“李博士” — 表示所需的爆炸应急救援处置专家为李博士\",\n            \"Environment=“工业区” — 表示爆炸地点的周围环境为工业区\",\n            \"HazardSource=“储油罐” — 表示周围区域存在的重大危险源分布情况为储油罐\",\n            \"Consequence=“火灾” — 表示爆炸可能导致的后果为火灾\",\n            \"Measure=“人员疏散” — 表示爆炸可能导致后果的主要控制措施为人员疏散\",\n            \"Force=“公安消防队伍” — 表示可能需要调动的应急救援力量为公安消防队伍\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (ExplosionAccident(“化工厂”) → (ExplosionSite(“化工厂”) ∧ ExplosionType(“化工厂”, Chemical) ∧ MaterialCategory(“化工厂”, Gas) ∧ EmergencyRescueTechnology(“化工厂”), “泡沫灭火技术”) ∧ EmergencyRescueExpert(“化工厂”, “李博士”) ∧ SurroundingEnvironment(“化工厂”, “工业区”) ∧ MajorHazardSourceDistribution(“化工厂”, “储油罐”) ∧ PossibleConsequence(“化工厂”, Fire) ∧ ControlMeasure(“化工厂”, Evacuation) ∧ EmergencyRescueForce(“化工厂”, PublicSecurityFire))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“油库” — 表示爆炸事故场景在油库\",\n            \"Type=“物理爆炸” — 表示爆炸类型为物理爆炸\",\n            \"Category=“液体” — 表示引起爆炸的物质类别为液体\",\n            \"Technology=“水幕隔离技术” — 表示所需的爆炸应急救援处置技术为水幕隔离技术\",\n            \"Expert=“王工程师” — 表示所需的爆炸应急救援处置专家为王工程师\",\n            \"Environment=“郊区” — 表示爆炸地点的周围环境为郊区\",\n            \"HazardSource=“化工厂” — 表示周围区域存在的重大危险源分布情况为化工厂\",\n            \"Consequence=“二次爆炸” — 表示爆炸可能导致的后果为二次爆炸\",\n            \"Measure=“工程抢险” — 表示爆炸可能导致后果的主要控制措施为工程抢险\",\n            \"Force=“企业消防队伍” — 表示可能需要调动的应急救援力量为企业消防队伍\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (ExplosionAccident(“油库”) → (ExplosionSite(“油库”) ∧ ExplosionType(“油库”, Physical) ∧ MaterialCategory(“油库”, Liquid) ∧ EmergencyRescueTechnology(“油库”), “水幕隔离技术”) ∧ EmergencyRescueExpert(“油库”, “王工程师”) ∧ SurroundingEnvironment(“油库”, “郊区”) ∧ MajorHazardSourceDistribution(“油库”, “化工厂”) ∧ PossibleConsequence(“油库”, SecondaryExplosion) ∧ ControlMeasure(“油库”, EngineeringRescue) ∧ EmergencyRescueForce(“油库”, EnterpriseFire))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“李雷” — 李雷是应急救援指挥人员\",\n            \"e=“过滤式防毒面罩” — 表示配备的设备\",\n            \"f=“防护服” — 表示配备的设备\",\n            \"g=“防毒手套” — 表示配备的设备\",\n            \"h=“防毒靴” — 表示配备的设备\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyPersonnel(李雷) ∧ (RescueCommand(李雷) ∨ MedicalPersonnel(李雷) ∨ NotEnterContaminatedArea(李雷)) → Equip(李雷, 过滤式防毒面罩) ∧ Equip(李雷, 防护服) ∧ Equip(李雷, 防毒手套) ∧ Equip(李雷, 防毒靴)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“韩梅梅” — 韩梅梅是医务人员\",\n            \"e=“过滤式防毒面罩” — 表示配备的设备\",\n            \"f=“防护服” — 表示配备的设备\",\n            \"g=“防毒手套” — 表示配备的设备\",\n            \"h=“防毒靴” — 表示配备的设备\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyPersonnel(韩梅梅) ∧ (RescueCommand(韩梅梅) ∨ MedicalPersonnel(韩梅梅) ∨ NotEnterContaminatedArea(韩梅梅)) → Equip(韩梅梅, 过滤式防毒面罩) ∧ Equip(韩梅梅, 防护服) ∧ Equip(韩梅梅, 防毒手套) ∧ Equip(韩梅梅, 防毒靴)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“张伟” — 张伟是工程抢险人员\",\n            \"e=“密闭型防毒面罩” — 表示配备的设备\",\n            \"f=“防酸碱型防护服” — 表示配备的设备\",\n            \"g=“空气呼吸器” — 表示配备的设备\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyPersonnel(张伟) ∧ (EngineeringRescue(张伟) ∨ Firefighting(张伟) ∨ Inspection(张伟) ∧ EnterContaminatedArea(张伟)) → Equip(张伟, 密闭型防毒面罩) ∧ Equip(张伟, 防酸碱型防护服) ∧ Equip(张伟, 空气呼吸器)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“赵敏” — 赵敏是消防人员\",\n            \"e=“密闭型防毒面罩” — 表示配备的设备\",\n            \"f=“防酸碱型防护服” — 表示配备的设备\",\n            \"g=“空气呼吸器” — 表示配备的设备\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyPersonnel(赵敏) ∧ (EngineeringRescue(赵敏) ∨ Firefighting(赵敏) ∨ Inspection(赵敏) ∧ EnterContaminatedArea(赵敏)) → Equip(赵敏, 密闭型防毒面罩) ∧ Equip(赵敏, 防酸碱型防护服) ∧ Equip(赵敏, 空气呼吸器)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“周杰” — 周杰是应急人员\",\n            \"e=“设备” — 表示需要洗消的设备\",\n            \"f=“设施” — 表示需要洗消的设施\",\n            \"g=“场所” — 表示需要洗消的场所\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyPersonnel(周杰) → Decontamination(周杰, 设备, 设施, 场所)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“化学气体泄漏” — 表示危险化学品事故类型为化学气体泄漏\",\n            \"Materials=“毛巾、湿布、口罩” — 表示指导群众使用的防护材料\"\n        ],\n        \"instance_logicexpression\": [\n            \"危险化学品事故(化学气体泄漏) → (OrganizeProtection(化学气体泄漏) ∧ GuideProtection(毛巾、湿布、口罩))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“风向和人群密度” — 表示制定疏散程序时考虑的实际情况\",\n            \"PlanDetails=“疏散组织、指挥机构、疏散范围、疏散方式、疏散路线、疏散人员的照顾” — 表示疏散程序的具体内容\"\n        ],\n        \"instance_logicexpression\": [\n            \"实际情况(风向和人群密度) → EstablishEvacuationPlan(疏散组织、指挥机构、疏散范围、疏散方式、疏散路线、疏散人员的照顾)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“主要街道” — 表示撤离危险区域时选择的主要街道作为撤离路线\"\n        ],\n        \"instance_logicexpression\": [\n            \"撤离危险区域(主要街道) → ChooseSafeRoute(主要街道)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [],\n        \"instance_logicexpression\": [\n            \"RemoveContaminatedClothing() → PreventSecondaryInjury()\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“环境监测局” — 表示环境监测局负责分析\",\n            \"s=“水源” — 表示样品为水源\",\n            \"t=“重金属” — 表示毒物为重金属\",\n            \"Concentration=“0.05ppm” — 表示浓度为0.05ppm\",\n            \"Range=“5公里” — 表示扩散范围为5公里\",\n            \"Area=“河流下游区域” — 表示污染区域为河流下游区域\",\n            \"Impact=“水质污染” — 表示环境影响为水质污染\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀s∀t (ResponsibleForAnalysis(环境监测局, 水源) → (DetectToxins(环境监测局, 水源, 重金属, 0.05ppm) ∧ CalculateSpread(环境监测局, 5公里)))\",\n            \"∀i∀a (ResponsibleForAnalysis(环境监测局, 水源) → DeterminePollutionArea(环境监测局, 河流下游区域))\",\n            \"∀i (ResponsibleForAnalysis(环境监测局) → AssessEnvironmentalImpact(环境监测局, 水质污染))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“化学品检测中心” — 表示化学品检测中心负责分析\",\n            \"s=“空气” — 表示样品为空气\",\n            \"t=“挥发性有机物” — 表示毒物为挥发性有机物\",\n            \"Concentration=“0.03ppm” — 表示浓度为0.03ppm\",\n            \"Range=“3公里” — 表示扩散范围为3公里\",\n            \"Area=“工业园区” — 表示污染区域为工业园区\",\n            \"Impact=“空气质量下降” — 表示环境影响为空气质量下降\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀s∀t (ResponsibleForAnalysis(化学品检测中心, 空气) → (DetectToxins(化学品检测中心, 空气, 挥发性有机物, 0.03ppm) ∧ CalculateSpread(化学品检测中心, 3公里)))\",\n            \"∀i∀a (ResponsibleForAnalysis(化学品检测中心, 空气) → DeterminePollutionArea(化学品检测中心, 工业园区))\",\n            \"∀i (ResponsibleForAnalysis(化学品检测中心) → AssessEnvironmentalImpact(化学品检测中心, 空气质量下降))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“环境科学研究所” — 表示环境科学研究所负责分析\",\n            \"s=“土壤” — 表示样品为土壤\",\n            \"t=“农药残留” — 表示毒物为农药残留\",\n            \"Concentration=“0.07ppm” — 表示浓度为0.07ppm\",\n            \"Range=“2公里” — 表示扩散范围为2公里\",\n            \"Area=“农田区域” — 表示污染区域为农田区域\",\n            \"Impact=“土壤质量下降” — 表示环境影响为土壤质量下降\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀s∀t (ResponsibleForAnalysis(环境科学研究所, 土壤) → (DetectToxins(环境科学研究所, 土壤, 农药残留, 0.07ppm) ∧ CalculateSpread(环境科学研究所, 2公里)))\",\n            \"∀i∀a (ResponsibleForAnalysis(环境科学研究所, 土壤) → DeterminePollutionArea(环境科学研究所, 农田区域))\",\n            \"∀i (ResponsibleForAnalysis(环境科学研究所) → AssessEnvironmentalImpact(环境科学研究所, 土壤质量下降))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Organization=“安全监管总局” — 表示安全监管总局是危险化学品事故灾难信息的指定来源和负责对外发布工作的组织\"\n        ],\n        \"instance_logicexpression\": [\n            \"DesignatedSource(安全监管总局) ∧ ResponsibleForRelease(安全监管总局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“国务院新闻办” — 国务院新闻办在必要时派员参加事故现场应急救援指挥部工作\",\n            \"Scene=“化工厂事故现场” — 表示国务院新闻办参加的指挥部工作场景为化工厂事故现场\",\n            \"Task=“危险化学品事故灾难的对外报道” — 表示国务院新闻办负责指导协调的任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃o (ParticipateInCommand(国务院新闻办, 化工厂事故现场) → GuideAndCoordinate(国务院新闻办, 危险化学品事故灾难的对外报道))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“国务院新闻办” — 国务院新闻办在必要时派员参加事故现场应急救援指挥部工作\",\n            \"Scene=“油库事故现场” — 表示国务院新闻办参加的指挥部工作场景为油库事故现场\",\n            \"Task=“危险化学品事故灾难的对外报道” — 表示国务院新闻办负责指导协调的任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃o (ParticipateInCommand(国务院新闻办, 油库事故现场) → GuideAndCoordinate(国务院新闻办, 危险化学品事故灾难的对外报道))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“国务院新闻办” — 国务院新闻办在必要时派员参加事故现场应急救援指挥部工作\",\n            \"Scene=“化学品仓库事故现场” — 表示国务院新闻办参加的指挥部工作场景为化学品仓库事故现场\",\n            \"Task=“危险化学品事故灾难的对外报道” — 表示国务院新闻办负责指导协调的任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃o (ParticipateInCommand(国务院新闻办, 化学品仓库事故现场) → GuideAndCoordinate(国务院新闻办, 危险化学品事故灾难的对外报道))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Scene=“化工厂爆炸现场” — 表示事故现场为化工厂爆炸现场\",\n            \"Environment=“化工厂爆炸现场环境” — 表示化工厂爆炸现场的环境\",\n            \"RescueCommand=“化工厂应急救援指挥部” — 表示化工厂爆炸现场的应急救援指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"Controlled(“化工厂爆炸现场”) ∧ ComplyWithStandards(“化工厂爆炸现场环境”) ∧ EliminateRisks(“化工厂爆炸现场”) → (ConfirmedByRescueCommand(“化工厂应急救援指挥部”) → EvacuateRescueTeam(“化工厂爆炸现场”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Scene=“化学品泄漏现场” — 表示事故现场为化学品泄漏现场\",\n            \"Report=“化学品泄漏应急救援总结报告” — 表示化学品泄漏事故的应急救援总结报告\",\n            \"SafetyRegulation=“国家安全生产监督管理总局” — 表示国家安全生产监督管理总局\",\n            \"ProvincialGovernment=“江苏省人民政府” — 表示江苏省人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"AfterDisposalCompleted(“化学品泄漏现场”) → (RescueSummaryReport(“化学品泄漏应急救援指挥部”, “化学品泄漏应急救援总结报告”) ∧ ReportToSafetyRegulation(“化学品泄漏应急救援总结报告”, “国家安全生产监督管理总局”) ∧ ReportToProvincialGovernment(“化学品泄漏应急救援总结报告”, “江苏省人民政府”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Report=“化学品泄漏应急救援总结报告”,\n            \"ProvincialGovernment=“江苏省人民政府”\"\n        ],\n        \"instance_logicexpression\": [\n            \"ReportToProvincialGovernment(“化学品泄漏应急救援总结报告”, “江苏省人民政府”) → AnnounceEndByProvincialGovernment(“江苏省人民政府”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Scene=“油库火灾现场” — 表示事故现场为油库火灾现场\",\n            \"Environment=“油库火灾现场环境” — 表示油库火灾现场的环境\",\n            \"RescueCommand=“油库火灾应急救援指挥部” — 表示油库火灾现场的应急救援指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"Controlled(“油库火灾现场”) ∧ ComplyWithStandards(“油库火灾现场环境”) ∧ EliminateRisks(“油库火灾现场”) → (ConfirmedByRescueCommand(“油库火灾应急救援指挥部”) → EvacuateRescueTeam(“油库火灾现场”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Scene=“化工厂爆炸现场”,\n            \"Report=“化工厂爆炸应急救援总结报告”,\n            \"SafetyRegulation=“国家安全生产监督管理总局”,\n            \"ProvincialGovernment=“广东省人民政府” — 表示广东省人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"AfterDisposalCompleted(“化工厂爆炸现场”) → (RescueSummaryReport(“化工厂爆炸应急救援指挥部”, “化工厂爆炸应急救援总结报告”) ∧ ReportToSafetyRegulation(“化工厂爆炸应急救援总结报告”, “国家安全生产监督管理总局”) ∧ ReportToProvincialGovernment(“化工厂爆炸应急救援总结报告”, “广东省人民政府”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Report=“化工厂爆炸应急救援总结报告”,\n            \"ProvincialGovernment=“广东省人民政府”\"\n        ],\n        \"instance_logicexpression\": [\n            \"ReportToProvincialGovernment(“化工厂爆炸应急救援总结报告”, “广东省人民政府”) → AnnounceEndByProvincialGovernment(“广东省人民政府”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“张伟” — 张伟是有关人员\",\n            \"u=“安全监管总局” — 安全监管总局是有关单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"ContactAvailable(张伟, 安全监管总局) ∧ PhoneManned(安全监管总局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“有线电话” — 有线电话是通信手段之一\"\n        ],\n        \"instance_logicexpression\": [\n            \"CommunicationClear(有线电话)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Authority=“安全监管总局”\",\n            \"Database=“通讯联系数据库”\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishDatabase(安全监管总局, 通讯联系数据库)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Authority=“安全监管总局”\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseNetwork(安全监管总局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Authority=“安全监管总局”\"\n        ],\n        \"instance_logicexpression\": [\n            \"InformationManagementPolicy(安全监管总局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Authority=“安全监管总局”\"\n        ],\n        \"instance_logicexpression\": [\n            \"InformationDatabase(安全监管总局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“省级应急救援机构” — 省级应急救援机构负责信息收集\",\n            \"a=“安全监管总局” — 向安全监管总局报送信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"CollectAndReportInfo(省级应急救援机构, 安全监管总局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“李娜” — 李娜是有关人员\",\n            \"u=“省级应急救援机构” — 省级应急救援机构是有关单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"ContactAvailable(李娜, 省级应急救援机构) ∧ PhoneManned(省级应急救援机构)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“卫星通信” — 卫星通信是通信手段之一\"\n        ],\n        \"instance_logicexpression\": [\n            \"CommunicationClear(卫星通信)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“专业应急救援指挥机构” — 专业应急救援指挥机构负责信息收集\",\n            \"a=“安全监管总局” — 向安全监管总局报送信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"CollectAndReportInfo(专业应急救援指挥机构, 安全监管总局)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“化工厂” — 表示危险化学品从业单位为化工厂\",\n            \"e=“泡沫车” — 表示应急救援装备为泡沫车\"\n        ],\n        \"instance_logicexpression\": [\n            \"危险化学品从业单位(化工厂) → EquipForEmergency(化工厂, 泡沫车)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“化工厂” — 表示有关企业为化工厂\",\n            \"n=“快速反应” — 表示危险化学品事故救援的需要为快速反应\",\n            \"c=“高温高压环境” — 表示危险化学品事故救援的特点为高温高压环境\",\n            \"e=“药剂车” — 表示特种装备为药剂车\"\n        ],\n        \"instance_logicexpression\": [\n            \"(有关企业(化工厂) ∨ 当地政府(化工厂)) → (EmergencyNeeds(化工厂, 快速反应) ∧ EmergencyCharacteristics(化工厂, 高温高压环境) → (EstablishSpecializedTeams(化工厂) ∧ ReserveSpecialEquipment(化工厂, 药剂车)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“市政府” — 表示当地政府为市政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"(有关企业(市政府) ∨ 当地政府(市政府)) → (LayoutRational(市政府) ∧ SupplementEmergencyForces(市政府))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“化工厂” — 表示有关企业为化工厂\",\n            \"e=“联用车” — 表示应急装备为联用车\"\n        ],\n        \"instance_logicexpression\": [\n            \"(有关企业(化工厂) ∨ 当地政府(化工厂)) → CleanAndRegisterEquipment(化工厂, 联用车)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“市政府” — 表示当地政府为市政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"(有关企业(市政府) ∨ 当地政府(市政府)) → EstablishGuaranteeMeasures(市政府)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=“上海应急救援队” — 表示上海的专业应急救援队伍\",\n            \"Type=Professional\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyRescueTeam(“上海应急救援队”, Professional) → Equip(“上海应急救援队”, Personnel, Equipment) ∧ Train(“上海应急救援队”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“吉林化工企业救援队” — 表示吉林大中型企业的应急救援队伍\",\n            \"Type=KeyEnterprise\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyRescueTeam(“吉林化工企业救援队”, KeyEnterprise) → Equip(“吉林化工企业救援队”, Personnel, Equipment) ∧ Train(“吉林化工企业救援队”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“上海市安全生产监督管理部门” — 表示上海市的安全生产监督管理部门\",\n            \"t=“上海应急救援队” — 表示上海的专业应急救援队伍\"\n        ],\n        \"instance_logicexpression\": [\n            \"Supervise(“上海市安全生产监督管理部门”, “上海应急救援队”) → MaintainCombatReadiness(“上海应急救援队”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Force=公安\"\n        ],\n        \"instance_logicexpression\": [\n            \"SupportForce(公安)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Force=武警消防部队\"\n        ],\n        \"instance_logicexpression\": [\n            \"SupportForce(武警消防部队)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Force=兼职消防力量\"\n        ],\n        \"instance_logicexpression\": [\n            \"SupplementaryForce(兼职消防力量)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Force=社区群众性应急队伍\"\n        ],\n        \"instance_logicexpression\": [\n            \"SupplementaryForce(社区群众性应急队伍)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=上海\"\n        ],\n        \"instance_logicexpression\": [\n            \"ResponsibleForTreatment(上海, Casualty)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=天津\"\n        ],\n        \"instance_logicexpression\": [\n            \"ResponsibleForTreatment(天津, Casualty)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"安全监管总局建立了交通地理信息系统\",\n            \"应急响应由安全监管总局进行\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishSystem(安全监管总局, 交通地理信息系统)\",\n            \"EmergencyResponse(安全监管总局) → (ProvideSupport(铁道, 交通) ∧ ProvideSupport(民航, 交通) ∧ ProvideSupport(军队, 交通))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"某化工厂发生了危险化学品事故灾难\",\n            \"事故发生地省级人民政府提供交通警戒支持\"\n        ],\n        \"instance_logicexpression\": [\n            \"Disaster(化工厂) → (ProvideSupport(省级人民政府, 交通警戒) ∧ TrafficControl(省级人民政府, 化工厂) ∧ OpenChannel(省级人民政府, 化工厂, 应急救援特别通道))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"某核电站发生了事故灾难\",\n            \"事故发生地地方政府组织调集救援车辆\"\n        ],\n        \"instance_logicexpression\": [\n            \"Disaster(核电站) → OrganizeMobilize(地方政府, 交通运输工具, 核电站)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"某大型港口发生了危险化学品事故灾难\",\n            \"港口所在地人民政府对事故现场进行交通管制\"\n        ],\n        \"instance_logicexpression\": [\n            \"Disaster(大型港口) → (TrafficControl(人民政府, 大型港口) ∧ OpenChannel(人民政府, 大型港口, 应急救援特别通道))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"某高速公路发生了危险化学品事故灾难\",\n            \"高速公路所在地方政府组织调集足够的救护车\"\n        ],\n        \"instance_logicexpression\": [\n            \"Disaster(高速公路) → OrganizeMobilize(地方政府, 救护车, 高速公路)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“江苏省卫生厅” — 表示江苏省卫生厅负责医疗卫生保障\",\n            \"i=“化工厂爆炸事故” — 表示事故为化工厂爆炸事故\",\n            \"Teams=“江苏省医疗救护队” — 表示江苏省组织协调的医疗救护队伍\",\n            \"Supplies=“专用烧伤药品和设备” — 表示专用药品和器材为烧伤药品和设备\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i ∀d (Accident(i) ∧ ProvincialHealthDepartment(d) → (ResponsibleForMedicalSupport(d, i) ∧ OrganizeMedicalTeams(d, Teams) ∧ ProvideMedicalTreatment(Teams, i) ∧ OrganizeMedicalSupplies(d, Supplies)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“江苏省医疗救护队” — 表示医疗救护队伍为江苏省医疗救护队\",\n            \"i=“化工厂爆炸事故” — 表示事故为化工厂爆炸事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t ∀i (ReceiveOrder(t, i) → (QuicklyEnterScene(t, i) ∧ PerformEmergencyAid(t, i)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"h=“江苏省人民医院” — 表示医院为江苏省人民医院\",\n            \"i=“化工厂爆炸事故” — 表示事故为化工厂爆炸事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀h ∀i (Hospital(h) → ResponsibleForFollowUpTreatment(h, i))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“国务院安委会” — 表示安全监管总局通过国务院安委会协调\",\n            \"d=“江苏省卫生厅” — 表示江苏省卫生厅负责医疗卫生保障\",\n            \"i=“化工厂爆炸事故” — 表示事故为化工厂爆炸事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r ∀d ∀i (Necessary(r) ∧ SafetyRegulation(r) → CoordinateMedicalSupport(r, d, i))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“江苏省人民政府” — 表示省级人民政府为江苏省人民政府\",\n            \"s=“南京市” — 表示事故现场在南京市\",\n            \"KeyArea=“市中心” — 表示重点地区为市中心\",\n            \"KeyPlace=“商业广场” — 表示重点场所为商业广场\",\n            \"KeyPeople=“游客” — 表示重点人群为游客\",\n            \"KeyEquipment=“应急物资” — 表示重要物资设备为应急物资\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g ∀s (Accident(s) ∧ GovernmentLevel(g, Provincial) → (OrganizePublicSecurity(“江苏省人民政府”, s) ∧ OrganizeSecurityManagement(“江苏省人民政府”, s) ∧ EnhanceProtection(“江苏省人民政府”, “市中心”, “商业广场”, “游客”, “应急物资”) ∧ MaintainOrder(“江苏省人民政府”, s) ∧ EvacuateCrowd(“江苏省人民政府”, s)))\",\n            \"∀g (Government(g) → MobilizePublic(g) ∧ ConductJointPrevention(g) ∧ AssistInSecurity(g))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“广东省人民政府” — 表示省级人民政府为广东省人民政府\",\n            \"s=“广州市” — 表示事故现场在广州市\",\n            \"KeyArea=“珠江新城” — 表示重点地区为珠江新城\",\n            \"KeyPlace=“国际会议中心” — 表示重点场所为国际会议中心\",\n            \"KeyPeople=“商务人士” — 表示重点人群为商务人士\",\n            \"KeyEquipment=“重要文件” — 表示重要物资设备为重要文件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g ∀s (Accident(s) ∧ GovernmentLevel(g, Provincial) → (OrganizePublicSecurity(“广东省人民政府”, s) ∧ OrganizeSecurityManagement(“广东省人民政府”, s) ∧ EnhanceProtection(“广东省人民政府”, “珠江新城”, “国际会议中心”, “商务人士”, “重要文件”) ∧ MaintainOrder(“广东省人民政府”, s) ∧ EvacuateCrowd(“广东省人民政府”, s)))\",\n            \"∀g (Government(g) → MobilizePublic(g) ∧ ConductJointPrevention(g) ∧ AssistInSecurity(g))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“四川省人民政府” — 表示省级人民政府为四川省人民政府\",\n            \"s=“成都市” — 表示事故现场在成都市\",\n            \"KeyArea=“高新区” — 表示重点地区为高新区\",\n            \"KeyPlace=“科技园区” — 表示重点场所为科技园区\",\n            \"KeyPeople=“科研人员” — 表示重点人群为科研人员\",\n            \"KeyEquipment=“实验设备” — 表示重要物资设备为实验设备\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g ∀s (Accident(s) ∧ GovernmentLevel(g, Provincial) → (OrganizePublicSecurity(“四川省人民政府”, s) ∧ OrganizeSecurityManagement(“四川省人民政府”, s) ∧ EnhanceProtection(“四川省人民政府”, “高新区”, “科技园区”, “科研人员”, “实验设备”) ∧ MaintainOrder(“四川省人民政府”, s) ∧ EvacuateCrowd(“四川省人民政府”, s)))\",\n            \"∀g (Government(g) → MobilizePublic(g) ∧ ConductJointPrevention(g) ∧ AssistInSecurity(g))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“化工厂” — 表示化工厂是危险化学品从业单位\",\n            \"Type=“应急救援物资” — 表示化工厂储备的物资类型为应急救援物资\"\n        ],\n        \"instance_logicexpression\": [\n            \"危险化学品从业单位(化工厂) → ReserveMaterials(化工厂, 应急救援物资)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“某市” — 表示某市是地方政府\",\n            \"e=“某化工厂” — 表示某化工厂是企业\",\n            \"Type=“常备应急救援物资” — 表示地方政府和企业储备的物资类型为常备应急救援物资\"\n        ],\n        \"instance_logicexpression\": [\n            \"地方政府(某市) ∨ 企业(某化工厂) → ReserveMaterials(某市, 常备应急救援物资) ∧ ReserveMaterials(某化工厂, 常备应急救援物资)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“某次应急响应” — 表示某次应急响应事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponse(某次应急响应) → FollowPrinciple(某次应急响应, 服从调动服务大局) ∧ 保证应急救援的需求(某次应急响应)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“国家储备物资” — 表示国家储备的物资\"\n        ],\n        \"instance_logicexpression\": [\n            \"国家储备物资(f) → FundSolve(f, 国家财政)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“地方常备物资” — 表示地方政府常备的物资\"\n        ],\n        \"instance_logicexpression\": [\n            \"地方常备物资(f) → FundSolve(f, 地方财政)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“企业常备物资” — 表示企业常备的物资\"\n        ],\n        \"instance_logicexpression\": [\n            \"企业常备物资(f) → FundSolve(f, 企业自筹资金)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“某省政府” — 表示某省政府\",\n            \"Materials=“社会物资” — 表示社会物资\"\n        ],\n        \"instance_logicexpression\": [\n            \"地方政府(某省政府) → 必要时(MobilizeSeize(某省政府, 社会物资))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“安全监管总局” — 表示安全监管总局\",\n            \"Government=“国务院安委会” — 表示国务院安委会\"\n        ],\n        \"instance_logicexpression\": [\n            \"安全监管总局(a) → 跨省跨部门物资调用(CoordinateMaterials(a, 国务院安委会))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“应急状态” — 表示当前处于应急状态\",\n            \"t=“技术人才资源和技术设备设施资源” — 表示现有的技术人才资源和技术设备设施资源\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r ∀t (应急状态下(“应急状态”) → ProvideTechnicalSupport(安全监管总局, “技术人才资源和技术设备设施资源”) ∧ ProvideTechnicalSupport(危险化学品从业单位, “技术人才资源和技术设备设施资源”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“应急响应状态” — 表示当前处于应急响应状态\",\n            \"Department=“当地气象部门” — 表示负责提供支持的部门是当地气象部门\",\n            \"Support=“气象资料和技术支持” — 表示提供的支持是气象资料和技术支持\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (应急响应状态下(“应急响应状态”) → EmergencyResponse(当地气象部门, “气象资料和技术支持”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Database=“重大危险源数据库” — 表示建立的数据库是重大危险源数据库\",\n            \"Information=“重大危险源信息” — 表示存储的信息是重大危险源信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"普查重大危险源 → EstablishDatabase(“重大危险源数据库”, “重大危险源信息”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“危险化学品事故应急救援数据库” — 表示数据库是危险化学品事故应急救援数据库\",\n            \"重大危险源信息=“重大危险源分布” — 表示重大危险源的分布信息\",\n            \"重大事故隐患信息=“重大事故隐患分布” — 表示重大事故隐患的分布信息\",\n            \"基本情况台帐=“企业基本情况” — 表示企业的基本情况台帐\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (EstablishDatabase(d, “重大危险源分布”) ∧ EstablishDatabase(d, “重大事故隐患分布”) ∧ EstablishDatabase(d, “企业基本情况”) → ProvideBasicInformation(d, “危险化学品事故应急救援基本信息”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“危险化学品登记数据库” — 表示数据库是危险化学品登记数据库\",\n            \"危险化学品信息=“化学品登记信息” — 表示存储的信息是化学品登记信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (危险化学品登记(d) → EstablishDatabase(d, “化学品登记信息”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“危险化学品信息数据库” — 表示数据库是危险化学品信息数据库\",\n            \"System=“危险化学品安全管理信息系统” — 表示建立的管理系统是危险化学品安全管理信息系统\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (EstablishDatabase(d, “危险化学品信息”) → EstablishManagementSystem(“危险化学品安全管理信息系统”, d))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“市政府” — 表示市政府作为组织\",\n            \"a=“公众” — 表示受众为公众\",\n            \"c=“氯气” — 表示危险化学品为氯气\"\n        ],\n        \"instance_logicexpression\": [\n            \"危险化学品从业单位(市政府) ∧ 危险化学品(氯气) → (ExplainDanger(市政府, 公众, 氯气) ∧ ExplainDanger(市政府, 员工, 氯气))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“化工厂” — 表示化工厂作为组织\",\n            \"a=“员工” — 表示受众为员工\",\n            \"c=“硫酸” — 表示危险化学品为硫酸\"\n        ],\n        \"instance_logicexpression\": [\n            \"危险化学品从业单位(化工厂) ∧ 危险化学品(硫酸) → (ExplainDanger(化工厂, 公众, 硫酸) ∧ ExplainDanger(化工厂, 员工, 硫酸))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“省政府” — 表示省政府作为组织\",\n            \"a=“公众” — 表示受众为公众\"\n        ],\n        \"instance_logicexpression\": [\n            \"政府(省政府) → (PromoteRegulations(省政府, 公众) ∧ PromoteKnowledge(省政府, 公众))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“县环保局” — 表示县环保局作为组织\",\n            \"a=“公众” — 表示受众为公众\"\n        ],\n        \"instance_logicexpression\": [\n            \"政府(县环保局) → (PromoteRegulations(县环保局, 公众) ∧ PromoteKnowledge(县环保局, 公众))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“危险化学品运输公司” — 表示危险化学品运输公司作为组织\",\n            \"a=“公众” — 表示受众为公众\",\n            \"c=“氨水” — 表示危险化学品为氨水\"\n        ],\n        \"instance_logicexpression\": [\n            \"危险化学品从业单位(危险化学品运输公司) ∧ 危险化学品(氨水) → (ExplainDanger(危险化学品运输公司, 公众, 氨水) ∧ ExplainDanger(危险化学品运输公司, 员工, 氨水))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=“蓝国应急救援队” — 表示应急救援队伍为蓝国应急救援队\",\n            \"r=“危险化学品事故应急救援规定” — 表示按照危险化学品事故应急救援规定\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyRescueTeam(“蓝国应急救援队”) ∧ Regulation(“危险化学品事故应急救援规定”) → ParticipateInTraining(“蓝国应急救援队”, “危险化学品事故应急救援规定”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“绿岛化学公司” — 表示危险化学品从业单位为绿岛化学公司\",\n            \"e=“李雷” — 表示员工为李雷\",\n            \"r=“危险化学品从业单位员工应急培训规定” — 表示按照危险化学品从业单位员工应急培训规定\"\n        ],\n        \"instance_logicexpression\": [\n            \"ChemicalCompany(“绿岛化学公司”) ∧ Employee(“李雷”, “绿岛化学公司”) ∧ Regulation(“危险化学品从业单位员工应急培训规定”) → ConductEmergencyTraining(“绿岛化学公司”, “李雷”, “危险化学品从业单位员工应急培训规定”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“红星安全生产监督管理部门” — 表示安全生产监督管理部门为红星安全生产监督管理部门\",\n            \"t=“黄石应急救援培训” — 表示应急救援培训为黄石应急救援培训\"\n        ],\n        \"instance_logicexpression\": [\n            \"SafetySupervisionDept(“红星安全生产监督管理部门”) ∧ Training(“黄石应急救援培训”) → SuperviseAndInspect(“红星安全生产监督管理部门”, “黄石应急救援培训”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“紫光应急救援管理机构” — 表示应急救援管理机构为紫光应急救援管理机构\",\n            \"p=“王芳” — 表示救援人员为王芳\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyManagementInstitution(“紫光应急救援管理机构”) ∧ Personnel(“王芳”) → EnhanceTraining(“紫光应急救援管理机构”, “王芳”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"u=“化工厂A” — 表示化工厂A是危险化学品从业单位\",\n            \"t=“定期应急演习” — 表示化工厂A定期组织的应急演习类型\",\n            \"s=“化工厂A应急演习总结报告” — 表示化工厂A向安全监管总局提交的书面总结\"\n        ],\n        \"instance_logicexpression\": [\n            \"危险化学品从业单位(化工厂A) → ∃t (组织应急演习(化工厂A, 定期应急演习) ∧ ∃s (SubmitWrittenSummary(化工厂A, 化工厂A应急演习总结报告)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“蓝国市政府” — 表示蓝国市地方政府\",\n            \"t=“危险化学品事故应急救援演习” — 表示蓝国市政府定期组织的应急演习类型\",\n            \"s=“蓝国市应急演习总结” — 表示蓝国市政府向安全监管总局提交的书面总结\"\n        ],\n        \"instance_logicexpression\": [\n            \"地方政府(蓝国市政府) → ∃t (组织应急演习(蓝国市政府, 危险化学品事故应急救援演习) ∧ ∃s (SubmitWrittenSummary(蓝国市政府, 蓝国市应急演习总结)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“国家应急指挥中心” — 表示国家应急指挥中心\",\n            \"t=“年度综合应急演习” — 表示应急指挥中心组织的年度应急演习类型\",\n            \"d=“环境保护部” — 表示与应急指挥中心合作的有关部门\",\n            \"l=“红省省政府” — 表示与应急指挥中心合作的地方政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyCommandCenter(国家应急指挥中心) → ∃t (∃d RelevantDepartments(环境保护部) ∧ ∃l LocalGovernments(红省省政府) ∧ 组织应急演习(国家应急指挥中心, 年度综合应急演习))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“中央政府” — 表示中央政府在抗震救灾工作中坚持统一领导、军地联动、分级负责、属地为主、资源共享和快速反应。\"\n        ],\n        \"instance_logicexpression\": [\n            \"UnifiedLeadership(中央政府) ∧ MilitaryCivilianCooperation(中央政府) ∧ TieredResponsibility(中央政府) ∧ LocalityPrimary(中央政府) ∧ ResourceSharing(中央政府) ∧ RapidResponse(中央政府)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“北京市” — 表示北京市发生了地震灾害。\",\n            \"g=“北京市政府” — 表示北京市政府根据相关预案开展前期处置工作。\"\n        ],\n        \"instance_logicexpression\": [\n            \"EarthquakeDisaster(北京市) → InitialResponse(北京市政府, 北京市)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“广东省政府” — 表示广东省政府是应对本行政区域特别重大、重大地震灾害的主体。\",\n            \"n=“国家地震应急中心” — 表示国家地震应急中心给予广东省必要的协调和支持。\"\n        ],\n        \"instance_logicexpression\": [\n            \"ResponseEntity(广东省政府, EarthquakeDisaster) → CoordinateSupport(国家地震应急中心, 广东省政府)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“四川省” — 表示四川省发生了地震灾害。\",\n            \"g=“四川省政府” — 表示四川省政府根据相关预案开展前期处置工作。\"\n        ],\n        \"instance_logicexpression\": [\n            \"EarthquakeDisaster(四川省) → InitialResponse(四川省政府, 四川省)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“云南省政府” — 表示云南省政府是应对本行政区域特别重大、重大地震灾害的主体。\",\n            \"n=“国家地震应急中心” — 表示国家地震应急中心给予云南省必要的协调和支持。\"\n        ],\n        \"instance_logicexpression\": [\n            \"ResponseEntity(云南省政府, EarthquakeDisaster) → CoordinateSupport(国家地震应急中心, 云南省政府)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Organization=“国务院抗震救灾指挥部” — 表示国务院抗震救灾指挥部负责相关任务\",\n            \"Task=“统一领导全国抗震救灾工作”\",\n            \"Task=“指挥全国抗震救灾工作”\",\n            \"Task=“协调全国抗震救灾工作”\"\n        ],\n        \"instance_logicexpression\": [\n            \"Responsible(国务院抗震救灾指挥部, 统一领导全国抗震救灾工作) ∧ Responsible(国务院抗震救灾指挥部, 指挥全国抗震救灾工作) ∧ Responsible(国务院抗震救灾指挥部, 协调全国抗震救灾工作)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“地震局” — 表示地震局承担相关任务\",\n            \"Task=“国务院抗震救灾指挥部日常工作”\"\n        ],\n        \"instance_logicexpression\": [\n            \"Undertake(地震局, 国务院抗震救灾指挥部日常工作)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“国务院抗震救灾总指挥部” — 表示必要时成立的组织\",\n            \"Task=“统一领导全国抗震救灾工作”\",\n            \"Task=“指挥全国抗震救灾工作”\",\n            \"Task=“协调全国抗震救灾工作”\"\n        ],\n        \"instance_logicexpression\": [\n            \"成立(国务院抗震救灾总指挥部) ∧ Responsible(国务院抗震救灾总指挥部, 统一领导全国抗震救灾工作) ∧ Responsible(国务院抗震救灾总指挥部, 指挥全国抗震救灾工作) ∧ Responsible(国务院抗震救灾总指挥部, 协调全国抗震救灾工作)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“现场指挥机构” — 表示在地震灾区成立的现场指挥机构\",\n            \"Organization=“国务院抗震救灾指挥机构” — 表示现场指挥机构的领导组织\"\n        ],\n        \"instance_logicexpression\": [\n            \"成立(现场指挥机构) ∧ Operate(现场指挥机构) ∧ Lead(现场指挥机构, 国务院抗震救灾指挥机构)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“县级以上地方人民政府抗震救灾指挥部” — 表示抗震救灾指挥部\",\n            \"a=“某市” — 表示行政区域为某市\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀a (CommandCenter(“县级以上地方人民政府抗震救灾指挥部”) ∧ Area(“某市”) → (Lead(“县级以上地方人民政府抗震救灾指挥部”, “某市”) ∧ Command(“县级以上地方人民政府抗震救灾指挥部”, “某市”) ∧ Coordinate(“县级以上地方人民政府抗震救灾指挥部”, “某市”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d1=“当地解放军” — 表示解放军部门\",\n            \"d2=“武警部队” — 表示武警部队\",\n            \"a=“某市” — 表示行政区域为某市\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d1∀d2∀a (EarthquakeRelief(“当地解放军”, “某市”) ∧ EarthquakeRelief(“武警部队”, “某市”) → CloselyCoordinate(“当地解放军”, “武警部队”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“县级以上地方人民政府抗震救灾指挥部” — 表示抗震救灾指挥部\",\n            \"a=“某县” — 表示行政区域为某县\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀a (CommandCenter(“县级以上地方人民政府抗震救灾指挥部”) ∧ Area(“某县”) → (Lead(“县级以上地方人民政府抗震救灾指挥部”, “某县”) ∧ Command(“县级以上地方人民政府抗震救灾指挥部”, “某县”) ∧ Coordinate(“县级以上地方人民政府抗震救灾指挥部”, “某县”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d1=“民兵组织” — 表示民兵组织\",\n            \"d2=“地方有关部门” — 表示地方有关部门\",\n            \"a=“某市” — 表示行政区域为某市\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d1∀d2∀a (EarthquakeRelief(“民兵组织”, “某市”) ∧ EarthquakeRelief(“地方有关部门”, “某市”) → CloselyCoordinate(“民兵组织”, “地方有关部门”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“县级以上地方人民政府抗震救灾指挥部” — 表示抗震救灾指挥部\",\n            \"a=“某区” — 表示行政区域为某区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀a (CommandCenter(“县级以上地方人民政府抗震救灾指挥部”) ∧ Area(“某区”) → (Lead(“县级以上地方人民政府抗震救灾指挥部”, “某区”) ∧ Command(“县级以上地方人民政府抗震救灾指挥部”, “某区”) ∧ Coordinate(“县级以上地方人民政府抗震救灾指挥部”, “某区”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“中国人民解放军” — 表示组织为中国人民解放军\",\n            \"m=“抗震救灾任务” — 表示任务为抗震救灾\",\n            \"r=“本预案及其他有关法律、行政法规、军事法规” — 表示规定为本预案及其他相关法规\",\n            \"a=“人民生命和财产安全” — 表示资产为人民生命和财产安全\",\n            \"Authority=“国务院” — 表示权威机构为国务院\",\n            \"Instruction=“执行抗震救灾任务” — 表示命令为执行抗震救灾任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀m∀r∀a (ExecuteMission(中国人民解放军, 抗震救灾任务) ∧ Protect(中国人民解放军, 人民生命和财产安全) → (Regulation(本预案及其他有关法律、行政法规、军事法规) ∧ Order(国务院, 执行抗震救灾任务) ∧ Order(中央军事委员会, 执行抗震救灾任务)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“中国人民武装警察部队” — 表示组织为中国人民武装警察部队\",\n            \"m=“抗震救灾任务” — 表示任务为抗震救灾\",\n            \"r=“本预案及其他有关法律、行政法规、军事法规” — 表示规定为本预案及其他相关法规\",\n            \"a=“人民生命和财产安全” — 表示资产为人民生命和财产安全\",\n            \"Authority=“中央军事委员会” — 表示权威机构为中央军事委员会\",\n            \"Instruction=“执行抗震救灾任务” — 表示命令为执行抗震救灾任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀m∀r∀a (ExecuteMission(中国人民武装警察部队, 抗震救灾任务) ∧ Protect(中国人民武装警察部队, 人民生命和财产安全) → (Regulation(本预案及其他有关法律、行政法规、军事法规) ∧ Order(国务院, 执行抗震救灾任务) ∧ Order(中央军事委员会, 执行抗震救灾任务)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“民兵组织” — 表示组织为民兵组织\",\n            \"m=“抗震救灾任务” — 表示任务为抗震救灾\",\n            \"r=“本预案及其他有关法律、行政法规、军事法规” — 表示规定为本预案及其他相关法规\",\n            \"a=“人民生命和财产安全” — 表示资产为人民生命和财产安全\",\n            \"Authority=“国务院” — 表示权威机构为国务院\",\n            \"Instruction=“执行抗震救灾任务” — 表示命令为执行抗震救灾任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀m∀r∀a (ExecuteMission(民兵组织, 抗震救灾任务) ∧ Protect(民兵组织, 人民生命和财产安全) → (Regulation(本预案及其他有关法律、行政法规、军事法规) ∧ Order(国务院, 执行抗震救灾任务) ∧ Order(中央军事委员会, 执行抗震救灾任务)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"m=7.5 — 表示地震震级为7.5级\",\n            \"d=400 — 表示死亡人数为400人\",\n            \"e=500000000 — 表示直接经济损失为5亿\",\n            \"GDP=50000000000 — 表示地震发生地上年国内生产总值为5000亿\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀m∀d∀e (EarthquakeDisaster(7.5, 400, 500000000) ∧ (400 ≥ 300 ∨ 500000000 / 50000000000 > 0.01) → VerySevereEarthquakeDisaster(7.5, 400, 500000000))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=“东京” — 表示东京是人口密集地区\",\n            \"m=7.0 — 表示地震震级为7.0级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀l∀m (DenselyPopulatedArea(东京) ∧ 7.0 ≥ 7.0 → VerySevereEarthquakeDisaster(m, d, e))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=“纽约” — 表示纽约是人口密集地区\",\n            \"m=6.5 — 表示地震震级为6.5级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀l∀m (DenselyPopulatedArea(纽约) ∧ 6.5 ≥ 6.0 → VerySevereEarthquakeDisaster(m, d, e))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=6.8 — 表示地震震级为6.8级\",\n            \"d=200 — 表示死亡人数为200人\",\n            \"e=1000000000 — 表示直接经济损失为10亿\",\n            \"GDP=100000000000 — 表示地震发生地上年国内生产总值为1万亿\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀m∀d∀e (EarthquakeDisaster(6.8, 200, 1000000000) ∧ (200 < 300 ∨ 1000000000 / 100000000000 > 0.01) → VerySevereEarthquakeDisaster(6.8, 200, 1000000000))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"E=“地震A” — 表示地震A\",\n            \"D=“120” — 表示地震A造成的死亡人数为120人\",\n            \"A=“城市X” — 表示城市X是人口密集地区\"\n        ],\n        \"instance_logicexpression\": [\n            \"MajorEarthquakeDisaster(地震A) ↔ ((DeathCount(地震A, 120) ∧ 50 < 120 ∧ 120 ≤ 300) ∨ EconomicLoss(地震A, L))\",\n            \"PopulatedArea(城市X) ∧ 6.0 < Magnitude(地震A, M) ∧ M < 7.0 → MajorEarthquakeDisaster(地震A)\",\n            \"PopulatedArea(城市X) ∧ 5.0 < Magnitude(地震A, M) ∧ M < 6.0 → MajorEarthquakeDisaster(地震A)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“地震B” — 表示地震B\",\n            \"L=“10亿” — 表示地震B造成的经济损失为10亿\",\n            \"A=“城市Y” — 表示城市Y是人口密集地区\"\n        ],\n        \"instance_logicexpression\": [\n            \"MajorEarthquakeDisaster(地震B) ↔ ((DeathCount(地震B, D) ∧ 50 < D ∧ D ≤ 300) ∨ EconomicLoss(地震B, 10亿))\",\n            \"PopulatedArea(城市Y) ∧ 6.0 < Magnitude(地震B, M) ∧ M < 7.0 → MajorEarthquakeDisaster(地震B)\",\n            \"PopulatedArea(城市Y) ∧ 5.0 < Magnitude(地震B, M) ∧ M < 6.0 → MajorEarthquakeDisaster(地震B)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“地震C” — 表示地震C\",\n            \"D=“80” — 表示地震C造成的死亡人数为80人\",\n            \"M=“6.5” — 表示地震C的等级为6.5级\",\n            \"A=“城市Z” — 表示城市Z是人口密集地区\"\n        ],\n        \"instance_logicexpression\": [\n            \"MajorEarthquakeDisaster(地震C) ↔ ((DeathCount(地震C, 80) ∧ 50 < 80 ∧ 80 ≤ 300) ∨ EconomicLoss(地震C, L))\",\n            \"PopulatedArea(城市Z) ∧ 6.0 < Magnitude(地震C, 6.5) ∧ 6.5 < 7.0 → MajorEarthquakeDisaster(地震C)\",\n            \"PopulatedArea(城市Z) ∧ 5.0 < Magnitude(地震C, 6.5) ∧ 6.5 < 6.0 → MajorEarthquakeDisaster(地震C)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“地震D” — 表示地震D\",\n            \"M=“5.8” — 表示地震D的等级为5.8级\",\n            \"A=“乡镇W” — 表示乡镇W是人口密集地区\"\n        ],\n        \"instance_logicexpression\": [\n            \"MajorEarthquakeDisaster(地震D) ↔ ((DeathCount(地震D, D) ∧ 50 < D ∧ D ≤ 300) ∨ EconomicLoss(地震D, L))\",\n            \"PopulatedArea(乡镇W) ∧ 6.0 < Magnitude(地震D, 5.8) ∧ 5.8 < 7.0 → MajorEarthquakeDisaster(地震D)\",\n            \"PopulatedArea(乡镇W) ∧ 5.0 < Magnitude(地震D, 5.8) ∧ 5.8 < 6.0 → MajorEarthquakeDisaster(地震D)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"E=“地震A” — 表示地震A是一次地震灾害\",\n            \"N=“30” — 表示地震A造成的死亡人数为30人\",\n            \"L=“1000万” — 表示地震A造成的经济损失为1000万\"\n        ],\n        \"instance_logicexpression\": [\n            \"MajorEarthquakeDisaster(地震A) ↔ (DeathCount(地震A, 30) ∧ 10 ≤ 30 ∧ 30 ≤ 50) ∨ EconomicLoss(地震A, 1000万)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“地震B” — 表示地震B是一次地震灾害\",\n            \"A=“城市C” — 表示城市C是人口密集地区\",\n            \"M1=“5.5” — 表示地震B的级别为5.5级\"\n        ],\n        \"instance_logicexpression\": [\n            \"DenselyPopulatedArea(城市C) ∧ EarthquakeMagnitude(地震B, 5.5) ∧ 5.0 ≤ 5.5 < 6.0 → MajorEarthquakeDisaster(地震B)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“地震D” — 表示地震D是一次地震灾害\",\n            \"A=“城市E” — 表示城市E是人口密集地区\",\n            \"M2=“4.5” — 表示地震D的级别为4.5级\"\n        ],\n        \"instance_logicexpression\": [\n            \"DenselyPopulatedArea(城市E) ∧ EarthquakeMagnitude(地震D, 4.5) ∧ 4.0 ≤ 4.5 < 5.0 → MajorEarthquakeDisaster(地震D)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“地震F” — 表示地震F是一次地震灾害\",\n            \"N=“45” — 表示地震F造成的死亡人数为45人\"\n        ],\n        \"instance_logicexpression\": [\n            \"MajorEarthquakeDisaster(地震F) ↔ (DeathCount(地震F, 45) ∧ 10 ≤ 45 ∧ 45 ≤ 50)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“地震G” — 表示地震G是一次地震灾害\",\n            \"L=“2000万” — 表示地震G造成的经济损失为2000万\"\n        ],\n        \"instance_logicexpression\": [\n            \"MajorEarthquakeDisaster(地震G) ↔ EconomicLoss(地震G, 2000万)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"m=4.5 — 表示地震的震级为4.5级\",\n            \"c=5 — 表示死亡和失踪人数为5人\",\n            \"e=1000万 — 表示经济损失为1000万\",\n            \"l=“市中心” — 表示地震发生在人口密集的市中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"(c ≤ 10 ∨ EconomicLoss(e)) → GeneralEarthquakeDisaster(4.5, 5, 1000万)\",\n            \"DenselyPopulatedArea(“市中心”) ∧ (4.0 < 4.5 ∧ 4.5 < 5.0) → GeneralEarthquakeDisaster(4.5, 5, 1000万)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=4.8 — 表示地震的震级为4.8级\",\n            \"c=8 — 表示死亡和失踪人数为8人\",\n            \"e=500万 — 表示经济损失为500万\",\n            \"l=“居民区” — 表示地震发生在人口密集的居民区\"\n        ],\n        \"instance_logicexpression\": [\n            \"(c ≤ 10 ∨ EconomicLoss(e)) → GeneralEarthquakeDisaster(4.8, 8, 500万)\",\n            \"DenselyPopulatedArea(“居民区”) ∧ (4.0 < 4.8 ∧ 4.8 < 5.0) → GeneralEarthquakeDisaster(4.8, 8, 500万)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=4.2 — 表示地震的震级为4.2级\",\n            \"c=2 — 表示死亡和失踪人数为2人\",\n            \"e=2000万 — 表示经济损失为2000万\",\n            \"l=“商业区” — 表示地震发生在人口密集的商业区\"\n        ],\n        \"instance_logicexpression\": [\n            \"(c ≤ 10 ∨ EconomicLoss(e)) → GeneralEarthquakeDisaster(4.2, 2, 2000万)\",\n            \"DenselyPopulatedArea(“商业区”) ∧ (4.0 < 4.2 ∧ 4.2 < 5.0) → GeneralEarthquakeDisaster(4.2, 2, 2000万)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=4.9 — 表示地震的震级为4.9级\",\n            \"c=9 — 表示死亡和失踪人数为9人\",\n            \"e=300万 — 表示经济损失为300万\",\n            \"l=“工业区” — 表示地震发生在人口密集的工业区\"\n        ],\n        \"instance_logicexpression\": [\n            \"(c ≤ 10 ∨ EconomicLoss(e)) → GeneralEarthquakeDisaster(4.9, 9, 300万)\",\n            \"DenselyPopulatedArea(“工业区”) ∧ (4.0 < 4.9 ∧ 4.9 < 5.0) → GeneralEarthquakeDisaster(4.9, 9, 300万)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“四川地震” — 表示四川发生的地震灾害\",\n            \"Level=Ⅰ — 表示地震灾害分级为Ⅰ级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (EarthquakeDisasterLevel(四川地震, Ⅰ) → EmergencyResponseLevel(Ⅰ))\",\n            \"∀d (EarthquakeDisasterLevel(四川地震, Ⅰ) → (Lead(省级抗震救灾指挥部, 应急工作(四川地震)) ∧ Responsible(国务院抗震救灾指挥机构, 统一领导指挥协调(四川地震))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“云南地震” — 表示云南发生的地震灾害\",\n            \"Level=Ⅱ — 表示地震灾害分级为Ⅱ级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (EarthquakeDisasterLevel(云南地震, Ⅱ) → EmergencyResponseLevel(Ⅱ))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“甘肃地震” — 表示甘肃发生的地震灾害\",\n            \"Level=Ⅲ — 表示地震灾害分级为Ⅲ级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (EarthquakeDisasterLevel(甘肃地震, Ⅲ) → EmergencyResponseLevel(Ⅲ))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“青海地震” — 表示青海发生的地震灾害\",\n            \"Level=Ⅳ — 表示地震灾害分级为Ⅳ级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (EarthquakeDisasterLevel(青海地震, Ⅳ) → EmergencyResponseLevel(Ⅳ))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“四川省” — 表示地震灾害发生在四川省\",\n            \"c=“四川省省级抗震救灾指挥部” — 表示启动响应的指挥机构为四川省省级抗震救灾指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (EarthquakeDisaster(a) → ∃c (ActivateResponse(c, Ⅱ) ∧ LeadWork(c, EarthquakeEmergency(a))))\",\n            \"∀a (EarthquakeDisaster(a) → ∃n (ActivateResponse(n, Ⅱ) ∧ OrganizeCoordinate(n, RelevantDepartments, NationalEarthquakeEmergency(a))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“云南省” — 表示地震灾害发生在云南省\",\n            \"n=“国务院抗震救灾指挥部” — 表示组织协调的指挥机构为国务院抗震救灾指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (EarthquakeDisaster(a) → ∃c (ActivateResponse(c, Ⅱ) ∧ LeadWork(c, EarthquakeEmergency(a))))\",\n            \"∀a (EarthquakeDisaster(a) → ∃n (ActivateResponse(n, Ⅱ) ∧ OrganizeCoordinate(n, RelevantDepartments, NationalEarthquakeEmergency(a))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“甘肃省” — 表示地震灾害发生在甘肃省\",\n            \"c=“甘肃省省级抗震救灾指挥部” — 表示启动响应的指挥机构为甘肃省省级抗震救灾指挥部\",\n            \"n=“国务院抗震救灾指挥部” — 表示组织协调的指挥机构为国务院抗震救灾指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (EarthquakeDisaster(a) → ∃c (ActivateResponse(c, Ⅱ) ∧ LeadWork(c, EarthquakeEmergency(a))))\",\n            \"∀a (EarthquakeDisaster(a) → ∃n (ActivateResponse(n, Ⅱ) ∧ OrganizeCoordinate(n, RelevantDepartments, NationalEarthquakeEmergency(a))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“青海省” — 表示地震灾害发生在青海省\",\n            \"c=“青海省省级抗震救灾指挥部” — 表示启动响应的指挥机构为青海省省级抗震救灾指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (EarthquakeDisaster(a) → ∃c (ActivateResponse(c, Ⅱ) ∧ LeadWork(c, EarthquakeEmergency(a))))\",\n            \"∀a (EarthquakeDisaster(a) → ∃n (ActivateResponse(n, Ⅱ) ∧ OrganizeCoordinate(n, RelevantDepartments, NationalEarthquakeEmergency(a))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“四川汶川” — 表示较大地震灾害发生在四川汶川\",\n            \"l=“Ⅲ级” — 表示启动的响应级别为Ⅲ级\",\n            \"c=“四川省抗震救灾指挥部” — 表示省级抗震救灾指挥部\",\n            \"o=“中国地震局” — 表示国家有关部门之一\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀l ∀c ∀d (较大地震灾害(四川汶川) → ActivateResponse(Ⅲ级) ∧ Support(四川省抗震救灾指挥部, 地震应急工作) ∧ Lead(汶川市抗震救灾指挥部, 地震应急工作) ∧ ∀o (国家有关部门(o) → Assist(o, 抗震救灾工作)))\",\n            \"∀d ∀r (较大地震灾害(四川汶川) ∧ Need(四川汶川, r) → ∃o (中国地震局(o) ∧ Assist(o, r)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“云南大理” — 表示较大地震灾害发生在云南大理\",\n            \"l=“Ⅲ级” — 表示启动的响应级别为Ⅲ级\",\n            \"c=“云南省抗震救灾指挥部” — 表示省级抗震救灾指挥部\",\n            \"o=“国家减灾委员会” — 表示国家有关部门之一\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀l ∀c ∀d (较大地震灾害(云南大理) → ActivateResponse(Ⅲ级) ∧ Support(云南省抗震救灾指挥部, 地震应急工作) ∧ Lead(大理市抗震救灾指挥部, 地震应急工作) ∧ ∀o (国家有关部门(o) → Assist(o, 抗震救灾工作)))\",\n            \"∀d ∀r (较大地震灾害(云南大理) ∧ Need(云南大理, r) → ∃o (国家减灾委员会(o) ∧ Assist(o, r)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“青海玉树” — 表示较大地震灾害发生在青海玉树\",\n            \"l=“Ⅲ级” — 表示启动的响应级别为Ⅲ级\",\n            \"c=“青海省抗震救灾指挥部” — 表示省级抗震救灾指挥部\",\n            \"o=“民政部” — 表示国家有关部门之一\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀l ∀c ∀d (较大地震灾害(青海玉树) → ActivateResponse(Ⅲ级) ∧ Support(青海省抗震救灾指挥部, 地震应急工作) ∧ Lead(玉树市抗震救灾指挥部, 地震应急工作) ∧ ∀o (国家有关部门(o) → Assist(o, 抗震救灾工作)))\",\n            \"∀d ∀r (较大地震灾害(青海玉树) ∧ Need(青海玉树, r) → ∃o (民政部(o) ∧ Assist(o, r)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“甘肃陇南” — 表示较大地震灾害发生在甘肃陇南\",\n            \"l=“Ⅲ级” — 表示启动的响应级别为Ⅲ级\",\n            \"c=“甘肃省抗震救灾指挥部” — 表示省级抗震救灾指挥部\",\n            \"o=“财政部” — 表示国家有关部门之一\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀l ∀c ∀d (较大地震灾害(甘肃陇南) → ActivateResponse(Ⅲ级) ∧ Support(甘肃省抗震救灾指挥部, 地震应急工作) ∧ Lead(陇南市抗震救灾指挥部, 地震应急工作) ∧ ∀o (国家有关部门(o) → Assist(o, 抗震救灾工作)))\",\n            \"∀d ∀r (较大地震灾害(甘肃陇南) ∧ Need(甘肃陇南, r) → ∃o (财政部(o) ∧ Assist(o, r)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Level=“Ⅳ” — 表示启动了Ⅳ级响应\",\n            \"p=“省级抗震救灾指挥部” — 表示省级抗震救灾指挥部\",\n            \"c=“市级抗震救灾指挥部” — 表示市级抗震救灾指挥部\",\n            \"d=“县级抗震救灾指挥部” — 表示县级抗震救灾指挥部\",\n            \"Work=“灾区地震应急工作” — 表示灾区地震应急工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"ActivateResponse(Ⅳ) → (Support(省级抗震救灾指挥部, Lead(县级抗震救灾指挥部, 灾区地震应急工作)) ∧ Support(市级抗震救灾指挥部, Lead(县级抗震救灾指挥部, 灾区地震应急工作)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"DisasterArea=“某市” — 表示灾区为某市\",\n            \"Requirement=“紧急救援物资” — 表示灾区需求为紧急救援物资\",\n            \"Department=“中国地震局” — 表示协助部门为中国地震局\",\n            \"w=“抗震救灾工作” — 表示工作为抗震救灾工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"Need(某市, 紧急救援物资) → Assist(中国地震局, 抗震救灾工作)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"DisasterArea=“某县” — 表示灾区为某县\",\n            \"Requirement=“医疗救援队伍” — 表示灾区需求为医疗救援队伍\",\n            \"Department=“国家卫生健康委员会” — 表示协助部门为国家卫生健康委员会\",\n            \"w=“医疗救援” — 表示工作为医疗救援\"\n        ],\n        \"instance_logicexpression\": [\n            \"Need(某县, 医疗救援队伍) → Assist(国家卫生健康委员会, 医疗救援)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"DisasterArea=“某镇” — 表示灾区为某镇\",\n            \"Requirement=“临时住所” — 表示灾区需求为临时住所\",\n            \"Department=“住房和城乡建设部” — 表示协助部门为住房和城乡建设部\",\n            \"w=“提供临时住所” — 表示工作为提供临时住所\"\n        ],\n        \"instance_logicexpression\": [\n            \"Need(某镇, 临时住所) → Assist(住房和城乡建设部, 提供临时住所)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“西藏” — 西藏为边疆地区\",\n            \"Region=“西藏”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (Earthquake(西藏) ∧ (BorderRegion(西藏) ∨ EthnicRegion(西藏) ∨ SpecialRegion(西藏)) → RaiseResponseLevel(西藏))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“云南” — 云南为少数民族聚居地区\",\n            \"Region=“云南”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (Earthquake(云南) ∧ (BorderRegion(云南) ∨ EthnicRegion(云南) ∨ SpecialRegion(云南)) → RaiseResponseLevel(云南))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“新疆” — 新疆为边疆地区\",\n            \"Region=“新疆”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (Earthquake(新疆) ∧ (BorderRegion(新疆) ∨ EthnicRegion(新疆) ∨ SpecialRegion(新疆)) → RaiseResponseLevel(新疆))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“四川” — 四川为地震多发的特殊地区\",\n            \"Region=“四川”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (Earthquake(四川) ∧ (BorderRegion(四川) ∨ EthnicRegion(四川) ∨ SpecialRegion(四川)) → RaiseResponseLevel(四川))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“西藏” — 西藏地震应急响应已启动\",\n            \"Region=“西藏”\",\n            \"Level=“二级”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (EmergencyResponseStarted(西藏) → (DisasterSituation(西藏) → AdjustResponseLevel(西藏, 二级)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“云南” — 云南地震应急响应已启动\",\n            \"Region=“云南”\",\n            \"Level=“三级”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (EmergencyResponseStarted(云南) → (DisasterSituation(云南) → AdjustResponseLevel(云南, 三级)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“新疆” — 新疆地震应急响应已启动\",\n            \"Region=“新疆”\",\n            \"Level=“一级”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (EmergencyResponseStarted(新疆) → (DisasterSituation(新疆) → AdjustResponseLevel(新疆, 一级)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“四川” — 四川地震应急响应已启动\",\n            \"Region=“四川”\",\n            \"Level=“四级”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (EmergencyResponseStarted(四川) → (DisasterSituation(四川) → AdjustResponseLevel(四川, 四级)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"中国地震局=“中国地震局” — 表示负责收集和管理地震观测数据的机构\",\n            \"地震观测数据=“全国各类地震观测数据” — 表示需要收集和管理的数据类型\",\n            \"地震监视防御区=“2024年度地震重点监视防御区” — 表示提出的地震监视防御区\",\n            \"年度防震减灾工作意见=“2024年度防震减灾工作意见” — 表示提出的年度防震减灾工作意见\"\n        ],\n        \"instance_logicexpression\": [\n            \"ManageData(中国地震局, 全国各类地震观测数据) ∧ ProposeOpinion(中国地震局, 2024年度地震重点监视防御区) ∧ ProposeOpinion(中国地震局, 2024年度防震减灾工作意见)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Authorities=“北京市地震局” — 表示负责震情跟踪监测的地震工作主管部门\",\n            \"震情跟踪监测=“北京地区震情跟踪监测” — 表示加强的震情跟踪监测工作\",\n            \"预测预报=“北京地区地震预测预报” — 表示进行的预测预报工作\",\n            \"群测群防=“北京地区群测群防工作” — 表示进行的群测群防工作\",\n            \"异常现象=“北京地区地震异常现象” — 表示需要综合分析研判的异常现象\"\n        ],\n        \"instance_logicexpression\": [\n            \"StrengthenMonitoring(北京市地震局, 北京地区震情跟踪监测) ∧ Forecast(北京市地震局, 北京地区地震预测预报) ∧ MassMonitoring(北京市地震局, 北京地区群测群防工作) ∧ SynthesizeAnalysis(北京市地震局, 北京地区地震异常现象)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"ProvincialGovernment=“河北省人民政府” — 表示负责发布临震预报的省级人民政府\",\n            \"震情=“河北省临震震情” — 表示根据预报的震情\",\n            \"应急防范措施=“河北省应急防范措施” — 表示需要加强的应急防范措施\"\n        ],\n        \"instance_logicexpression\": [\n            \"IssueImminentForecast(河北省人民政府, 河北省临震震情) → OrganizePrevention(河北省人民政府, 河北省应急防范措施)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Authorities=“上海市地震局” — 表示负责震情跟踪监测的地震工作主管部门\",\n            \"震情跟踪监测=“上海地区震情跟踪监测” — 表示加强的震情跟踪监测工作\",\n            \"预测预报=“上海地区地震预测预报” — 表示进行的预测预报工作\",\n            \"群测群防=“上海地区群测群防工作” — 表示进行的群测群防工作\",\n            \"异常现象=“上海地区地震异常现象” — 表示需要综合分析研判的异常现象\"\n        ],\n        \"instance_logicexpression\": [\n            \"StrengthenMonitoring(上海市地震局, 上海地区震情跟踪监测) ∧ Forecast(上海市地震局, 上海地区地震预测预报) ∧ MassMonitoring(上海市地震局, 上海地区群测群防工作) ∧ SynthesizeAnalysis(上海市地震局, 上海地区地震异常现象)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"ProvincialGovernment=“广东省人民政府” — 表示负责发布临震预报的省级人民政府\",\n            \"震情=“广东省临震震情” — 表示根据预报的震情\",\n            \"应急防范措施=“广东省应急防范措施” — 表示需要加强的应急防范措施\"\n        ],\n        \"instance_logicexpression\": [\n            \"IssueImminentForecast(广东省人民政府, 广东省临震震情) → OrganizePrevention(广东省人民政府, 广东省应急防范措施)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"T=“2023-12-05 08:30” — 表示地震发生的时间\",\n            \"L=“四川成都” — 表示地震发生的地点\",\n            \"B=“中国地震局” — 表示负责测定参数的地震局\",\n            \"M=“7.0” — 表示地震的震级\",\n            \"D=“10公里” — 表示地震的震源深度\",\n            \"参数=“时间：2023-12-05 08:30，地点：四川成都，震级：7.0，震源深度：10公里” — 表示报告和通报的参数信息\",\n            \"续报信息=“余震情况及救援进展” — 表示续报的信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀T ∀L (Earthquake(T, L) → ∃B (DetermineParameters(中国地震局, T, L, 7.0, 10公里) ∧ Report(中国地震局, 国务院, 参数) ∧ Notify(中国地震局, 有关部门, 参数) ∧ Update(中国地震局, 国务院, 余震情况及救援进展)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"T=“2023-11-20 14:45” — 表示地震发生的时间\",\n            \"L=“云南昆明” — 表示地震发生的地点\",\n            \"B=“中国地震局” — 表示负责测定参数的地震局\",\n            \"M=“6.5” — 表示地震的震级\",\n            \"D=“15公里” — 表示地震的震源深度\",\n            \"参数=“时间：2023-11-20 14:45，地点：云南昆明，震级：6.5，震源深度：15公里” — 表示报告和通报的参数信息\",\n            \"续报信息=“灾后重建情况” — 表示续报的信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀T ∀L (Earthquake(T, L) → ∃B (DetermineParameters(中国地震局, T, L, 6.5, 15公里) ∧ Report(中国地震局, 国务院, 参数) ∧ Notify(中国地震局, 有关部门, 参数) ∧ Update(中国地震局, 国务院, 灾后重建情况)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"T=“2023-10-12 02:15” — 表示地震发生的时间\",\n            \"L=“青海西宁” — 表示地震发生的地点\",\n            \"B=“中国地震局” — 表示负责测定参数的地震局\",\n            \"M=“5.8” — 表示地震的震级\",\n            \"D=“8公里” — 表示地震的震源深度\",\n            \"参数=“时间：2023-10-12 02:15，地点：青海西宁，震级：5.8，震源深度：8公里” — 表示报告和通报的参数信息\",\n            \"续报信息=“灾区天气变化” — 表示续报的信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀T ∀L (Earthquake(T, L) → ∃B (DetermineParameters(中国地震局, T, L, 5.8, 8公里) ∧ Report(中国地震局, 国务院, 参数) ∧ Notify(中国地震局, 有关部门, 参数) ∧ Update(中国地震局, 国务院, 灾区天气变化)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“北京市” — 表示地震灾害发生在北京市\",\n            \"Government=“北京市县级以上人民政府” — 表示报告信息的政府级别\",\n            \"d=“北京市” — 表示特别重大、重大地震灾害发生在北京市\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (EarthquakeDisaster(北京市) → (ReportInformation(北京市县级以上人民政府, 信息) ∧ (∃g (SuperiorGovernment(北京市县级以上人民政府, g) ∧ ReportInformation(北京市县级以上人民政府, g))))\",\n            \"∀a (EarthquakeDisaster(北京市) → (BypassReporting(北京市县级以上人民政府) ∨ ¬BypassReporting(北京市县级以上人民政府)))\",\n            \"∀d (EarthquakeDisaster(北京市) ∧ MajorDisaster(北京市) → (OrganizeDisasterCollection(民政部) ∧ AnalyzeAssess(民政部) ∧ ReportToStateCouncil(民政部, 信息) ∧ TimelyUpdate(民政部)))\",\n            \"∀d (EarthquakeDisaster(北京市) ∧ MajorDisaster(北京市) → (OrganizeDisasterCollection(中国地震局) ∧ AnalyzeAssess(中国地震局) ∧ ReportToStateCouncil(中国地震局, 信息) ∧ TimelyUpdate(中国地震局)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“上海市” — 表示地震灾害发生在上海市\",\n            \"Government=“上海市县级以上人民政府” — 表示报告信息的政府级别\",\n            \"d=“上海市” — 表示地震灾害发生在上海市\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (EarthquakeDisaster(上海市) → (ReportInformation(上海市县级以上人民政府, 信息) ∧ (∃g (SuperiorGovernment(上海市县级以上人民政府, g) ∧ ReportInformation(上海市县级以上人民政府, g))))\",\n            \"∀a (EarthquakeDisaster(上海市) → (BypassReporting(上海市县级以上人民政府) ∨ ¬BypassReporting(上海市县级以上人民政府)))\",\n            \"∀d (EarthquakeDisaster(上海市) → (CollectInformation(公安) ∧ ReportToStateCouncil(公安, 信息)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“广州市” — 表示地震灾害发生在广州市\",\n            \"Government=“广州市县级以上人民政府” — 表示报告信息的政府级别\",\n            \"d=“广州市” — 表示地震灾害发生在广州市\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (EarthquakeDisaster(广州市) → (ReportInformation(广州市县级以上人民政府, 信息) ∧ (∃g (SuperiorGovernment(广州市县级以上人民政府, g) ∧ ReportInformation(广州市县级以上人民政府, g))))\",\n            \"∀a (EarthquakeDisaster(广州市) → (BypassReporting(广州市县级以上人民政府) ∨ ¬BypassReporting(广州市县级以上人民政府)))\",\n            \"∀d (EarthquakeDisaster(广州市) → (CollectInformation(安全生产监管) ∧ ReportToStateCouncil(安全生产监管, 信息)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“深圳市” — 表示地震灾害发生在深圳市\",\n            \"Government=“深圳市县级以上人民政府” — 表示报告信息的政府级别\",\n            \"d=“深圳市” — 表示地震灾害发生在深圳市\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (EarthquakeDisaster(深圳市) → (ReportInformation(深圳市县级以上人民政府, 信息) ∧ (∃g (SuperiorGovernment(深圳市县级以上人民政府, g) ∧ ReportInformation(深圳市县级以上人民政府, g))))\",\n            \"∀a (EarthquakeDisaster(深圳市) → (BypassReporting(深圳市县级以上人民政府) ∨ ¬BypassReporting(深圳市县级以上人民政府)))\",\n            \"∀d (EarthquakeDisaster(深圳市) → (CollectInformation(交通) ∧ ReportToStateCouncil(交通, 信息)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“沿海地区地震局” — 表示沿海地区地震局负责管理地震工作\",\n            \"a=“东海海域” — 表示在东海海域发生了地震\",\n            \"r=“海洋主管部门” — 表示海洋主管部门作为通报情况的接收者\"\n        ],\n        \"instance_logicexpression\": [\n            \"ManageEarthquake(沿海地区地震局) → (MarineEarthquake(东海海域) → EnhanceMonitoring(沿海地区地震局, MarineEarthquake)) ∧ (VolcanicActivity(a) → EnhanceMonitoring(沿海地区地震局, VolcanicActivity))\",\n            \"ManageEarthquake(沿海地区地震局) ∧ MarineEarthquake(东海海域) → ReportSituation(沿海地区地震局, 海洋主管部门)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“火山地区地震局” — 表示火山地区地震局负责管理地震工作\",\n            \"a=“黄石公园” — 表示在黄石公园有火山活动\"\n        ],\n        \"instance_logicexpression\": [\n            \"ManageEarthquake(火山地区地震局) ∧ VolcanicActivity(黄石公园) → (UseMonitoringFacilities(火山地区地震局) ∧ EnhanceMonitoring(火山地区地震局, VolcanicActivity))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“南海地震监测中心” — 表示南海地震监测中心负责管理地震工作\",\n            \"a=“南海海域” — 表示在南海海域发生了地震\",\n            \"r=“当地海事管理机构” — 表示当地海事管理机构作为通报情况的接收者\"\n        ],\n        \"instance_logicexpression\": [\n            \"ManageEarthquake(南海地震监测中心) → (MarineEarthquake(南海海域) → EnhanceMonitoring(南海地震监测中心, MarineEarthquake)) ∧ (VolcanicActivity(a) → EnhanceMonitoring(南海地震监测中心, VolcanicActivity))\",\n            \"ManageEarthquake(南海地震监测中心) ∧ MarineEarthquake(南海海域) → ReportSituation(南海地震监测中心, 当地海事管理机构)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“地中海地区地震局” — 表示地中海地区地震局负责管理地震工作\",\n            \"a=“地中海海域” — 表示在地中海海域发生了地震\",\n            \"r=“海洋主管部门” — 表示海洋主管部门作为通报情况的接收者\"\n        ],\n        \"instance_logicexpression\": [\n            \"ManageEarthquake(地中海地区地震局) → (MarineEarthquake(地中海海域) → EnhanceMonitoring(地中海地区地震局, MarineEarthquake)) ∧ (VolcanicActivity(a) → EnhanceMonitoring(地中海地区地震局, VolcanicActivity))\",\n            \"ManageEarthquake(地中海地区地震局) ∧ MarineEarthquake(地中海海域) → ReportSituation(地中海地区地震局, 海洋主管部门)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“当地政府” — 表示当地政府负责组织应急行动\",\n            \"f=“解放军” — 表示解放军是被协调的救援力量之一\",\n            \"e=“大型吊车” — 表示大型吊车是被调配的救援装备之一\",\n            \"RescueForce=“地震救援队” — 表示地震救援队负责抢救被掩埋人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (灾情(当地政府) ∧ 抗灾救灾需要(当地政府) → (OrganizeRescueTeams(当地政府) ∧ CarryOutSelfRescue(Mass) ∧ CoordinateRescueForces(当地政府, 解放军) ∧ AllocateRescueEquipment(当地政府, 大型吊车) ∧ RescueBuriedPeople(地震救援队)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t1=“基层应急队伍” — 表示基层应急队伍是参与救援的队伍之一\",\n            \"t2=“消防队伍” — 表示消防队伍是参与救援的队伍之一\"\n        ],\n        \"instance_logicexpression\": [\n            \"基层应急队伍 ∧ 消防队伍 → EnhanceCoordination(基层应急队伍, 消防队伍)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“武警部队” — 表示武警部队负责划分责任区边界\"\n        ],\n        \"instance_logicexpression\": [\n            \"RescueTeam(武警部队) → DefineResponsibilityBoundary(武警部队)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“建筑救援队”,\n            \"d=“结构坍塌” — 表示建筑救援队在遇到结构坍塌的危险时传递警报\"\n        ],\n        \"instance_logicexpression\": [\n            \"RescueTeam(建筑救援队) ∧ Danger(结构坍塌) → TransmitAlert(建筑救援队, 结构坍塌)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“市政救援队” — 表示市政救援队负责做好自身安全防护\"\n        ],\n        \"instance_logicexpression\": [\n            \"RescueTeam(市政救援队) → EnsureSafety(市政救援队)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“地震灾区” — 表示地震灾区的灾情。\",\n            \"Team=“应急医疗队1号” — 表示组织协调的应急医疗队伍。\",\n            \"People=“受灾群众” — 表示需要被抢救的受伤群众。\",\n            \"Facility=“战地医院” — 表示在灾区建立的设施。\",\n            \"Equipment=“救护车、医疗器械、药品和血浆” — 表示需要组织调度的设备和物资。\",\n            \"Patient=“重伤员” — 表示需要分流和异地救治的重伤员。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (Disaster(地震灾区) ∧ DisasterReliefNeed(地震灾区) → (Organize(应急医疗队1号, 地震灾区) ∧ GoTo(应急医疗队1号, 地震灾区) ∧ Rescue(应急医疗队1号, 受灾群众))\",\n            \"∀a (Disaster(地震灾区) ∧ DisasterReliefNeed(地震灾区) → (Establish(战地医院, 地震灾区) ∨ Establish(MedicalPoint, 地震灾区) ∧ ProvideTreatment(应急医疗队1号, 受灾群众))\",\n            \"∀a (Disaster(地震灾区) ∧ DisasterReliefNeed(地震灾区) → (Coordinate(救护车, 地震灾区) ∧ Coordinate(医疗器械, 地震灾区) ∧ Coordinate(药品, 地震灾区) ∧ Coordinate(血浆, 地震灾区))\",\n            \"∀a (Disaster(地震灾区) ∧ DisasterReliefNeed(地震灾区) → (Supply(医疗器械, 地震灾区) ∧ Supply(药品, 地震灾区))\",\n            \"∀a (Disaster(地震灾区) ∧ DisasterReliefNeed(地震灾区) → (Divert(重伤员, 地震灾区) ∧ TreatElsewhere(重伤员, 地震灾区))\",\n            \"∀a (Disaster(地震灾区) ∧ DisasterReliefNeed(地震灾区) → ProvidePsychologicalAid(地震灾区))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“洪水重灾区” — 表示洪水重灾区的灾情。\",\n            \"Team=“应急医疗队2号” — 表示组织协调的应急医疗队伍。\",\n            \"People=“受灾群众” — 表示需要被抢救的受伤群众。\",\n            \"Facility=“医疗点” — 表示在灾区建立的设施。\",\n            \"Equipment=“救护车、医疗器械、药品和血浆” — 表示需要组织调度的设备和物资。\",\n            \"Patient=“重伤员” — 表示需要分流和异地救治的重伤员。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (Disaster(洪水重灾区) ∧ DisasterReliefNeed(洪水重灾区) → (Organize(应急医疗队2号, 洪水重灾区) ∧ GoTo(应急医疗队2号, 洪水重灾区) ∧ Rescue(应急医疗队2号, 受灾群众))\",\n            \"∀a (Disaster(洪水重灾区) ∧ DisasterReliefNeed(洪水重灾区) → (Establish(医疗点, 洪水重灾区) ∨ Establish(MedicalPoint, 洪水重灾区) ∧ ProvideTreatment(应急医疗队2号, 受灾群众))\",\n            \"∀a (Disaster(洪水重灾区) ∧ DisasterReliefNeed(洪水重灾区) → (Coordinate(救护车, 洪水重灾区) ∧ Coordinate(医疗器械, 洪水重灾区) ∧ Coordinate(药品, 洪水重灾区) ∧ Coordinate(血浆, 洪水重灾区))\",\n            \"∀a (Disaster(洪水重灾区) ∧ DisasterReliefNeed(洪水重灾区) → (Supply(医疗器械, 洪水重灾区) ∧ Supply(药品, 洪水重灾区))\",\n            \"∀a (Disaster(洪水重灾区) ∧ DisasterReliefNeed(洪水重灾区) → (Divert(重伤员, 洪水重灾区) ∧ TreatElsewhere(重伤员, 洪水重灾区))\",\n            \"∀a (Disaster(洪水重灾区) ∧ DisasterReliefNeed(洪水重灾区) → ProvidePsychologicalAid(洪水重灾区))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“地震灾区” — 表示灾区为地震灾区\",\n            \"w=“死亡动物” — 表示废物类型为死亡动物\",\n            \"w=“医疗废弃物” — 表示废物类型为医疗废弃物\",\n            \"w=“生活垃圾” — 表示废物类型为生活垃圾\",\n            \"w=“粪便” — 表示废物类型为粪便\",\n            \"Disease=“鼠疫” — 表示疾病为鼠疫\",\n            \"Disease=“狂犬病” — 表示疾病为狂犬病\",\n            \"Event=“重大传染病” — 表示事件类型为重大传染病\",\n            \"Event=“突发卫生事件” — 表示事件类型为突发卫生事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"灾区(地震灾区) → (MonitorDisinfectWaterSource(地震灾区) ∧ StrengthenHygieneSupervision(地震灾区) ∧ DisposeBodies(地震灾区) ∧ DisinfectHarmlessTreatment(地震灾区, 死亡动物) ∧ DisinfectHarmlessTreatment(地震灾区, 医疗废弃物) ∧ DisinfectHarmlessTreatment(地震灾区, 生活垃圾) ∧ DisinfectHarmlessTreatment(地震灾区, 粪便) ∧ StrengthenDiseaseMonitoringControl(鼠疫) ∧ StrengthenDiseaseMonitoringControl(狂犬病) ∧ Vaccinate(地震灾区) ∧ ImplementReportingSystem(重大传染病) ∧ ImplementReportingSystem(突发卫生事件))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“洪水灾区” — 表示灾区为洪水灾区\",\n            \"w=“死亡动物” — 表示废物类型为死亡动物\",\n            \"w=“医疗废弃物” — 表示废物类型为医疗废弃物\",\n            \"w=“生活垃圾” — 表示废物类型为生活垃圾\",\n            \"w=“粪便” — 表示废物类型为粪便\",\n            \"Disease=“鼠疫” — 表示疾病为鼠疫\",\n            \"Disease=“狂犬病” — 表示疾病为狂犬病\",\n            \"Event=“重大传染病” — 表示事件类型为重大传染病\",\n            \"Event=“突发卫生事件” — 表示事件类型为突发卫生事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"灾区(洪水灾区) → (MonitorDisinfectWaterSource(洪水灾区) ∧ StrengthenHygieneSupervision(洪水灾区) ∧ DisposeBodies(洪水灾区) ∧ DisinfectHarmlessTreatment(洪水灾区, 死亡动物) ∧ DisinfectHarmlessTreatment(洪水灾区, 医疗废弃物) ∧ DisinfectHarmlessTreatment(洪水灾区, 生活垃圾) ∧ DisinfectHarmlessTreatment(洪水灾区, 粪便) ∧ StrengthenDiseaseMonitoringControl(鼠疫) ∧ StrengthenDiseaseMonitoringControl(狂犬病) ∧ Vaccinate(洪水灾区) ∧ ImplementReportingSystem(重大传染病) ∧ ImplementReportingSystem(突发卫生事件))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“台风灾区” — 表示灾区为台风灾区\",\n            \"w=“死亡动物” — 表示废物类型为死亡动物\",\n            \"w=“医疗废弃物” — 表示废物类型为医疗废弃物\",\n            \"w=“生活垃圾” — 表示废物类型为生活垃圾\",\n            \"w=“粪便” — 表示废物类型为粪便\",\n            \"Disease=“鼠疫” — 表示疾病为鼠疫\",\n            \"Disease=“狂犬病” — 表示疾病为狂犬病\",\n            \"Event=“重大传染病” — 表示事件类型为重大传染病\",\n            \"Event=“突发卫生事件” — 表示事件类型为突发卫生事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"灾区(台风灾区) → (MonitorDisinfectWaterSource(台风灾区) ∧ StrengthenHygieneSupervision(台风灾区) ∧ DisposeBodies(台风灾区) ∧ DisinfectHarmlessTreatment(台风灾区, 死亡动物) ∧ DisinfectHarmlessTreatment(台风灾区, 医疗废弃物) ∧ DisinfectHarmlessTreatment(台风灾区, 生活垃圾) ∧ DisinfectHarmlessTreatment(台风灾区, 粪便) ∧ StrengthenDiseaseMonitoringControl(鼠疫) ∧ StrengthenDiseaseMonitoringControl(狂犬病) ∧ Vaccinate(台风灾区) ∧ ImplementReportingSystem(重大传染病) ∧ ImplementReportingSystem(突发卫生事件))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“城市A” — 表示城市A是受灾地区\",\n            \"t=“食品” — 表示筹集的食品物资\",\n            \"n=“饮水” — 表示需要解决的饮水需求\"\n        ],\n        \"instance_logicexpression\": [\n            \"受灾地区(城市A) → (OpenShelter(城市A) ∧ ∀t (SuppliesType(食品) → CollectSupplies(食品)) ∧ ∀n (NeedsType(饮水) → MeetNeeds(受灾群众, 饮水)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“乡镇B” — 表示乡镇B是受灾村镇\",\n            \"i=“街道C” — 表示街道C是受灾街道\"\n        ],\n        \"instance_logicexpression\": [\n            \"受灾村镇(乡镇B) ∧ 街道(街道C) → SetDistributionPoint(乡镇B, 生活用品) ∧ SetDistributionPoint(街道C, 生活用品)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“灾区安置点D” — 表示灾区安置点D需要安装板房\"\n        ],\n        \"instance_logicexpression\": [\n            \"需安装板房(灾区安置点D) → (OrganizeProduction(活动板房) ∧ OrganizeProduction(简易房))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“受灾群众集中点E” — 表示受灾群众集中点E\"\n        ],\n        \"instance_logicexpression\": [\n            \"受灾群众集中点(受灾群众集中点E) → EquipFirefighting(受灾群众集中点E)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“学校F” — 表示学校F是受灾地区的学校\",\n            \"i=“医院G” — 表示医院G是受灾地区的医院\"\n        ],\n        \"instance_logicexpression\": [\n            \"学校(学校F) ∨ 医院(医院G) → PrioritySupport(学校F, 救灾物资) ∧ PrioritySupport(医院G, 救灾物资)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“孤儿H” — 表示孤儿H是需要优先安置的人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"孤儿(孤儿H) → PrioritySettlement(孤儿H)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“志愿者” — 表示动员的志愿者社会力量\"\n        ],\n        \"instance_logicexpression\": [\n            \"社会力量(志愿者) → MobilizeSociety(志愿者)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“遇难者I” — 表示遇难者I的家属需要抚慰\"\n        ],\n        \"instance_logicexpression\": [\n            \"遇难人员(遇难者I) → ComfortFamilies(家属(遇难者I))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“灾区学校J” — 表示灾区学校J需要组织复课\"\n        ],\n        \"instance_logicexpression\": [\n            \"灾区学校(灾区学校J) → OrganizeResumption(灾区学校J)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“城市A” — 表示城市A发生了灾害\",\n            \"Infrastructure=“机场” — 表示机场是交通设施之一\",\n            \"People=“救援队伍1” — 表示应急抢险救援人员\",\n            \"Materials=“帐篷和食物” — 表示救灾物资\"\n        ],\n        \"instance_logicexpression\": [\n            \"Disaster(城市A) ∧ DisasterReliefNeed(城市A) → (Repair(机场) ∧ TransportationNeed(救援队伍1, 帐篷和食物) ∧ TransportationNeed(InjuredPersonnel))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“城市B” — 表示城市B发生了灾害\",\n            \"Infrastructure=“铁路” — 表示铁路是交通设施之一\",\n            \"People=“医疗队” — 表示应急抢险救援人员\",\n            \"Materials=“药品和医疗设备” — 表示救灾物资\"\n        ],\n        \"instance_logicexpression\": [\n            \"Disaster(城市B) ∧ DisasterReliefNeed(城市B) → (Repair(铁路) ∧ TransportationNeed(医疗队, 药品和医疗设备) ∧ TransportationNeed(InjuredPersonnel))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“城市C” — 表示城市C发生了灾害\",\n            \"Infrastructure=“供电系统” — 表示供电基础设施\",\n            \"People=“灾区居民” — 表示灾区群众\",\n            \"Work=“紧急救援行动” — 表示应急工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"Disaster(城市C) ∧ DisasterReliefNeed(城市C) → (Repair(供电系统) ∧ Repair(WaterSupply) ∧ Repair(GasSupply) ∧ Repair(Communication) ∧ Repair(Broadcasting) ∧ BasicLivingNeeds(灾区居民) ∧ EmergencyWorkNeeds(紧急救援行动))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“城市D” — 表示城市D发生了灾害\",\n            \"Infrastructure=“通信网络” — 表示通信基础设施\",\n            \"People=“灾区居民” — 表示灾区群众\",\n            \"Work=“灾后重建工作” — 表示应急工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"Disaster(城市D) ∧ DisasterReliefNeed(城市D) → (Repair(通信网络) ∧ Repair(PowerSupply) ∧ Repair(WaterSupply) ∧ Repair(GasSupply) ∧ Repair(Broadcasting) ∧ BasicLivingNeeds(灾区居民) ∧ EmergencyWorkNeeds(灾后重建工作))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“地震灾区” — 表示地震灾区为灾情地点\",\n            \"Station=“测震台站” — 表示地震局布设或恢复的地震现场测震台站\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (灾情(地震灾区) → (InstallStation(SeismologicalBureau, 地震灾区) ∨ RestoreStation(SeismologicalBureau, 地震灾区) ∧ TrackActivity(SeismologicalBureau) ∧ MonitorSeismicity(SeismologicalBureau) ∧ AssessSituation(SeismologicalBureau, 地震灾区)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“洪水灾区” — 表示洪水灾区为灾情地点\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (灾情(洪水灾区) → EnhanceMeteorologicalMonitoring(MeteorologicalBureau) ∧ MonitorMeteorologicalChanges(MeteorologicalBureau, 洪水灾区))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“化学泄漏灾区” — 表示化学泄漏灾区为灾情地点\",\n            \"Type=“空气” — 表示灾区所在地抗震救灾指挥部安排专业力量加强空气监测\",\n            \"Type=“水源” — 表示灾区所在地抗震救灾指挥部安排专业力量加强水源监测\",\n            \"Type=“土壤” — 表示灾区所在地抗震救灾指挥部安排专业力量加强土壤监测\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (灾情(化学泄漏灾区) → ArrangeMonitoring(CommandCenter, 空气) ∧ ArrangeMonitoring(CommandCenter, 水源) ∧ ArrangeMonitoring(CommandCenter, 土壤) → ReducePollution(CommandCenter))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“强余震” — 表示灾害类型为强余震\",\n            \"d=“降雨” — 表示灾害类型为降雨\"\n        ],\n        \"instance_logicexpression\": [\n            \"Disaster(强余震) → (MonitorWarning(强余震) ∧ Prevent(强余震, Injury) ∧ Prevent(强余震, Blockage))\",\n            \"Disaster(降雨) → (MonitorWarning(降雨) ∧ Prevent(降雨, Injury) ∧ Prevent(降雨, Blockage))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“水库” — 表示结构为水库\",\n            \"s=“堤坝” — 表示结构为堤坝\"\n        ],\n        \"instance_logicexpression\": [\n            \"Structure(水库) → (RiskAssessment(水库) ∧ Assess(水库) → Reinforce(水库))\",\n            \"Structure(堤坝) → (RiskAssessment(堤坝) ∧ Assess(堤坝) → Reinforce(堤坝))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“堰塞湖下游地区” — 表示下游区域为堰塞湖下游地区\"\n        ],\n        \"instance_logicexpression\": [\n            \"DownstreamArea(堰塞湖下游地区) → (RiskAssessment(堰塞湖下游地区) → Evacuate(Person, 堰塞湖下游地区))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“输油气管道” — 表示设施为输油气管道\",\n            \"f=“输配电线路” — 表示设施为输配电线路\"\n        ],\n        \"instance_logicexpression\": [\n            \"Facility(输油气管道) → DamageAssessment(输油气管道) → SafetyMeasures(输油气管道)\",\n            \"Facility(输配电线路) → DamageAssessment(输配电线路) → SafetyMeasures(输配电线路)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"n=“核电站” — 表示核设施为核电站\"\n        ],\n        \"instance_logicexpression\": [\n            \"NuclearFacility(核电站) → AccidentPrevention(核电站)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“盗窃” — 表示严厉打击盗窃行为\",\n            \"c=“抢劫” — 表示严厉打击抢劫行为\",\n            \"c=“哄抢救灾物资” — 表示严厉打击哄抢救灾物资行为\",\n            \"c=“借机传播谣言制造社会恐慌” — 表示严厉打击借机传播谣言制造社会恐慌行为\"\n        ],\n        \"instance_logicexpression\": [\n            \"Crime(盗窃) → CrackDown(盗窃)\",\n            \"Crime(抢劫) → CrackDown(抢劫)\",\n            \"Crime(哄抢救灾物资) → CrackDown(哄抢救灾物资)\",\n            \"Crime(借机传播谣言制造社会恐慌) → CrackDown(借机传播谣言制造社会恐慌)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=“受灾群众安置点” — 表示在受灾群众安置点增设警务站、加强巡逻、增强安全感\",\n            \"l=“救灾物资存放点” — 表示在救灾物资存放点增设警务站、加强巡逻、增强安全感\"\n        ],\n        \"instance_logicexpression\": [\n            \"Location(受灾群众安置点) ∧ KeyArea(受灾群众安置点) → (增设警务站(受灾群众安置点) ∧ EnhancePatrol(受灾群众安置点) ∧ EnhanceSecuritySense(受灾群众安置点))\",\n            \"Location(救灾物资存放点) ∧ KeyArea(救灾物资存放点) → (增设警务站(救灾物资存放点) ∧ EnhancePatrol(救灾物资存放点) ∧ EnhanceSecuritySense(救灾物资存放点))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“党政机关” — 表示加强对党政机关的警戒\",\n            \"p=“要害部门” — 表示加强对要害部门的警戒\",\n            \"p=“金融单位” — 表示加强对金融单位的警戒\",\n            \"p=“储备仓库” — 表示加强对储备仓库的警戒\",\n            \"p=“监狱” — 表示加强对监狱的警戒\"\n        ],\n        \"instance_logicexpression\": [\n            \"ImportantPlace(党政机关) → StrengthenSecurity(党政机关)\",\n            \"ImportantPlace(要害部门) → StrengthenSecurity(要害部门)\",\n            \"ImportantPlace(金融单位) → StrengthenSecurity(金融单位)\",\n            \"ImportantPlace(储备仓库) → StrengthenSecurity(储备仓库)\",\n            \"ImportantPlace(监狱) → StrengthenSecurity(监狱)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“物资分配不公” — 表示化解物资分配不公的涉灾矛盾纠纷\",\n            \"d=“救援优先级争议” — 表示化解救援优先级争议的涉灾矛盾纠纷\"\n        ],\n        \"instance_logicexpression\": [\n            \"Dispute(物资分配不公) ∧ DisasterRelated(物资分配不公) → ResolveConflict(物资分配不公)\",\n            \"Dispute(救援优先级争议) ∧ DisasterRelated(救援优先级争议) → ResolveConflict(救援优先级争议)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“法律援助” — 表示提供法律援助服务\",\n            \"s=“心理疏导” — 表示提供心理疏导服务\"\n        ],\n        \"instance_logicexpression\": [\n            \"Service(法律援助) ∧ LegalService(法律援助) → ProvideLegalService(法律援助)\",\n            \"Service(心理疏导) ∧ LegalService(心理疏导) → ProvideLegalService(心理疏导)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“汶川县” — 表示汶川县发生了灾害\",\n            \"Disaster(汶川县) — 汶川县发生了灾害\",\n            \"DisasterReliefNeed(汶川县) — 汶川县有抗灾救灾的需求\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (Disaster(汶川县) ∧ DisasterReliefNeed(汶川县) → (ClarifyOrganization(汶川县) ∧ StrengthenVolunteerManagement(汶川县) ∧ OpenContactLine(汶川县) ∧ ReceiveRegistration(汶川县) ∧ DispatchAndService(汶川县) ∧ PublishDemandGuide(汶川县) ∧ GuideParticipation(汶川县)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“玉树州” — 表示玉树州发生了灾害\",\n            \"Disaster(玉树州) — 玉树州发生了灾害\",\n            \"DisasterReliefNeed(玉树州) — 玉树州有抗灾救灾的需求\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (Disaster(玉树州) ∧ DisasterReliefNeed(玉树州) → (ClarifyOrganization(玉树州) ∧ StrengthenVolunteerManagement(玉树州) ∧ OpenContactLine(玉树州) ∧ ReceiveRegistration(玉树州) ∧ DispatchAndService(玉树州) ∧ PublishDemandGuide(玉树州) ∧ GuideParticipation(玉树州)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“雅安市” — 表示雅安市发生了灾害\",\n            \"Disaster(雅安市) — 雅安市发生了灾害\",\n            \"DisasterReliefNeed(雅安市) — 雅安市有抗灾救灾的需求\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (Disaster(雅安市) ∧ DisasterReliefNeed(雅安市) → (ClarifyOrganization(雅安市) ∧ StrengthenVolunteerManagement(雅安市) ∧ OpenContactLine(雅安市) ∧ ReceiveRegistration(雅安市) ∧ DispatchAndService(雅安市) ∧ PublishDemandGuide(雅安市) ∧ GuideParticipation(雅安市)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“九寨沟县” — 表示九寨沟县发生了灾害\",\n            \"Disaster(九寨沟县) — 九寨沟县发生了灾害\",\n            \"DisasterReliefNeed(九寨沟县) — 九寨沟县有抗灾救灾的需求\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (Disaster(九寨沟县) ∧ DisasterReliefNeed(九寨沟县) → (ClarifyOrganization(九寨沟县) ∧ StrengthenVolunteerManagement(九寨沟县) ∧ OpenContactLine(九寨沟县) ∧ ReceiveRegistration(九寨沟县) ∧ DispatchAndService(九寨沟县) ∧ PublishDemandGuide(九寨沟县) ∧ GuideParticipation(九寨沟县)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“地震灾区” — 表示灾区为地震灾区\",\n            \"a=“捐款捐物活动” — 表示活动类型为捐款捐物活动\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀a (灾区(“地震灾区”) → OrganizeActivity(“地震灾区”, 捐款捐物活动))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“红十字会” — 表示捐赠者为红十字会\",\n            \"i=“帐篷” — 表示捐赠物品为帐篷\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀i (捐款捐物(红十字会, 帐篷) → Mobilize(救灾组织, 捐款捐物(红十字会, 帐篷)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“救灾组织” — 表示组织为救灾组织\",\n            \"d=“食品” — 表示活动为食品捐赠\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀d (Mobilize(救灾组织, 食品) → (Receive(救灾组织, 食品) ∧ Statistics(救灾组织, 食品) ∧ Allocate(救灾组织, 食品, 地震灾区) ∧ Use(地震灾区, 食品) ∧ PublicFeedback(救灾组织, 食品)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“洪水灾区” — 表示灾区为洪水灾区\",\n            \"a=“心理援助活动” — 表示活动类型为心理援助活动\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀a (灾区(“洪水灾区”) → OrganizeActivity(“洪水灾区”, 心理援助活动))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“企业A” — 表示捐赠者为企业A\",\n            \"i=“医疗物资” — 表示捐赠物品为医疗物资\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀i (捐款捐物(企业A, 医疗物资) → Mobilize(救灾组织, 捐款捐物(企业A, 医疗物资)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“慈善基金会” — 表示组织为慈善基金会\",\n            \"d=“衣物” — 表示活动为衣物捐赠\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀d (Mobilize(慈善基金会, 衣物) → (Receive(慈善基金会, 衣物) ∧ Statistics(慈善基金会, 衣物) ∧ Allocate(慈善基金会, 衣物, 洪水灾区) ∧ Use(洪水灾区, 衣物) ∧ PublicFeedback(慈善基金会, 衣物)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“非灾区A政府” — 表示非灾区A的人民政府\",\n            \"s=“灾区B” — 表示灾区B\",\n            \"r=“人力、物力、财力、智力” — 表示非灾区人民政府提供的资源类型\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀s∀r (Necessary(非灾区A政府) → (OrganizeSupport(非灾区A政府, 灾区B) ∧ ProvideResources(非灾区A政府, 人力、物力、财力、智力)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“非灾区C政府” — 表示非灾区C的人民政府\",\n            \"s=“灾区D” — 表示灾区D\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (DisasterArea(灾区D) → (Settlement(灾区D) ∧ Treatment(灾区D) ∧ EpidemicPrevention(灾区D) ∧ InfrastructureRepair(灾区D) ∧ ProductionRecovery(灾区D)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“非灾区E政府” — 表示非灾区E的人民政府\",\n            \"s=“灾区F” — 表示灾区F\",\n            \"r=“物力、财力” — 表示非灾区人民政府提供的资源类型\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀s∀r (Necessary(非灾区E政府) → (OrganizeSupport(非灾区E政府, 灾区F) ∧ ProvideResources(非灾区E政府, 物力、财力)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“非灾区G政府” — 表示非灾区G的人民政府\",\n            \"s=“灾区H” — 表示灾区H\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (DisasterArea(灾区H) → (Settlement(灾区H) ∧ Treatment(灾区H) ∧ EpidemicPrevention(灾区H) ∧ InfrastructureRepair(灾区H) ∧ ProductionRecovery(灾区H)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“北京” — 表示北京地区的灾情\",\n            \"i=“北京市抗震救灾指挥部” — 表示北京市抗震救灾指挥机构\",\n            \"l=“一级” — 表示北京市抗震救灾指挥部负责一级地震灾害\",\n            \"Information=“北京地区地震灾害情况” — 表示发布的信息内容\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀i (Disaster(北京) → ∃l (EarthquakeReliefCommand(北京市抗震救灾指挥部, 一级) ∧ (ReleaseInformation(北京市抗震救灾指挥部, 北京地区地震灾害情况) → (Unified(北京地区地震灾害情况) ∧ Timely(北京地区地震灾害情况) ∧ Accurate(北京地区地震灾害情况) ∧ Objective(北京地区地震灾害情况))) ∧ AddressConcerns(北京市抗震救灾指挥部))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“上海” — 表示上海地区的灾情\",\n            \"i=“上海市抗震救灾指挥部” — 表示上海市抗震救灾指挥机构\",\n            \"l=“二级” — 表示上海市抗震救灾指挥部负责二级地震灾害\",\n            \"Information=“上海地区地震灾害情况” — 表示发布的信息内容\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀i (Disaster(上海) → ∃l (EarthquakeReliefCommand(上海市抗震救灾指挥部, 二级) ∧ (ReleaseInformation(上海市抗震救灾指挥部, 上海地区地震灾害情况) → (Unified(上海地区地震灾害情况) ∧ Timely(上海地区地震灾害情况) ∧ Accurate(上海地区地震灾害情况) ∧ Objective(上海地区地震灾害情况))) ∧ AddressConcerns(上海市抗震救灾指挥部))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“广州” — 表示广州地区的灾情\",\n            \"i=“广州市抗震救灾指挥部” — 表示广州市抗震救灾指挥机构\",\n            \"l=“三级” — 表示广州市抗震救灾指挥部负责三级地震灾害\",\n            \"Information=“广州地区地震灾害情况” — 表示发布的信息内容\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀i (Disaster(广州) → ∃l (EarthquakeReliefCommand(广州市抗震救灾指挥部, 三级) ∧ (ReleaseInformation(广州市抗震救灾指挥部, 广州地区地震灾害情况) → (Unified(广州地区地震灾害情况) ∧ Timely(广州地区地震灾害情况) ∧ Accurate(广州地区地震灾害情况) ∧ Objective(广州地区地震灾害情况))) ∧ AddressConcerns(广州市抗震救灾指挥部))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“成都” — 表示成都地区的灾情\",\n            \"i=“成都市抗震救灾指挥部” — 表示成都市抗震救灾指挥机构\",\n            \"l=“四级” — 表示成都市抗震救灾指挥部负责四级地震灾害\",\n            \"Information=“成都地区地震灾害情况” — 表示发布的信息内容\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀i (Disaster(成都) → ∃l (EarthquakeReliefCommand(成都市抗震救灾指挥部, 四级) ∧ (ReleaseInformation(成都市抗震救灾指挥部, 成都地区地震灾害情况) → (Unified(成都地区地震灾害情况) ∧ Timely(成都地区地震灾害情况) ∧ Accurate(成都地区地震灾害情况) ∧ Objective(成都地区地震灾害情况))) ∧ AddressConcerns(成都市抗震救灾指挥部))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“汶川县” — 表示汶川县的灾情\",\n            \"Authority=“国家应急管理部” — 表示由国家应急管理部启动应急响应\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (Disaster(汶川县) ∧ DisasterReliefNeeds(汶川县) → (RescueWorkEnded(汶川县) ∧ EvacuationAndSettlementCompleted(汶川县) ∧ SecondaryDisasterConsequencesEliminated(汶川县) ∧ BasicRepairsCompleted(汶川县) ∧ OrderRestored(汶川县) → DecideToTerminateEmergencyResponse(国家应急管理部)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“玉树州” — 表示玉树州的灾情\",\n            \"Authority=“青海省应急管理厅” — 表示由青海省应急管理厅启动应急响应\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (Disaster(玉树州) ∧ DisasterReliefNeeds(玉树州) → (RescueWorkEnded(玉树州) ∧ EvacuationAndSettlementCompleted(玉树州) ∧ SecondaryDisasterConsequencesEliminated(玉树州) ∧ BasicRepairsCompleted(玉树州) ∧ OrderRestored(玉树州) → DecideToTerminateEmergencyResponse(青海省应急管理厅)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“雅安市” — 表示雅安市的灾情\",\n            \"Authority=“四川省应急管理厅” — 表示由四川省应急管理厅启动应急响应\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (Disaster(雅安市) ∧ DisasterReliefNeeds(雅安市) → (RescueWorkEnded(雅安市) ∧ EvacuationAndSettlementCompleted(雅安市) ∧ SecondaryDisasterConsequencesEliminated(雅安市) ∧ BasicRepairsCompleted(雅安市) ∧ OrderRestored(雅安市) → DecideToTerminateEmergencyResponse(四川省应急管理厅)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“鲁甸县” — 表示鲁甸县的灾情\",\n            \"Authority=“云南省应急管理厅” — 表示由云南省应急管理厅启动应急响应\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (Disaster(鲁甸县) ∧ DisasterReliefNeeds(鲁甸县) → (RescueWorkEnded(鲁甸县) ∧ EvacuationAndSettlementCompleted(鲁甸县) ∧ SecondaryDisasterConsequencesEliminated(鲁甸县) ∧ BasicRepairsCompleted(鲁甸县) ∧ OrderRestored(鲁甸县) → DecideToTerminateEmergencyResponse(云南省应急管理厅)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“省级政府” — 表示省级政府组织抢险救灾队伍\",\n            \"Activity=“人员搜救” — 表示进行人员搜救活动\",\n            \"Activity=“医疗救护” — 表示进行医疗救护活动\",\n            \"Activity=“受灾群众安置” — 表示进行受灾群众安置活动\",\n            \"Activity=“抢修基础设施” — 表示进行基础设施抢修活动\",\n            \"Activity=“保护重要目标” — 表示进行保护重要目标活动\"\n        ],\n        \"instance_logicexpression\": [\n            \"省级(省级政府) → (OrganizeRescueTeams(省级政府, 人员搜救) ∧ OrganizeRescueTeams(省级政府, 医疗救护) ∧ OrganizeRescueTeams(省级政府, 受灾群众安置) ∧ OrganizeRescueTeams(省级政府, 抢修基础设施) ∧ OrganizeRescueTeams(省级政府, 保护重要目标))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“国务院” — 表示国务院启动I级响应\",\n            \"b=“本行政区域” — 表示本行政区域内的统一部署\"\n        ],\n        \"instance_logicexpression\": [\n            \"国务院(国务院) ∧ ActivateLevelIResponse(国务院) → (∀b (本行政区域(b) → UnifiedDeployment(国务院)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“市县级政府” — 表示市县级政府发动基层干部群众\",\n            \"g=“市县级政府” — 表示市县级政府开放应急避难场所\",\n            \"g=“市县级政府” — 表示市县级政府防范次生灾害\",\n            \"g=“市县级政府” — 表示市县级政府维护社会治安\",\n            \"g=“市县级政府” — 表示市县级政府提出应急措施建议\"\n        ],\n        \"instance_logicexpression\": [\n            \"市县级(市县级政府) → (MobilizeLocal(市县级政府) ∧ OpenShelters(市县级政府) ∧ PreventSecondaryDisasters(市县级政府) ∧ MaintainPublicOrder(市县级政府) ∧ ProposeEmergencyMeasures(市县级政府))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“四川” — 表示地震灾害发生在四川地区\",\n            \"Organization=“中国地震局”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EarthquakeDisaster(四川) → Suggest(中国地震局, Ⅰ级响应(四川)))\",\n            \"∀e (EarthquakeDisaster(四川) ∧ Suggest(中国地震局, Ⅰ级响应(四川)) → DecideToActivate(Ⅰ级响应, 国务院)\",\n            \"∀e (DecideToActivate(Ⅰ级响应, 国务院) → Lead(国务院抗震救灾指挥机构, 抗震救灾(四川)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“云南” — 表示地震灾害发生在云南地区\",\n            \"Organization=“云南省人民政府”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EarthquakeDisaster(云南) → Suggest(云南省人民政府, Ⅰ级响应(云南)))\",\n            \"∀e (EarthquakeDisaster(云南) ∧ Suggest(云南省人民政府, Ⅰ级响应(云南)) → DecideToActivate(Ⅰ级响应, 国务院)\",\n            \"∀e (DecideToActivate(Ⅰ级响应, 国务院) → Lead(国务院抗震救灾指挥机构, 抗震救灾(云南)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“河北” — 表示地震灾害发生在河北地区\",\n            \"Organization=“河北省人民政府”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EarthquakeDisaster(河北) → Suggest(河北省人民政府, Ⅰ级响应(河北)))\",\n            \"∀e (EarthquakeDisaster(河北) ∧ Suggest(河北省人民政府, Ⅰ级响应(河北)) → DecideToActivate(Ⅰ级响应, 国务院)\",\n            \"∀e (DecideToActivate(Ⅰ级响应, 国务院) → Lead(国务院抗震救灾指挥机构, 抗震救灾(河北)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“陕西” — 表示地震灾害发生在陕西地区\",\n            \"Organization=“中国地震局”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EarthquakeDisaster(陕西) → Suggest(中国地震局, Ⅰ级响应(陕西)))\",\n            \"∀e (EarthquakeDisaster(陕西) ∧ Suggest(中国地震局, Ⅰ级响应(陕西)) → DecideToActivate(Ⅰ级响应, 国务院)\",\n            \"∀e (DecideToActivate(Ⅰ级响应, 国务院) → Lead(国务院抗震救灾指挥机构, 抗震救灾(陕西)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=“抢险救援” — 表示需要设立抢险救援工作组\",\n            \"t=“群众生活保障” — 表示需要设立群众生活保障工作组\",\n            \"t=“医疗救治和卫生防疫” — 表示需要设立医疗救治和卫生防疫工作组\",\n            \"t=“基础设施保障和生产恢复” — 表示需要设立基础设施保障和生产恢复工作组\",\n            \"t=“地震监测和次生灾害防范处置” — 表示需要设立地震监测和次生灾害防范处置工作组\",\n            \"t=“社会治安” — 表示需要设立社会治安工作组\",\n            \"t=“救灾捐赠与涉外事务” — 表示需要设立救灾捐赠与涉外事务工作组\",\n            \"t=“涉港澳台事务” — 表示需要设立涉港澳台事务工作组\",\n            \"t=“国外救援队伍协调事务” — 表示需要设立国外救援队伍协调事务工作组\",\n            \"t=“地震灾害调查及灾情损失评估” — 表示需要设立地震灾害调查及灾情损失评估工作组\",\n            \"t=“信息发布及宣传报道” — 表示需要设立信息发布及宣传报道工作组\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g ∀t (需要(“抢险救援”) → EstablishTaskForce(国务院抗震救灾指挥机构, “抢险救援”))\",\n            \"∀g ∀t (需要(“群众生活保障”) → EstablishTaskForce(国务院抗震救灾指挥机构, “群众生活保障”))\",\n            \"∀g ∀t (需要(“医疗救治和卫生防疫”) → EstablishTaskForce(国务院抗震救灾指挥机构, “医疗救治和卫生防疫”))\",\n            \"∀g ∀t (需要(“基础设施保障和生产恢复”) → EstablishTaskForce(国务院抗震救灾指挥机构, “基础设施保障和生产恢复”))\",\n            \"∀g ∀t (需要(“地震监测和次生灾害防范处置”) → EstablishTaskForce(国务院抗震救灾指挥机构, “地震监测和次生灾害防范处置”))\",\n            \"∀g ∀t (需要(“社会治安”) → EstablishTaskForce(国务院抗震救灾指挥机构, “社会治安”))\",\n            \"∀g ∀t (需要(“救灾捐赠与涉外事务”) → EstablishTaskForce(国务院抗震救灾指挥机构, “救灾捐赠与涉外事务”))\",\n            \"∀g ∀t (需要(“涉港澳台事务”) → EstablishTaskForce(国务院抗震救灾指挥机构, “涉港澳台事务”))\",\n            \"∀g ∀t (需要(“国外救援队伍协调事务”) → EstablishTaskForce(国务院抗震救灾指挥机构, “国外救援队伍协调事务”))\",\n            \"∀g ∀t (需要(“地震灾害调查及灾情损失评估”) → EstablishTaskForce(国务院抗震救灾指挥机构, “地震灾害调查及灾情损失评估”))\",\n            \"∀g ∀t (需要(“信息发布及宣传报道”) → EstablishTaskForce(国务院抗震救灾指挥机构, “信息发布及宣传报道”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Responsibility=“信息汇总” — 表示国务院办公厅履行信息汇总职责\",\n            \"Responsibility=“综合协调” — 表示国务院办公厅履行综合协调职责\"\n        ],\n        \"instance_logicexpression\": [\n            \"PerformDuty(国务院办公厅, 信息汇总)\",\n            \"PerformDuty(国务院办公厅, 综合协调)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"GovernmentOffice=“国务院办公厅” — 表示国务院办公厅发挥运转枢纽作用\"\n        ],\n        \"instance_logicexpression\": [\n            \"PlayCoordinationRole(国务院办公厅)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“汶川” — 表示地震灾区为汶川\",\n            \"g=“四川省政府” — 表示请求来自四川省政府\",\n            \"国务院=“国务院抗震救灾指挥机构” — 表示国务院抗震救灾指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (EarthquakeDisaster(汶川) → (EstablishOnsiteCommand(国务院, 汶川) → (UnderstandProgressAndNeeds(国务院, 汶川) ∧ UrgeImplementation(国务院, 工作部署))))\",\n            \"∀a ∀g (EarthquakeDisaster(汶川) ∧ RequestFromProvincialGovernment(四川省政府, 汶川) → AllocateResources(四川省政府, 应急物资和装备))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“玉树” — 表示地震灾区为玉树\",\n            \"国务院=“国务院抗震救灾指挥机构” — 表示国务院抗震救灾指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (EarthquakeDisaster(玉树) → CoordinateRescueTeams(国务院, 国家有关专业抢险救援队伍))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“雅安” — 表示地震灾区为雅安\",\n            \"公安、交通运输、铁路、民航=“公安、交通运输、铁路、民航等部门” — 表示协调部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (EarthquakeDisaster(雅安) → ProvideTransportationSupport(公安、交通运输、铁路、民航, 雅安))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“九寨沟” — 表示地震灾区为九寨沟\",\n            \"Patients=“灾区伤病群众” — 表示需要转移治疗的伤病群众\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (EarthquakeDisaster(九寨沟) → CoordinateTreatmentTransfer(国务院, 灾区伤病群众))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“鲁甸” — 表示地震灾区为鲁甸\",\n            \"Departments=“相关部门” — 表示协调的相关部门\",\n            \"Government=“地方人民政府” — 表示地方人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (EarthquakeDisaster(鲁甸) → SupportSecondaryDisasterManagement(相关部门, 地方人民政府))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“省级抗震救灾指挥部” — 表示省级抗震救灾指挥部\",\n            \"g=“省级人民政府” — 表示省级人民政府\",\n            \"f=“驻地解放军、武警部队” — 表示驻地解放军、武警部队\",\n            \"t=“专业抢险救灾队伍” — 表示专业抢险救灾队伍\",\n            \"w=“人员搜救、医疗救护、灾民安置、次生灾害防范和应急恢复” — 表示工作内容\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p ∀g ∀f ∀t ∀w (省级抗震救灾指挥部(p) ∧ 制订方案(g, Plan) → (FormulatePlan(p, Plan) ∧ CoordinateForces(p, f) ∧ OrganizeTeams(p, t) ∧ (CarryOutWork(t, Rescue) ∨ CarryOutWork(t, MedicalAid) ∨ CarryOutWork(t, Relocation) ∨ CarryOutWork(t, SecondaryDisasterPrevention) ∨ CarryOutWork(t, EmergencyRecovery)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“省级人民政府” — 表示省级人民政府\",\n            \"h=“国务院支持” — 表示需要国务院支持的事项\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g ∀h (省级人民政府(g) ∧ 需要国务院支持(h) → ProposeRecommendation(g, 国务院, h))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“市县级抗震救灾指挥部” — 表示市县级抗震救灾指挥部\",\n            \"a=“自救互救、抢险救灾” — 表示先期处置工作\",\n            \"p=“省级抗震救灾指挥部” — 表示省级抗震救灾指挥部\",\n            \"Support=“应急措施建议” — 表示需要支援的应急措施建议\",\n            \"Work=“本行政区域抗震救灾工作” — 表示本行政区域抗震救灾工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀a (市县级抗震救灾指挥部(c) → (QuickAction(c, SelfRescue) ∧ QuickAction(c, EmergencyRelief) ∧ ProposeRecommendation(c, p, Support) ∧ LeadImplementation(c, Work)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"SeismologicalBureau=“中国地震局” — 表示上报信息的主体为中国地震局\",\n            \"CommandCenter=“国务院抗震救灾指挥部” — 表示上报信息的对象为国务院抗震救灾指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"Report(“中国地震局”, “国务院抗震救灾指挥部”) ∧ Suggest(CommandCenter, Measures) ∧ Notify(CommandCenter, Departments)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"ProvincialGovernment=“四川省人民政府” — 表示请求的主体为四川省人民政府\",\n            \"CommandCenter=“国务院抗震救灾指挥部” — 表示请求的对象为国务院抗震救灾指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"Request(“四川省人民政府”, CommandCenter) ∨ Advise(Departments, CommandCenter) → (Dispatch(Teams, DisasterArea) ∧ Rescue(Teams, Survivors) ∧ TransferTreat(Teams, Injured) ∧ HealthPrevention(Teams) ∧ (∃PLA Coordinate(PLA, Teams)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Teams=“地震灾害紧急救援队” — 表示派遣的队伍为地震灾害紧急救援队\",\n            \"DisasterArea=“四川省灾区” — 表示派遣队伍的目的地为四川省灾区\"\n        ],\n        \"instance_logicexpression\": [\n            \"Dispatch(“地震灾害紧急救援队”, “四川省灾区”) → Transport(Supplies, “四川省灾区”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Teams=“医疗卫生救援队伍” — 表示派遣的队伍为医疗卫生救援队伍\",\n            \"DisasterArea=“四川省灾区” — 表示派遣队伍的目的地为四川省灾区\"\n        ],\n        \"instance_logicexpression\": [\n            \"Dispatch(“医疗卫生救援队伍”, “四川省灾区”) → Repair(Infrastructure)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"CommandCenter=“国务院抗震救灾指挥部” — 表示派出工作组的主体为国务院抗震救灾指挥部\",\n            \"WorkGroups=“地震监测和次生灾害防范工作组” — 表示派出的工作组为地震监测和次生灾害防范工作组\",\n            \"DisasterArea=“四川省灾区” — 表示工作组的目的地为四川省灾区\"\n        ],\n        \"instance_logicexpression\": [\n            \"Dispatch(Teams, DisasterArea) → SendTeams(“国务院抗震救灾指挥部”, “地震监测和次生灾害防范工作组”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"ProvincialGovernment=“江苏省人民政府” — 表示提供紧急支援的主体为江苏省人民政府\",\n            \"DisasterArea=“四川省灾区” — 表示紧急支援的目的地为四川省灾区\"\n        ],\n        \"instance_logicexpression\": [\n            \"Dispatch(Teams, DisasterArea) → UrgencySupport(“江苏省人民政府”, “四川省灾区”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“市抗震救灾指挥部” — 表示市（地）级抗震救灾指挥部\",\n            \"t=“人员搜救” — 表示救援任务为人员搜救\",\n            \"r=“专业抢险救灾队伍” — 表示救援队伍为专业抢险救灾队伍\"\n        ],\n        \"instance_logicexpression\": [\n            \"CityCountyCommandCenter(“市抗震救灾指挥部”) ∧ RescueTask(“人员搜救”) → OrganizeRescue(“市抗震救灾指挥部”, “专业抢险救灾队伍”, “人员搜救”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“省级抗震救灾指挥部” — 表示省级抗震救灾指挥部\",\n            \"t=“医疗救护” — 表示救援任务为医疗救护\",\n            \"r=“专业技术力量和救援队伍” — 表示专业技术力量和救援队伍\"\n        ],\n        \"instance_logicexpression\": [\n            \"ProvincialCommandCenter(“省级抗震救灾指挥部”) ∧ (ActualNeed(“省级抗震救灾指挥部”, “医疗救护”) ∨ RequestFromLowerCommandCenter(“省级抗震救灾指挥部”, “医疗救护”)) → (CoordinateDispatch(“省级抗震救灾指挥部”, TechnicalForce, “专业技术力量和救援队伍”) ∧ TransportSupplies(“省级抗震救灾指挥部”, Supplies) ∧ OrganizeRescue(“省级抗震救灾指挥部”, “专业技术力量和救援队伍”, “医疗救护”) ∧ RequestSupport(“省级抗震救灾指挥部”, Department))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“中国地震局” — 表示国家有关部门为中国地震局\",\n            \"l=“灾区” — 表示地方为灾区\",\n            \"t=“地震监测” — 表示协助工作为地震监测\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterDemand(“灾区”, “地震监测”) → AssistWork(“中国地震局”, “灾区”, “地震监测”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“公安消防部队” — 表示救援队伍为公安消防部队\",\n            \"a=“灾区” — 表示灾区需要紧急救援\"\n        ],\n        \"instance_logicexpression\": [\n            \"Necessary(“灾区”) → DispatchRescue(“公安消防部队”, “灾区”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“县级抗震救灾指挥部” — 表示县级抗震救灾指挥部\",\n            \"t=“灾民安置” — 表示救援任务为灾民安置\",\n            \"r=“救援队伍” — 表示救援队伍为救援队伍\"\n        ],\n        \"instance_logicexpression\": [\n            \"CityCountyCommandCenter(“县级抗震救灾指挥部”) ∧ RescueTask(“灾民安置”) → OrganizeRescue(“县级抗震救灾指挥部”, “救援队伍”, “灾民安置”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“省级抗震救灾指挥部” — 表示省级抗震救灾指挥部\",\n            \"t=“次生灾害防范” — 表示救援任务为次生灾害防范\",\n            \"r=“专业技术力量和救援队伍” — 表示专业技术力量和救援队伍\"\n        ],\n        \"instance_logicexpression\": [\n            \"ProvincialCommandCenter(“省级抗震救灾指挥部”) ∧ (ActualNeed(“省级抗震救灾指挥部”, “次生灾害防范”) ∨ RequestFromLowerCommandCenter(“省级抗震救灾指挥部”, “次生灾害防范”)) → (CoordinateDispatch(“省级抗震救灾指挥部”, TechnicalForce, “专业技术力量和救援队伍”) ∧ TransportSupplies(“省级抗震救灾指挥部”, Supplies) ∧ OrganizeRescue(“省级抗震救灾指挥部”, “专业技术力量和救援队伍”, “次生灾害防范”) ∧ RequestSupport(“省级抗震救灾指挥部”, Department))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“汶川” — 表示汶川发生了特别重大地震灾害\",\n            \"Organization=“国务院” — 表示国务院\",\n            \"Plan=“灾后恢复重建规划” — 表示灾后恢复重建规划\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EarthquakeDisaster(特别重大, 汶川) → (Deployment(国务院, 编制灾后恢复重建规划) ∧ FormulatePlan(国务院有关部门, 灾后恢复重建规划) ∧ FormulatePlan(灾区省级人民政府, 灾后恢复重建规划)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“唐山” — 表示唐山发生了重大地震灾害\",\n            \"Organization=“河北省人民政府” — 表示河北省人民政府\",\n            \"Plan=“地震灾后恢复重建规划” — 表示地震灾后恢复重建规划\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EarthquakeDisaster(重大, 唐山) ∨ EarthquakeDisaster(较大, 唐山) ∨ EarthquakeDisaster(一般, 唐山) → FormulatePlan(河北省人民政府, 地震灾后恢复重建规划))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“雅安” — 表示雅安发生了较大地震灾害\",\n            \"Organization=“四川省人民政府” — 表示四川省人民政府\",\n            \"Plan=“地震灾后恢复重建规划” — 表示地震灾后恢复重建规划\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EarthquakeDisaster(重大, 雅安) ∨ EarthquakeDisaster(较大, 雅安) ∨ EarthquakeDisaster(一般, 雅安) → FormulatePlan(四川省人民政府, 地震灾后恢复重建规划))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“玉树” — 表示玉树发生了一般地震灾害\",\n            \"Organization=“青海省人民政府” — 表示青海省人民政府\",\n            \"Plan=“地震灾后恢复重建规划” — 表示地震灾后恢复重建规划\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EarthquakeDisaster(重大, 玉树) ∨ EarthquakeDisaster(较大, 玉树) ∨ EarthquakeDisaster(一般, 玉树) → FormulatePlan(青海省人民政府, 地震灾后恢复重建规划))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“市级政府” — 表示市级人民政府\",\n            \"p=“灾后重建规划A” — 表示灾后恢复重建规划A\",\n            \"Level=“中等发展水平” — 表示当地的经济社会发展水平为中等\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀p (DisasterRecoveryPlan(p) ∧ EconomicSocialLevel(g) → Implement(g, p))\",\n            \"∀g∀p (DisasterRecoveryPlan(p) → SupportAndGuide(HigherGovernment(g), p))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“省级政府” — 表示省级人民政府\",\n            \"p=“灾后重建规划B” — 表示灾后恢复重建规划B\",\n            \"Level=“高等发展水平” — 表示当地的经济社会发展水平为高等\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀p (DisasterRecoveryPlan(p) ∧ EconomicSocialLevel(g) → Implement(g, p))\",\n            \"∀g∀p (DisasterRecoveryPlan(p) → SupportAndGuide(HigherGovernment(g), p))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“县级政府” — 表示县级人民政府\",\n            \"p=“灾后重建规划C” — 表示灾后恢复重建规划C\",\n            \"Level=“初等发展水平” — 表示当地的经济社会发展水平为初等\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀p (DisasterRecoveryPlan(p) ∧ EconomicSocialLevel(g) → Implement(g, p))\",\n            \"∀g∀p (DisasterRecoveryPlan(p) → SupportAndGuide(HigherGovernment(g), p))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“乡镇级政府” — 表示乡镇级人民政府\",\n            \"p=“灾后重建规划D” — 表示灾后恢复重建规划D\",\n            \"Level=“发展中水平” — 表示当地的经济社会发展水平为发展中\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀p (DisasterRecoveryPlan(p) ∧ EconomicSocialLevel(g) → Implement(g, p))\",\n            \"∀g∀p (DisasterRecoveryPlan(p) → SupportAndGuide(HigherGovernment(g), p))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“国家地震局” — 表示地震工作主管部门为国家地震局\",\n            \"t=“自动监测技术” — 表示综合利用的技术为自动监测技术\"\n        ],\n        \"instance_logicexpression\": [\n            \"地震工作主管部门(国家地震局) ∧ 技术(自动监测技术) → UseTechnology(国家地震局, 自动监测技术)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“省级地震局” — 表示地震工作主管部门为省级地震局\",\n            \"s=“省级地震应急指挥技术系统” — 表示建立健全的系统为省级地震应急指挥技术系统\"\n        ],\n        \"instance_logicexpression\": [\n            \"地震工作主管部门(省级地震局) → EstablishSystem(省级地震局, 省级地震应急指挥技术系统)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“国家地震应急指挥平台” — 表示形成的指挥平台为国家地震应急指挥平台\"\n        ],\n        \"instance_logicexpression\": [\n            \"地震应急指挥技术系统(国家地震应急指挥技术系统) → FormPlatform(国家地震应急指挥平台)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“省级地震应急指挥平台” — 表示形成的指挥平台为省级地震应急指挥平台\",\n            \"si=“地震发生” — 表示震情灾情为地震发生\"\n        ],\n        \"instance_logicexpression\": [\n            \"FormPlatform(省级地震应急指挥平台) ∧ 震情灾情(地震发生) → QuickResponse(省级地震应急指挥平台, 地震发生)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“国家地震应急指挥平台” — 表示指挥平台为国家地震应急指挥平台\",\n            \"d=“疏散决策” — 表示应急指挥决策为疏散决策\"\n        ],\n        \"instance_logicexpression\": [\n            \"FormPlatform(国家地震应急指挥平台) → EmergencyCommand(国家地震应急指挥平台, 疏散决策)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“省级地震应急指挥平台” — 表示指挥平台为省级地震应急指挥平台\",\n            \"da=“建筑损毁” — 表示灾害损失为建筑损毁\"\n        ],\n        \"instance_logicexpression\": [\n            \"FormPlatform(省级地震应急指挥平台) ∧ 灾害损失(建筑损毁) → QuickAssessment(省级地震应急指挥平台, 建筑损毁)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“国家地震应急指挥平台” — 表示指挥平台为国家地震应急指挥平台\",\n            \"tr=“地震趋势稳定” — 表示地震趋势为稳定\"\n        ],\n        \"instance_logicexpression\": [\n            \"FormPlatform(国家地震应急指挥平台) ∧ 地震趋势(地震趋势稳定) → QuickFeedback(国家地震应急指挥平台, 地震趋势稳定)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“某省人民政府” — 表示人民政府为某省人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"人民政府(某省人民政府) → ReasonableDispatch(某省人民政府) ∧ ScientificDecision(某省人民政府) ∧ AccurateCommand(某省人民政府)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“国务院” — 表示国务院有关部门\",\n            \"s=“应急物资储备网络” — 表示应急物资储备网络体系\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀s (Department(“国务院”) ∧ System(“应急物资储备网络”) → Establish(“国务院”, “应急物资储备网络”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“县级以上地方人民政府” — 表示县级以上地方人民政府及其有关部门\",\n            \"i=“地震灾害” — 表示地震灾害\",\n            \"m=“生活救助物资” — 表示生活救助物资\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀i ∀m (Disaster(“地震灾害”) ∧ Material(“生活救助物资”) → EnsureSupply(“县级以上地方人民政府”, “生活救助物资”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“某地方政府” — 表示某地方政府\",\n            \"e=“某生产企业” — 表示某生产企业\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g ∀e (Government(“某地方政府”) ∧ Enterprise(“某生产企业”) → SignAgreement(“某地方政府”, “某生产企业”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“县级以上人民政府” — 表示县级以上人民政府\",\n            \"p=“抗震救灾工作” — 表示抗震救灾工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g ∀p (Government(“县级以上人民政府”) ∧ Purpose(“抗震救灾工作”) → EnsureFunds(“县级以上人民政府”, “抗震救灾工作”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“国家级灾害应急响应” — 表示达到国家级灾害应急响应\",\n            \"r=“某受地震影响地区” — 表示受地震灾害影响较大的地区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀r (Region(“某受地震影响地区”) ∧ Condition(“国家级灾害应急响应”) → ProvideSupport(CentralFinance, “某受地震影响地区”, “国家级灾害应急响应”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“某市市政府” — 表示地方政府为某市市政府\",\n            \"f=“公园” — 表示公共设施为公园\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀f (GovernmentLevel(某市市政府, 县级以上) ∧ FacilityType(公园, 公共设施) → (EstablishShelter(某市市政府, 公园) ∧ ArrangeEquipment(某市市政府, 交通) ∧ ArrangeEquipment(某市市政府, 通信) ∧ ArrangeEquipment(某市市政府, 供水) ∧ ArrangeEquipment(某市市政府, 供电) ∧ ArrangeEquipment(某市市政府, 排污) ∧ ArrangeEquipment(某市市政府, 环保) ∧ ArrangeEquipment(某市市政府, 物资储备)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“某大型商场” — 表示人员密集场所为某大型商场\",\n            \"r=“商场内指定的疏散通道” — 表示地震应急疏散通道\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀r (DenseAreaType(某大型商场, 人员密集场所) → (SetEvacuationRoute(某大型商场, 商场内指定的疏散通道) ∧ EquipSafetyFacility(某大型商场, 救生避险设施) ∧ Ensure畅通(商场内指定的疏散通道)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“某市应急管理局” — 表示有关单位为某市应急管理局\",\n            \"f=“报警装置” — 表示报警装置\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀f (OrganizationType(某市应急管理局, 有关单位) → (InspectAndMaintain(某市应急管理局, 报警装置) ∧ InspectAndMaintain(某市应急管理局, 应急救援设施)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“某县县政府” — 表示地方政府为某县县政府\",\n            \"f=“学校” — 表示公共设施为学校\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀f (GovernmentLevel(某县县政府, 县级以上) ∧ FacilityType(学校, 公共设施) → (EstablishShelter(某县县政府, 学校) ∧ ArrangeEquipment(某县县政府, 交通) ∧ ArrangeEquipment(某县县政府, 通信) ∧ ArrangeEquipment(某县县政府, 供水) ∧ ArrangeEquipment(某县县政府, 供电) ∧ ArrangeEquipment(某县县政府, 排污) ∧ ArrangeEquipment(某县县政府, 环保) ∧ ArrangeEquipment(某县县政府, 物资储备)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“某医院” — 表示人员密集场所为某医院\",\n            \"r=“医院紧急疏散通道” — 表示地震应急疏散通道\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀r (DenseAreaType(某医院, 人员密集场所) → (SetEvacuationRoute(某医院, 医院紧急疏散通道) ∧ EquipSafetyFacility(某医院, 救生避险设施) ∧ Ensure畅通(医院紧急疏散通道)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“工业和信息化部门” — 表示负责建立应急通信工作体系的部门\",\n            \"Scenario=“地震应急救援” — 表示特定情况下的地震应急救援\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (EstablishEmergencyCommunicationSystem(“工业和信息化部门”) → EnsureCommunication(“地震应急救援”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“基础通信网络” — 表示基础设施遭到严重损毁的通信网络\",\n            \"DamagedInfrastructure(“基础通信网络”) — 表示基础通信网络遭到严重损毁\",\n            \"HardToRepair(“基础通信网络”) — 表示基础通信网络短时间难以修复\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (DamagedInfrastructure(“基础通信网络”) ∧ HardToRepair(“基础通信网络”) → ActivateWirelessSystem(“地震应急救援”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“广电部门” — 表示负责完善广播电视传输覆盖网的部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (ImproveBroadcastNetwork(“广电部门”) → EstablishEmergencyBroadcastSystem(“广电部门”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“发展改革和电力监管部门” — 表示负责加强电力基础设施建设的部门\",\n            \"EarthquakeSite=“地震现场” — 表示地震现场应急装备的临时供电需求\",\n            \"DisasterArea=“灾区” — 表示灾区电力供应\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (StrengthenPowerInfrastructure(“发展改革和电力监管部门”) → EnsureTemporaryPowerSupply(“地震现场”) ∧ EnsurePowerSupply(“灾区”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“公安、交通运输、铁道、民航主管部门” — 表示负责建立健全紧急运输保障体系的部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (EstablishEmergencyTransportSystem(“公安、交通运输、铁道、民航主管部门”) → TakeTrafficControlMeasures(“公安、交通运输、铁道、民航主管部门”) ∧ EstablishGreenChannel(“公安、交通运输、铁道、民航主管部门”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“香港” — 表示香港发生了地震灾害\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (EarthquakeDisaster(香港) → (ReportSeismic(ChinaSeismicBureau, StateCouncil) ∧ Notify(ChinaSeismicBureau, StateCouncilHongKongMacauOffice) ∧ AnalyzeTrend(ChinaSeismicBureau)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“澳门” — 表示澳门发生了地震灾害\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (EarthquakeDisaster(澳门) → (ReportSeismic(ChinaSeismicBureau, StateCouncil) ∧ Notify(ChinaSeismicBureau, StateCouncilHongKongMacauOffice) ∧ AnalyzeTrend(ChinaSeismicBureau)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“香港” — 表示香港发生了地震灾害\",\n            \"Request(“香港”) — 表示香港特别行政区发出了请求\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (EarthquakeDisaster(香港) ∧ Request(香港) → (DispatchRescue(StateCouncil, 香港, EarthquakeRescue) ∧ DispatchRescue(StateCouncil, 香港, MedicalRescue) ∧ OrganizeSupport(StateCouncil, Department, 香港)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“澳门” — 表示澳门发生了地震灾害\",\n            \"Request(“澳门”) — 表示澳门特别行政区发出了请求\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (EarthquakeDisaster(澳门) ∧ Request(澳门) → (DispatchRescue(StateCouncil, 澳门, EarthquakeRescue) ∧ DispatchRescue(StateCouncil, 澳门, MedicalRescue) ∧ OrganizeSupport(StateCouncil, Department, 澳门)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"地震灾害：EarthquakeDisaster(Taiwan) — 表示台湾发生了地震灾害。\"\n        ],\n        \"instance_logicexpression\": [\n            \"EarthquakeDisaster(Taiwan) → UnderstandSituation(国务院台办, 台湾)\",\n            \"EarthquakeDisaster(Taiwan) → ExpressCondolences(祖国大陆, 台湾)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"需求：需求(台湾, 紧急救援队伍) — 台湾需要紧急救援队伍。\",\n            \"救援队伍：救援队伍(医疗队, 搜救队) — 指紧急救援队伍包括医疗队和搜救队。\"\n        ],\n        \"instance_logicexpression\": [\n            \"需求(台湾, 紧急救援队伍) → DispatchRescueTeams(国务院, 医疗队 ∪ 搜救队) ∧ ProvideReliefAid(国务院, 救灾款物)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"援助：援助(日本, 台湾) — 日本对台湾提供援助。\"\n        ],\n        \"instance_logicexpression\": [\n            \"援助(日本, 台湾) → FacilitateHumanitarianAid(国务院, 日本)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"需求：需求(台湾, 医疗物资) — 台湾需要医疗物资。\"\n        ],\n        \"instance_logicexpression\": [\n            \"需求(台湾, 医疗物资) → DispatchRescueTeams(国务院, 医疗队) ∧ ProvideReliefAid(国务院, 医疗物资)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"援助：援助(美国, 台湾) — 美国对台湾提供援助。\"\n        ],\n        \"instance_logicexpression\": [\n            \"援助(美国, 台湾) → FacilitateHumanitarianAid(国务院, 美国)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"E=“地震事件001” — 表示海域地震事件地震事件001发生。\",\n            \"D=“地方人民政府地震工作主管部门” — 表示地方人民政府地震工作主管部门。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (MarineEarthquake(地震事件001) → ∀D (EarthquakeDepartment(地方人民政府地震工作主管部门) → Report(地方人民政府地震工作主管部门, Government) ∧ Report(地方人民政府地震工作主管部门, RescueAgency) ∧ Report(地方人民政府地震工作主管部门, OceanAuthority) ∧ Report(地方人民政府地震工作主管部门, MaritimeAuthority)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“地震事件001” — 表示海域地震事件地震事件001发生。\",\n            \"Agency=“国家海洋局” — 表示国家海洋局。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (MarineEarthquake(地震事件001) → AnalyzePredict(国家海洋局, 地震事件001) → IssueWarning(国家海洋局, TsunamiWarning))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“地震事件001” — 表示海域地震事件地震事件001发生。\",\n            \"Department=“交通运输部” — 表示交通运输部。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (MarineEarthquake(地震事件001) ∧ (ShipEmergency(地震事件001) ∨ OilSpill(地震事件001)) → ImplementRescue(交通运输部, 地震事件001) ∧ ImplementRescue(NationalOceanicAgency, 地震事件001))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“地震事件001” — 表示海域地震事件地震事件001发生。\",\n            \"Department=“工业和信息化部” — 表示工业和信息化部。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (MarineEarthquake(地震事件001) ∧ UnderseaCableInterruption(地震事件001) → ImplementRepair(工业和信息化部, 地震事件001))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“地震事件001” — 表示海域地震事件地震事件001发生。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (MarineEarthquake(地震事件001) ∧ EarthquakeDisasterOnLand(地震事件001) → ReferEmergencyResponse(地震事件001))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"v=“富士山” — 表示富士山火山喷发\",\n            \"组织：中国地震局\",\n            \"政府：国务院\",\n            \"省（区、市）人民政府：东京都政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"Eruption(富士山) ∨ PreEruptionPhenomenon(富士山) → (Report(中国地震局, 国务院) ∧ Report(东京都政府, 国务院))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"v=“黄石” — 表示黄石火山出现临喷异常现象\",\n            \"队伍：火山现场应急工作队伍\"\n        ],\n        \"instance_logicexpression\": [\n            \"Eruption(黄石) ∨ PreEruptionPhenomenon(黄石) → (DispatchEmergencyTeam(中国地震局, 火山现场应急工作队伍) ∧ RealTimeMonitoring(火山现场应急工作队伍, 黄石) ∧ DetermineDisasterType(火山现场应急工作队伍, Type) ∧ DemarcateQuarantineZone(火山现场应急工作队伍))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"v=“维苏威” — 表示维苏威火山喷发\",\n            \"队伍：意大利应急队伍\",\n            \"政府：那不勒斯政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"Eruption(维苏威) ∨ PreEruptionPhenomenon(维苏威) → (SuggestEvacuation(意大利应急队伍, 那不勒斯政府) → OrganizeEvacuation(那不勒斯政府))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"任务：火山灾害应急工作\",\n            \"组织：国务院有关部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t (SuggestEvacuation(Team, 灾区人民政府) → (StudyAndDeploy(国务院, 火山灾害应急工作) ∧ ProvideSupport(国务院有关部门, 火山灾害应急工作)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"政府：夏威夷州政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"OrganizePreventionAndRescue(夏威夷州政府) → (OrganizeEvacuation(夏威夷州政府) ∨ ¬Eruption(v) ∧ ¬PreEruptionPhenomenon(v))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Institution=“国务院” — 表示国务院设立防汛抗旱指挥机构\",\n            \"Level=“国家” — 表示该机构是国家级别的\",\n            \"Area=“国家” — 表示国务院负责全国防汛抗旱突发事件应对工作\",\n            \"Task=“防汛抗旱突发事件应对” — 表示防汛抗旱突发事件应对工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"Establish(国务院, 国家) ∧ Responsible(国务院, 国家, FloodDroughtResponse)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Institution=“某省人民政府” — 表示某省人民政府设立防汛抗旱指挥机构\",\n            \"Level=“地方” — 表示该机构是地方级别的\",\n            \"Area=“某省” — 表示某省人民政府负责本省防汛抗旱突发事件应对工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"县级以上(某省) → (Establish(某省人民政府, 地方) ∧ Responsible(某省人民政府, 某省, FloodDroughtResponse))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Institution=“某市防汛抗旱指挥机构” — 表示某市设立防汛抗旱指挥机构\",\n            \"Level=“地方” — 表示该机构是地方级别的\",\n            \"Area=“某市” — 表示某市防汛抗旱指挥机构负责本市防汛抗旱突发事件应对工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"县级以上(某市) → (Establish(某市防汛抗旱指挥机构, 地方) ∧ Responsible(某市防汛抗旱指挥机构, 某市, FloodDroughtResponse))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Institution=“某流域防汛抗旱指挥机构” — 表示某流域设立防汛抗旱指挥机构\",\n            \"Level=“流域” — 表示该机构是流域级别的\",\n            \"Area=“某流域” — 表示某流域防汛抗旱指挥机构负责本流域防汛抗旱突发事件应对工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"流域(某流域) → (Establish(某流域防汛抗旱指挥机构, 流域) ∧ Responsible(某流域防汛抗旱指挥机构, 某流域, FloodDroughtResponse))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Institution=“某公司防汛抗旱指挥机构” — 表示某公司设立防汛抗旱指挥机构\",\n            \"Level=“单位” — 表示该机构是单位级别的\",\n            \"Area=“某公司” — 表示某公司防汛抗旱指挥机构负责本公司防汛抗旱突发事件应对工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"单位(某公司) → (需要(某公司) → (Establish(某公司防汛抗旱指挥机构, 单位) ∧ Responsible(某公司防汛抗旱指挥机构, 某公司, FloodDroughtResponse)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Organization=“国家防总” — 表示国家防汛抗旱总指挥部\",\n            \"Task=“领导全国防汛抗旱工作” — 表示国家防总负责领导全国防汛抗旱工作\",\n            \"Activity=“国家防汛抗旱工作” — 表示国家防总组织国家防汛抗旱工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"Responsible(国家防总, 领导全国防汛抗旱工作) ∧ Organize(国家防总, 国家防汛抗旱工作)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“国家防总” — 表示国家防汛抗旱总指挥部\",\n            \"Policy=“国家防汛抗旱政策” — 表示国家防总拟订国家防汛抗旱政策\",\n            \"Policy=“国家防汛抗旱法规” — 表示国家防总拟订国家防汛抗旱法规\",\n            \"Policy=“国家防汛抗旱制度” — 表示国家防总拟订国家防汛抗旱制度\"\n        ],\n        \"instance_logicexpression\": [\n            \"Draft(国家防总, 国家防汛抗旱政策) ∧ Draft(国家防总, 国家防汛抗旱法规) ∧ Draft(国家防总, 国家防汛抗旱制度)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“国家防总” — 表示国家防汛抗旱总指挥部\",\n            \"Plan=“防御洪水方案” — 表示国家防总制订防御洪水方案\",\n            \"Plan=“调水方案” — 表示国家防总制订调水方案\"\n        ],\n        \"instance_logicexpression\": [\n            \"Formulate(国家防总, 防御洪水方案) ∧ Formulate(国家防总, 调水方案)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“国家防总” — 表示国家防汛抗旱总指挥部\",\n            \"Situation=“汛情” — 表示国家防总掌握汛情\",\n            \"Situation=“旱情” — 表示国家防总掌握旱情\",\n            \"Situation=“灾情” — 表示国家防总掌握灾情\"\n        ],\n        \"instance_logicexpression\": [\n            \"Monitor(国家防总, 汛情) ∧ Monitor(国家防总, 旱情) ∧ Monitor(国家防总, 灾情)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“国家防总” — 表示国家防汛抗旱总指挥部\",\n            \"Measure=“抗洪抢险措施” — 表示国家防总实施抗洪抢险措施\",\n            \"Measure=“抗旱减灾措施” — 表示国家防总实施抗旱减灾措施\"\n        ],\n        \"instance_logicexpression\": [\n            \"Implement(国家防总, 抗洪抢险措施) ∧ Implement(国家防总, 抗旱减灾措施)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“国家防总” — 表示国家防汛抗旱总指挥部\",\n            \"Resource=“水利设施水量” — 表示国家防总调控水利设施水量\",\n            \"Resource=“水电设施水量” — 表示国家防总调控水电设施水量\"\n        ],\n        \"instance_logicexpression\": [\n            \"Regulate(国家防总, 水利设施水量) ∧ Regulate(国家防总, 水电设施水量)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“国家防总” — 表示国家防汛抗旱总指挥部\",\n            \"Activity=“协调工作” — 表示国家防总协调协调工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"Coordinate(国家防总, 协调工作)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“国家防总” — 表示国家防汛抗旱总指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterResponse(国家防总)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“北京市” — 表示北京市作为县级以上地方人民政府\",\n            \"c=“北京市防汛抗旱指挥部” — 表示北京市设立的防汛抗旱指挥部\",\n            \"e=“北京市政府、北京市水务局、北京市消防局、北京市人民武装部” — 表示指挥部的组成单位\",\n            \"d=“北京市水务局” — 表示水行政主管部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"GovernmentLevel(北京市, CountyOrAbove) ∧ FloodDroughtTask(北京市) → EstablishCommand(北京市)\",\n            \"EstablishCommand(北京市防汛抗旱指挥部) ∧ GovernmentLevel(北京市, CountyOrAbove) → (Lead(北京市防汛抗旱指挥部, SuperiorCommand) ∧ Lead(北京市防汛抗旱指挥部, 北京市) ∧ OrganizeCommand(北京市防汛抗旱指挥部, Area(北京市)))\",\n            \"EstablishCommand(北京市防汛抗旱指挥部) → Compose(北京市防汛抗旱指挥部, 北京市政府、北京市水务局、北京市消防局、北京市人民武装部)\",\n            \"EstablishCommand(北京市防汛抗旱指挥部) → Office(北京市防汛抗旱指挥部, 北京市水务局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“上海市” — 表示上海市作为县级以上地方人民政府\",\n            \"c=“上海市防汛抗旱指挥部” — 表示上海市设立的防汛抗旱指挥部\",\n            \"e=“上海市政府、上海市水务局、上海市消防局、上海市人民武装部” — 表示指挥部的组成单位\",\n            \"d=“上海市水务局” — 表示水行政主管部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"GovernmentLevel(上海市, CountyOrAbove) ∧ FloodDroughtTask(上海市) → EstablishCommand(上海市)\",\n            \"EstablishCommand(上海市防汛抗旱指挥部) ∧ GovernmentLevel(上海市, CountyOrAbove) → (Lead(上海市防汛抗旱指挥部, SuperiorCommand) ∧ Lead(上海市防汛抗旱指挥部, 上海市) ∧ OrganizeCommand(上海市防汛抗旱指挥部, Area(上海市)))\",\n            \"EstablishCommand(上海市防汛抗旱指挥部) → Compose(上海市防汛抗旱指挥部, 上海市政府、上海市水务局、上海市消防局、上海市人民武装部)\",\n            \"EstablishCommand(上海市防汛抗旱指挥部) → Office(上海市防汛抗旱指挥部, 上海市水务局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“广州市” — 表示广州市作为县级以上地方人民政府\",\n            \"c=“广州市防汛抗旱指挥部” — 表示广州市设立的防汛抗旱指挥部\",\n            \"e=“广州市政府、广州市水务局、广州市消防局、广州市人民武装部” — 表示指挥部的组成单位\",\n            \"d=“广州市水务局” — 表示水行政主管部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"GovernmentLevel(广州市, CountyOrAbove) ∧ FloodDroughtTask(广州市) → EstablishCommand(广州市)\",\n            \"EstablishCommand(广州市防汛抗旱指挥部) ∧ GovernmentLevel(广州市, CountyOrAbove) → (Lead(广州市防汛抗旱指挥部, SuperiorCommand) ∧ Lead(广州市防汛抗旱指挥部, 广州市) ∧ OrganizeCommand(广州市防汛抗旱指挥部, Area(广州市)))\",\n            \"EstablishCommand(广州市防汛抗旱指挥部) → Compose(广州市防汛抗旱指挥部, 广州市政府、广州市水务局、广州市消防局、广州市人民武装部)\",\n            \"EstablishCommand(广州市防汛抗旱指挥部) → Office(广州市防汛抗旱指挥部, 广州市水务局)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“长江流域管理机构” — 表示长江流域管理机构在汛期成立防汛抗灾组织\",\n            \"Purpose=“防汛抗灾” — 表示成立组织的目的为防汛抗灾\",\n            \"Area=“长江流域” — 表示负责的区域为长江流域\",\n            \"Task=“防汛抗灾” — 表示负责的任务为防汛抗灾\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (FloodSeason(o) ∧ (流域管理机构(o) ∨ 水利工程管理单位(o) ∨ 施工单位(o) ∨ 水文部门(o)) → Establish(“长江流域管理机构”, 防汛抗灾) ∧ Responsible(“长江流域管理机构”, “长江流域”, 防汛抗灾))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“三峡大坝” — 表示三峡大坝是一个具有防洪任务的重大水利水电工程\",\n            \"Task=“防洪” — 表示任务为防洪\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (MajorHydroProject(p) ∨ MediumLargeEnterprise(p) → FloodControlTask(p) → (需要成立指挥部(p) → Establish(p, 防汛指挥部)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“洪水灾害” — 表示一个重大的洪水灾害突发事件\",\n            \"c=“临时防汛指挥部” — 表示为洪水灾害组建的临时指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EmergencyEvent(e) → ∃c (Form(c, e) ∧ EmergencyResponse(c)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“黄河水利工程管理单位” — 表示黄河水利工程管理单位在汛期成立防汛抗灾组织\",\n            \"Purpose=“防汛抗灾” — 表示成立组织的目的为防汛抗灾\",\n            \"Area=“黄河流域” — 表示负责的区域为黄河流域\",\n            \"Task=“防汛抗灾” — 表示负责的任务为防汛抗灾\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (FloodSeason(o) ∧ (流域管理机构(o) ∨ 水利工程管理单位(o) ∨ 施工单位(o) ∨ 水文部门(o)) → Establish(“黄河水利工程管理单位”, 防汛抗灾) ∧ Responsible(“黄河水利工程管理单位”, “黄河流域”, 防汛抗灾))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“某大型化工企业” — 表示某大型化工企业是一个具有防洪任务的大中型企业\",\n            \"Task=“防洪” — 表示任务为防洪\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (MajorHydroProject(p) ∨ MediumLargeEnterprise(p) → FloodControlTask(p) → (需要成立指挥部(p) → Establish(p, 防汛指挥部)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“台风灾害” — 表示一个重大的台风灾害突发事件\",\n            \"c=“临时抗台风指挥部” — 表示为台风灾害组建的临时指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EmergencyEvent(e) → ∃c (Form(c, e) ∧ EmergencyResponse(c)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"f=“3000立方米/秒” — 表示洪峰流量为3000立方米/秒\",\n            \"v=“5000万立方米” — 表示洪量为5000万立方米\",\n            \"Period=“7年” — 表示重现期为7年\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f∀v (Flood(3000立方米/秒, 5000万立方米) → (FloodPeakRecurrence(3000立方米/秒, 7年) ∧ FloodVolumeRecurrence(5000万立方米, 7年) ∧ (7 ≥ 5 ∧ 7 ≤ 10)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“2500立方米/秒” — 表示洪峰流量为2500立方米/秒\",\n            \"v=“4000万立方米” — 表示洪量为4000万立方米\",\n            \"Period=“6年” — 表示重现期为6年\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f∀v (Flood(2500立方米/秒, 4000万立方米) → (FloodPeakRecurrence(2500立方米/秒, 6年) ∧ FloodVolumeRecurrence(4000万立方米, 6年) ∧ (6 ≥ 5 ∧ 6 ≤ 10)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“4000立方米/秒” — 表示洪峰流量为4000立方米/秒\",\n            \"v=“6000万立方米” — 表示洪量为6000万立方米\",\n            \"Period=“9年” — 表示重现期为9年\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f∀v (Flood(4000立方米/秒, 6000万立方米) → (FloodPeakRecurrence(4000立方米/秒, 9年) ∧ FloodVolumeRecurrence(6000万立方米, 9年) ∧ (9 ≥ 5 ∧ 9 ≤ 10)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“3500立方米/秒” — 表示洪峰流量为3500立方米/秒\",\n            \"v=“5500万立方米” — 表示洪量为5500万立方米\",\n            \"Period=“8年” — 表示重现期为8年\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f∀v (Flood(3500立方米/秒, 5500万立方米) → (FloodPeakRecurrence(3500立方米/秒, 8年) ∧ FloodVolumeRecurrence(5500万立方米, 8年) ∧ (8 ≥ 5 ∧ 8 ≤ 10)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"f=“3000立方米/秒” — 表示洪峰流量为3000立方米/秒\",\n            \"v=“5000万立方米” — 表示洪量为5000万立方米\",\n            \"Period=“15年” — 表示重现期为15年\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f ∀v (较大洪水(3000立方米/秒, 5000万立方米) ↔ (FloodPeakRecurrence(3000立方米/秒, 15年) ∧ 10 ≤ 15 ≤ 20) ∨ (FloodVolumeRecurrence(5000万立方米, 15年) ∧ 10 ≤ 15 ≤ 20))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“2500立方米/秒” — 表示洪峰流量为2500立方米/秒\",\n            \"v=“4000万立方米” — 表示洪量为4000万立方米\",\n            \"Period=“10年” — 表示重现期为10年\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f ∀v (较大洪水(2500立方米/秒, 4000万立方米) ↔ (FloodPeakRecurrence(2500立方米/秒, 10年) ∧ 10 ≤ 10 ≤ 20) ∨ (FloodVolumeRecurrence(4000万立方米, 10年) ∧ 10 ≤ 10 ≤ 20))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“3500立方米/秒” — 表示洪峰流量为3500立方米/秒\",\n            \"v=“6000万立方米” — 表示洪量为6000万立方米\",\n            \"Period=“20年” — 表示重现期为20年\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f ∀v (较大洪水(3500立方米/秒, 6000万立方米) ↔ (FloodPeakRecurrence(3500立方米/秒, 20年) ∧ 10 ≤ 20 ≤ 20) ∨ (FloodVolumeRecurrence(6000万立方米, 20年) ∧ 10 ≤ 20 ≤ 20))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“2800立方米/秒” — 表示洪峰流量为2800立方米/秒\",\n            \"v=“4500万立方米” — 表示洪量为4500万立方米\",\n            \"Period=“18年” — 表示重现期为18年\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f ∀v (较大洪水(2800立方米/秒, 4500万立方米) ↔ (FloodPeakRecurrence(2800立方米/秒, 18年) ∧ 10 ≤ 18 ≤ 20) ∨ (FloodVolumeRecurrence(4500万立方米, 18年) ∧ 10 ≤ 18 ≤ 20))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"f=20年 — 表示洪峰流量的重现期为20年\",\n            \"v=50年 — 表示洪量的重现期为50年\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f∀v (GreatFlood(20, 50) ↔ (FloodPeakRecurrence(20, 50)(20) ∨ FloodVolumeRecurrence(20, 50)(50)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=30年 — 表示洪峰流量的重现期为30年\",\n            \"v=40年 — 表示洪量的重现期为40年\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f∀v (GreatFlood(30, 40) ↔ (FloodPeakRecurrence(20, 50)(30) ∨ FloodVolumeRecurrence(20, 50)(40)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=45年 — 表示洪峰流量的重现期为45年\",\n            \"v=25年 — 表示洪量的重现期为25年\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f∀v (GreatFlood(45, 25) ↔ (FloodPeakRecurrence(20, 50)(45) ∨ FloodVolumeRecurrence(20, 50)(25)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=50年 — 表示洪峰流量的重现期为50年\",\n            \"v=20年 — 表示洪量的重现期为20年\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f∀v (GreatFlood(50, 20) ↔ (FloodPeakRecurrence(20, 50)(50) ∨ FloodVolumeRecurrence(20, 50)(20)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"f=“2023年长江洪水” — 表示2023年长江发生的洪水\",\n            \"Years=60 — 表示洪水重现期为60年\"\n        ],\n        \"instance_logicexpression\": [\n            \"MajorFlood(2023年长江洪水) ↔ (RecurrenceInterval(2023年长江洪水, 60) > 50)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“2010年黄河洪水” — 表示2010年黄河发生的洪水\",\n            \"Years=70 — 表示洪水重现期为70年\"\n        ],\n        \"instance_logicexpression\": [\n            \"MajorFlood(2010年黄河洪水) ↔ (RecurrenceInterval(2010年黄河洪水, 70) > 50)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“1998年珠江洪水” — 表示1998年珠江发生的洪水\",\n            \"Years=55 — 表示洪水重现期为55年\"\n        ],\n        \"instance_logicexpression\": [\n            \"MajorFlood(1998年珠江洪水) ↔ (RecurrenceInterval(1998年珠江洪水, 55) > 50)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“2008年黑龙江洪水” — 表示2008年黑龙江发生的洪水\",\n            \"Years=48 — 表示洪水重现期为48年\"\n        ],\n        \"instance_logicexpression\": [\n            \"MajorFlood(2008年黑龙江洪水) ↔ (RecurrenceInterval(2008年黑龙江洪水, 48) > 50)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Area=“华北平原” — 表示受旱区域为华北平原\",\n            \"CropArea=“10000公顷” — 表示作物受旱面积为10000公顷\",\n            \"SownArea=“50000公顷” — 表示播种面积为50000公顷\",\n            \"AffectedPopulation=“5000人” — 表示饮水困难人口为5000人\",\n            \"TotalPopulation=“50000人” — 表示所在地区总人口为50000人\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A (DroughtAreaProportion(华北平原, 10000, 50000) < 0.3 ∧ DrinkingDifficultyProportion(华北平原, 5000, 50000) < 0.2 → 轻度干旱(华北平原))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Area=“长江中下游地区” — 表示受旱区域为长江中下游地区\",\n            \"CropArea=“8000公顷” — 表示作物受旱面积为8000公顷\",\n            \"SownArea=“60000公顷” — 表示播种面积为60000公顷\",\n            \"AffectedPopulation=“6000人” — 表示饮水困难人口为6000人\",\n            \"TotalPopulation=“70000人” — 表示所在地区总人口为70000人\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A (DroughtAreaProportion(长江中下游地区, 8000, 60000) < 0.3 ∧ DrinkingDifficultyProportion(长江中下游地区, 6000, 70000) < 0.2 → 轻度干旱(长江中下游地区))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Area=“东北平原” — 表示受旱区域为东北平原\",\n            \"CropArea=“12000公顷” — 表示作物受旱面积为12000公顷\",\n            \"SownArea=“40000公顷” — 表示播种面积为40000公顷\",\n            \"AffectedPopulation=“3000人” — 表示饮水困难人口为3000人\",\n            \"TotalPopulation=“40000人” — 表示所在地区总人口为40000人\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A (DroughtAreaProportion(东北平原, 12000, 40000) < 0.3 ∧ DrinkingDifficultyProportion(东北平原, 3000, 40000) < 0.2 → 轻度干旱(东北平原))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Area=“华南地区” — 表示受旱区域为华南地区\",\n            \"CropArea=“9000公顷” — 表示作物受旱面积为9000公顷\",\n            \"SownArea=“30000公顷” — 表示播种面积为30000公顷\",\n            \"AffectedPopulation=“4000人” — 表示饮水困难人口为4000人\",\n            \"TotalPopulation=“30000人” — 表示所在地区总人口为30000人\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A (DroughtAreaProportion(华南地区, 9000, 30000) < 0.3 ∧ DrinkingDifficultyProportion(华南地区, 4000, 30000) < 0.2 → 轻度干旱(华南地区))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Area=“华北区” — 表示受旱区域为华北区\",\n            \"Proportion1=0.55 — 表示受旱面积比例为55%\",\n            \"Proportion2=0.45 — 表示饮水困难人口比例为45%\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A (DroughtAreaProportion(“华北区”, 0.55) ∧ DrinkingDifficultyProportion(“华北区”, 0.45) → (0.55 ≥ 0.51 ∧ 0.55 ≤ 0.80) ∧ (0.45 ≥ 0.41 ∧ 0.45 ≤ 0.60))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Area=“华南区” — 表示受旱区域为华南区\",\n            \"Proportion1=0.75 — 表示受旱面积比例为75%\",\n            \"Proportion2=0.55 — 表示饮水困难人口比例为55%\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A (DroughtAreaProportion(“华南区”, 0.75) ∧ DrinkingDifficultyProportion(“华南区”, 0.55) → (0.75 ≥ 0.51 ∧ 0.75 ≤ 0.80) ∧ (0.55 ≥ 0.41 ∧ 0.55 ≤ 0.60))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Area=“西北区” — 表示受旱区域为西北区\",\n            \"Proportion1=0.65 — 表示受旱面积比例为65%\",\n            \"Proportion2=0.48 — 表示饮水困难人口比例为48%\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A (DroughtAreaProportion(“西北区”, 0.65) ∧ DrinkingDifficultyProportion(“西北区”, 0.48) → (0.65 ≥ 0.51 ∧ 0.65 ≤ 0.80) ∧ (0.48 ≥ 0.41 ∧ 0.48 ≤ 0.60))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Area=“东北区” — 表示受旱区域为东北区\",\n            \"Proportion1=0.58 — 表示受旱面积比例为58%\",\n            \"Proportion2=0.42 — 表示饮水困难人口比例为42%\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A (DroughtAreaProportion(“东北区”, 0.58) ∧ DrinkingDifficultyProportion(“东北区”, 0.42) → (0.58 ≥ 0.51 ∧ 0.58 ≤ 0.80) ∧ (0.42 ≥ 0.41 ∧ 0.42 ≤ 0.60))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Area=“华北区” — 表示受旱区域为华北区\",\n            \"Proportion=0.85 — 表示受旱面积比例为85%\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (DroughtAreaProportion(华北区, 0.85) ∧ DrinkingDifficultyProportion(华北区, q) → (0.85 > 0.8 ∧ q > 0.6))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Area=“华南区” — 表示受旱区域为华南区\",\n            \"Proportion=0.90 — 表示受旱面积比例为90%\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (DroughtAreaProportion(华南区, 0.90) ∧ DrinkingDifficultyProportion(华南区, q) → (0.90 > 0.8 ∧ q > 0.6))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Area=“西北区” — 表示受旱区域为西北区\",\n            \"Proportion=0.75 — 表示受旱面积比例为75%\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (DroughtAreaProportion(西北区, 0.75) ∧ DrinkingDifficultyProportion(西北区, q) → (0.75 > 0.8 ∧ q > 0.6))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Area=“东北区” — 表示受旱区域为东北区\",\n            \"Proportion=0.82 — 表示受旱面积比例为82%\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (DroughtAreaProportion(东北区, 0.82) ∧ DrinkingDifficultyProportion(东北区, q) → (0.82 > 0.8 ∧ q > 0.6))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Area=“西南区” — 表示受旱区域为西南区\",\n            \"Proportion=0.88 — 表示受旱面积比例为88%\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (DroughtAreaProportion(西南区, 0.88) ∧ DrinkingDifficultyProportion(西南区, q) → (0.88 > 0.8 ∧ q > 0.6))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"DryYear() — 表示当前是枯水年。\"\n        ],\n        \"instance_logicexpression\": [\n            \"DryYear() → InsufficientWaterSource()\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"EmergencyEvent() — 表示发生了突发性事件。\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyEvent() → DamagedWaterSource()\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"InsufficientWaterSource() — 表示城市供水水源不足。\",\n            \"City=“北京” — 表示城市为北京\"\n        ],\n        \"instance_logicexpression\": [\n            \"InsufficientWaterSource() ∨ DamagedWaterSource() → SupplyBelowDemand(北京)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"DamagedWaterSource() — 表示城市供水水源遭到破坏。\",\n            \"City=“上海” — 表示城市为上海\"\n        ],\n        \"instance_logicexpression\": [\n            \"InsufficientWaterSource() ∨ DamagedWaterSource() → SupplyBelowDemand(上海)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"SupplyBelowDemand(City) — 表示城市实际供水能力低于正常需求。\",\n            \"City=“广州” — 表示城市为广州\"\n        ],\n        \"instance_logicexpression\": [\n            \"SupplyBelowDemand(广州) → AffectProductionLife(广州) ∧ AffectEcology(广州)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"SupplyBelowDemand(City) — 表示城市实际供水能力低于正常需求。\",\n            \"City=“深圳” — 表示城市为深圳\"\n        ],\n        \"instance_logicexpression\": [\n            \"SupplyBelowDemand(深圳) → AffectProductionLife(深圳) ∧ AffectEcology(深圳)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Percentage=5% — 表示城市供水量低于正常需求量的5%\",\n            \"City=北京 — 表示缺水现象发生在北京市\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (BelowNormalSupply(5%) ∧ 5% ≤ 5% ≤ 10% → (WaterShortage(北京) ∧ AffectedLife(北京) ∧ AffectedProduction(北京)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Percentage=7% — 表示城市供水量低于正常需求量的7%\",\n            \"City=上海 — 表示缺水现象发生在上海市\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (BelowNormalSupply(7%) ∧ 5% ≤ 7% ≤ 10% → (WaterShortage(上海) ∧ AffectedLife(上海) ∧ AffectedProduction(上海)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Percentage=10% — 表示城市供水量低于正常需求量的10%\",\n            \"City=广州 — 表示缺水现象发生在广州市\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (BelowNormalSupply(10%) ∧ 5% ≤ 10% ≤ 10% → (WaterShortage(广州) ∧ AffectedLife(广州) ∧ AffectedProduction(广州)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Percentage=6% — 表示城市供水量低于正常需求量的6%\",\n            \"City=深圳 — 表示缺水现象发生在深圳市\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (BelowNormalSupply(6%) ∧ 5% ≤ 6% ≤ 10% → (WaterShortage(深圳) ∧ AffectedLife(深圳) ∧ AffectedProduction(深圳)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“北京” — 表示北京城市\",\n            \"Percentage=20% — 表示供水量低于正常日用水量的20%\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (WaterSupplyBelowNormal(20%)(北京) ∧ WaterSupplyBelowNormal(30%)(北京) → (WaterShortage(北京) ∧ ImpactedDomesticWater(北京) ∧ ImpactedIndustrialWater(北京)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“上海” — 表示上海城市\",\n            \"Percentage=25% — 表示供水量低于正常日用水量的25%\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (WaterSupplyBelowNormal(20%)(上海) ∧ WaterSupplyBelowNormal(30%)(上海) → (WaterShortage(上海) ∧ ImpactedDomesticWater(上海) ∧ ImpactedIndustrialWater(上海)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“广州” — 表示广州城市\",\n            \"Percentage=30% — 表示供水量低于正常日用水量的30%\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (WaterSupplyBelowNormal(20%)(广州) ∧ WaterSupplyBelowNormal(30%)(广州) → (WaterShortage(广州) ∧ ImpactedDomesticWater(广州) ∧ ImpactedIndustrialWater(广州)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“深圳” — 表示深圳城市\",\n            \"Percentage=28% — 表示供水量低于正常日用水量的28%\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (WaterSupplyBelowNormal(20%)(深圳) ∧ WaterSupplyBelowNormal(30%)(深圳) → (WaterShortage(深圳) ∧ ImpactedDomesticWater(深圳) ∧ ImpactedIndustrialWater(深圳)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“北京” — 表示北京供水量低于正常日用水量的30%\",\n            \"c=“北京” — 表示北京出现极为严重的缺水局面\",\n            \"c=“北京” — 表示北京生活用水受到极大影响\",\n            \"c=“北京” — 表示北京生产用水受到极大影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"WaterSupplyBelow30(北京) → (SevereWaterShortage(北京) ∨ PowerWaterCrisis(北京))\",\n            \"SevereWaterShortage(北京) → AffectedDailyWaterUse(北京) ∧ AffectedProductionWaterUse(北京)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“上海” — 表示上海供水量低于正常日用水量的30%\",\n            \"c=“上海” — 表示上海出现发电供水危机\",\n            \"c=“上海” — 表示上海生活用水受到极大影响\",\n            \"c=“上海” — 表示上海生产用水受到极大影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"WaterSupplyBelow30(上海) → (SevereWaterShortage(上海) ∨ PowerWaterCrisis(上海))\",\n            \"PowerWaterCrisis(上海) → AffectedDailyWaterUse(上海) ∧ AffectedProductionWaterUse(上海)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“广州” — 表示广州供水量低于正常日用水量的30%\",\n            \"c=“广州” — 表示广州出现极为严重的缺水局面\",\n            \"c=“广州” — 表示广州发电供水危机\",\n            \"c=“广州” — 表示广州生活用水受到极大影响\",\n            \"c=“广州” — 表示广州生产用水受到极大影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"WaterSupplyBelow30(广州) → (SevereWaterShortage(广州) ∨ PowerWaterCrisis(广州))\",\n            \"SevereWaterShortage(广州) → AffectedDailyWaterUse(广州) ∧ AffectedProductionWaterUse(广州)\",\n            \"PowerWaterCrisis(广州) → AffectedDailyWaterUse(广州) ∧ AffectedProductionWaterUse(广州)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“深圳” — 表示深圳供水量低于正常日用水量的30%\",\n            \"c=“深圳” — 表示深圳出现极为严重的缺水局面\",\n            \"c=“深圳” — 表示深圳生活用水受到极大影响\",\n            \"c=“深圳” — 表示深圳生产用水受到极大影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"WaterSupplyBelow30(深圳) → (SevereWaterShortage(深圳) ∨ PowerWaterCrisis(深圳))\",\n            \"SevereWaterShortage(深圳) → AffectedDailyWaterUse(深圳) ∧ AffectedProductionWaterUse(深圳)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“气象局” — 表示气象局负责监测和预报\",\n            \"w=“台风” — 表示灾害性天气为台风\",\n            \"防汛抗旱指挥机构=“国家防汛抗旱总指挥部”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀w (MonitorForecast(“气象局”, “台风”) → ReportResults(“气象局”, 国家防汛抗旱总指挥部))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“国家防汛抗旱总指挥部” — 表示防汛抗旱指挥机构\",\n            \"a=“沿海城市” — 表示预警区域为沿海城市\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀a (EarlyWarning(“国家防汛抗旱总指挥部”, “沿海城市”) → Prepare(“沿海城市”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“长江” — 表示发生洪水的江河为长江\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (Flood(“长江”) → IntensifyMonitoring(水文部门))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"h=“水文局” — 表示水文部门\",\n            \"c=“国家防汛抗旱总指挥部”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀h∀c (IntensifyMonitoring(“水文局”) → ReportMonitoringResults(“水文局”, 国家防汛抗旱总指挥部))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"h=“水文局” — 表示水文部门\",\n            \"c=“国家防汛抗旱总指挥部”\",\n            \"t=“2小时”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀h∀c∀t (ReportHydrology(“水文局”, 国家防汛抗旱总指挥部, “2小时”) → (t = 2小时))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"h=“水文局” — 表示水文部门\",\n            \"c=“国家防汛抗旱总指挥部”\",\n            \"t=“30分钟”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀h∀c∀t (ReportHydrology(“水文局”, 国家防汛抗旱总指挥部, “30分钟”) → (t = 30分钟))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“国家防汛抗旱总指挥部”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (ReportMonitoringResults(水文部门, c) → TimelyCommand(c))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“长江” — 表示长江出现警戒水位以上的洪水\",\n            \"mu=“长江堤防管理单位” — 表示长江的堤防管理单位\",\n            \"ud=“上级工程管理部门” — 表示上级工程管理部门\",\n            \"ci=“同级防汛抗旱指挥机构” — 表示同级防汛抗旱指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (FloodLevel(长江) → (∃mu EnhanceMonitoring(长江堤防管理单位) ∧ ∀ud ReportOperation(长江堤防管理单位, 上级工程管理部门, 同级防汛抗旱指挥机构) ∧ ∀ud Warn(ud)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“黄河重要堤防” — 表示黄河的重要堤防\",\n            \"ManagementUnit=“黄河堤防管理单位” — 表示黄河的堤防管理单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (MajorRisk(黄河重要堤防) → (ReportOperation(黄河堤防管理单位, 国家防总, 同级防汛抗旱指挥机构) ∧ ⊕Time(4, hours)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“三峡水库” — 表示三峡水库\",\n            \"mu=“三峡水库管理单位” — 表示三峡水库的管理单位\",\n            \"ci=“防汛抗旱指挥机构” — 表示防汛抗旱指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (ExceedFloodLevel(三峡水库) → (∃mu FloodDispatchPlan(三峡水库管理单位, 防汛抗旱指挥机构) ∧ ∀ci ReportOperation(三峡水库管理单位, ci)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“密云水库” — 表示密云水库\",\n            \"Downstream=“下游区域” — 表示下游区域\",\n            \"ud=“上级主管部门” — 表示上级主管部门\",\n            \"ci=“同级防汛抗旱指挥机构” — 表示同级防汛抗旱指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (ReservoirRisk(密云水库) → (Warn(下游区域) ∧ ∀ud ReportOperation(密云水库管理单位, ud, 同级防汛抗旱指挥机构)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“小浪底水库” — 表示小浪底水库\",\n            \"淹没范围=“水库溃坝洪水风险图确定的淹没范围” — 表示水库溃坝洪水风险图确定的淹没范围\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (BreachRisk(小浪底水库) → (Warn(水库溃坝洪水风险图确定的淹没范围) ∧ ⊕Time(提前, hours)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=“2023-04-10” — 表示灾害发生的时间是2023年4月10日\",\n            \"l=“长江流域” — 表示灾害发生的地点是长江流域\",\n            \"s=“10000平方公里” — 表示灾害的范围是10000平方公里\",\n            \"ap=“200000人” — 表示受灾人口是200000人\",\n            \"pl=“500000万元” — 表示群众财产损失是500000万元\",\n            \"al=“300000万元” — 表示农林牧渔损失是300000万元\",\n            \"tl=“200000万元” — 表示交通运输损失是200000万元\",\n            \"cl=“100000万元” — 表示邮电通信损失是100000万元\",\n            \"ul=“400000万元” — 表示水电设施损失是400000万元\"\n        ],\n        \"instance_logicexpression\": [\n            \"FloodDisasterInfo(“2023-04-10”, “长江流域”, “10000平方公里”, “200000人”, “500000万元”, “300000万元”, “200000万元”, “100000万元”, “400000万元”) → (ReportDisaster(有关部门, 防汛抗旱指挥机构, FloodDisasterInfo(“2023-04-10”, “长江流域”, “10000平方公里”, “200000人”, “500000万元”, “300000万元”, “200000万元”, “100000万元”, “400000万元”)) ∧ CollectDisasterInfo(防汛抗旱指挥机构, FloodDisasterInfo(“2023-04-10”, “长江流域”, “10000平方公里”, “200000人”, “500000万元”, “300000万元”, “200000万元”, “100000万元”, “400000万元”)) ∧ MasterDisasterInfo(防汛抗旱指挥机构, FloodDisasterInfo(“2023-04-10”, “长江流域”, “10000平方公里”, “200000人”, “500000万元”, “300000万元”, “200000万元”, “100000万元”, “400000万元”)) ∧ ReportToGovernment(防汛抗旱指挥机构, 同级政府, FloodDisasterInfo(“2023-04-10”, “长江流域”, “10000平方公里”, “200000人”, “500000万元”, “300000万元”, “200000万元”, “100000万元”, “400000万元”)) ∧ ReportToGovernment(防汛抗旱指挥机构, 上级防汛抗旱指挥机构, FloodDisasterInfo(“2023-04-10”, “长江流域”, “10000平方公里”, “200000人”, “500000万元”, “300000万元”, “200000万元”, “100000万元”, “400000万元”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“2023-04-10长江流域洪涝灾害” — 表示2023年4月10日长江流域发生的洪涝灾害\"\n        ],\n        \"instance_logicexpression\": [\n            \"人员伤亡(“2023-04-10长江流域洪涝灾害”) ∨ 较大财产损失(“2023-04-10长江流域洪涝灾害”) → ImmediatelyReport(“2023-04-10长江流域洪涝灾害”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“2023-04-10长江流域洪涝灾害” — 表示2023年4月10日长江流域发生的洪涝灾害\"\n        ],\n        \"instance_logicexpression\": [\n            \"重大灾情(“2023-04-10长江流域洪涝灾害”) → MajorDisasterReport(防汛抗旱指挥机构, 国家防总, “2023-04-10长江流域洪涝灾害”) ∧ VerifyDisasterInfo(防汛抗旱指挥机构, “2023-04-10长江流域洪涝灾害”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"ci=“长江流域防汛抗旱指挥机构” — 表示长江流域防汛抗旱指挥机构\",\n            \"d=“2023-04-10长江流域洪涝灾害” — 表示2023年4月10日长江流域发生的洪涝灾害\"\n        ],\n        \"instance_logicexpression\": [\n            \"ReportAsRegulated(“长江流域防汛抗旱指挥机构”, “2023-04-10长江流域洪涝灾害”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=“2023-08-01” — 干旱发生的时间是2023年8月1日\",\n            \"l=“华北某地” — 干旱发生的地点是华北某地\",\n            \"s=“严重” — 干旱的程度是严重\",\n            \"a=“100平方公里” — 受旱范围是100平方公里\",\n            \"ip=“20000人” — 影响人口是20000人\",\n            \"ipr=“农业生产减少20%” — 对工农业的影响是生产减少20%\",\n            \"il=“城乡生活供水紧张” — 对城乡生活的影响是供水紧张\",\n            \"ie=“生态环境恶化” — 对生态环境的影响是恶化\",\n            \"CommandInstitution=“国家防汛抗旱总指挥部” — 防汛抗旱指挥机构是国家防汛抗旱总指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"DroughtInfo(“2023-08-01”, “华北某地”, “严重”, “100平方公里”, “20000人”, “农业生产减少20%”, “城乡生活供水紧张”, “生态环境恶化”) → (MasterSituation(“国家防汛抗旱总指挥部”, WaterRainChange, LocalStorage, SoilMoisture, UrbanRuralWaterSupply) ∧ StrengthenMonitoring(“国家防汛抗旱总指挥部”) ∧ ReportSituation(“国家防汛抗旱总指挥部”, AffectedSituation))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“2023-09-15” — 干旱发生的时间是2023年9月15日\",\n            \"l=“华南某地” — 干旱发生的地点是华南某地\",\n            \"s=“中等” — 干旱的程度是中等\",\n            \"a=“50平方公里” — 受旱范围是50平方公里\",\n            \"ip=“5000人” — 影响人口是5000人\",\n            \"ipr=“农业生产减少10%” — 对工农业的影响是生产减少10%\",\n            \"il=“城乡生活供水正常” — 对城乡生活的影响是供水正常\",\n            \"ie=“生态环境轻微影响” — 对生态环境的影响是轻微影响\",\n            \"CommandInstitution=“华南地区防汛抗旱指挥部” — 防汛抗旱指挥机构是华南地区防汛抗旱指挥部\",\n            \"c=“旱情急剧发展” — 旱情急剧发展的情况\"\n        ],\n        \"instance_logicexpression\": [\n            \"DroughtInfo(“2023-09-15”, “华南某地”, “中等”, “50平方公里”, “5000人”, “农业生产减少10%”, “城乡生活供水正常”, “生态环境轻微影响”) ∧ UrgentSituation(“旱情急剧发展”) → TimelyReport(“华南地区防汛抗旱指挥部”, “旱情急剧发展”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“长江” — 表示长江即将出现洪水\",\n            \"HydrologicalDepartment=“长江流域水文局” — 表示长江流域水文局\",\n            \"CommandInstitution=“长江防汛抗旱总指挥部” — 表示长江防汛抗旱总指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (FloodImminent(长江) → (PrepareFloodForecast(长江流域水文局) ∧ ReportMeasurementsAndTrend(长江防汛抗旱总指挥部)))\",\n            \"∀c (DetermineWarningAreaLevelScope(长江防汛抗旱总指挥部) → ReleaseFloodInformation(长江防汛抗旱总指挥部))\",\n            \"∀r (FloodImminent(长江) → (TrackAndAnalyzeTrend(长江流域水文局) ∧ UpdateForecast(长江流域水文局)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“黄河” — 表示黄河即将出现洪水\",\n            \"HydrologicalDepartment=“黄河流域水文局” — 表示黄河流域水文局\",\n            \"CommandInstitution=“黄河防汛抗旱总指挥部” — 表示黄河防汛抗旱总指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (FloodImminent(黄河) → (PrepareFloodForecast(黄河流域水文局) ∧ ReportMeasurementsAndTrend(黄河防汛抗旱总指挥部)))\",\n            \"∀c (DetermineWarningAreaLevelScope(黄河防汛抗旱总指挥部) → ReleaseFloodInformation(黄河防汛抗旱总指挥部))\",\n            \"∀r (FloodImminent(黄河) → (TrackAndAnalyzeTrend(黄河流域水文局) ∧ UpdateForecast(黄河流域水文局)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“珠江” — 表示珠江即将出现洪水\",\n            \"HydrologicalDepartment=“珠江流域水文局” — 表示珠江流域水文局\",\n            \"CommandInstitution=“珠江防汛抗旱总指挥部” — 表示珠江防汛抗旱总指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (FloodImminent(珠江) → (PrepareFloodForecast(珠江流域水文局) ∧ ReportMeasurementsAndTrend(珠江防汛抗旱总指挥部)))\",\n            \"∀c (DetermineWarningAreaLevelScope(珠江防汛抗旱总指挥部) → ReleaseFloodInformation(珠江防汛抗旱总指挥部))\",\n            \"∀r (FloodImminent(珠江) → (TrackAndAnalyzeTrend(珠江流域水文局) ∧ UpdateForecast(珠江流域水文局)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“黑龙江” — 表示黑龙江即将出现洪水\",\n            \"HydrologicalDepartment=“黑龙江流域水文局” — 表示黑龙江流域水文局\",\n            \"CommandInstitution=“黑龙江防汛抗旱总指挥部” — 表示黑龙江防汛抗旱总指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (FloodImminent(黑龙江) → (PrepareFloodForecast(黑龙江流域水文局) ∧ ReportMeasurementsAndTrend(黑龙江防汛抗旱总指挥部)))\",\n            \"∀c (DetermineWarningAreaLevelScope(黑龙江防汛抗旱总指挥部) → ReleaseFloodInformation(黑龙江防汛抗旱总指挥部))\",\n            \"∀r (FloodImminent(黑龙江) → (TrackAndAnalyzeTrend(黑龙江流域水文局) ∧ UpdateForecast(黑龙江流域水文局)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“大雨” — 表示气象预报将出现大雨\",\n            \"l=“国家级” — 表示国家级防汛抗旱指挥机构\",\n            \"a=“城市A” — 表示渍涝灾害预警区域为城市A\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀r (WeatherForecast(r) → ∀l (FloodControlAuthority(l) → (DetermineWarningArea(l, a) ∧ DetermineWarningLevel(l, r) ∧ PublishWarning(l, a, r) ∧ PrepareDrainage(l))))\",\n            \"∀a∀r (WeatherForecast(r) ∧ FloodControlAuthority(l) → (NotifyTransferProperty(l, Residents, Enterprises)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“暴雨” — 表示气象预报将出现暴雨\",\n            \"l=“省级” — 表示省级防汛抗旱指挥机构\",\n            \"a=“城市B” — 表示渍涝灾害预警区域为城市B\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀r (WeatherForecast(r) → ∀l (FloodControlAuthority(l) → (DetermineWarningArea(l, a) ∧ DetermineWarningLevel(l, r) ∧ PublishWarning(l, a, r) ∧ PrepareDrainage(l))))\",\n            \"∀a∀r (WeatherForecast(r) ∧ FloodControlAuthority(l) → (NotifyTransferProperty(l, Residents, Enterprises)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“特大暴雨” — 表示气象预报将出现特大暴雨\",\n            \"l=“市级” — 表示市级防汛抗旱指挥机构\",\n            \"a=“城市C” — 表示渍涝灾害预警区域为城市C\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀r (WeatherForecast(r) → ∀l (FloodControlAuthority(l) → (DetermineWarningArea(l, a) ∧ DetermineWarningLevel(l, r) ∧ PublishWarning(l, a, r) ∧ PrepareDrainage(l))))\",\n            \"∀a∀r (WeatherForecast(r) ∧ FloodControlAuthority(l) → (NotifyTransferProperty(l, Residents, Enterprises)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“中雨” — 表示气象预报将出现中雨\",\n            \"l=“区级” — 表示区级防汛抗旱指挥机构\",\n            \"a=“城市D” — 表示渍涝灾害预警区域为城市D\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀r (WeatherForecast(r) → ∀l (FloodControlAuthority(l) → (DetermineWarningArea(l, a) ∧ DetermineWarningLevel(l, r) ∧ PublishWarning(l, a, r) ∧ PrepareDrainage(l))))\",\n            \"∀a∀r (WeatherForecast(r) ∧ FloodControlAuthority(l) → (NotifyTransferProperty(l, Residents, Enterprises)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"m=“中央气象台” — 表示气象部门为中央气象台\",\n            \"t=“台风‘海葵’” — 表示发布的台风信息为台风‘海葵’\",\n            \"g=“省级人民政府” — 表示报告信息给省级人民政府\",\n            \"c=“省级防汛抗旱指挥机构” — 表示报告信息给省级防汛抗旱指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t∀m∀g∀c (IssueTyphoonInfo(中央气象台, 台风‘海葵’) → (MonitorTyphoon(中央气象台) ∧ ForecastTrend(中央气象台) ∧ ReportInfo(中央气象台, 省级人民政府, 省级防汛抗旱指挥机构, 台风‘海葵’)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“沿海城市A” — 表示可能遭遇台风袭击的地方为沿海城市A\",\n            \"c=“沿海城市A防汛抗旱指挥机构” — 表示沿海城市A的防汛抗旱指挥机构\",\n            \"t=“台风‘海葵’” — 表示台风信息为台风‘海葵’\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (可能遭遇台风袭击(沿海城市A) → (StrengthenDuty(沿海城市A防汛抗旱指挥机构) ∧ TrackTyphoon(沿海城市A防汛抗旱指挥机构) ∧ ReleaseInfo(沿海城市A防汛抗旱指挥机构, Public, 台风‘海葵’)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=“省级水利部门” — 表示水利部门为省级水利部门\",\n            \"u=“水库管理单位” — 表示相关单位为水库管理单位\",\n            \"t=“台风‘海葵’” — 表示台风信息为台风‘海葵’\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w∀u (NotifyPrecaution(省级水利部门, 水库管理单位, 台风‘海葵’) → (AnalyzeImpact(水库管理单位) ∧ (必要时(水库管理单位, 台风‘海葵’) → ImplementMeasures(水库管理单位))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“沿海城市B” — 表示预报将受台风影响的沿海地区为沿海城市B\",\n            \"c=“沿海城市B防汛抗旱指挥机构” — 表示沿海城市B的防汛抗旱指挥机构\",\n            \"RelevantDepartments=“沿海城市B交通局” — 表示相关部门为沿海城市B交通局\",\n            \"Personnel=“沿海城市B居民” — 表示人员为沿海城市B居民\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (预报将受台风影响(沿海城市B) → NotifyTyphoonPrevention(沿海城市B防汛抗旱指挥机构, 沿海城市B交通局, 沿海城市B居民))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“城镇危房” — 表示公用设施为城镇危房\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f (加强对城镇危房等公用设施的检查(城镇危房) → InspectAndReinforce(城镇危房))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"b=“沿海城市C渔船” — 表示船只为沿海城市C渔船\",\n            \"p=“沿海城市C养殖人员” — 表示沿海养殖人员为沿海城市C养殖人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀b ∀p (组织船只回港避风(沿海城市C渔船) ∧ 沿海养殖人员撤离工作(沿海城市C养殖人员) → OrganizeSheltering(沿海城市C渔船, 沿海城市C养殖人员))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"m=“蓄滞洪区管理局” — 蓄滞洪区管理单位为蓄滞洪区管理局\",\n            \"p=“群众安全转移方案A” — 蓄滞洪区管理单位拟订的群众安全转移方案为方案A\"\n        ],\n        \"instance_logicexpression\": [\n            \"蓄滞洪区管理单位(蓄滞洪区管理局) → FormulatePlan(蓄滞洪区管理局, 群众安全转移方案A)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“蓄滞洪区工程管理局” — 蓄滞洪区工程管理单位为蓄滞洪区工程管理局\",\n            \"Issue=“监测到的工程问题1” — 蓄滞洪区工程管理单位发现的问题为监测到的工程问题1\"\n        ],\n        \"instance_logicexpression\": [\n            \"蓄滞洪区工程管理单位(蓄滞洪区工程管理局) → (EnhanceMonitoring(蓄滞洪区工程管理局) ∧ IdentifyIssue(蓄滞洪区工程管理局) → HandleIssue(蓄滞洪区工程管理局) ∧ (ReportToSuperior(蓄滞洪区工程管理局, 监测到的工程问题1) ∧ ReportToPeer(蓄滞洪区工程管理局, 监测到的工程问题1)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“当地人民政府” — 蓄滞洪区运用的当地人民政府\",\n            \"c=“防汛抗旱指挥机构” — 蓄滞洪区运用的防汛抗旱指挥机构\",\n            \"p=“群众安全转移方案B” — 群众安全转移方案为方案B\"\n        ],\n        \"instance_logicexpression\": [\n            \"蓄滞洪区运用(当地人民政府, 防汛抗旱指挥机构) → (ActivateWarning(当地人民政府, 防汛抗旱指挥机构) ∧ ∀p (群众安全转移方案(p) → ImplementTransfer(当地人民政府, 防汛抗旱指挥机构, 群众安全转移方案B)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“蓄滞洪区管理局” — 蓄滞洪区管理单位为蓄滞洪区管理局\",\n            \"p=“群众安全转移方案C” — 蓄滞洪区管理单位拟订的群众安全转移方案为方案C\"\n        ],\n        \"instance_logicexpression\": [\n            \"蓄滞洪区管理单位(蓄滞洪区管理局) → FormulatePlan(蓄滞洪区管理局, 群众安全转移方案C)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“蓄滞洪区工程管理局” — 蓄滞洪区工程管理单位为蓄滞洪区工程管理局\",\n            \"Issue=“监测到的工程问题2” — 蓄滞洪区工程管理单位发现的问题为监测到的工程问题2\"\n        ],\n        \"instance_logicexpression\": [\n            \"蓄滞洪区工程管理单位(蓄滞洪区工程管理局) → (EnhanceMonitoring(蓄滞洪区工程管理局) ∧ IdentifyIssue(蓄滞洪区工程管理局) → HandleIssue(蓄滞洪区工程管理局) ∧ (ReportToSuperior(蓄滞洪区工程管理局, 监测到的工程问题2) ∧ ReportToPeer(蓄滞洪区工程管理局, 监测到的工程问题2)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“国家防汛抗旱总指挥部” — 表示国家级防汛抗旱指挥机构\",\n            \"c=“气候变化” — 表示干旱灾害的成因之一为气候变化\",\n            \"f=“分布不均” — 表示干旱灾害的特点之一为分布不均\"\n        ],\n        \"instance_logicexpression\": [\n            \"防汛抗旱指挥机构(国家防汛抗旱总指挥部) → EarlyWarningMeasures(国家防汛抗旱总指挥部, 气候变化, 分布不均)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“省级防汛抗旱指挥部” — 表示省级防汛抗旱指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"防汛抗旱指挥机构(省级防汛抗旱指挥部) → DroughtMonitoringNetwork(省级防汛抗旱指挥部) ∧ DroughtDisasterStatisticsTeam(省级防汛抗旱指挥部)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“市级防汛抗旱指挥部” — 表示市级防汛抗旱指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"防汛抗旱指挥机构(市级防汛抗旱指挥部) → RealTimeDroughtDisaster(市级防汛抗旱指挥部) ∧ DroughtTrend(市级防汛抗旱指挥部)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“县级防汛抗旱指挥部” — 表示县级防汛抗旱指挥机构\",\n            \"d=“严重干旱” — 表示干旱等级之一为严重干旱\"\n        ],\n        \"instance_logicexpression\": [\n            \"防汛抗旱指挥机构(县级防汛抗旱指挥部) → ProposeCountermeasures(县级防汛抗旱指挥部, 严重干旱)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“乡镇级防汛抗旱指挥部” — 表示乡镇级防汛抗旱指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"防汛抗旱指挥机构(乡镇级防汛抗旱指挥部) → DroughtServiceNetwork(乡镇级防汛抗旱指挥部)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“村级防汛抗旱指挥部” — 表示村级防汛抗旱指挥机构\",\n            \"t=“节水灌溉” — 表示社会化服务组织类型之一为节水灌溉\"\n        ],\n        \"instance_logicexpression\": [\n            \"防汛抗旱指挥机构(村级防汛抗旱指挥部) → SocialServiceOrganization(村级防汛抗旱指挥部, 节水灌溉)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“水源短缺” — 表示供水危机的原因是水源短缺\",\n            \"Institution=“当地防汛抗旱指挥机构” — 表示负责公布预警的机构\",\n            \"Subject=“居民” — 表示需要储备应急用水的居民\",\n            \"Department=“水务局” — 表示负责应急供水准备的部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (供水危机(“水源短缺”) → (公布预警(“当地防汛抗旱指挥机构”) ∧ PrepareEmergencyWater(“居民”) ∧ PrepareEmergencyWater(“企事业单位”) ∧ EmergencyWaterSupplyPreparation(“水务局”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“供水线路中断” — 表示供水危机的原因是供水线路中断\",\n            \"Institution=“当地防汛抗旱指挥机构” — 表示负责公布预警的机构\",\n            \"Subject=“企事业单位” — 表示需要储备应急用水的企事业单位\",\n            \"Department=“应急管理局” — 表示负责应急供水准备的部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (供水危机(“供水线路中断”) → (公布预警(“当地防汛抗旱指挥机构”) ∧ PrepareEmergencyWater(“居民”) ∧ PrepareEmergencyWater(“企事业单位”) ∧ EmergencyWaterSupplyPreparation(“应急管理局”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“供水水质被侵害” — 表示供水危机的原因是供水水质被侵害\",\n            \"Institution=“当地防汛抗旱指挥机构” — 表示负责公布预警的机构\",\n            \"Subject=“居民” — 表示需要储备应急用水的居民\",\n            \"Department=“环保局” — 表示负责应急供水准备的部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (供水危机(“供水水质被侵害”) → (公布预警(“当地防汛抗旱指挥机构”) ∧ PrepareEmergencyWater(“居民”) ∧ PrepareEmergencyWater(“企事业单位”) ∧ EmergencyWaterSupplyPreparation(“环保局”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“防汛抗旱指挥机构A” — 表示防汛抗旱指挥机构A\",\n            \"p=“江河洪水防御方案X” — 表示江河洪水防御方案X\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀p (Need(防汛抗旱指挥机构A) → (FormulatePlan(防汛抗旱指挥机构A, 江河洪水防御方案X) ∨ RevisePlan(防汛抗旱指挥机构A, 江河洪水防御方案X)) ∧ RespondToFloods(防汛抗旱指挥机构A))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“防汛抗旱指挥机构B” — 表示防汛抗旱指挥机构B\",\n            \"p=“江河洪水防御方案Y” — 表示江河洪水防御方案Y\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀p (Need(防汛抗旱指挥机构B) → (FormulatePlan(防汛抗旱指挥机构B, 江河洪水防御方案Y) ∨ RevisePlan(防汛抗旱指挥机构B, 江河洪水防御方案Y)) ∧ RespondToFloods(防汛抗旱指挥机构B))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“防汛抗旱指挥机构C” — 表示防汛抗旱指挥机构C\",\n            \"p=“江河洪水防御方案Z” — 表示江河洪水防御方案Z\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀p (Need(防汛抗旱指挥机构C) → (FormulatePlan(防汛抗旱指挥机构C, 江河洪水防御方案Z) ∨ RevisePlan(防汛抗旱指挥机构C, 江河洪水防御方案Z)) ∧ RespondToFloods(防汛抗旱指挥机构C))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“国家防汛抗旱总指挥部” — 表示防汛抗旱指挥机构为国家防汛抗旱总指挥部\",\n            \"p=“抗旱预案” — 表示预案类型为抗旱预案\",\n            \"d=“轻度干旱” — 表示干旱灾害等级为轻度\"\n        ],\n        \"instance_logicexpression\": [\n            \"防汛抗旱指挥机构(国家防汛抗旱总指挥部) → (PreparePlan(国家防汛抗旱总指挥部, 抗旱预案) ∧ ∀d (干旱灾害(d) → RespondToDisaster(抗旱预案, d)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“省级防汛抗旱指挥部” — 表示防汛抗旱指挥机构为省级防汛抗旱指挥部\",\n            \"p=“抗旱预案” — 表示预案类型为抗旱预案\",\n            \"d=“中度干旱” — 表示干旱灾害等级为中度\"\n        ],\n        \"instance_logicexpression\": [\n            \"防汛抗旱指挥机构(省级防汛抗旱指挥部) → (PreparePlan(省级防汛抗旱指挥部, 抗旱预案) ∧ ∀d (干旱灾害(d) → RespondToDisaster(抗旱预案, d)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“市级防汛抗旱办公室” — 表示防汛抗旱指挥机构为市级防汛抗旱办公室\",\n            \"p=“抗旱预案” — 表示预案类型为抗旱预案\",\n            \"d=“重度干旱” — 表示干旱灾害等级为重度\"\n        ],\n        \"instance_logicexpression\": [\n            \"防汛抗旱指挥机构(市级防汛抗旱办公室) → (PreparePlan(市级防汛抗旱办公室, 抗旱预案) ∧ ∀d (干旱灾害(d) → RespondToDisaster(抗旱预案, d)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“县级防汛抗旱指挥部” — 表示防汛抗旱指挥机构为县级防汛抗旱指挥部\",\n            \"p=“抗旱预案” — 表示预案类型为抗旱预案\",\n            \"d=“特大干旱” — 表示干旱灾害等级为特大\"\n        ],\n        \"instance_logicexpression\": [\n            \"防汛抗旱指挥机构(县级防汛抗旱指挥部) → (PreparePlan(县级防汛抗旱指挥部, 抗旱预案) ∧ ∀d (干旱灾害(d) → RespondToDisaster(抗旱预案, d)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“长江” — 表示长江的水情接近保证水位\",\n            \"Government=“某市防汛指挥机构” — 表示某市防汛指挥机构负责宣布紧急防汛期\"\n        ],\n        \"instance_logicexpression\": [\n            \"WaterLevelApproachingGuarantee(长江) → DeclareEmergencyFloodControl(某市防汛指挥机构)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“黄河” — 表示黄河的水情接近安全流量\",\n            \"Government=“某省防汛指挥机构” — 表示某省防汛指挥机构负责宣布紧急防汛期\"\n        ],\n        \"instance_logicexpression\": [\n            \"WaterLevelApproachingSafetyFlow(黄河) → DeclareEmergencyFloodControl(某省防汛指挥机构)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Reservoir=“三峡水库” — 表示三峡水库的水位接近设计洪水位\",\n            \"Government=“某县防汛指挥机构” — 表示某县防汛指挥机构负责宣布紧急防汛期\"\n        ],\n        \"instance_logicexpression\": [\n            \"ReservoirLevelApproachingDesignFlood(三峡水库) → DeclareEmergencyFloodControl(某县防汛指挥机构)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“某市堤坝” — 表示某市堤坝发生重大险情\",\n            \"Government=“某市防汛指挥机构” — 表示某市防汛指挥机构负责宣布紧急防汛期\"\n        ],\n        \"instance_logicexpression\": [\n            \"FloodControlFacilityInDanger(某市堤坝) → DeclareEmergencyFloodControl(某市防汛指挥机构)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“洞庭湖” — 表示洞庭湖的水情接近保证水位\",\n            \"Government=“某区防汛指挥机构” — 表示某区防汛指挥机构负责宣布紧急防汛期\"\n        ],\n        \"instance_logicexpression\": [\n            \"WaterLevelApproachingGuarantee(洞庭湖) → DeclareEmergencyFloodControl(某区防汛指挥机构)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"b=“长江流域” — 表示长江流域发生特大洪水\",\n            \"s1=“黄河流域” — 表示黄河流域同时发生大洪水\",\n            \"s2=“珠江流域” — 表示珠江流域同时发生大洪水\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃b (Flood(长江流域) ∨ MajorFlood(长江流域)) ∨ ∃s1 ∃s2 (s1 ≠ s2 ∧ MajorFlood(黄河流域) ∧ MajorFlood(珠江流域)) ∨ ∃s (Breach(s)) ∨ ∃r (DamBreak(r)) ∨ ∃p1 ∃p2 (p1 ≠ p2 ∧ Drought(p1) ∧ Drought(p2)) ∨ ∃c1 ∃c2 (c1 ≠ c2 ∧ SevereDrought(c1) ∧ SevereDrought(c2))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“长江重要河段” — 表示长江重要河段堤防发生决口\",\n            \"r=“三峡水库” — 表示三峡水库发生垮坝\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃b (Flood(b) ∨ MajorFlood(b)) ∨ ∃s1 ∃s2 (s1 ≠ s2 ∧ MajorFlood(s1) ∧ MajorFlood(s2)) ∨ ∃s (Breach(长江重要河段)) ∨ ∃r (DamBreak(三峡水库)) ∨ ∃p1 ∃p2 (p1 ≠ p2 ∧ Drought(p1) ∧ Drought(p2)) ∨ ∃c1 ∃c2 (c1 ≠ c2 ∧ SevereDrought(c1) ∧ SevereDrought(c2))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p1=“广东省” — 表示广东省发生特大干旱\",\n            \"p2=“广西省” — 表示广西省发生特大干旱\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃b (Flood(b) ∨ MajorFlood(b)) ∨ ∃s1 ∃s2 (s1 ≠ s2 ∧ MajorFlood(s1) ∧ MajorFlood(s2)) ∨ ∃s (Breach(s)) ∨ ∃r (DamBreak(r)) ∨ ∃p1 ∃p2 (p1 ≠ p2 ∧ Drought(广东省) ∧ Drought(广西省)) ∨ ∃c1 ∃c2 (c1 ≠ c2 ∧ SevereDrought(c1) ∧ SevereDrought(c2))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c1=“北京市” — 表示北京市发生极度干旱\",\n            \"c2=“上海市” — 表示上海市发生极度干旱\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃b (Flood(b) ∨ MajorFlood(b)) ∨ ∃s1 ∃s2 (s1 ≠ s2 ∧ MajorFlood(s1) ∧ MajorFlood(s2)) ∨ ∃s (Breach(s)) ∨ ∃r (DamBreak(r)) ∨ ∃p1 ∃p2 (p1 ≠ p2 ∧ Drought(p1) ∧ Drought(p2)) ∨ ∃c1 ∃c2 (c1 ≠ c2 ∧ SevereDrought(北京市) ∧ SevereDrought(上海市))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p1=“广东省” — 广东省发生洪涝灾害\",\n            \"p2=“浙江省” — 浙江省发生洪涝灾害\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃p1 ∃p2 (FloodDisaster(广东省) ∧ FloodDisaster(浙江省) → LevelIIIResponse)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“江苏省” — 江苏省发生较大洪水\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃p (MajorFlood(江苏省) → LevelIIIResponse)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“长江” — 长江干流堤防出现重大险情\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃r (MajorRisk(长江) → LevelIIIResponse)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r1=“三峡水库” — 三峡水库出现严重险情\",\n            \"r2=“小浪底水库” — 小浪底水库发生垮坝\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃r1 ∃r2 (SevereRisk(三峡水库) ∨ Breach(小浪底水库) → LevelIIIResponse)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p1=“山东省” — 山东省发生干旱灾害\",\n            \"p2=“河南省” — 河南省发生干旱灾害\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃p1 ∃p2 (DroughtDisaster(山东省) ∧ DroughtDisaster(河南省) → LevelIIIResponse)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c1=“北京市” — 北京市发生中度干旱\",\n            \"c2=“上海市” — 上海市发生中度干旱\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃c1 ∃c2 (ModerateDrought(北京市) ∧ ModerateDrought(上海市) → LevelIIIResponse)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“广州市” — 广州市发生严重干旱\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃c (SevereDrought(广州市) → LevelIIIResponse)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p1=“广东省” — 广东省发生洪水\",\n            \"p2=“浙江省” — 浙江省发生洪水\"\n        ],\n        \"instance_logicexpression\": [\n            \"Flood(广东省) ∧ Flood(浙江省) → Ⅳ级响应\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p1=“四川省” — 四川省发生干旱\",\n            \"p2=“云南省” — 云南省发生干旱\"\n        ],\n        \"instance_logicexpression\": [\n            \"Drought(四川省) ∧ Drought(云南省) → Ⅳ级响应\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“长江” — 长江干流堤防出现险情\"\n        ],\n        \"instance_logicexpression\": [\n            \"LeveeDanger(长江) → Ⅳ级响应\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“三峡水库” — 三峡水库出现险情\"\n        ],\n        \"instance_logicexpression\": [\n            \"ReservoirDanger(三峡水库) → Ⅳ级响应\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c1=“北京市” — 北京市因旱影响正常供水\",\n            \"c2=“上海市” — 上海市因旱影响正常供水\"\n        ],\n        \"instance_logicexpression\": [\n            \"WaterSupplyAffected(北京市) ∧ WaterSupplyAffected(上海市) → Ⅳ级响应\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“国家防总办公室常务副主任” — 表示国家防总办公室常务副主任\",\n            \"i=“长江流域防汛指挥机构” — 表示相关流域防汛指挥机构\",\n            \"p=“江苏省防汛抗旱指挥机构” — 表示相关省、自治区、直辖市的防汛抗旱指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (PresideOverMeeting(国家防总办公室常务副主任) ∧ MakeArrangements(国家防总办公室常务副主任) ∧ StrengthenMonitoring(国家防总办公室常务副主任) ∧ ReportToGovernment(国家防总办公室常务副主任, 国务院) ∧ NotifyMembers(国家防总办公室常务副主任))\",\n            \"∀i (Forecasting(长江流域防汛指挥机构) ∧ ReportToGovernment(长江流域防汛指挥机构, 国家防总办公室))\",\n            \"∀p (ArrangeWork(江苏省防汛抗旱指挥机构) ∧ DispatchEngineering(江苏省防汛抗旱指挥机构) ∧ (TakeDefenseMeasures(江苏省防汛抗旱指挥机构) ∨ OrganizeDroughtRelief(江苏省防汛抗旱指挥机构)) ∧ SendExpertGroup(江苏省防汛抗旱指挥机构) ∧ ReportWorkStatus(江苏省防汛抗旱指挥机构, 当地人民政府) ∧ ReportWorkStatus(江苏省防汛抗旱指挥机构, 国家防总办公室))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家防总办公室常务副主任” — 表示国家防总办公室常务副主任\",\n            \"i=“黄河流域防汛指挥机构” — 表示相关流域防汛指挥机构\",\n            \"p=“山东省防汛抗旱指挥机构” — 表示相关省、自治区、直辖市的防汛抗旱指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (PresideOverMeeting(国家防总办公室常务副主任) ∧ MakeArrangements(国家防总办公室常务副主任) ∧ StrengthenMonitoring(国家防总办公室常务副主任) ∧ ReportToGovernment(国家防总办公室常务副主任, 国务院) ∧ NotifyMembers(国家防总办公室常务副主任))\",\n            \"∀i (Forecasting(黄河流域防汛指挥机构) ∧ ReportToGovernment(黄河流域防汛指挥机构, 国家防总办公室))\",\n            \"∀p (ArrangeWork(山东省防汛抗旱指挥机构) ∧ DispatchEngineering(山东省防汛抗旱指挥机构) ∧ (TakeDefenseMeasures(山东省防汛抗旱指挥机构) ∨ OrganizeDroughtRelief(山东省防汛抗旱指挥机构)) ∧ SendExpertGroup(山东省防汛抗旱指挥机构) ∧ ReportWorkStatus(山东省防汛抗旱指挥机构, 当地人民政府) ∧ ReportWorkStatus(山东省防汛抗旱指挥机构, 国家防总办公室))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家防总办公室常务副主任” — 表示国家防总办公室常务副主任\",\n            \"i=“珠江流域防汛指挥机构” — 表示相关流域防汛指挥机构\",\n            \"p=“广东省防汛抗旱指挥机构” — 表示相关省、自治区、直辖市的防汛抗旱指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (PresideOverMeeting(国家防总办公室常务副主任) ∧ MakeArrangements(国家防总办公室常务副主任) ∧ StrengthenMonitoring(国家防总办公室常务副主任) ∧ ReportToGovernment(国家防总办公室常务副主任, 国务院) ∧ NotifyMembers(国家防总办公室常务副主任))\",\n            \"∀i (Forecasting(珠江流域防汛指挥机构) ∧ ReportToGovernment(珠江流域防汛指挥机构, 国家防总办公室))\",\n            \"∀p (ArrangeWork(广东省防汛抗旱指挥机构) ∧ DispatchEngineering(广东省防汛抗旱指挥机构) ∧ (TakeDefenseMeasures(广东省防汛抗旱指挥机构) ∨ OrganizeDroughtRelief(广东省防汛抗旱指挥机构)) ∧ SendExpertGroup(广东省防汛抗旱指挥机构) ∧ ReportWorkStatus(广东省防汛抗旱指挥机构, 当地人民政府) ∧ ReportWorkStatus(广东省防汛抗旱指挥机构, 国家防总办公室))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“洪水” — 表示出现了洪水灾害\",\n            \"Agency=“市防汛抗旱指挥机构” — 表示事发地的防汛抗旱指挥机构为市防汛抗旱指挥机构\",\n            \"Leader=“市防汛抗旱指挥机构负责人” — 表示防汛抗旱指挥机构的负责人\",\n            \"Units=“市救援队, 市医疗队” — 表示有关单位或部门为市救援队和市医疗队\",\n            \"SuperiorAgency=“省级防汛抗旱指挥机构” — 表示上一级防汛抗旱指挥机构为省级防汛抗旱指挥机构\",\n            \"Scene=“受灾区” — 表示灾害现场为受灾区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (DisasterOccured(洪水) → (ActivatePlan(市防汛抗旱指挥机构) ∧ EstablishCommand(市防汛抗旱指挥机构) ∧ ReportToSuperior(市防汛抗旱指挥机构) ∧ CollectInfo(市防汛抗旱指挥机构) ∧ DetermineNature(市防汛抗旱指挥机构) ∧ ReportChanges(市防汛抗旱指挥机构)))\",\n            \"∀d (DisasterOccured(洪水) → LeaderOnDuty(市防汛抗旱指挥机构负责人) ∧ AnalyzeEvent(市防汛抗旱指挥机构负责人) ∧ PredictTrend(市防汛抗旱指挥机构负责人) ∧ OrganizeCommand(市防汛抗旱指挥机构负责人, 市救援队, 市医疗队))\",\n            \"∀d (DisasterOccured(洪水) ∧ 重大灾害(洪水) → (DispatchTeam(省级防汛抗旱指挥机构, 受灾区) ∧ EstablishFrontCommand(省级防汛抗旱指挥机构)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“干旱” — 表示出现了干旱灾害\",\n            \"Agency=“县防汛抗旱指挥机构” — 表示事发地的防汛抗旱指挥机构为县防汛抗旱指挥机构\",\n            \"Leader=“县防汛抗旱指挥机构负责人” — 表示防汛抗旱指挥机构的负责人\",\n            \"Units=“县消防队, 县水务局” — 表示有关单位或部门为县消防队和县水务局\",\n            \"SuperiorAgency=“市级防汛抗旱指挥机构” — 表示上一级防汛抗旱指挥机构为市级防汛抗旱指挥机构\",\n            \"Scene=“干旱区” — 表示灾害现场为干旱区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (DisasterOccured(干旱) → (ActivatePlan(县防汛抗旱指挥机构) ∧ EstablishCommand(县防汛抗旱指挥机构) ∧ ReportToSuperior(县防汛抗旱指挥机构) ∧ CollectInfo(县防汛抗旱指挥机构) ∧ DetermineNature(县防汛抗旱指挥机构) ∧ ReportChanges(县防汛抗旱指挥机构)))\",\n            \"∀d (DisasterOccured(干旱) → LeaderOnDuty(县防汛抗旱指挥机构负责人) ∧ AnalyzeEvent(县防汛抗旱指挥机构负责人) ∧ PredictTrend(县防汛抗旱指挥机构负责人) ∧ OrganizeCommand(县防汛抗旱指挥机构负责人, 县消防队, 县水务局))\",\n            \"∀d (DisasterOccured(干旱) ∧ 重大灾害(干旱) → (DispatchTeam(市级防汛抗旱指挥机构, 干旱区) ∧ EstablishFrontCommand(市级防汛抗旱指挥机构)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“长江流域” — 表示水旱灾害发生在长江流域\",\n            \"e=“严重洪涝” — 表示事件性质为严重洪涝\",\n            \"Part=“低洼地区” — 表示重点部位为低洼地区\",\n            \"Action=“紧急疏散” — 表示紧急控制行动为紧急疏散\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀e (Disaster(长江流域) ∧ NatureAndSeverity(严重洪涝) → (FloodDroughtControl(长江流域) → (GovernmentApproval(EmergencyControl(长江流域, 低洼地区)) ∧ (EmergencyControl(长江流域, 低洼地区) → (¬FurtherExpansion(严重洪涝)))))\",\n            \"Disaster(长江流域) → (FloodDroughtControl(长江流域) → (SocialForcesParticipation(紧急疏散) ∨ Requisition(紧急疏散)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“黄河流域” — 表示水旱灾害发生在黄河流域\",\n            \"e=“干旱” — 表示事件性质为干旱\",\n            \"Part=“灌溉区” — 表示重点部位为灌溉区\",\n            \"Action=“水资源调配” — 表示紧急控制行动为水资源调配\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀e (Disaster(黄河流域) ∧ NatureAndSeverity(干旱) → (FloodDroughtControl(黄河流域) → (GovernmentApproval(EmergencyControl(黄河流域, 灌溉区)) ∧ (EmergencyControl(黄河流域, 灌溉区) → (¬FurtherExpansion(干旱)))))\",\n            \"Disaster(黄河流域) → (FloodDroughtControl(黄河流域) → (SocialForcesParticipation(水资源调配) ∨ Requisition(水资源调配)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“珠江三角洲” — 表示水旱灾害发生在珠江三角洲\",\n            \"e=“台风引发的洪水” — 表示事件性质为台风引发的洪水\",\n            \"Part=“沿海城市” — 表示重点部位为沿海城市\",\n            \"Action=“抗洪抢险” — 表示全力投入抗洪抢险\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀e (Disaster(珠江三角洲) ∧ NatureAndSeverity(台风引发的洪水) → (FloodDroughtControl(珠江三角洲) → (GovernmentApproval(EmergencyControl(珠江三角洲, 沿海城市)) ∧ (EmergencyControl(珠江三角洲, 沿海城市) → (¬FurtherExpansion(台风引发的洪水)))))\",\n            \"Disaster(珠江三角洲) → (FloodDroughtControl(珠江三角洲) → FloodRelief(抗洪抢险))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“长江流域” — 表示长江流域的汛情、旱情及防汛抗旱动态\",\n            \"t=“统一发布” — 表示信息发布类型为统一发布\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀t (FloodSituation(长江流域) ∨ DroughtSituation(长江流域) ∨ FloodDroughtDynamics(长江流域) → (Review(国家防总, 长江流域) ∧ InformationRelease(国家防总, 长江流域, 统一发布)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“黄河流域” — 表示黄河流域的水旱灾情\",\n            \"d=“民政部” — 表示民政部参与审核和发布\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterSituation(黄河流域) → (Review(国家防办, 黄河流域) ∧ Review(民政部, 黄河流域) ∧ InformationRelease(国家防办, 黄河流域, 联合发布))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“珠江三角洲” — 表示珠江三角洲的汛情、旱情及防汛抗旱动态\",\n            \"t=“地方发布” — 表示信息发布类型为地方发布\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀t (FloodSituation(珠江三角洲) ∨ DroughtSituation(珠江三角洲) ∨ FloodDroughtDynamics(珠江三角洲) → (Review(地方防汛抗旱指挥机构, 珠江三角洲) ∧ InformationRelease(地方防汛抗旱指挥机构, 珠江三角洲, 地方发布)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“松花江流域” — 表示松花江流域的水旱灾情\",\n            \"d=“地方民政部门” — 表示地方民政部门参与审核和发布\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterSituation(松花江流域) → (Review(地方防汛指挥部办公室, 松花江流域) ∧ Review(地方民政部门, 松花江流域) ∧ InformationRelease(地方防汛指挥部办公室, 松花江流域, 地方联合发布))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“洪水灾害” — 表示洪水灾害已经得到有效控制\",\n            \"CommandingBody=“市防汛抗旱指挥部” — 表示防汛抗旱指挥机构为市防汛抗旱指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (DisasterControlled(洪水灾害) → (AnnounceEnd(市防汛抗旱指挥部)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“极度缺水” — 表示极度缺水已经得到有效控制\",\n            \"CommandingBody=“省防汛抗旱指挥部” — 表示防汛抗旱指挥机构为省防汛抗旱指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (DisasterControlled(极度缺水) → (AnnounceEnd(省防汛抗旱指挥部)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“沙袋” — 表示依照规定征用或调用的沙袋\",\n            \"i=“抽水机” — 表示依照规定征用或调用的抽水机\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (Requisitioned(沙袋) → (Return(沙袋) ∨ DamagedOrUnreturnable(沙袋)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“救生衣” — 表示依照规定征用或调用的救生衣\",\n            \"i=“运输车辆” — 表示依照规定征用或调用的运输车辆\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (Requisitioned(救生衣) → (Return(救生衣) ∨ DamagedOrUnreturnable(救生衣)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“损坏的抽水机” — 表示造成损坏的抽水机\",\n            \"Regulation=“国家防汛抗旱补偿条例” — 表示按照国家防汛抗旱补偿条例给予适当补偿或作其他处理\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (DamagedOrUnreturnable(损坏的抽水机) → CompensateOrHandle(损坏的抽水机, 国家防汛抗旱补偿条例))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"CommandingBody=“市防汛抗旱指挥部” — 表示防汛抗旱指挥机构为市防汛抗旱指挥部\",\n            \"Government=“市政府” — 表示当地政府为市政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (AssistNormalcy(市防汛抗旱指挥部, 市政府) → RepairInfrastructure(市防汛抗旱指挥部))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"通信与信息保障：CommunicationAndInformationSupport() — 表示通信与信息保障措施已实施\",\n            \"应急支援与装备保障：EmergencySupportAndEquipmentSupport() — 表示应急支援与装备保障措施已实施\",\n            \"现场救援和工程抢险保障：RescueAndEngineeringEmergencySupport() — 表示现场救援和工程抢险保障措施已实施\",\n            \"应急队伍保障：EmergencyTeamSupport() — 表示应急队伍保障措施已实施\",\n            \"供电保障：PowerSupplySupport() — 表示供电保障措施已实施\",\n            \"交通运输保障：TransportationSupport() — 表示交通运输保障措施已实施\",\n            \"医疗保障：MedicalSupport() — 表示医疗保障措施已实施\",\n            \"治安保障：PublicSecuritySupport() — 表示治安保障措施已实施\",\n            \"物资保障：MaterialSupport() — 表示物资保障措施已实施\",\n            \"资金保障：FinancialSupport() — 表示资金保障措施已实施\",\n            \"社会动员保障：SocialMobilizationSupport() — 表示社会动员保障措施已实施\",\n            \"技术保障：TechnicalSupport() — 表示技术保障措施已实施\",\n            \"宣传：Publicity() — 表示宣传措施已实施\",\n            \"培训：Training() — 表示培训措施已实施\",\n            \"演习：Exercise() — 表示演习措施已实施\"\n        ],\n        \"instance_logicexpression\": [\n            \"CommunicationAndInformationSupport() ∧ EmergencySupportAndEquipmentSupport() ∧ RescueAndEngineeringEmergencySupport() ∧ EmergencyTeamSupport() ∧ PowerSupplySupport() ∧ TransportationSupport() ∧ MedicalSupport() ∧ PublicSecuritySupport() ∧ MaterialSupport() ∧ FinancialSupport() ∧ SocialMobilizationSupport() ∧ TechnicalSupport() ∧ Publicity() ∧ Training() ∧ Exercise()\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“城市A” — 表示在城市A进行救灾工作\",\n            \"a=“城市A” — 表示在城市A补充防汛抢险物料\",\n            \"a=“城市A” — 表示在城市A修复水毁工程\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (DisasterRelief(城市A) ∨ FloodControlSupplies(城市A) ∨ RepairDamagedEngineering(城市A) ∨ CompensationForFloodStorage(城市A) ∨ PostDisasterReconstruction(城市A) ∨ EvaluateFloodDrought(城市A))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“农村B” — 表示在农村B进行蓄滞洪区补偿\",\n            \"a=“农村B” — 表示在农村B进行灾后重建工作\",\n            \"a=“农村B” — 表示在农村B进行防汛抗旱工作评价\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (DisasterRelief(农村B) ∨ FloodControlSupplies(农村B) ∨ RepairDamagedEngineering(农村B) ∨ CompensationForFloodStorage(农村B) ∨ PostDisasterReconstruction(农村B) ∨ EvaluateFloodDrought(农村B))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“山区C” — 表示在山区C进行救灾工作\",\n            \"a=“山区C” — 表示在山区C进行防汛抗旱工作评价\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (DisasterRelief(山区C) ∨ FloodControlSupplies(山区C) ∨ RepairDamagedEngineering(山区C) ∨ CompensationForFloodStorage(山区C) ∨ PostDisasterReconstruction(山区C) ∨ EvaluateFloodDrought(山区C))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“河流D” — 表示在河流D补充防汛抢险物料\",\n            \"a=“河流D” — 表示在河流D修复水毁工程\",\n            \"a=“河流D” — 表示在河流D进行灾后重建工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (DisasterRelief(河流D) ∨ FloodControlSupplies(河流D) ∨ RepairDamagedEngineering(河流D) ∨ CompensationForFloodStorage(河流D) ∨ PostDisasterReconstruction(河流D) ∨ EvaluateFloodDrought(河流D))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Government=“中央政府” — 表示中央政府对海上搜救工作实行统一领导\",\n            \"Organization=“海上搜救中心” — 表示海上搜救中心负责组织和协调\"\n        ],\n        \"instance_logicexpression\": [\n            \"UnifiedLeadership(中央政府) ∧ EmergencyResponseMechanism(中央政府) ∧ OrganizeSocialResources(中央政府) → CombineProfessionalAndSocialForces(海上搜救中心) ∧ MultiDepartmentParticipation(海上搜救中心) ∧ MultidisciplinaryTechnicalSupport(海上搜救中心) ∧ WholeSocietyParticipation(海上搜救中心)\",\n            \"LegalRegulation(海事法) → RegulateOrganizationCoordinationCommand(海上搜救中心)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Government=“地方政府” — 表示地方政府对海上搜救工作实行统一领导\",\n            \"Organization=“地方海上搜救队” — 表示地方海上搜救队负责组织和协调\"\n        ],\n        \"instance_logicexpression\": [\n            \"UnifiedLeadership(地方政府) ∧ EmergencyResponseMechanism(地方政府) ∧ OrganizeSocialResources(地方政府) → CombineProfessionalAndSocialForces(地方海上搜救队) ∧ MultiDepartmentParticipation(地方海上搜救队) ∧ MultidisciplinaryTechnicalSupport(地方海上搜救队) ∧ WholeSocietyParticipation(地方海上搜救队)\",\n            \"LegalRegulation(地方应急条例) → RegulateOrganizationCoordinationCommand(地方海上搜救队)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Government=“联邦政府” — 表示联邦政府对海上搜救工作实行统一领导\",\n            \"Organization=“联邦海上救援组织” — 表示联邦海上救援组织负责组织和协调\"\n        ],\n        \"instance_logicexpression\": [\n            \"UnifiedLeadership(联邦政府) ∧ EmergencyResponseMechanism(联邦政府) ∧ OrganizeSocialResources(联邦政府) → CombineProfessionalAndSocialForces(联邦海上救援组织) ∧ MultiDepartmentParticipation(联邦海上救援组织) ∧ MultidisciplinaryTechnicalSupport(联邦海上救援组织) ∧ WholeSocietyParticipation(联邦海上救援组织)\",\n            \"LegalRegulation(联邦海事法) → RegulateOrganizationCoordinationCommand(联邦海上救援组织)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“海上搜救行动” — 表示对海上突发事件应急反应行动实行统一指挥。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (UnifiedCommand(海上搜救行动) → (CoordinatedAction(海上搜救行动) ∧ BestEffect(海上搜救行动)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海上溢油事件” — 表示海上突发事件为溢油事件。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (Incident(海上溢油事件) → TieredManagement(海上溢油事件))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海上船只碰撞事故” — 表示海上突发事件为船只碰撞事故。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (LocalCommand(海上船只碰撞事故) → (TimelyAnalysis(海上船只碰撞事故) ∧ CorrectDecision(海上船只碰撞事故) ∧ AdHocHandling(海上船只碰撞事故) ∧ EnhanceTimelinessEffectiveness(海上船只碰撞事故)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海上人员失踪事件” — 表示海上突发事件为人员失踪事件。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (Incident(海上人员失踪事件) → TieredManagement(海上人员失踪事件))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海上自然灾害” — 表示海上突发事件为自然灾害。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (LocalCommand(海上自然灾害) → (TimelyAnalysis(海上自然灾害) ∧ CorrectDecision(海上自然灾害) ∧ AdHocHandling(海上自然灾害) ∧ EnhanceTimelinessEffectiveness(海上自然灾害)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Organization=“国家海上搜救应急组织指挥体系” — 表示该组织指挥体系\",\n            \"Components=[“应急领导机构”, “运行管理机构”, “咨询机构”, “应急指挥机构”, “现场指挥”, “应急救助力量”] — 表示组织指挥体系的组成部分\"\n        ],\n        \"instance_logicexpression\": [\n            \"ConsistsOf(“国家海上搜救应急组织指挥体系”, [“应急领导机构”, “运行管理机构”, “咨询机构”, “应急指挥机构”, “现场指挥”, “应急救助力量”])\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“国家海上搜救部际联席会议制度” — 表示该联席会议制度\",\n            \"Institution=“应急领导机构” — 表示应急领导机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"Establish(“国家海上搜救部际联席会议制度”, “应急领导机构”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Institution=“国家海上搜救部际联席会议制度” — 表示该联席会议制度\",\n            \"Activity=“国家海上搜救应急反应工作” — 表示海上搜救应急反应工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"Guide(“国家海上搜救部际联席会议制度”, “国家海上搜救应急反应工作”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“中国海上搜救中心” — 表示中国海上搜救中心\",\n            \"Institution=“交通部” — 表示交通部\"\n        ],\n        \"instance_logicexpression\": [\n            \"Establish(“中国海上搜救中心”, “交通部”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Institution=“中国海上搜救中心” — 表示中国海上搜救中心\",\n            \"Activity=“日常工作” — 表示日常工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"ResponsibleFor(“中国海上搜救中心”, “日常工作”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Institution=“中国海上搜救中心” — 表示中国海上搜救中心\",\n            \"Role=“海上搜救运行管理机构” — 表示海上搜救运行管理机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"Undertake(“中国海上搜救中心”, “海上搜救运行管理机构”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海事局” — 表示海事局\",\n            \"Role=“应急反应” — 表示应急反应\",\n            \"Activity=“海上搜救应急反应” — 表示海上搜救应急反应活动\"\n        ],\n        \"instance_logicexpression\": [\n            \"PlayRole(“海事局”, “应急反应”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“救援队” — 表示救援队\",\n            \"Role=“抢险救灾” — 表示抢险救灾\",\n            \"Activity=“海上救援行动” — 表示海上救援行动\"\n        ],\n        \"instance_logicexpression\": [\n            \"PlayRole(“救援队”, “抢险救灾”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“后勤保障部门” — 表示后勤保障部门\",\n            \"Role=“支持保障” — 表示支持保障\",\n            \"Activity=“物资供应” — 表示物资供应活动\"\n        ],\n        \"instance_logicexpression\": [\n            \"PlayRole(“后勤保障部门”, “支持保障”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“民政部” — 表示民政部\",\n            \"Role=“善后处理” — 表示善后处理\",\n            \"Activity=“遇难者家属安抚” — 表示遇难者家属安抚活动\"\n        ],\n        \"instance_logicexpression\": [\n            \"PlayRole(“民政部”, “善后处理”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“海上搜救活动1” — 表示一次具体的海上搜救活动\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (MaritimeSearchAndRescue(海上搜救活动1) → UndertakeOperationManagement(中国海上搜救中心, 海上搜救活动1) ∧ UndertakeOperationManagement(交通部, 海上搜救活动1))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“海上搜救活动2” — 表示另一次具体的海上搜救活动\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (MaritimeSearchAndRescue(海上搜救活动2) → UndertakeOperationManagement(中国海上搜救中心, 海上搜救活动2) ∧ UndertakeOperationManagement(交通部, 海上搜救活动2))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“海上搜救活动3” — 表示第三次具体的海上搜救活动\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (MaritimeSearchAndRescue(海上搜救活动3) → UndertakeOperationManagement(中国海上搜救中心, 海上搜救活动3) ∧ UndertakeOperationManagement(交通部, 海上搜救活动3))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“海上搜救中心” — 表示海上搜救中心是咨询机构\",\n            \"o=“海上搜救中心” — 表示海上搜救中心是海上搜救专家组\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (ConsultationOrganization(海上搜救中心) ↔ (MaritimeSearchAndRescueExpertGroup(海上搜救中心) ∨ RelatedConsultationOrganization(海上搜救中心)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“环境评估公司” — 表示环境评估公司是咨询机构\",\n            \"o=“环境评估公司” — 表示环境评估公司是其他相关咨询机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (ConsultationOrganization(环境评估公司) ↔ (MaritimeSearchAndRescueExpertGroup(环境评估公司) ∨ RelatedConsultationOrganization(环境评估公司)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“气象咨询中心” — 表示气象咨询中心是咨询机构\",\n            \"o=“气象咨询中心” — 表示气象咨询中心是其他相关咨询机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (ConsultationOrganization(气象咨询中心) ↔ (MaritimeSearchAndRescueExpertGroup(气象咨询中心) ∨ RelatedConsultationOrganization(气象咨询中心)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“海洋法专家组” — 表示海洋法专家组是咨询机构\",\n            \"o=“海洋法专家组” — 表示海洋法专家组是其他相关咨询机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (ConsultationOrganization(海洋法专家组) ↔ (MaritimeSearchAndRescueExpertGroup(海洋法专家组) ∨ RelatedConsultationOrganization(海洋法专家组)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=“国家海上搜救专家组” — 表示专家组为国家海上搜救专家组\",\n            \"e1=“李教授” — 李教授为航运行业专家\",\n            \"e2=“王工程师” — 王工程师为海事行业专家\"\n        ],\n        \"instance_logicexpression\": [\n            \"ConsistsOf(国家海上搜救专家组, 李教授) → Industry(李教授, 航运) ∧ ResponsibleFor(国家海上搜救专家组, 海上搜救技术咨询)\",\n            \"ConsistsOf(国家海上搜救专家组, 王工程师) → Industry(王工程师, 海事) ∧ ResponsibleFor(国家海上搜救专家组, 海上搜救技术咨询)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“国家海上搜救专家组” — 表示专家组为国家海上搜救专家组\",\n            \"e3=“赵博士” — 赵博士为航空行业专家\",\n            \"e4=“孙医生” — 孙医生为医疗卫生行业专家\"\n        ],\n        \"instance_logicexpression\": [\n            \"ConsistsOf(国家海上搜救专家组, 赵博士) → Industry(赵博士, 航空) ∧ ResponsibleFor(国家海上搜救专家组, 海上搜救技术咨询)\",\n            \"ConsistsOf(国家海上搜救专家组, 孙医生) → Industry(孙医生, 医疗卫生) ∧ ResponsibleFor(国家海上搜救专家组, 海上搜救技术咨询)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“国家海上搜救专家组” — 表示专家组为国家海上搜救专家组\",\n            \"e5=“周队长” — 周队长为消防行业专家\",\n            \"e6=“吴技术员” — 吴技术员为环保行业专家\"\n        ],\n        \"instance_logicexpression\": [\n            \"ConsistsOf(国家海上搜救专家组, 周队长) → Industry(周队长, 消防) ∧ ResponsibleFor(国家海上搜救专家组, 海上搜救技术咨询)\",\n            \"ConsistsOf(国家海上搜救专家组, 吴技术员) → Industry(吴技术员, 环保) ∧ ResponsibleFor(国家海上搜救专家组, 海上搜救技术咨询)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“国家海上搜救专家组” — 表示专家组为国家海上搜救专家组\",\n            \"e7=“郑工” — 郑工为石油化工行业专家\",\n            \"e8=“冯工” — 冯工为海洋工程行业专家\"\n        ],\n        \"instance_logicexpression\": [\n            \"ConsistsOf(国家海上搜救专家组, 郑工) → Industry(郑工, 石油化工) ∧ ResponsibleFor(国家海上搜救专家组, 海上搜救技术咨询)\",\n            \"ConsistsOf(国家海上搜救专家组, 冯工) → Industry(冯工, 海洋工程) ∧ ResponsibleFor(国家海上搜救专家组, 海上搜救技术咨询)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“国家海上搜救专家组” — 表示专家组为国家海上搜救专家组\",\n            \"e9=“陈技术员” — 陈技术员为海洋地质行业专家\",\n            \"e10=“蒋技术员” — 蒋技术员为气象行业专家\"\n        ],\n        \"instance_logicexpression\": [\n            \"ConsistsOf(国家海上搜救专家组, 陈技术员) → Industry(陈技术员, 海洋地质) ∧ ResponsibleFor(国家海上搜救专家组, 海上搜救技术咨询)\",\n            \"ConsistsOf(国家海上搜救专家组, 蒋技术员) → Industry(蒋技术员, 气象) ∧ ResponsibleFor(国家海上搜救专家组, 海上搜救技术咨询)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“国家海上搜救专家组” — 表示专家组为国家海上搜救专家组\",\n            \"e11=“刘技术员” — 刘技术员为安全管理行业专家\"\n        ],\n        \"instance_logicexpression\": [\n            \"ConsistsOf(国家海上搜救专家组, 刘技术员) → Industry(刘技术员, 安全管理) ∧ ResponsibleFor(国家海上搜救专家组, 海上搜救技术咨询)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“海洋气象研究所” — 表示咨询机构为海洋气象研究所\",\n            \"s=“海上气象咨询服务” — 表示服务为海上气象咨询服务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀s (Request(中国海上搜救中心, “海洋气象研究所”) ∧ Related(“海上气象咨询服务”, 海上搜救) → ProvideConsultation(“海洋气象研究所”, “海上气象咨询服务”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海事法律咨询中心” — 表示咨询机构为海事法律咨询中心\",\n            \"s=“海上搜救法律咨询服务” — 表示服务为海上搜救法律咨询服务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀s (Request(中国海上搜救中心, “海事法律咨询中心”) ∧ Related(“海上搜救法律咨询服务”, 海上搜救) → ProvideConsultation(“海事法律咨询中心”, “海上搜救法律咨询服务”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海洋生物多样性保护组织” — 表示咨询机构为海洋生物多样性保护组织\",\n            \"s=“海洋生物多样性保护咨询服务” — 表示服务为海洋生物多样性保护咨询服务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀s (Request(中国海上搜救中心, “海洋生物多样性保护组织”) ∧ Related(“海洋生物多样性保护咨询服务”, 海上搜救) → ProvideConsultation(“海洋生物多样性保护组织”, “海洋生物多样性保护咨询服务”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海上安全技术研究所” — 表示咨询机构为海上安全技术研究所\",\n            \"s=“海上安全技术咨询服务” — 表示服务为海上安全技术咨询服务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀s (Request(中国海上搜救中心, “海上安全技术研究所”) ∧ Related(“海上安全技术咨询服务”, 海上搜救) → ProvideConsultation(“海上安全技术研究所”, “海上安全技术咨询服务”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Organization=“中国海上搜救中心” — 表示中国海上搜救中心是应急指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyCommand(中国海上搜救中心)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“广东省海上搜救中心” — 表示广东省海上搜救中心是省级海上搜救机构\",\n            \"l=“广东省” — 表示省级行政区划\",\n            \"Leader=“张伟” — 表示省（区、市）政府领导\",\n            \"d=“广东省交通厅” — 表示相关部门\",\n            \"a=“广东省军区” — 表示当地驻军\"\n        ],\n        \"instance_logicexpression\": [\n            \"Establish(广东省海上搜救中心, 张伟, 广东省交通厅, 广东省军区) → EmergencyCommand(广东省海上搜救中心)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“浙江省海上搜救中心” — 表示浙江省海上搜救中心是省级海上搜救机构\",\n            \"b=“舟山搜救分中心” — 表示设立的分支机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyCommand(浙江省海上搜救中心) → EstablishBranch(浙江省海上搜救中心, 舟山搜救分中心)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“上海市海上搜救中心” — 表示上海市海上搜救中心是地方海上搜救机构\",\n            \"Level=“市级” — 表示市级行政级别\"\n        ],\n        \"instance_logicexpression\": [\n            \"LocalMaritimeSearchAndRescue(上海市海上搜救中心, 市级)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“江苏省海上搜救中心” — 表示江苏省海上搜救中心是省级海上搜救机构\",\n            \"l=“江苏省” — 表示省级行政区划\",\n            \"Leader=“李强” — 表示省（区、市）政府领导\",\n            \"d=“江苏省海事局” — 表示相关部门\",\n            \"a=“江苏省军区” — 表示当地驻军\"\n        ],\n        \"instance_logicexpression\": [\n            \"Establish(江苏省海上搜救中心, 李强, 江苏省海事局, 江苏省军区) → EmergencyCommand(江苏省海上搜救中心)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“广东省海上搜救中心” — 表示广东省海上搜救中心为省级海上搜救机构\",\n            \"a=“广东省责任区” — 表示广东省海上搜救中心的责任区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀a (省级海上搜救机构(“广东省海上搜救中心”) ∧ 责任区(“广东省责任区”) → (BearResponsibility(“广东省海上搜救中心”, “广东省责任区”) ∧ MaritimeSearchAndRescue(“广东省海上搜救中心”, “广东省责任区”) ∧ EmergencyOrganizationAndCommand(“广东省海上搜救中心”, “广东省责任区”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“浙江省海上搜救中心” — 表示浙江省海上搜救中心为省级海上搜救机构\",\n            \"a=“浙江省责任区” — 表示浙江省海上搜救中心的责任区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀a (省级海上搜救机构(“浙江省海上搜救中心”) ∧ 责任区(“浙江省责任区”) → (BearResponsibility(“浙江省海上搜救中心”, “浙江省责任区”) ∧ MaritimeSearchAndRescue(“浙江省海上搜救中心”, “浙江省责任区”) ∧ EmergencyOrganizationAndCommand(“浙江省海上搜救中心”, “浙江省责任区”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“山东省海上搜救中心” — 表示山东省海上搜救中心为省级海上搜救机构\",\n            \"a=“山东省责任区” — 表示山东省海上搜救中心的责任区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀a (省级海上搜救机构(“山东省海上搜救中心”) ∧ 责任区(“山东省责任区”) → (BearResponsibility(“山东省海上搜救中心”, “山东省责任区”) ∧ MaritimeSearchAndRescue(“山东省海上搜救中心”, “山东省责任区”) ∧ EmergencyOrganizationAndCommand(“山东省海上搜救中心”, “山东省责任区”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海南省海上搜救中心” — 表示海南省海上搜救中心为省级海上搜救机构\",\n            \"a=“海南省责任区” — 表示海南省海上搜救中心的责任区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀a (省级海上搜救机构(“海南省海上搜救中心”) ∧ 责任区(“海南省责任区”) → (BearResponsibility(“海南省海上搜救中心”, “海南省责任区”) ∧ MaritimeSearchAndRescue(“海南省海上搜救中心”, “海南省责任区”) ∧ EmergencyOrganizationAndCommand(“海南省海上搜救中心”, “海南省责任区”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"b=“上海海上搜救中心” — 表示上海海上搜救中心是一个海上搜救分支机构\",\n            \"p=“上海市海上搜救省级机构” — 表示上海市海上搜救省级机构是省级海上搜救机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"MaritimeSearchAndRescueBranch(上海海上搜救中心) → (MunicipalLevel(上海海上搜救中心) ∨ CountyLevel(上海海上搜救中心)) ∧ MaritimeEmergencyOrganizationCommand(上海海上搜救中心)\",\n            \"MaritimeSearchAndRescueBranch(上海海上搜救中心) → ∃p (ProvincialInstitution(上海市海上搜救省级机构) ∧ DutyDeterminedBy(上海海上搜救中心, 上海市海上搜救省级机构))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"b=“青岛县级海上搜救站” — 表示青岛县级海上搜救站是一个海上搜救分支机构\",\n            \"p=“山东省海上搜救省级机构” — 表示山东省海上搜救省级机构是省级海上搜救机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"MaritimeSearchAndRescueBranch(青岛县级海上搜救站) → (MunicipalLevel(青岛县级海上搜救站) ∨ CountyLevel(青岛县级海上搜救站)) ∧ MaritimeEmergencyOrganizationCommand(青岛县级海上搜救站)\",\n            \"MaritimeSearchAndRescueBranch(青岛县级海上搜救站) → ∃p (ProvincialInstitution(山东省海上搜救省级机构) ∧ DutyDeterminedBy(青岛县级海上搜救站, 山东省海上搜救省级机构))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"b=“广州海上搜救分中心” — 表示广州海上搜救分中心是一个海上搜救分支机构\",\n            \"p=“广东省海上搜救省级机构” — 表示广东省海上搜救省级机构是省级海上搜救机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"MaritimeSearchAndRescueBranch(广州海上搜救分中心) → (MunicipalLevel(广州海上搜救分中心) ∨ CountyLevel(广州海上搜救分中心)) ∧ MaritimeEmergencyOrganizationCommand(广州海上搜救分中心)\",\n            \"MaritimeSearchAndRescueBranch(广州海上搜救分中心) → ∃p (ProvincialInstitution(广东省海上搜救省级机构) ∧ DutyDeterminedBy(广州海上搜救分中心, 广东省海上搜救省级机构))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"b=“海南县级海上搜救队” — 表示海南县级海上搜救队是一个海上搜救分支机构\",\n            \"p=“海南省海上搜救省级机构” — 表示海南省海上搜救省级机构是省级海上搜救机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"MaritimeSearchAndRescueBranch(海南县级海上搜救队) → (MunicipalLevel(海南县级海上搜救队) ∨ CountyLevel(海南县级海上搜救队)) ∧ MaritimeEmergencyOrganizationCommand(海南县级海上搜救队)\",\n            \"MaritimeSearchAndRescueBranch(海南县级海上搜救队) → ∃p (ProvincialInstitution(海南省海上搜救省级机构) ∧ DutyDeterminedBy(海南县级海上搜救队, 海南省海上搜救省级机构))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“海事局” — 表示海事局作为政府部门\",\n            \"v=“远洋救助船” — 表示远洋救助船作为民用船舶\",\n            \"o=“蓝天救援队” — 表示蓝天救援队作为社会团体\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(海事局) → (ProfessionalRescueForce(海事局) ∨ GovernmentRescueForce(海事局))\",\n            \"VesselOrAircraft(远洋救助船) → CivilianRescueForce(远洋救助船)\",\n            \"OrganizationOrIndividual(蓝天救援队) → SocialRescueForce(蓝天救援队)\",\n            \"(ProfessionalRescueForce(海事局) ∨ MilitaryPoliceRescueForce ∨ GovernmentRescueForce(海事局) ∨ CivilianRescueForce(远洋救助船) ∨ SocialRescueForce(蓝天救援队) → ObeyCommand(海事局, CommandCenter))\",\n            \"(ProfessionalRescueForce(海事局) ∨ MilitaryPoliceRescueForce ∨ GovernmentRescueForce(海事局) ∨ CivilianRescueForce(远洋救助船) ∨ SocialRescueForce(蓝天救援队) → ParticipateInAction(海事局, EmergencyAction))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“边防武警” — 表示边防武警作为军队武警救助力量\",\n            \"v=“空中救援直升机” — 表示空中救援直升机作为民用航空器\",\n            \"o=“红十字基金会” — 表示红十字基金会作为社会团体\"\n        ],\n        \"instance_logicexpression\": [\n            \"MilitaryPoliceRescueForce\",\n            \"VesselOrAircraft(空中救援直升机) → CivilianRescueForce(空中救援直升机)\",\n            \"OrganizationOrIndividual(红十字基金会) → SocialRescueForce(红十字基金会)\",\n            \"(ProfessionalRescueForce(边防武警) ∨ MilitaryPoliceRescueForce ∨ GovernmentRescueForce(边防武警) ∨ CivilianRescueForce(空中救援直升机) ∨ SocialRescueForce(红十字基金会) → ObeyCommand(边防武警, CommandCenter))\",\n            \"(ProfessionalRescueForce(边防武警) ∨ MilitaryPoliceRescueForce ∨ GovernmentRescueForce(边防武警) ∨ CivilianRescueForce(空中救援直升机) ∨ SocialRescueForce(红十字基金会) → ParticipateInAction(边防武警, EmergencyAction))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“海洋救助中心” — 表示海洋救助中心作为政府部门\",\n            \"v=“近海巡逻艇” — 表示近海巡逻艇作为民用船舶\",\n            \"o=“志愿者联盟” — 表示志愿者联盟作为社会团体\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(海洋救助中心) → (ProfessionalRescueForce(海洋救助中心) ∨ GovernmentRescueForce(海洋救助中心))\",\n            \"VesselOrAircraft(近海巡逻艇) → CivilianRescueForce(近海巡逻艇)\",\n            \"OrganizationOrIndividual(志愿者联盟) → SocialRescueForce(志愿者联盟)\",\n            \"(ProfessionalRescueForce(海洋救助中心) ∨ MilitaryPoliceRescueForce ∨ GovernmentRescueForce(海洋救助中心) ∨ CivilianRescueForce(近海巡逻艇) ∨ SocialRescueForce(志愿者联盟) → ObeyCommand(海洋救助中心, CommandCenter))\",\n            \"(ProfessionalRescueForce(海洋救助中心) ∨ MilitaryPoliceRescueForce ∨ GovernmentRescueForce(海洋救助中心) ∨ CivilianRescueForce(近海巡逻艇) ∨ SocialRescueForce(志愿者联盟) → ParticipateInAction(海洋救助中心, EmergencyAction))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"w=“台风预警” — 表示预警信息类型为气象\",\n            \"d=“气象局” — 表示预警信息监测部门为气象局\",\n            \"c=“电视广播” — 表示信息播发渠道为电视广播\"\n        ],\n        \"instance_logicexpression\": [\n            \"预警信息(台风预警, 气象) → (气象 = 气象 ∨ 气象 = 海洋 ∨ 气象 = 水文 ∨ 气象 = 地质)\",\n            \"Duty(气象局) ∧ 预警信息(台风预警, 气象) → Release(气象局, 台风预警, 电视广播)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海啸预警” — 表示预警信息类型为海洋\",\n            \"a=“人命” — 表示信息可能威胁的方面为人命\",\n            \"d=“海洋局” — 表示预警信息监测部门为海洋局\",\n            \"c=“互联网” — 表示信息播发渠道为互联网\"\n        ],\n        \"instance_logicexpression\": [\n            \"预警信息(海啸预警, 海洋) ∧ 威胁(海啸预警, 人命) → (人命 = 人命 ∨ 人命 = 财产 ∨ 人命 = 环境安全)\",\n            \"Duty(海洋局) ∧ 预警信息(海啸预警, 海洋) → Release(海洋局, 海啸预警, 互联网)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“洪水预警” — 表示预警信息类型为水文\",\n            \"a=“财产” — 表示信息可能威胁的方面为财产\",\n            \"d=“水利局” — 表示预警信息监测部门为水利局\",\n            \"c=“手机短信” — 表示信息播发渠道为手机短信\"\n        ],\n        \"instance_logicexpression\": [\n            \"预警信息(洪水预警, 水文) ∧ 威胁(洪水预警, 财产) → (财产 = 人命 ∨ 财产 = 财产 ∨ 财产 = 环境安全)\",\n            \"Duty(水利局) ∧ 预警信息(洪水预警, 水文) → Release(水利局, 洪水预警, 手机短信)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“地震预警” — 表示预警信息类型为地质\",\n            \"a=“环境安全” — 表示信息可能威胁的方面为环境安全\",\n            \"d=“地质局” — 表示预警信息监测部门为地质局\",\n            \"c=“社交媒体” — 表示信息播发渠道为社交媒体\"\n        ],\n        \"instance_logicexpression\": [\n            \"预警信息(地震预警, 地质) ∧ 威胁(地震预警, 环境安全) → (环境安全 = 人命 ∨ 环境安全 = 财产 ∨ 环境安全 = 环境安全)\",\n            \"Duty(地质局) ∧ 预警信息(地震预警, 地质) → Release(地质局, 地震预警, 社交媒体)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“远洋号” — 表示从事海上活动的船舶为远洋号\",\n            \"l=“红色预警” — 表示预警级别为红色预警\"\n        ],\n        \"instance_logicexpression\": [\n            \"海上活动(远洋号) → ReceiveWarning(远洋号)\",\n            \"ReceiveWarning(远洋号) ∧ 预警级别(红色预警) → TakePrecautions(远洋号, 红色预警)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“海港公司” — 表示从事海上活动的单位为海港公司\",\n            \"l=“橙色预警” — 表示预警级别为橙色预警\"\n        ],\n        \"instance_logicexpression\": [\n            \"海上活动(海港公司) → ReceiveWarning(海港公司)\",\n            \"ReceiveWarning(海港公司) ∧ 预警级别(橙色预警) → TakePrecautions(海港公司, 橙色预警)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“李海员” — 表示从事海上活动的人员为李海员\",\n            \"l=“黄色预警” — 表示预警级别为黄色预警\"\n        ],\n        \"instance_logicexpression\": [\n            \"海上活动(李海员) → ReceiveWarning(李海员)\",\n            \"ReceiveWarning(李海员) ∧ 预警级别(黄色预警) → TakePrecautions(李海员, 黄色预警)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“油轮泄漏” — 表示海上突发事件为油轮泄漏\",\n            \"Subject=“海警局” — 表示采取防范措施的主体为海警局\",\n            \"Level=“红色预警” — 表示预警级别为红色预警\"\n        ],\n        \"instance_logicexpression\": [\n            \"MaritimeIncident(油轮泄漏) → (TakePrecautions(海警局, 红色预警) → 防止或减少危害(油轮泄漏, 人命, 财产, 环境))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海上搜救中心” — 表示海上搜救机构为海上搜救中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"海上搜救机构(海上搜救中心) → BasedOnRiskInfo(海上搜救中心) → EmergencyPreparation(海上搜救中心)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“预警支持系统” — 表示预警支持系统\",\n            \"SystemService=“预警支持系统”\",\n            \"Component=“公共信息播发系统” — 表示公共信息播发系统是预警支持系统的组成部分\"\n        ],\n        \"instance_logicexpression\": [\n            \"预警支持系统(预警支持系统) → (ComponentOf(预警支持系统, 公共信息播发系统) ∨ ComponentOf(预警支持系统, 海上安全信息播发系统))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“预警支持系统” — 表示预警支持系统\",\n            \"SystemService=“预警支持系统”\",\n            \"Component=“海上安全信息播发系统” — 表示海上安全信息播发系统是预警支持系统的组成部分\"\n        ],\n        \"instance_logicexpression\": [\n            \"预警支持系统(预警支持系统) → (ComponentOf(预警支持系统, 公共信息播发系统) ∨ ComponentOf(预警支持系统, 海上安全信息播发系统))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“气象局” — 表示气象局是相关风险信息发布责任部门\",\n            \"i=“台风预警预案” — 表示预案名称为台风预警预案\",\n            \"Information=“台风预警信息” — 表示需要播发的信息为台风预警信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"相关风险信息发布责任部门(气象局) → (DevelopPlan(气象局, 台风预警预案) ∧ EnsureBroadcast(气象局, 台风预警信息))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“海事局” — 表示海事局是相关风险信息发布责任部门\",\n            \"i=“海上风暴预警预案” — 表示预案名称为海上风暴预警预案\",\n            \"Information=“海上风暴预警信息” — 表示需要播发的信息为海上风暴预警信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"相关风险信息发布责任部门(海事局) → (DevelopPlan(海事局, 海上风暴预警预案) ∧ EnsureBroadcast(海事局, 海上风暴预警信息))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“油轮泄漏事件” — 表示海上突发事件为油轮泄漏事件\",\n            \"Rule=“国家突发事件险情上报规定” — 表示国家突发事件险情上报的有关规定\",\n            \"Safety=“高” — 表示油轮泄漏事件对人命安全的危害程度高\",\n            \"Environment=“严重” — 表示油轮泄漏事件对海洋环境的危害程度严重\",\n            \"Trend=“恶化” — 表示油轮泄漏事件的事态发展趋势为恶化\",\n            \"Level=“特大” — 表示油轮泄漏事件的险情分级为特大\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (Regulation(“国家突发事件险情上报规定”) ∧ Feature(“油轮泄漏事件”) ∧ HazardLevel(“油轮泄漏事件”, “高”, “严重”) ∧ Trend(“油轮泄漏事件”) → IncidentLevel(“油轮泄漏事件”, “特大”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海上火灾事件” — 表示海上突发事件为海上火灾事件\",\n            \"Rule=“国家突发事件险情上报规定” — 表示国家突发事件险情上报的有关规定\",\n            \"Safety=“中” — 表示海上火灾事件对人命安全的危害程度中\",\n            \"Environment=“中” — 表示海上火灾事件对海洋环境的危害程度中\",\n            \"Trend=“稳定” — 表示海上火灾事件的事态发展趋势为稳定\",\n            \"Level=“较大” — 表示海上火灾事件的险情分级为较大\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (Regulation(“国家突发事件险情上报规定”) ∧ Feature(“海上火灾事件”) ∧ HazardLevel(“海上火灾事件”, “中”, “中”) ∧ Trend(“海上火灾事件”) → IncidentLevel(“海上火灾事件”, “较大”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海上失踪事件” — 表示海上突发事件为海上失踪事件\",\n            \"Rule=“国家突发事件险情上报规定” — 表示国家突发事件险情上报的有关规定\",\n            \"Safety=“低” — 表示海上失踪事件对人命安全的危害程度低\",\n            \"Environment=“轻微” — 表示海上失踪事件对海洋环境的危害程度轻微\",\n            \"Trend=“好转” — 表示海上失踪事件的事态发展趋势为好转\",\n            \"Level=“一般” — 表示海上失踪事件的险情分级为一般\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (Regulation(“国家突发事件险情上报规定”) ∧ Feature(“海上失踪事件”) ∧ HazardLevel(“海上失踪事件”, “低”, “轻微”) ∧ Trend(“海上失踪事件”) → IncidentLevel(“海上失踪事件”, “一般”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海上溢油事件” — 表示海上突发事件为海上溢油事件\",\n            \"Rule=“国家突发事件险情上报规定” — 表示国家突发事件险情上报的有关规定\",\n            \"Safety=“中” — 表示海上溢油事件对人命安全的危害程度中\",\n            \"Environment=“严重” — 表示海上溢油事件对海洋环境的危害程度严重\",\n            \"Trend=“恶化” — 表示海上溢油事件的事态发展趋势为恶化\",\n            \"Level=“重大” — 表示海上溢油事件的险情分级为重大\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (Regulation(“国家突发事件险情上报规定”) ∧ Feature(“海上溢油事件”) ∧ HazardLevel(“海上溢油事件”, “中”, “严重”) ∧ Trend(“海上溢油事件”) → IncidentLevel(“海上溢油事件”, “重大”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“海上搜救机构A” — 表示海上搜救机构A\",\n            \"i=“海上突发事件险情信息X” — 表示海上突发事件险情信息X\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀i (ReceiveInformation(海上搜救机构A, 海上突发事件险情信息X) ∧ AnalyzeAndVerify(海上搜救机构A, 海上突发事件险情信息X) → ReportUpwards(海上搜救机构A, 海上突发事件险情信息X))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“海上搜救机构B” — 表示海上搜救机构B\",\n            \"i=“海上突发事件险情信息Y” — 表示海上突发事件险情信息Y\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀i (ReceiveInformation(海上搜救机构B, 海上突发事件险情信息Y) ∧ AnalyzeAndVerify(海上搜救机构B, 海上突发事件险情信息Y) → ReportUpwards(海上搜救机构B, 海上突发事件险情信息Y))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“中国海上搜救中心” — 表示中国海上搜救中心\",\n            \"i=“海上突发事件险情信息Z” — 表示海上突发事件险情信息Z\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀i (ReportToStateCouncil(中国海上搜救中心, 海上突发事件险情信息Z) → NotifyRelevantDepartments(中国海上搜救中心, 海上突发事件险情信息Z))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“海上搜救中心” — 表示海上搜救机构为海上搜救中心\",\n            \"m=“船舶失事信息” — 表示海上遇险信息为船舶失事信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀m (VerifyAndAnalyze(海上搜救中心, 船舶失事信息) → (DirectMethod(海上搜救中心, 船舶失事信息) ∨ IndirectMethod(海上搜救中心, 船舶失事信息)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海岸警卫队” — 表示海上搜救机构为海岸警卫队\",\n            \"m=“海上人员失踪信息” — 表示海上遇险信息为海上人员失踪信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀m (VerifyAndAnalyze(海岸警卫队, 海上人员失踪信息) → (DirectMethod(海岸警卫队, 海上人员失踪信息) ∨ IndirectMethod(海岸警卫队, 海上人员失踪信息)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海洋救援组织” — 表示海上搜救机构为海洋救援组织\",\n            \"m=“海上油轮泄漏信息” — 表示海上遇险信息为海上油轮泄漏信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀m (VerifyAndAnalyze(海洋救援组织, 海上油轮泄漏信息) → (DirectMethod(海洋救援组织, 海上油轮泄漏信息) ∨ IndirectMethod(海洋救援组织, 海上油轮泄漏信息)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海军救援队” — 表示海上搜救机构为海军救援队\",\n            \"m=“海上风暴预警信息” — 表示海上遇险信息为海上风暴预警信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀m (VerifyAndAnalyze(海军救援队, 海上风暴预警信息) → (DirectMethod(海军救援队, 海上风暴预警信息) ∨ IndirectMethod(海军救援队, 海上风暴预警信息)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“海上油轮泄漏” — 表示海上突发事件为油轮泄漏\",\n            \"Area=“东海责任区” — 表示事发地在东海责任区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (MaritimeEmergency(海上油轮泄漏, 东海责任区) ∧ ResponsibleArea(东海责任区) → ActivatePlan(Plan))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“海上货轮火灾” — 表示海上突发事件为货轮火灾\",\n            \"Area=“南海非责任区” — 表示事发地不在南海责任区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (MaritimeEmergency(海上货轮火灾, 南海非责任区) ∧ ¬ResponsibleArea(南海非责任区) → (Notify(SearchAndRescueInstitution, ResponsibleAreaInstitution) ∧ Report(SearchAndRescueInstitution, HigherInstitution)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“海上人道主义救援” — 表示海上突发事件为人道主义救援\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (MaritimeEmergency(海上人道主义救援) → (Notify(ChinaSearchAndRescueCenter, ProvincialInstitution) ∧ Report(ChinaSearchAndRescueCenter, RelatedDepartment)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“海上走私事件” — 表示海上突发事件为走私事件\",\n            \"SpecialArea=“香港特别行政区水域” — 表示事发地在香港特别行政区水域\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (MaritimeEmergency(海上走私事件, 香港特别行政区水域) → (Notify(ProvincialInstitution, ChinaSearchAndRescueCenter) ∨ Contact(ChinaSearchAndRescueCenter, ProvincialInstitution)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“海上海盗袭击” — 表示海上突发事件为海盗袭击\",\n            \"ForeignArea=“印度洋” — 表示事发地在印度洋\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (MaritimeEmergency(海上海盗袭击, 印度洋) → Notify(ChinaSearchAndRescueCenter, ForeignSearchAndRescueInstitution))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"v=“中远海运货轮” — 表示遇险船舶为中远海运货轮\",\n            \"c=“中国籍船员” — 表示遇险船员为中国籍\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀v ∀c (Endangered(中远海运货轮, 中国籍船员) → (Report(ChinaSearchAndRescueCenter, ForeignSearchAndRescueInstitution) ∧ Contact(ChinaSearchAndRescueCenter, Embassy) ∧ Handle(Incident, Procedure)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“海上恐怖袭击” — 表示海上保安事件为恐怖袭击\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (SecurityIncident(海上恐怖袭击) → Handle(e, SecurityProcedure))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“海上原油泄漏” — 表示船舶造成污染为原油泄漏\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (Pollution(海上原油泄漏) → Handle(e, OilSpillResponseProcedure))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“海上搜救中心” — 表示最初接到海上突发事件信息的海上搜救机构为海上搜救中心\",\n            \"e=“海上油轮泄漏事件” — 表示海上突发事件为海上油轮泄漏事件\",\n            \"t=“责任区海上搜救机构” — 表示海上突发事件应急反应工作移交给责任区海上搜救机构\",\n            \"h=“上一级海上搜救机构” — 表示应急指挥机构按规定程序向上一级搜救机构请示、报告\",\n            \"c=“李海军” — 表示应急指挥机构指定的现场指挥为李海军\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀e (ReceiveInformation(海上搜救中心, 海上油轮泄漏事件) → (TakeResponsibility(海上搜救中心) ∧ ActivatePlan(海上搜救中心)))\",\n            \"∀i∀e (ReceiveInformation(海上搜救中心, 海上油轮泄漏事件) → (¬∃t (HandOverResponsibility(海上搜救中心, t) ∨ HandOverResponsibility(海上搜救中心, 上一级海上搜救机构)) → (TakeResponsibility(海上搜救中心) ∧ ActivatePlan(海上搜救中心)))\",\n            \"∀i∀h (TakeResponsibility(海上搜救中心) → (ConsultReport(海上搜救中心, 上一级海上搜救机构) ∧ MakeDecision(海上搜救中心)))\",\n            \"∀i (TakeResponsibility(海上搜救中心) → ∃c (DesignateOnsiteCommander(海上搜救中心, 李海军)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海岸警卫队” — 表示最初接到海上突发事件信息的海上搜救机构为海岸警卫队\",\n            \"e=“海上船只失事事件” — 表示海上突发事件为海上船只失事事件\",\n            \"t=“邻近海域搜救机构” — 表示海上突发事件应急反应工作移交给邻近海域搜救机构\",\n            \"h=“国家海上搜救中心” — 表示应急指挥机构按规定程序向上一级搜救机构请示、报告\",\n            \"c=“王海警” — 表示应急指挥机构指定的现场指挥为王海警\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀e (ReceiveInformation(海岸警卫队, 海上船只失事事件) → (TakeResponsibility(海岸警卫队) ∧ ActivatePlan(海岸警卫队)))\",\n            \"∀i∀e (ReceiveInformation(海岸警卫队, 海上船只失事事件) → (¬∃t (HandOverResponsibility(海岸警卫队, t) ∨ HandOverResponsibility(海岸警卫队, 国家海上搜救中心)) → (TakeResponsibility(海岸警卫队) ∧ ActivatePlan(海岸警卫队)))\",\n            \"∀i∀h (TakeResponsibility(海岸警卫队) → (ConsultReport(海岸警卫队, 国家海上搜救中心) ∧ MakeDecision(海岸警卫队)))\",\n            \"∀i (TakeResponsibility(海岸警卫队) → ∃c (DesignateOnsiteCommander(海岸警卫队, 王海警)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“海啸” — 表示险情为海啸\",\n            \"p=“李雷” — 表示被通知的人员为李雷\",\n            \"l=“一级” — 表示险情级别为一级\",\n            \"a=“沿海区域” — 表示确定的救助区域为沿海区域\",\n            \"t=“疏散人群” — 表示明确的救助任务为疏散人群\",\n            \"m=“使用高音喇叭和警报器” — 表示具体的救助措施为使用高音喇叭和警报器\",\n            \"c=“韩梅梅” — 表示指定的现场指挥为韩梅梅\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (EmergencyConfirmed(海啸) → (Notify(李雷, 一级) ∧ DetermineRescueArea(沿海区域) ∧ ClarifyRescueTask(疏散人群, 使用高音喇叭和警报器) ∧ MobilizeEmergencyForces(疏散人群) ∧ EstablishCommunicationMechanism() ∧ DesignateOnsiteCommander(韩梅梅)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"v=“救援一号” — 表示调动的船舶为救援一号\",\n            \"s=“海啸” — 表示险情为海啸\",\n            \"a=“沿海区域” — 表示确定的救助区域为沿海区域\n        ],\n        \"instance_logicexpression\": [\n            \"∀v (EmergencyConfirmed(海啸) ∧ IncidentNearWater(救援一号) → MobilizeVessels(救援一号, 沿海区域))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“空中救援一号” — 表示使用的航空器为空中救援一号\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (UseAircraft(空中救援一号) → NotifyAirTrafficControl(空中救援一号))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“海上交通管制” — 表示需要实施的海上交通管制\",\n            \"ma=“沿海海事局” — 表示责任区海事管理机构为沿海海事局\",\n            \"a=“海上交通管制行动” — 表示具体的管制行动\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀m (NeedMaritimeControl(海上交通管制) → (IssueNavigationNotice(沿海海事局) ∧ ImplementControlAction(海上交通管制行动)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“救助进展顺利” — 表示救助情况进展顺利\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (RescueSituation(救助进展顺利) → AdjustRescueMeasures(救助进展顺利))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“海事搜救中心” — 表示搜救机构为海事搜救中心\",\n            \"p=“遇险船员” — 表示遇险人员为船员\",\n            \"a=“医疗救护行动” — 表示行动为医疗救护\"\n        ],\n        \"instance_logicexpression\": [\n            \"搜救机构(海事搜救中心) → (∃p (Endangered(遇险船员) ∧ Arrange(海事搜救中心, 医疗救护行动)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海事搜救中心” — 表示搜救机构为海事搜救中心\",\n            \"d=“海上油污泄漏” — 表示险情为海上油污泄漏\",\n            \"p=“沿海居民” — 表示公众为沿海居民\",\n            \"a=“疏散行动” — 表示行动为疏散\"\n        ],\n        \"instance_logicexpression\": [\n            \"搜救机构(海事搜救中心) ∧ RiskToPublic(海上油污泄漏) → (∃p (Public(沿海居民) ∧ Arrange(海事搜救中心, 疏散行动)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海事搜救中心” — 表示搜救机构为海事搜救中心\",\n            \"a=“治安巡逻” — 表示行动为治安巡逻\"\n        ],\n        \"instance_logicexpression\": [\n            \"搜救机构(海事搜救中心) → (∃a (MaintainOrder(治安巡逻) ∧ Arrange(海事搜救中心, 治安巡逻)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海事搜救中心” — 表示搜救机构为海事搜救中心\",\n            \"s=“海上救援物资” — 表示支持保障为海上救援物资\"\n        ],\n        \"instance_logicexpression\": [\n            \"搜救机构(海事搜救中心) → (∃s (SupportGuarantee(Institution, 海上救援物资) ∧ Arrange(海事搜救中心, 海上救援物资)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“海事救援队” — 表示专业救助力量为海事救援队\",\n            \"s=“国家搜救中心” — 表示搜救机构为国家搜救中心\",\n            \"Adjustment(海事救援队) — 表示海事救援队有值班计划的临时调整\"\n        ],\n        \"instance_logicexpression\": [\n            \"ProfessionalRescueForce(海事救援队) ∧ Requirement(国家搜救中心) → (ReportDutyPlan(海事救援队, 国家搜救中心) ∧ (ReportAdjustment(海事救援队, 国家搜救中心) ∧ ConfirmAdjustment(海事救援队, 国家搜救中心)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“山地救援队” — 表示救助力量与现场指挥为山地救援队\",\n            \"s=“地方搜救局” — 表示搜救机构为地方搜救局\",\n            \"Command=“紧急疏散指令” — 表示执行的指令为紧急疏散指令\"\n        ],\n        \"instance_logicexpression\": [\n            \"RescueForce(山地救援队) → (ExecuteOrder(山地救援队, 紧急疏散指令, 地方搜救局) ∧ ReportDeployment(山地救援队, 地方搜救局) ∧ ReportAction(山地救援队, 地方搜救局) ∧ ReportEmergencyScene(山地救援队, 地方搜救局) ∧ ReportProgress(山地救援队, 地方搜救局) ∧ ProposeSuggestion(山地救援队, 增加救援设备, 地方搜救局))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“空中救援队” — 表示救助力量与现场指挥为空中救援队\",\n            \"s=“国际搜救组织” — 表示搜救机构为国际搜救组织\",\n            \"Suggestion=“使用无人机侦察” — 表示提出的建议为使用无人机侦察\"\n        ],\n        \"instance_logicexpression\": [\n            \"RescueForce(空中救援队) → (ExecuteOrder(空中救援队, 国际搜救组织) ∧ ReportDeployment(空中救援队, 国际搜救组织) ∧ ReportAction(空中救援队, 国际搜救组织) ∧ ReportEmergencyScene(空中救援队, 国际搜救组织) ∧ ReportProgress(空中救援队, 国际搜救组织) ∧ ProposeSuggestion(空中救援队, 使用无人机侦察, 国际搜救组织))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“城市搜救队” — 表示救助力量与现场指挥为城市搜救队\",\n            \"s=“城市应急中心” — 表示搜救机构为城市应急中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"RescueForce(城市搜救队) → (ExecuteOrder(城市搜救队, 城市应急中心) ∧ ReportDeployment(城市搜救队, 城市应急中心) ∧ ReportAction(城市搜救队, 城市应急中心) ∧ ReportEmergencyScene(城市搜救队, 城市应急中心) ∧ ReportProgress(城市搜救队, 城市应急中心) ∧ ProposeSuggestion(城市搜救队, 增设临时避难所, 城市应急中心))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"E=“油轮泄漏事件” — 表示海上突发事件为油轮泄漏事件\",\n            \"SAR=“市级海上搜救中心” — 表示搜救责任区为市级海上搜救中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E ∀SAR (MaritimeEmergency(E) ∧ SearchAndRescueZone(SAR) → (LowestSAR(SAR) → EmergencyResponse(SAR, E)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“海上油轮火灾” — 表示海上突发事件为油轮火灾\",\n            \"LowerSAR=“市级海上搜救中心” — 表示下级搜救机构为市级海上搜救中心\",\n            \"UpperSAR=“省级海上搜救中心” — 表示上一级搜救机构为省级海上搜救中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E ∀LowerSAR ∀UpperSAR (MaritimeEmergency(E) ∧ SearchAndRescueZone(LowerSAR) ∧ (InsufficientResources(LowerSAR) ∨ EventExpansion(E)) → RequestUpperResponse(LowerSAR, UpperSAR, E))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“海上人道主义救援” — 表示海上突发事件为海上人道主义救援\",\n            \"LowerSAR=“省级海上搜救中心” — 表示下级搜救机构为省级海上搜救中心\",\n            \"UpperSAR=“中国海上搜救中心” — 表示上一级搜救机构为中国海上搜救中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E ∀LowerSAR ∀UpperSAR (RequestUpperResponse(LowerSAR, UpperSAR, E) → GuideResponse(UpperSAR, LowerSAR, E))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“海上船只碰撞” — 表示海上突发事件为船只碰撞\",\n            \"ProvincialSAR=“省级海上搜救机构” — 表示省级搜救机构\",\n            \"SARZone=“省级搜救责任区” — 表示省级搜救责任区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E ∀ProvincialSAR ∀SARZone (MaritimeEmergency(E) ∧ SearchAndRescueZone(SARZone) → (FullyResponsible(ProvincialSAR, SARZone, E) ∧ EffectiveAction(ProvincialSAR, E)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“海上搜救中心” — 表示实施海上应急行动的组织为海上搜救中心\",\n            \"m=“海上通信” — 表示指定的应急通信方式为海上通信\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (ImplementEmergencyAction(海上搜救中心) → ∃m (SpecifyCommunicationMethod(海上搜救中心, 海上通信) ∧ (MaritimeCommunication(海上通信) ∨ PublicCommunicationNetwork(海上通信) ∨ OtherAvailableMeans(海上通信))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“海岸警卫队” — 表示实施海上应急行动的组织为海岸警卫队\",\n            \"m=“公共通信网” — 表示指定的应急通信方式为公共通信网\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (ImplementEmergencyAction(海岸警卫队) → ∃m (SpecifyCommunicationMethod(海岸警卫队, 公共通信网) ∧ (MaritimeCommunication(公共通信网) ∨ PublicCommunicationNetwork(公共通信网) ∨ OtherAvailableMeans(公共通信网))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“海军救援队” — 表示实施海上应急行动的组织为海军救援队\",\n            \"m=“其他可用手段” — 表示指定的应急通信方式为其他可用手段\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (ImplementEmergencyAction(海军救援队) → ∃m (SpecifyCommunicationMethod(海军救援队, 其他可用手段) ∧ (MaritimeCommunication(其他可用手段) ∨ PublicCommunicationNetwork(其他可用手段) ∨ OtherAvailableMeans(其他可用手段))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“海上石油公司救援队” — 表示实施海上应急行动的组织为海上石油公司救援队\",\n            \"m=“海上通信” — 表示指定的应急通信方式为海上通信\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (ImplementEmergencyAction(海上石油公司救援队) → ∃m (SpecifyCommunicationMethod(海上石油公司救援队, 海上通信) ∧ (MaritimeCommunication(海上通信) ∨ PublicCommunicationNetwork(海上通信) ∨ OtherAvailableMeans(海上通信))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“海上旅游公司救援队” — 表示实施海上应急行动的组织为海上旅游公司救援队\",\n            \"m=“公共通信网” — 表示指定的应急通信方式为公共通信网\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (ImplementEmergencyAction(海上旅游公司救援队) → ∃m (SpecifyCommunicationMethod(海上旅游公司救援队, 公共通信网) ∧ (MaritimeCommunication(公共通信网) ∨ PublicCommunicationNetwork(公共通信网) ∨ OtherAvailableMeans(公共通信网))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"sar=“市级海上搜救中心” — 表示市级海上搜救机构\",\n            \"ha=“市卫生局” — 表示当地卫生主管部门\",\n            \"mi=“市立医院” — 表示被指定的医疗机构为市立医院\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀sar∀ha∀mi (Designate(“市级海上搜救中心”, “市卫生局”, “市立医院”) ∧ Possess(“市立医院”, MedicalTechAndCondition) → Undertake(“市立医院”, MedicalAssistanceTask))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"sar=“省级海上搜救队” — 表示省级海上搜救机构\",\n            \"ha=“省卫生厅” — 表示当地卫生主管部门\",\n            \"mi=“省中心医院” — 表示被指定的医疗机构为省中心医院\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀sar∀ha∀mi (Designate(“省级海上搜救队”, “省卫生厅”, “省中心医院”) ∧ Possess(“省中心医院”, MedicalTechAndCondition) → Undertake(“省中心医院”, MedicalAssistanceTask))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"sar=“国家级海上救援局” — 表示国家级海上搜救机构\",\n            \"ha=“国家卫生健康委员会” — 表示当地卫生主管部门\",\n            \"mi=“国家医疗中心” — 表示被指定的医疗机构为国家医疗中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀sar∀ha∀mi (Designate(“国家级海上救援局”, “国家卫生健康委员会”, “国家医疗中心”) ∧ Possess(“国家医疗中心”, MedicalTechAndCondition) → Undertake(“国家医疗中心”, MedicalAssistanceTask))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"sar=“沿海县海上搜救大队” — 表示沿海县海上搜救机构\",\n            \"ha=“县卫生和计划生育局” — 表示当地卫生主管部门\",\n            \"mi=“县人民医院” — 表示被指定的医疗机构为县人民医院\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀sar∀ha∀mi (Designate(“沿海县海上搜救大队”, “县卫生和计划生育局”, “县人民医院”) ∧ Possess(“县人民医院”, MedicalTechAndCondition) → Undertake(“县人民医院”, MedicalAssistanceTask))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"m=“东海医院” — 表示东海医院是承担医疗援助的医疗机构\",\n            \"l=“东海海域” — 表示救助行动发生的地点是东海海域\"\n        ],\n        \"instance_logicexpression\": [\n            \"救助行动(东海海域) → UndertakeMedicalAid(东海医院, 东海海域)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“南海救助局” — 表示南海救助局是力量不足的海上搜救机构\",\n            \"h=“国家海上搜救中心” — 表示南海救助局请求支援的更高级别机构是国家海上搜救中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"InsufficientForces(南海救助局) → MaritimeSearchAndRescue(南海救助局) ∧ RequestSupport(南海救助局, 国家海上搜救中心)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“黄海医疗中心” — 表示黄海医疗中心是承担医疗援助的医疗机构\",\n            \"l=“黄海海域” — 表示救助行动发生的地点是黄海海域\"\n        ],\n        \"instance_logicexpression\": [\n            \"救助行动(黄海海域) → UndertakeMedicalAid(黄海医疗中心, 黄海海域)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“渤海救援队” — 表示渤海救援队是力量不足的海上搜救机构\",\n            \"h=“省级海上搜救协调中心” — 表示渤海救援队请求支援的更高级别机构是省级海上搜救协调中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"InsufficientForces(渤海救援队) → MaritimeSearchAndRescue(渤海救援队) ∧ RequestSupport(渤海救援队, 省级海上搜救协调中心)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“西海医院” — 表示西海医院是承担医疗援助的医疗机构\",\n            \"l=“西海海域” — 表示救助行动发生的地点是西海海域\"\n        ],\n        \"instance_logicexpression\": [\n            \"救助行动(西海海域) → UndertakeMedicalAid(西海医院, 西海海域)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“海上救援队” — 表示参与海上应急行动的单位为海上救援队\",\n            \"p=“李海员” — 表示海上救援队人员为李海员\"\n        ],\n        \"instance_logicexpression\": [\n            \"ParticipateInMarineEmergency(海上救援队) ∧ Personnel(海上救援队, 李海员) → ResponsibleForSafety(海上救援队, 李海员)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“国家海上搜救中心” — 表示海上搜救机构为国家海上搜救中心\",\n            \"o=“海上救援队” — 表示参与救援行动的单位为海上救援队\"\n        ],\n        \"instance_logicexpression\": [\n            \"MarineSearchAndRescue(国家海上搜救中心) ∧ ParticipateInRescue(海上救援队) → ProvideGuidance(国家海上搜救中心, 海上救援队)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“王化救” — 表示化学品应急人员为王化救\"\n        ],\n        \"instance_logicexpression\": [\n            \"ChemicalEmergencyPersonnel(王化救) → (Register(王化救) ∧ MedicalCheck(王化救) ∧ (Injury(王化救) → Treat(王化救)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“地方海上搜救队” — 表示实施救助行动的海上搜救机构为地方海上搜救队\",\n            \"p=“赵应急” — 表示参与应急行动人员为赵应急\"\n        ],\n        \"instance_logicexpression\": [\n            \"MarineSearchAndRescue(地方海上搜救队) ∧ ParticipateInEmergency(赵应急) ∧ InsufficientSafetyEquipment(赵应急) → RequestCoordination(地方海上搜救队, HigherInstitution(地方海上搜救队))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“海上风暴” — 表示救助行动是在海上风暴情况下实施的\",\n            \"People=“海上旅客及其他人员” — 表示遇险的旅客及其他人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (RescueAction(“海上风暴”) → (OrganizeSafety(“海上旅客及其他人员”) ∧ InformHazard(“海上旅客及其他人员”) ∧ MobilizeResources(“海上旅客及其他人员”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“国家海上搜救中心” — 表示海上搜救机构是国家海上搜救中心\",\n            \"h=“海上油轮泄漏” — 表示海上突发事件是油轮泄漏\",\n            \"Scope=“泄漏影响区域” — 表示可能影响的范围内\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i ∀h (海上搜救机构(“国家海上搜救中心”) ∧ 海上突发事件(“海上油轮泄漏”) → TakeNecessaryMeasures(“国家海上搜救中心”, “海上油轮泄漏”) ∧ ArrangeSafetyAndEvacuation(“泄漏影响区域”, “海上旅客及其他人员”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“地方海上搜救队” — 表示海上搜救机构是地方海上搜救队\",\n            \"s=“海上风暴影响沿海城镇” — 表示海上风暴可能影响沿海城镇的安全\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i ∀s (海上搜救机构(“地方海上搜救队”) ∧ 影响陆上人员安全(“海上风暴影响沿海城镇”) → NotifyLocalGovernment(“地方海上搜救队”, “海上风暴影响沿海城镇”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“远洋邮轮公司” — 表示船舶、浮动设施和民用航空器的所有人是远洋邮轮公司\",\n            \"p=“邮轮上的旅客” — 表示遇险旅客及其他人员是邮轮上的旅客\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o ∀p (船舶或浮动设施或民用航空器(“远洋邮轮公司”) ∧ 遇险旅客及其他人员(“邮轮上的旅客”) → DevelopEmergencyPlans(“远洋邮轮公司”, “邮轮上的旅客”) ∧ FollowCommandAndAct(“远洋邮轮公司”, “邮轮上的旅客”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"f=“志愿者团队” — 表示被动员的社会力量为志愿者团队\",\n            \"e=“救生衣、信号枪” — 表示携带的器材和装备为救生衣和信号枪\",\n            \"l=“海岸线A” — 表示指定地点为海岸线A\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f∀e∀l (动员(“志愿者团队”) → (Guide(搜救机构, “志愿者团队”) ∧ Carry(“志愿者团队”, “救生衣、信号枪”) ∧ GoTo(“志愿者团队”, “海岸线A”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“李明” — 表示参与应急行动的人员为李明\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyAction(李明) → WorkArrangement(搜救机构, 李明) ∧ SpecificCircumstances(李明)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“民间救援队” — 表示被动员的社会力量为民间救援队\",\n            \"e=“潜水设备、急救包” — 表示携带的器材和装备为潜水设备和急救包\",\n            \"l=“海域B” — 表示指定地点为海域B\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f∀e∀l (动员(“民间救援队”) → (Guide(搜救机构, “民间救援队”) ∧ Carry(“民间救援队”, “潜水设备、急救包”) ∧ GoTo(“民间救援队”, “海域B”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“王红” — 表示参与应急行动的人员为王红\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyAction(王红) → WorkArrangement(搜救机构, 王红) ∧ SpecificCircumstances(王红)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“海上搜救志愿者” — 表示被动员的社会力量为海上搜救志愿者\",\n            \"e=“通讯设备、救生圈” — 表示携带的器材和装备为通讯设备和救生圈\",\n            \"l=“岛屿C” — 表示指定地点为岛屿C\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f∀e∀l (动员(“海上搜救志愿者”) → (Guide(搜救机构, “海上搜救志愿者”) ∧ Carry(“海上搜救志愿者”, “通讯设备、救生圈”) ∧ GoTo(“海上搜救志愿者”, “岛屿C”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“赵强” — 表示参与应急行动的人员为赵强\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyAction(赵强) → WorkArrangement(搜救机构, 赵强) ∧ SpecificCircumstances(赵强)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“海上搜救行动” — 表示应急行动为海上搜救行动\",\n            \"f=“恶劣天气和设备故障” — 表示险情因素为恶劣天气和设备故障\",\n            \"s=“泄漏的油轮和化学污染” — 表示危险源和污染源为泄漏的油轮和化学污染\",\n            \"m=“救援船只调度和直升机搜索” — 表示措施为救援船只调度和直升机搜索\",\n            \"p=“海上搜救应急行动方案” — 表示应急行动方案为海上搜救应急行动方案\",\n            \"l=“财产损失和环境破坏” — 表示险情造成的损失为财产损失和环境破坏\",\n            \"h=“海上航行安全风险” — 表示危害为海上航行安全风险\",\n            \"e=“应急行动的快速响应时间” — 表示效率为应急行动的快速响应时间\",\n            \"r=“搜救成功率” — 表示救助成功率为搜救成功率\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀f ∀s ∀m ∀p ∀l ∀h ∀e ∀r (TrackProgress(“海上搜救行动”) ∧ IdentifyRisks(“恶劣天气和设备故障”) ∧ ControlHazardSources(“泄漏的油轮和化学污染”) → AnalyzeMeasures(“救援船只调度和直升机搜索”) ∧ AdjustPlan(“海上搜救应急行动方案”) → ReduceLoss(“财产损失和环境破坏”) ∧ ReduceHazard(“海上航行安全风险”) ∧ ImproveEfficiency(“应急行动的快速响应时间”) ∧ ImproveSuccessRate(“搜救成功率”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“海上溢油应急响应” — 表示应急行动为海上溢油应急响应\",\n            \"f=“溢油扩散和海洋生物受损” — 表示险情因素为溢油扩散和海洋生物受损\",\n            \"s=“溢油源和受污染海域” — 表示危险源和污染源为溢油源和受污染海域\",\n            \"m=“围油栏部署和化学分散剂使用” — 表示措施为围油栏部署和化学分散剂使用\",\n            \"p=“海上溢油应急响应方案” — 表示应急行动方案为海上溢油应急响应方案\",\n            \"l=“渔业损失和旅游影响” — 表示险情造成的损失为渔业损失和旅游影响\",\n            \"h=“海洋生态破坏” — 表示危害为海洋生态破坏\",\n            \"e=“应急资源的合理分配” — 表示效率为应急资源的合理分配\",\n            \"r=“溢油清除效率” — 表示救助成功率为溢油清除效率\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀f ∀s ∀m ∀p ∀l ∀h ∀e ∀r (TrackProgress(“海上溢油应急响应”) ∧ IdentifyRisks(“溢油扩散和海洋生物受损”) ∧ ControlHazardSources(“溢油源和受污染海域”) → AnalyzeMeasures(“围油栏部署和化学分散剂使用”) ∧ AdjustPlan(“海上溢油应急响应方案”) → ReduceLoss(“渔业损失和旅游影响”) ∧ ReduceHazard(“海洋生态破坏”) ∧ ImproveEfficiency(“应急资源的合理分配”) ∧ ImproveSuccessRate(“溢油清除效率”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“海上搜救中心” — 表示海上搜救中心为组织应急行动的机构\",\n            \"a=“海上救援行动” — 表示海上搜救中心组织的海上救援行动\",\n            \"u=“救援小组” — 表示参与救援的小组\",\n            \"e=“声纳探测仪” — 表示救援小组使用的声纳探测仪\",\n            \"Event=“海上失踪事件” — 表示海上失踪事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀a (EmergencyAction(“海上搜救中心”) → (Organize(“海上搜救中心”, “海上救援行动”) ∧ Implement(“海上搜救中心”, “海上救援行动”)))\",\n            \"∀i∀u∀e (EmergencyAction(“海上搜救中心”) ∧ Organize(“海上搜救中心”, “海上救援行动”) → (Guide(“海上搜救中心”, “救援小组”, “声纳探测仪”) ∧ Use(“救援小组”, “声纳探测仪”) ∧ Perform(“救援小组”, “现场检测”) ∧ Perform(“救援小组”, “分析”)))\",\n            \"∀i∀e (EmergencyAction(“海上搜救中心”) ∧ Organize(“海上搜救中心”, “海上救援行动”) → (∃x (Expert(x) ∧ Analyze(x, “海上失踪事件”)) ∨ ∃y (Institution(y) ∧ Research(y, “海上失踪事件”))))\",\n            \"∀i (EmergencyAction(“海上搜救中心”) ∧ Organize(“海上搜救中心”, “海上救援行动”) → SupportSystem(“海上搜救中心”, “分析”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“国家海洋局” — 表示国家海洋局为组织应急行动的机构\",\n            \"a=“海洋污染应急响应” — 表示国家海洋局组织的海洋污染应急响应\",\n            \"u=“环境监测站” — 表示参与监测的环境监测站\",\n            \"e=“水质分析仪” — 表示环境监测站使用的水质分析仪\",\n            \"Event=“海洋石油泄漏事件” — 表示海洋石油泄漏事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀a (EmergencyAction(“国家海洋局”) → (Organize(“国家海洋局”, “海洋污染应急响应”) ∧ Implement(“国家海洋局”, “海洋污染应急响应”)))\",\n            \"∀i∀u∀e (EmergencyAction(“国家海洋局”) ∧ Organize(“国家海洋局”, “海洋污染应急响应”) → (Guide(“国家海洋局”, “环境监测站”, “水质分析仪”) ∧ Use(“环境监测站”, “水质分析仪”) ∧ Perform(“环境监测站”, “现场检测”) ∧ Perform(“环境监测站”, “分析”)))\",\n            \"∀i∀e (EmergencyAction(“国家海洋局”) ∧ Organize(“国家海洋局”, “海洋污染应急响应”) → (∃x (Expert(x) ∧ Analyze(x, “海洋石油泄漏事件”)) ∨ ∃y (Institution(y) ∧ Research(y, “海洋石油泄漏事件”))))\",\n            \"∀i (EmergencyAction(“国家海洋局”) ∧ Organize(“国家海洋局”, “海洋污染应急响应”) → SupportSystem(“国家海洋局”, “分析”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“救援队” — 表示社会力量为救援队\"\n        ],\n        \"instance_logicexpression\": [\n            \"社会力量(救援队) → InvestigateRiskFactors(救援队)\",\n            \"社会力量(救援队) → JudgeTrend(救援队)\",\n            \"社会力量(救援队) ∧ 危险源(s) → TakeMeasures(救援队, s)\",\n            \"社会力量(救援队) → InspectSite(救援队)\",\n            \"社会力量(救援队) ∧ 新情况(海上突发事件) → AddressNewSituations(救援队)\",\n            \"社会力量(救援队) → AdjustPlan(救援队)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“志愿者组织” — 表示社会力量为志愿者组织\"\n        ],\n        \"instance_logicexpression\": [\n            \"社会力量(志愿者组织) → InvestigateRiskFactors(志愿者组织)\",\n            \"社会力量(志愿者组织) → JudgeTrend(志愿者组织)\",\n            \"社会力量(志愿者组织) ∧ 危险源(s) → TakeMeasures(志愿者组织, s)\",\n            \"社会力量(志愿者组织) → InspectSite(志愿者组织)\",\n            \"社会力量(志愿者组织) ∧ 新情况(海上突发事件) → AddressNewSituations(志愿者组织)\",\n            \"社会力量(志愿者组织) → AdjustPlan(志愿者组织)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“社区服务队” — 表示社会力量为社区服务队\"\n        ],\n        \"instance_logicexpression\": [\n            \"社会力量(社区服务队) → InvestigateRiskFactors(社区服务队)\",\n            \"社会力量(社区服务队) → JudgeTrend(社区服务队)\",\n            \"社会力量(社区服务队) ∧ 危险源(s) → TakeMeasures(社区服务队, s)\",\n            \"社会力量(社区服务队) → InspectSite(社区服务队)\",\n            \"社会力量(社区服务队) ∧ 新情况(海上突发事件) → AddressNewSituations(社区服务队)\",\n            \"社会力量(社区服务队) → AdjustPlan(社区服务队)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“非政府组织” — 表示社会力量为非政府组织\"\n        ],\n        \"instance_logicexpression\": [\n            \"社会力量(非政府组织) → InvestigateRiskFactors(非政府组织)\",\n            \"社会力量(非政府组织) → JudgeTrend(非政府组织)\",\n            \"社会力量(非政府组织) ∧ 危险源(s) → TakeMeasures(非政府组织, s)\",\n            \"社会力量(非政府组织) → InspectSite(非政府组织)\",\n            \"社会力量(非政府组织) ∧ 新情况(海上突发事件) → AddressNewSituations(非政府组织)\",\n            \"社会力量(非政府组织) → AdjustPlan(非政府组织)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“海上搜救中心” — 表示负责组织指挥海上突发事件应急反应的组织为海上搜救中心\",\n            \"a=“所有可能存在遇险人员的区域” — 表示所有可能存在遇险人员的区域\",\n            \"Conditions=“当时的气温、水温、风、浪条件” — 表示在特定条件下\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (ResponsibleForCommand(海上搜救中心) → (∀a (Searched(所有可能存在遇险人员的区域)) ∨ NoSurvivalPossibility(当时的气温、水温、风、浪条件) ∨ EmergencyResponseSuccessful() ∨ EmergencySituationNonExistent() ∨ HazardEliminatedOrControlled()))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家海洋局” — 表示负责组织指挥海上突发事件应急反应的组织为国家海洋局\",\n            \"Conditions=“极端恶劣的气候条件” — 表示在极端恶劣的气候条件下\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (ResponsibleForCommand(国家海洋局) → (∀a (Searched(a)) ∨ NoSurvivalPossibility(极端恶劣的气候条件) ∨ EmergencyResponseSuccessful() ∨ EmergencySituationNonExistent() ∨ HazardEliminatedOrControlled()))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“地方海事局” — 表示负责组织指挥海上突发事件应急反应的组织为地方海事局\",\n            \"Conditions=“风暴过后的平静海面” — 表示在风暴过后的平静海面条件下\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (ResponsibleForCommand(地方海事局) → (∀a (Searched(a)) ∨ NoSurvivalPossibility(风暴过后的平静海面) ∨ EmergencyResponseSuccessful() ∨ EmergencySituationNonExistent() ∨ HazardEliminatedOrControlled()))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“海岸警卫队” — 表示负责组织指挥海上突发事件应急反应的组织为海岸警卫队\",\n            \"Conditions=“寒冷的冬季水温” — 表示在寒冷的冬季水温条件下\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (ResponsibleForCommand(海岸警卫队) → (∀a (Searched(a)) ∨ NoSurvivalPossibility(寒冷的冬季水温) ∨ EmergencyResponseSuccessful() ∨ EmergencySituationNonExistent() ∨ HazardEliminatedOrControlled()))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“李明” — 李明为获救伤病人员\",\n            \"部门：医疗卫生部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"RescuedPatient(李明) → ResponsibleForTreatment(医疗卫生部门, 李明)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“王芳” — 王芳为获救伤病人员\",\n            \"部门：医疗卫生部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"RescuedPatient(王芳) → ResponsibleForTreatment(医疗卫生部门, 王芳)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“赵强” — 赵强为获救伤病人员\",\n            \"部门：医疗卫生部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"RescuedPatient(赵强) → ResponsibleForTreatment(医疗卫生部门, 赵强)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“孙丽” — 孙丽为获救伤病人员\",\n            \"部门：医疗卫生部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"RescuedPatient(孙丽) → ResponsibleForTreatment(医疗卫生部门, 孙丽)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“张三” — 张三为本地获救人员\",\n            \"部门：民政部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"获救人员(张三) → (¬PersonType(张三, 港澳台) ∧ ¬PersonType(张三, 外籍) → ResponsibleForSettlement(民政部门, 张三) ∨ ResponsibleForSettlement(所在单位, 张三))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“李四” — 李四为港澳台人员\",\n            \"部门：港澳台办\"\n        ],\n        \"instance_logicexpression\": [\n            \"PersonType(李四, 港澳台) ∨ PersonType(李四, 外籍) → ResponsibleForSettlement(港澳台办, 李四) ∨ ResponsibleForSettlement(外事办, 李四)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“John Smith” — John Smith为外籍获救人员\",\n            \"部门：外交部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"PersonType(John Smith, 外籍) → Deport(John Smith, 公安部门) ∨ Deport(John Smith, 外交部门)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“小王” — 小王为本地获救人员，工作单位负责安置\",\n            \"部门：所在单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"获救人员(小王) → (¬PersonType(小王, 港澳台) ∧ ¬PersonType(小王, 外籍) → ResponsibleForSettlement(民政部门, 小王) ∨ ResponsibleForSettlement(所在单位, 小王))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“Maria” — Maria为外籍获救人员\",\n            \"部门：公安部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"PersonType(Maria, 外籍) → Deport(Maria, 公安部门) ∨ Deport(Maria, 外交部门)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“张三” — 张三为本地死亡人员\",\n            \"部门：民政部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"死亡人员(张三) → (¬港澳台或外籍人员(张三) → ResponsibleForDisposal(民政部门, 张三))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“李四” — 李四为港澳台死亡人员\",\n            \"部门：港澳台办\"\n        ],\n        \"instance_logicexpression\": [\n            \"港澳台或外籍人员(李四, 港澳台) → ResponsibleForDisposal(港澳台办, 李四)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“John Smith” — John Smith为外籍死亡人员\",\n            \"部门：外事办\"\n        ],\n        \"instance_logicexpression\": [\n            \"港澳台或外籍人员(John Smith, 外籍) → ResponsibleForDisposal(外事办, John Smith)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“小王” — 小王为本地死亡人员，工作单位负责处置\",\n            \"部门：所在单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"死亡人员(小王) → (¬港澳台或外籍人员(小王) → ResponsibleForDisposal(所在单位, 小王))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“Maria” — Maria为外籍死亡人员\",\n            \"部门：港澳台办\"\n        ],\n        \"instance_logicexpression\": [\n            \"港澳台或外籍人员(Maria, 外籍) → ResponsibleForDisposal(港澳台办, Maria)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“李明” — 李明为参加救助的政府公务人员\",\n            \"u=“市政府” — 李明所在的单位为市政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"ParticipateInRescue(李明, 政府公务人员) → HandleInsurance(市政府, 李明)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“王强” — 王强为参加救助的专业救助人员\",\n            \"u=“红十字会” — 王强所属的单位为红十字会\"\n        ],\n        \"instance_logicexpression\": [\n            \"ParticipateInRescue(王强, 专业救助人员) → HandleInsurance(红十字会, 王强)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海上油轮泄漏事件” — 表示海上突发事件为油轮泄漏\",\n            \"f=“国家海洋局” — 表示国家金融保险机构为国家海洋局\"\n        ],\n        \"instance_logicexpression\": [\n            \"海上突发事件(海上油轮泄漏事件) → (TimelyIntervention(国家海洋局, 海上油轮泄漏事件) ∧ PayAccordingToRegulations(国家海洋局, 海上油轮泄漏事件))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海上台风灾害” — 表示海上突发事件为台风灾害\",\n            \"f=“中国人寿保险公司” — 表示国家金融保险机构为中国人寿保险公司\"\n        ],\n        \"instance_logicexpression\": [\n            \"海上突发事件(海上台风灾害) → (TimelyIntervention(中国人寿保险公司, 海上台风灾害) ∧ PayAccordingToRegulations(中国人寿保险公司, 海上台风灾害))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“海上搜救机构A” — 表示海上搜救机构A负责搜救效果的调查工作\",\n            \"i=“海上搜救事件1” — 表示具体的海上搜救事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"ResponsibleForInvestigation(海上搜救机构A, 搜救效果) → TieredInvestigation(海上搜救机构A, 海上搜救事件1)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海上交通事故2” — 表示具体的海上交通事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"海上交通事故(海上交通事故2) → HandleAccordingToRegulations(海上交通事故2, 国家规定)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“海上搜救机构B” — 表示海上搜救机构B负责应急经验的总结工作\",\n            \"i=“海上应急事件3” — 表示具体的海上应急事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"ResponsibleForSummary(海上搜救机构B, 应急经验) → TieredSummary(海上搜救机构B, 海上应急事件3)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“一般海上应急工作4” — 表示具体的一般海上应急工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"一般或较大应急工作(一般海上应急工作4) → ResponsibleForSummary(海上搜救分支机构, 一般海上应急工作4)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“重大海上应急工作5” — 表示具体的重大海上应急工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"重大应急工作(重大海上应急工作5) → ResponsibleForSummary(省级海上搜救机构, 重大海上应急工作5)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“特大海上应急工作6” — 表示具体的特大海上应急工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"特大应急工作(特大海上应急工作6) → ResponsibleForSummary(中国海上搜救中心, 特大海上应急工作6)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“海事局” — 表示通信管理部门为海事局\",\n            \"p=“海上应急通信线路使用管理” — 表示政策类型为海上应急通信线路使用管理\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀p (Department(海事局) ∧ PolicyType(海上应急通信线路使用管理) → EstablishPolicy(海事局, 海上应急通信线路使用管理))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“海事局” — 表示通信管理部门为海事局\",\n            \"e=“卫星通信设备” — 表示设备为卫星通信设备\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀e (Department(海事局) ∧ Equipment(卫星通信设备) → UseManage(海事局, 卫星通信设备))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“海事局” — 表示通信管理部门为海事局\",\n            \"e=“无线电通信设施” — 表示设备为无线电通信设施\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀e (Department(海事局) ∧ Equipment(无线电通信设施) → Maintain(海事局, 无线电通信设施))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“海事局” — 表示通信管理部门为海事局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Department(海事局) → EnsureCommunication(海事局))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“海岸警卫队” — 表示通信管理部门为海岸警卫队\",\n            \"p=“海上应急通信设备保养” — 表示政策类型为海上应急通信设备保养\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀p (Department(海岸警卫队) ∧ PolicyType(海上应急通信设备保养) → EstablishPolicy(海岸警卫队, 海上应急通信设备保养))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“海岸警卫队” — 表示通信管理部门为海岸警卫队\",\n            \"e=“雷达系统” — 表示设备为雷达系统\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀e (Department(海岸警卫队) ∧ Equipment(雷达系统) → UseManage(海岸警卫队, 雷达系统))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“海岸警卫队” — 表示通信管理部门为海岸警卫队\",\n            \"e=“通信线路” — 表示设备为通信线路\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀e (Department(海岸警卫队) ∧ Equipment(通信线路) → Maintain(海岸警卫队, 通信线路))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“海岸警卫队” — 表示通信管理部门为海岸警卫队\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Department(海岸警卫队) → EnsureCommunication(海岸警卫队))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“省级海上搜救中心” — 表示省级海上搜救机构为省级海上搜救中心\",\n            \"t=“海上应急行动人员” — 表示应急行动人员\",\n            \"n=“人员信息汇总表” — 表示收集的人员信息汇总\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀t∀n (省级海上搜救机构(省级海上搜救中心) ∧ 应急行动人员(海上应急行动人员) → CollectInfo(省级海上搜救中心, 人员数量, 人员信息汇总表) ∧ CollectInfo(省级海上搜救中心, 专长, 人员信息汇总表) ∧ CollectInfo(省级海上搜救中心, 通信方式, 人员信息汇总表) ∧ CollectInfo(省级海上搜救中心, 分布情况, 人员信息汇总表))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“专业海上救助队” — 表示专业救助力量为专业海上救助队\",\n            \"e=“搜救设备” — 表示需要配备的搜救设备\",\n            \"r=“省级海上搜救中心” — 表示海上搜救机构为省级海上搜救中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f∀e (专业救助力量(专业海上救助队) → ∀r (海上搜救机构(省级海上搜救中心) → Equip(专业海上救助队, 搜救设备) ∧ 要求配备(省级海上搜救中心, 搜救设备)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“省级海上搜救中心” — 表示省级海上搜救机构为省级海上搜救中心\",\n            \"g=《海上搜救力量指定指南》 — 表示指南为《海上搜救力量指定指南》\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀g (省级海上搜救机构(省级海上搜救中心) ∧ 指南(《海上搜救力量指定指南》) → FollowGuide(省级海上搜救中心, 《海上搜救力量指定指南》) ∧ CollectInfo(省级海上搜救中心, 设备类型, Info) ∧ CollectInfo(省级海上搜救中心, 数量, Info) ∧ CollectInfo(省级海上搜救中心, 性能, Info) ∧ CollectInfo(省级海上搜救中心, 布局, Info))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"MechanismType=“海上应急运输保障机制” — 表示建立海上应急运输保障机制。\",\n            \"Personnel=“海上应急指挥人员1” — 表示应急指挥人员1赶赴事发现场。\",\n            \"Equipment=“应急器材1” — 表示应急器材1的运送。\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishMechanism(“海上应急运输保障机制”) → (GoToScene(“海上应急指挥人员1”) ∧ TransportEquipment(“应急器材1”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“省级海上搜救机构1” — 表示省级海上搜救机构1配备应急专用交通工具。\"\n        ],\n        \"instance_logicexpression\": [\n            \"省级海上搜救机构(“省级海上搜救机构1”) → EquipWithVehicles(“省级海上搜救机构1”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“省级海上搜救机构2” — 表示省级海上搜救机构2与运输部门建立交通工具紧急征用机制。\",\n            \"d=“运输部门1” — 表示运输部门1。\"\n        ],\n        \"instance_logicexpression\": [\n            \"省级海上搜救机构(“省级海上搜救机构2”) ∧ 运输部门(“运输部门1”) → EstablishRequisitionMechanism(“省级海上搜救机构2”, “运输部门1”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“省级海上搜救机构3” — 表示省级海上搜救机构3进行应急行动。\",\n            \"d=“运输部门2” — 表示运输部门2。\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishRequisitionMechanism(“省级海上搜救机构3”, “运输部门2”) → EmergencyAction(“应急行动1”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Mechanism=“海上应急医疗联动机制” — 表示建立的机制是海上应急医疗联动机制\",\n            \"Task1=“海上医疗咨询” — 表示海上医疗咨询是一项明确任务\",\n            \"Task2=“医疗援助” — 表示医疗援助是一项明确任务\",\n            \"Task3=“医疗移送” — 表示医疗移送是一项明确任务\",\n            \"Task4=“收治伤员” — 表示收治伤员是一项明确任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"Establish(MedicalResponseMechanism) ∧ TaskClarified(MarineMedicalConsultation) ∧ TaskClarified(MedicalAssistance) ∧ TaskClarified(MedicalEvacuation) ∧ TaskClarified(TreatInjured)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Mechanism=“内陆应急医疗联动机制” — 表示建立的机制是内陆应急医疗联动机制\",\n            \"Task1=“远程医疗咨询” — 表示远程医疗咨询是一项明确任务\",\n            \"Task2=“紧急医疗物资援助” — 表示紧急医疗物资援助是一项明确任务\",\n            \"Task3=“重症患者医疗移送” — 表示重症患者医疗移送是一项明确任务\",\n            \"Task4=“灾害现场伤员收治” — 表示灾害现场伤员收治是一项明确任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"Establish(MedicalResponseMechanism) ∧ TaskClarified(RemoteMedicalConsultation) ∧ TaskClarified(UrgentMedicalAssistance) ∧ TaskClarified(CriticalPatientEvacuation) ∧ TaskClarified(DisasterSiteInjuryTreatment)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“省级海上搜救中心” — 表示省级海上搜救机构\",\n            \"p=“省公安厅” — 表示同级公安部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s∀p (EstablishMechanism(省级海上搜救中心, 省公安厅) → EnsureAction(省公安厅))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“省级海上搜救中心分支机构” — 表示省级海上搜救机构分支机构\",\n            \"p=“市公安部门” — 表示同级公安部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s∀p (EstablishMechanism(省级海上搜救中心分支机构, 市公安部门) → EnsureAction(市公安部门))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“沿海地区公安部门” — 表示相关公安部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"PublicSecurityDepartment(沿海地区公安部门) → EnsureAction(沿海地区公安部门)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“海上应急行动” — 表示海上应急行动\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (PublicSecurityDepartment(p) → EnsureAction(p))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“中央财政部” — 表示中央财政部作为财政部门\",\n            \"预算：财政预算\",\n            \"原则：分级负担\",\n            \"规定：财政应急保障预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"财政部门(中央财政部) → (IncludeInBudget(中央财政部, 财政预算) ∧ GradedBurden(中央财政部, 应急保障资金) ∧ ExecuteRegulation(中央财政部, 财政应急保障预案))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“省级财政厅” — 表示省级财政厅作为财政部门\",\n            \"预算：财政预算\",\n            \"原则：分级负担\",\n            \"规定：财政应急保障预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"财政部门(省级财政厅) → (IncludeInBudget(省级财政厅, 财政预算) ∧ GradedBurden(省级财政厅, 应急保障资金) ∧ ExecuteRegulation(省级财政厅, 财政应急保障预案))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“中国海上搜救中心” — 表示中国海上搜救中心作为海上搜救组织\",\n            \"经费：搜救经费\",\n            \"政府：中央政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"海上搜救组织(中国海上搜救中心) → (UseManageFunds(中国海上搜救中心, 搜救经费) ∧ ReportSituation(中国海上搜救中心, 中央政府) ∧ AcceptAuditSupervision(中国海上搜救中心, 政府部门))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“广东省海上搜救分中心” — 表示广东省海上搜救分中心作为海上搜救组织\",\n            \"经费：搜救经费\",\n            \"政府：广东省政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"海上搜救组织(广东省海上搜救分中心) → (UseManageFunds(广东省海上搜救分中心, 搜救经费) ∧ ReportSituation(广东省海上搜救分中心, 广东省政府) ∧ AcceptAuditSupervision(广东省海上搜救分中心, 政府部门))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“市级海上搜救队” — 表示市级海上搜救队作为海上搜救组织\",\n            \"经费：搜救经费\",\n            \"政府：市政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"海上搜救组织(市级海上搜救队) → (UseManageFunds(市级海上搜救队, 搜救经费) ∧ ReportSituation(市级海上搜救队, 市政府) ∧ AcceptAuditSupervision(市级海上搜救队, 政府部门))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"EmergencyForcesInsufficient() — 表示当前应急力量不足。\",\n            \"g=“当地政府” — 表示负责动员的当地政府。\",\n            \"e1=“机关单位” — 表示被动员的机关单位。\",\n            \"e2=“企业单位” — 表示被动员的企业单位。\",\n            \"e3=“民间组织” — 表示被动员的民间组织。\",\n            \"e4=“志愿人员” — 表示被动员的志愿人员。\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyForcesInsufficient() → (Government(当地政府) ∧ ((Entity(机关单位) ∧ ¬Participate(机关单位, MarineEmergencyRescueAction()) ∧ ¬Support(机关单位, MarineEmergencyRescueAction())) → Mobilize(当地政府, 机关单位)) ∧ ((Entity(企业单位) ∧ ¬Participate(企业单位, MarineEmergencyRescueAction()) ∧ ¬Support(企业单位, MarineEmergencyRescueAction())) → Mobilize(当地政府, 企业单位)) ∧ ((Entity(民间组织) ∧ ¬Participate(民间组织, MarineEmergencyRescueAction()) ∧ ¬Support(民间组织, MarineEmergencyRescueAction())) → Mobilize(当地政府, 民间组织)) ∧ ((Entity(志愿人员) ∧ ¬Participate(志愿人员, MarineEmergencyRescueAction()) ∧ ¬Support(志愿人员, MarineEmergencyRescueAction())) → Mobilize(当地政府, 志愿人员))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“国家处置民用航空器飞行事故应急救援组织体系” — 表示应急救援组织体系\",\n            \"b1=“国家处置飞行事故指挥部” — 表示领导协调指挥机构\",\n            \"b2=“国家处置飞行事故指挥部办公室” — 表示执行办事机构\",\n            \"t=“应急救援队伍及力量” — 表示应急救援队伍及力量\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseOrganization(国家处置民用航空器飞行事故应急救援组织体系, Components) → (∃b1 ∃b2 ∃t (CommandingBody(国家处置飞行事故指挥部) ∧ ExecutiveBody(国家处置飞行事故指挥部办公室) ∧ RescueTeamsAndForces(应急救援队伍及力量) ∧ ConsistsOf(国家处置民用航空器飞行事故应急救援组织体系, 国家处置飞行事故指挥部) ∧ ConsistsOf(国家处置民用航空器飞行事故应急救援组织体系, 国家处置飞行事故指挥部办公室) ∧ ConsistsOf(国家处置民用航空器飞行事故应急救援组织体系, 应急救援队伍及力量)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“应急救援队伍及力量” — 表示应急救援队伍及力量\",\n            \"Part1=“民用航空器搜寻救援队伍” — 表示民用航空器搜寻救援队伍\",\n            \"Part2=“地方人民政府” — 表示地方人民政府\",\n            \"Part3=“民用航空企事业单位应急救援” — 表示民用航空企事业单位应急救援\",\n            \"Part4=“消防” — 表示消防\",\n            \"Part5=“医疗救护” — 表示医疗救护\",\n            \"Part6=“环境保护队伍” — 表示环境保护队伍\",\n            \"Part7=“社会力量” — 表示社会力量\"\n        ],\n        \"instance_logicexpression\": [\n            \"RescueTeamsAndForces(应急救援队伍及力量) → (Includes(应急救援队伍及力量, 民用航空器搜寻救援队伍) ∧ Includes(应急救援队伍及力量, 地方人民政府) ∧ Includes(应急救援队伍及力量, 民用航空企事业单位应急救援) ∧ Includes(应急救援队伍及力量, 消防) ∧ Includes(应急救援队伍及力量, 医疗救护) ∧ Includes(应急救援队伍及力量, 环境保护队伍) ∧ Includes(应急救援队伍及力量, 社会力量))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“本预案” — 表示应急预案体系中的本预案\",\n            \"f=“2024-01-01” — 表示飞行事故发生的日期\",\n            \"g=“中央政府” — 表示负责应急处置的中央政府\",\n            \"d=“民航局” — 表示负责应急处置的民航局\",\n            \"o=“航空公司A” — 表示负责应急处置的航空公司A\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyPlanSystem(本预案) → (本预案 = 本预案 ∨ 本预案 = 国务院相关部门应急预案 ∨ 本预案 = 有关地方人民政府应急预案 ∨ 本预案 = 民用航空地区管理机构应急预案 ∨ 本预案 = 民用运输机场应急救援预案 ∨ 本预案 = 民用航空相关企事业单位应急预案)\",\n            \"Accident(Flight(2024-01-01)) → EmergencyResponse(Government(中央政府), Department(民航局), Organization(航空公司A), Plan(本预案))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“国务院相关部门应急预案” — 表示应急预案体系中的国务院相关部门应急预案\",\n            \"f=“2024-02-15” — 表示飞行事故发生的日期\",\n            \"g=“地方政府” — 表示负责应急处置的地方政府\",\n            \"d=“消防局” — 表示负责应急处置的消防局\",\n            \"o=“机场B” — 表示负责应急处置的机场B\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyPlanSystem(国务院相关部门应急预案) → (国务院相关部门应急预案 = 本预案 ∨ 国务院相关部门应急预案 = 国务院相关部门应急预案 ∨ 国务院相关部门应急预案 = 有关地方人民政府应急预案 ∨ 国务院相关部门应急预案 = 民用航空地区管理机构应急预案 ∨ 国务院相关部门应急预案 = 民用运输机场应急救援预案 ∨ 国务院相关部门应急预案 = 民用航空相关企事业单位应急预案)\",\n            \"Accident(Flight(2024-02-15)) → EmergencyResponse(Government(地方政府), Department(消防局), Organization(机场B), Plan(国务院相关部门应急预案))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“民用航空地区管理机构应急预案” — 表示应急预案体系中的民用航空地区管理机构应急预案\",\n            \"f=“2024-03-20” — 表示飞行事故发生的日期\",\n            \"g=“应急管理部” — 表示负责应急处置的应急管理部\",\n            \"d=“医疗救援队” — 表示负责应急处置的医疗救援队\",\n            \"o=“航空公司C” — 表示负责应急处置的航空公司C\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyPlanSystem(民用航空地区管理机构应急预案) → (民用航空地区管理机构应急预案 = 本预案 ∨ 民用航空地区管理机构应急预案 = 国务院相关部门应急预案 ∨ 民用航空地区管理机构应急预案 = 有关地方人民政府应急预案 ∨ 民用航空地区管理机构应急预案 = 民用航空地区管理机构应急预案 ∨ 民用航空地区管理机构应急预案 = 民用运输机场应急救援预案 ∨ 民用航空地区管理机构应急预案 = 民用航空相关企事业单位应急预案)\",\n            \"Accident(Flight(2024-03-20)) → EmergencyResponse(Government(应急管理部), Department(医疗救援队), Organization(航空公司C), Plan(民用航空地区管理机构应急预案))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“国家处置飞行事故指挥部” — 表示国家处置飞行事故指挥部组织\",\n            \"Department=“国务院民用航空主管部门” — 表示设在国务院民用航空主管部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"Organization(国家处置飞行事故指挥部) ∧ LocatedAt(国家处置飞行事故指挥部, 国务院民用航空主管部门) → ResponsibleFor(国家处置飞行事故指挥部, EmergencyResponseWork(CivilAviationAccident(Accident)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家处置飞行事故指挥部办公室” — 表示国家处置飞行事故指挥部办公室组织\",\n            \"ParentOrganization=“国家处置飞行事故指挥部” — 表示国家处置飞行事故指挥部办公室是其下属机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"Organization(国家处置飞行事故指挥部办公室) ∧ SubordinateTo(国家处置飞行事故指挥部办公室, 国家处置飞行事故指挥部) → (ResponsibleFor(国家处置飞行事故指挥部办公室, Command(CivilAviationAccident(Accident))) ∧ ResponsibleFor(国家处置飞行事故指挥部办公室, Coordinate(CivilAviationAccident(Accident))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“华东地区民用航空器飞行事故应急指挥部” — 表示华东地区民用航空器飞行事故应急指挥部组织\",\n            \"ParentOrganization=“各民用航空地区管理机构” — 表示华东地区民用航空器飞行事故应急指挥部是其下属机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"Organization(华东地区民用航空器飞行事故应急指挥部) ∧ SubordinateTo(华东地区民用航空器飞行事故应急指挥部, 各民用航空地区管理机构) → ResponsibleFor(华东地区民用航空器飞行事故应急指挥部, Command(CivilAviationAccident(Accident)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“华北地区民用航空器飞行事故应急指挥部” — 表示华北地区民用航空器飞行事故应急指挥部组织\",\n            \"ParentOrganization=“各民用航空地区管理机构” — 表示华北地区民用航空器飞行事故应急指挥部是其下属机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"Organization(华北地区民用航空器飞行事故应急指挥部) ∧ SubordinateTo(华北地区民用航空器飞行事故应急指挥部, 各民用航空地区管理机构) → ResponsibleFor(华北地区民用航空器飞行事故应急指挥部, Command(CivilAviationAccident(Accident)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“MH370” — 表示事故为MH370特别重大飞行事故\",\n            \"Level=“Ⅰ” — 表示应急响应等级为Ⅰ级\"\n        ],\n        \"instance_logicexpression\": [\n            \"MajorAccident(MH370) → EmergencyResponseLevel(MH370, Ⅰ)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“专机任务事故” — 表示事故为执行专机任务发生的飞行事故\",\n            \"Level=“Ⅰ” — 表示应急响应等级为Ⅰ级\"\n        ],\n        \"instance_logicexpression\": [\n            \"SpecialMission(专机任务事故) → EmergencyResponseLevel(专机任务事故, Ⅰ)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“VIP航班事故” — 表示事故为有重要旅客死亡的飞行事故\",\n            \"Level=“Ⅰ” — 表示应急响应等级为Ⅰ级\"\n        ],\n        \"instance_logicexpression\": [\n            \"VIPDeath(VIP航班事故) → EmergencyResponseLevel(VIP航班事故, Ⅰ)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“军民相撞事故” — 表示事故为军用航空器与民用航空器空中相撞\",\n            \"Level=“Ⅰ” — 表示应急响应等级为Ⅰ级\"\n        ],\n        \"instance_logicexpression\": [\n            \"MilitaryCivilCollision(军民相撞事故) → EmergencyResponseLevel(军民相撞事故, Ⅰ)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“外国航空器中国境内事故” — 表示事故为外国民用航空器在中华人民共和国境内发生的飞行事故\",\n            \"Level=“Ⅰ” — 表示应急响应等级为Ⅰ级\"\n        ],\n        \"instance_logicexpression\": [\n            \"ForeignAccidentInChina(外国航空器中国境内事故) → EmergencyResponseLevel(外国航空器中国境内事故, Ⅰ)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“中国运营人境外事故” — 表示事故为中国运营人使用的民用航空器在境外发生的飞行事故\",\n            \"Level=“Ⅰ” — 表示应急响应等级为Ⅰ级\"\n        ],\n        \"instance_logicexpression\": [\n            \"ChinaOperatorAbroadAccident(中国运营人境外事故) → EmergencyResponseLevel(中国运营人境外事故, Ⅰ)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“重大地面设施损失事故” — 表示事故为民用航空器造成重要地面设施巨大损失的事故\",\n            \"Level=“Ⅰ” — 表示应急响应等级为Ⅰ级\"\n        ],\n        \"instance_logicexpression\": [\n            \"SignificantGroundDamage(重大地面设施损失事故) → EmergencyResponseLevel(重大地面设施损失事故, Ⅰ)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“东方航空123号” — 表示东方航空123号飞机发生重大飞行事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (MajorAccident(东方航空123号) → ActivateLevelIIResponse())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“南方航空456号” — 表示南方航空456号飞机在运行过程中发生严重的不正常紧急事件\",\n            \"Event=“南方航空456号遭遇极端天气” — 表示南方航空456号飞机遭遇极端天气的事件\",\n            \"LeadToMajorAccident(南方航空456号遭遇极端天气) — 表示该事件可能导致重大飞行事故发生\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (SeriousEmergency(南方航空456号) ∧ LeadToMajorAccident(南方航空456号遭遇极端天气) → ActivateLevelIIResponse())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“国际航空789号” — 表示国际航空789号飞机在运行过程中发生严重的不正常紧急事件\",\n            \"Event=“国际航空789号机械故障” — 表示国际航空789号飞机发生机械故障的事件\",\n            \"ImpactOnGroundFacility(国际航空789号机械故障) — 表示该事件可能对重要地面设施造成重大影响或损失\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (SeriousEmergency(国际航空789号) ∧ ImpactOnGroundFacility(国际航空789号机械故障) → ActivateLevelIIResponse())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“北方航空012号” — 表示北方航空012号飞机在运行过程中发生严重的不正常紧急事件\",\n            \"Event=“北方航空012号化学泄漏” — 表示北方航空012号飞机发生化学泄漏的事件\",\n            \"ImpactOnEnvironment(北方航空012号化学泄漏) — 表示该事件可能对环境保护造成重大影响或损失\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (SeriousEmergency(北方航空012号) ∧ ImpactOnEnvironment(北方航空012号化学泄漏) → ActivateLevelIIResponse())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“西方航空345号” — 表示西方航空345号飞机在运行过程中发生严重的不正常紧急事件\",\n            \"Event=“西方航空345号空中接近碰撞” — 表示西方航空345号飞机发生空中接近碰撞的事件\",\n            \"ImpactOnPublicSafety(西方航空345号空中接近碰撞) — 表示该事件可能对公众安全造成重大影响或损失\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (SeriousEmergency(西方航空345号) ∧ ImpactOnPublicSafety(西方航空345号空中接近碰撞) → ActivateLevelIIResponse())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“中央航空678号” — 表示中央航空678号飞机在运行过程中发生严重的不正常紧急事件\",\n            \"Event=“中央航空678号恐怖威胁” — 表示中央航空678号飞机遭遇恐怖威胁的事件\",\n            \"ImpactOnSocialStability(中央航空678号恐怖威胁) — 表示该事件可能对社会稳定造成重大影响或损失\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (SeriousEmergency(中央航空678号) ∧ ImpactOnSocialStability(中央航空678号恐怖威胁) → ActivateLevelIIResponse())\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“航班CA123” — 表示航班CA123发生了较大的飞行事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (MajorAccident(航班CA123) → ActivateLevelIIIResponse())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“航班MU456” — 表示航班MU456在运行过程中发生了严重的不正常紧急事件\",\n            \"Event=“航班MU456的严重不正常紧急事件” — 表示该事件可能导致较大以上的飞行事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (SeriousEmergency(航班MU456) ∧ LeadToMajorAccident(航班MU456的严重不正常紧急事件) → ActivateLevelIIIResponse())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“航班CZ789” — 表示航班CZ789在运行过程中发生了严重的不正常紧急事件\",\n            \"Event=“航班CZ789的严重不正常紧急事件” — 表示该事件可能对地面设施造成较大影响或损失\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (SeriousEmergency(航班CZ789) ∧ ImpactOnGroundFacilities(航班CZ789的严重不正常紧急事件) → ActivateLevelIIIResponse())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“航班HU012” — 表示航班HU012在运行过程中发生了严重的不正常紧急事件\",\n            \"Event=“航班HU012的严重不正常紧急事件” — 表示该事件可能对环境保护造成较大影响或损失\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (SeriousEmergency(航班HU012) ∧ ImpactOnEnvironmentalProtection(航班HU012的严重不正常紧急事件) → ActivateLevelIIIResponse())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“航班AQ345” — 表示航班AQ345在运行过程中发生了严重的不正常紧急事件\",\n            \"Event=“航班AQ345的严重不正常紧急事件” — 表示该事件可能对公众安全造成较大影响或损失\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (SeriousEmergency(航班AQ345) ∧ ImpactOnPublicSafety(航班AQ345的严重不正常紧急事件) → ActivateLevelIIIResponse())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“航班OZ678” — 表示航班OZ678在运行过程中发生了严重的不正常紧急事件\",\n            \"Event=“航班OZ678的严重不正常紧急事件” — 表示该事件可能对社会稳定造成较大影响或损失\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (SeriousEmergency(航班OZ678) ∧ ImpactOnSocialStability(航班OZ678的严重不正常紧急事件) → ActivateLevelIIIResponse())\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“航班123” — 表示航班123发生了飞行事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"Accident(航班123) → ActivateEmergencyResponse(IV)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“航班456” — 表示航班456在运行过程中发生了紧急事件\",\n            \"e=“机械故障” — 表示紧急事件为机械故障\",\n            \"可能导致事故：LeadsToAccident(机械故障) — 机械故障可能导致飞行事故发生\"\n        ],\n        \"instance_logicexpression\": [\n            \"Emergency(航班456) ∧ LeadsToAccident(机械故障) → ActivateEmergencyResponse(IV)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“航班789” — 表示航班789在运行过程中发生了紧急事件\",\n            \"e=“空中失火” — 表示紧急事件为空中失火\",\n            \"影响地面设施：AffectsGroundFacilities(空中失火) — 空中失火可能对地面设施造成影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"Emergency(航班789) ∧ AffectsGroundFacilities(空中失火) → ActivateEmergencyResponse(IV)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“航班101” — 表示航班101在运行过程中发生了紧急事件\",\n            \"e=“化学泄漏” — 表示紧急事件为化学泄漏\",\n            \"影响环境保护：AffectsEnvironmentalProtection(化学泄漏) — 化学泄漏可能对环境保护造成影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"Emergency(航班101) ∧ AffectsEnvironmentalProtection(化学泄漏) → ActivateEmergencyResponse(IV)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“航班112” — 表示航班112在运行过程中发生了紧急事件\",\n            \"e=“劫机事件” — 表示紧急事件为劫机事件\",\n            \"影响公众安全：AffectsPublicSafety(劫机事件) — 劫机事件可能对公众安全造成影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"Emergency(航班112) ∧ AffectsPublicSafety(劫机事件) → ActivateEmergencyResponse(IV)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“航班121” — 表示航班121在运行过程中发生了紧急事件\",\n            \"e=“大规模乘客骚乱” — 表示紧急事件为大规模乘客骚乱\",\n            \"影响社会稳定：AffectsSocialStability(大规模乘客骚乱) — 大规模乘客骚乱可能对社会稳定造成影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"Emergency(航班121) ∧ AffectsSocialStability(大规模乘客骚乱) → ActivateEmergencyResponse(IV)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“Ⅰ级应急响应事件” — 表示发生Ⅰ级应急响应事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EmergencyResponseEvent(e, Ⅰ) → (ActivatePlan(国家民用航空器飞行事故应急预案) ∧ ActivatePlan(StateCouncilDepartments) ∧ ActivatePlan(ProvincialGovernments)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“Ⅱ级应急响应事件” — 表示发生Ⅱ级应急响应事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EmergencyResponseEvent(e, Ⅱ) → (ActivatePlan(CivilAviationAuthorities) ∧ ActivatePlan(ProvincialGovernments)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“Ⅲ级应急响应事件” — 表示发生Ⅲ级应急响应事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EmergencyResponseEvent(e, Ⅲ) → (ActivatePlan(CivilAviationRegionalAuthorities) ∧ ActivatePlan(MunicipalGovernments)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“Ⅳ级应急响应事件” — 表示发生Ⅳ级应急响应事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EmergencyResponseEvent(e, Ⅳ) → (ActivatePlan(CivilAirports) ∧ ActivatePlan(CivilAviationEnterprises) ∧ ActivatePlan(CivilAviationSafetySupervisionOffices) ∧ ActivatePlan(MunicipalGovernments)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"l=“市级” — 表示启动了市级应急预案\",\n            \"FromAgency=“市级应急指挥机构” — 表示市级应急指挥机构\",\n            \"ToAgency=“省级应急指挥机构” — 表示省级应急指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"ActivateEmergencyPlan(市级) → (Report(市级应急指挥机构, 省级应急指挥机构) ∧ (必要时(市级应急指挥机构, 省级应急指挥机构) → RequestActivateEmergencyPlan(市级应急指挥机构, 省级应急指挥机构))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=“省级” — 表示启动了省级应急预案\",\n            \"FromAgency=“省级应急指挥机构” — 表示省级应急指挥机构\",\n            \"ToAgency=“国家级应急指挥机构” — 表示国家级应急指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"ActivateEmergencyPlan(省级) → (Report(省级应急指挥机构, 国家级应急指挥机构) ∧ (必要时(省级应急指挥机构, 国家级应急指挥机构) → RequestActivateEmergencyPlan(省级应急指挥机构, 国家级应急指挥机构))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=“国家级” — 表示启动了国家级应急预案\",\n            \"FromAgency=“国家级应急指挥机构” — 表示国家级应急指挥机构\",\n            \"ToAgency=“国际合作应急指挥机构” — 表示国际合作应急指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"ActivateEmergencyPlan(国家级) → (Report(国家级应急指挥机构, 国际合作应急指挥机构) ∧ (必要时(国家级应急指挥机构, 国际合作应急指挥机构) → RequestActivateEmergencyPlan(国家级应急指挥机构, 国际合作应急指挥机构))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Plan=“国家民用航空器飞行事故应急预案” — 表示启动的应急预案\",\n            \"Office=“国家处置飞行事故指挥部办公室” — 表示负责响应的办公室\",\n            \"Entity1=“国务院相关部门” — 表示通信联系的实体之一\",\n            \"Entity2=“事故发生地省级应急指挥机构” — 表示通信联系的实体之一\",\n            \"Entity3=“事故现场应急指挥部” — 表示通信联系的实体之一\",\n            \"Entity4=“民用航空地区管理机构应急指挥机构” — 表示通信联系的实体之一\",\n            \"Entity5=“民用航空器搜救中心” — 表示通信联系的实体之一\",\n            \"Members=“国家处置飞行事故指挥部成员” — 表示被通知的成员\",\n            \"Agency1=“消防救援局” — 表示相关应急机构之一\",\n            \"Agency2=“医疗救援队” — 表示相关应急机构之一\",\n            \"Command=“地方应急指挥机构” — 表示提供技术建议的指挥机构\",\n            \"Personnel1=“救援专家张教授” — 表示赶赴现场的人员之一\",\n            \"Personnel2=“技术支持李工” — 表示赶赴现场的人员之一\",\n            \"Scene=“事故现场” — 表示赶赴的现场\",\n            \"Expert=“专家咨询组” — 表示提出建议的专家组\",\n            \"PlanSuggestion=“应急救援方案” — 表示提出的应急救援方案\"\n        ],\n        \"instance_logicexpression\": [\n            \"ActivatePlan(“国家民用航空器飞行事故应急预案”) → (\",\n            \"EstablishCommunication(“国家处置飞行事故指挥部办公室”, “国务院相关部门”) ∧\",\n            \"EstablishCommunication(“国家处置飞行事故指挥部办公室”, “事故发生地省级应急指挥机构”) ∧\",\n            \"EstablishCommunication(“国家处置飞行事故指挥部办公室”, “事故现场应急指挥部”) ∧\",\n            \"EstablishCommunication(“国家处置飞行事故指挥部办公室”, “民用航空地区管理机构应急指挥机构”) ∧\",\n            \"EstablishCommunication(“国家处置飞行事故指挥部办公室”, “民用航空器搜救中心”) ∧\",\n            \"CollectInformation(“国家处置飞行事故指挥部办公室”) ∧\",\n            \"ReportStatus(“国家处置飞行事故指挥部办公室”, “飞行事故”) ∧\",\n            \"NotifyMembers(“国家处置飞行事故指挥部办公室”, “国家处置飞行事故指挥部成员”) ∧\",\n            \"Standby(“消防救援局”) ∧\",\n            \"Standby(“医疗救援队”) ∧\",\n            \"ProvideAdvice(“消防救援局”, “地方应急指挥机构”) ∧\",\n            \"ProvideAdvice(“医疗救援队”, “地方应急指挥机构”) ∧\",\n            \"CoordinateSupport(“国家处置飞行事故指挥部办公室”, “地方应急指挥机构”, “Request”) ∧\",\n            \"GoToScene(“救援专家张教授”, “事故现场”) ∧\",\n            \"GoToScene(“技术支持李工”, “事故现场”) ∧\",\n            \"ProposePlan(“专家咨询组”, “应急救援方案”) ∧\",\n            \"CoordinateMatters(“国家处置飞行事故指挥部办公室”)\",\n        \")\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“民航局” — 表示民航局应急指挥机构\",\n            \"i=“飞行事故信息” — 表示飞行事故信息\",\n            \"p=“民航局应急预案” — 表示民航局的应急预案\",\n            \"r=“应急救援力量” — 表示应急救援力量\",\n            \"c=“飞行事故信息” — 表示飞行事故信息\",\n            \"NeedSupport(d)=True — 表示民航局需要其他部门的应急力量支援\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀i∀p (ReceiveInformation(民航局, 飞行事故信息) → (ActivatePlan(民航局, 民航局应急预案) ∧ Report(民航局, CommandCenter)))\",\n            \"∀d∀r (ReceiveInformation(民航局, 飞行事故信息) → OrganizeRescue(民航局, 应急救援力量))\",\n            \"∀d∀c (ReceiveInformation(民航局, 飞行事故信息) ∧ NeedSupport(民航局) → RequestSupport(民航局, CommandCenter))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“消防局” — 表示消防局应急指挥机构\",\n            \"i=“飞行事故信息” — 表示飞行事故信息\",\n            \"p=“消防局应急预案” — 表示消防局的应急预案\",\n            \"r=“消防救援队伍” — 表示消防救援队伍\",\n            \"c=“飞行事故信息” — 表示飞行事故信息\",\n            \"NeedSupport(d)=False — 表示消防局不需要其他部门的应急力量支援\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀i∀p (ReceiveInformation(消防局, 飞行事故信息) → (ActivatePlan(消防局, 消防局应急预案) ∧ Report(消防局, CommandCenter)))\",\n            \"∀d∀r (ReceiveInformation(消防局, 飞行事故信息) → OrganizeRescue(消防局, 消防救援队伍))\",\n            \"∀d∀c (ReceiveInformation(消防局, 飞行事故信息) ∧ NeedSupport(消防局) → RequestSupport(消防局, CommandCenter))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“医疗救援中心” — 表示医疗救援中心应急指挥机构\",\n            \"i=“飞行事故信息” — 表示飞行事故信息\",\n            \"p=“医疗救援中心应急预案” — 表示医疗救援中心的应急预案\",\n            \"r=“医疗救援队伍” — 表示医疗救援队伍\",\n            \"c=“飞行事故信息” — 表示飞行事故信息\",\n            \"NeedSupport(d)=True — 表示医疗救援中心需要其他部门的应急力量支援\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀i∀p (ReceiveInformation(医疗救援中心, 飞行事故信息) → (ActivatePlan(医疗救援中心, 医疗救援中心应急预案) ∧ Report(医疗救援中心, CommandCenter)))\",\n            \"∀d∀r (ReceiveInformation(医疗救援中心, 飞行事故信息) → OrganizeRescue(医疗救援中心, 医疗救援队伍))\",\n            \"∀d∀c (ReceiveInformation(医疗救援中心, 飞行事故信息) ∧ NeedSupport(医疗救援中心) → RequestSupport(医疗救援中心, CommandCenter))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“省级人民政府应急指挥机构” — 表示省级人民政府应急指挥机构\",\n            \"i=“飞行事故信息” — 表示飞行事故信息\",\n            \"p=“省级及相关市（地）应急预案” — 表示省级及相关市（地）应急预案\",\n            \"c=“国家处置飞行事故指挥部” — 表示国家处置飞行事故指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀i ∀p ∀c (ReceiveInformation(省级人民政府应急指挥机构, 飞行事故信息) → (ActivatePlan(省级人民政府应急指挥机构, 省级及相关市（地）应急预案) ∧ Report(省级人民政府应急指挥机构, 国家处置飞行事故指挥部)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“省级人民政府应急指挥机构” — 表示省级人民政府应急指挥机构\",\n            \"i=“飞行事故信息” — 表示飞行事故信息\",\n            \"f=“应急救援力量” — 表示应急救援力量\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀i ∀f (ReceiveInformation(省级人民政府应急指挥机构, 飞行事故信息) → OrganizeRescue(省级人民政府应急指挥机构, 应急救援力量))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“省级人民政府应急指挥机构” — 表示省级人民政府应急指挥机构\",\n            \"i=“飞行事故信息” — 表示飞行事故信息\",\n            \"c=“国家处置飞行事故指挥部” — 表示国家处置飞行事故指挥部\",\n            \"NeedSupport(省级人民政府应急指挥机构) — 表示需要其他应急力量支援\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀i ∀c (ReceiveInformation(省级人民政府应急指挥机构, 飞行事故信息) ∧ NeedSupport(省级人民政府应急指挥机构) → RequestSupport(省级人民政府应急指挥机构, 国家处置飞行事故指挥部))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o1=“民用航空地区管理机构” — 表示接到信息的组织为民用航空地区管理机构\",\n            \"o2=“事故发生地人民政府” — 表示需要通报的组织为事故发生地人民政府\",\n            \"g=“国务院民用航空主管部门” — 表示需要报告的组织为国务院民用航空主管部门\",\n            \"i=“某飞机失事” — 表示事故相关信息为某飞机失事\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o1∀o2∀i∀g (ReceiveInformation(民用航空地区管理机构, 某飞机失事) ∧ Accident(某飞机失事) → (Report(民用航空地区管理机构, 国务院民用航空主管部门, 某飞机失事) ∧ Notify(民用航空地区管理机构, 事故发生地人民政府, 某飞机失事)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o1=“事故发生地人民政府” — 表示接到信息的组织为事故发生地人民政府\",\n            \"o2=“上一级人民政府” — 表示需要报告的组织为上一级人民政府\",\n            \"i=“某飞机失事” — 表示事故相关信息为某飞机失事\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o1∀o2∀i (ReceiveInformation(事故发生地人民政府, 某飞机失事) ∧ Accident(某飞机失事) → Report(事故发生地人民政府, 上一级人民政府, 某飞机失事))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o1=“国务院民用航空主管部门” — 表示接到信息的组织为国务院民用航空主管部门\",\n            \"o2=“国务院” — 表示需要报告的组织为国务院\",\n            \"安全生产监督和新闻宣传主管部门=“安全生产监督和新闻宣传主管部门” — 表示需要报告的组织为安全生产监督和新闻宣传主管部门\",\n            \"i=“某飞机失事” — 表示事故相关信息为某飞机失事\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o1∀o2∀i (ReceiveInformation(国务院民用航空主管部门, 某飞机失事) ∧ Accident(某飞机失事) → (Report(国务院民用航空主管部门, 国务院, 某飞机失事) ∧ Report(国务院民用航空主管部门, 安全生产监督和新闻宣传主管部门, 某飞机失事)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“民用航空主管部门” — 表示国务院民用航空主管部门\",\n            \"a=“2024-04-01事故” — 表示2024年4月1日发生的重大及以上飞行事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀a (MajorOrAboveFlightAccident(2024-04-01事故) ∧ ReceiveAccidentInfo(民用航空主管部门, 2024-04-01事故) → (Report(民用航空主管部门, 国务院, 2024-04-01事故) ∧ Report(民用航空主管部门, 安全生产监督主管部门, 2024-04-01事故) ∧ SubmitWrittenReport(民用航空主管部门, 2024-04-01事故)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“某市市人民政府” — 表示某市市人民政府\",\n            \"a=“2024-04-02事故” — 表示2024年4月2日发生的重大及以上飞行事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀a (MajorOrAboveFlightAccident(2024-04-02事故) ∧ ReceiveAccidentInfo(某市市人民政府, 2024-04-02事故) → (Report(某市市人民政府, 上级人民政府, 2024-04-02事故) ∧ Report(某市市人民政府, 当地民用航空管理机构, 2024-04-02事故) ∧ SubmitWrittenReport(某市市人民政府, 2024-04-02事故)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“民用航空主管部门” — 表示国务院民用航空主管部门\",\n            \"a=“2024-05-15事故” — 表示2024年5月15日发生的重大及以上飞行事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀a (MajorOrAboveFlightAccident(2024-05-15事故) ∧ ReceiveAccidentInfo(民用航空主管部门, 2024-05-15事故) → (Report(民用航空主管部门, 国务院, 2024-05-15事故) ∧ Report(民用航空主管部门, 安全生产监督主管部门, 2024-05-15事故) ∧ SubmitWrittenReport(民用航空主管部门, 2024-05-15事故)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“某省人民政府” — 表示某省人民政府\",\n            \"a=“2024-06-20事故” — 表示2024年6月20日发生的重大及以上飞行事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀a (MajorOrAboveFlightAccident(2024-06-20事故) ∧ ReceiveAccidentInfo(某省人民政府, 2024-06-20事故) → (Report(某省人民政府, 上级人民政府, 2024-06-20事故) ∧ Report(某省人民政府, 当地民用航空管理机构, 2024-06-20事故) ∧ SubmitWrittenReport(某省人民政府, 2024-06-20事故)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“CA1234” — 表示发生飞行事故的民用航空器编号为CA1234\",\n            \"o=“航空公司X” — 表示与事故航空器CA1234相关的单位为航空公司X\",\n            \"m=“民航局Y地区管理局” — 表示负责监督检查的民用航空管理部门为民航局Y地区管理局\"\n        ],\n        \"instance_logicexpression\": [\n            \"AviationAccident(CA1234) → ∃o (RelatedOrganization(航空公司X, CA1234) ∧ ProvideInformation(航空公司X, AccidentAircraftInformation(CA1234), CommandCenter))\",\n            \"AviationAccident(CA1234) ∧ ManagementSupervises(民航局Y地区管理局, CA1234) → ProvideInformation(民航局Y地区管理局, SupervisionInformation(民航局Y地区管理局, CA1234), CommandCenter)\",\n            \"AviationAccident(CA1234) → (∃o (RelatedOrganization(航空公司X, CA1234) ∧ ProvideInformation(航空公司X, AccidentAircraftInformation(CA1234), CommandCenter)) ∧ ∃m (ManagementSupervises(民航局Y地区管理局, CA1234) ∧ ProvideInformation(民航局Y地区管理局, SupervisionInformation(民航局Y地区管理局, CA1234), CommandCenter)) → StudyRescuePlan(CommandCenter)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“CA5678” — 表示发生飞行事故的民用航空器编号为CA5678\",\n            \"o=“航空公司Z” — 表示与事故航空器CA5678相关的单位为航空公司Z\",\n            \"m=“民航局W地区管理局” — 表示负责监督检查的民用航空管理部门为民航局W地区管理局\"\n        ],\n        \"instance_logicexpression\": [\n            \"AviationAccident(CA5678) → ∃o (RelatedOrganization(航空公司Z, CA5678) ∧ ProvideInformation(航空公司Z, AccidentAircraftInformation(CA5678), CommandCenter))\",\n            \"AviationAccident(CA5678) ∧ ManagementSupervises(民航局W地区管理局, CA5678) → ProvideInformation(民航局W地区管理局, SupervisionInformation(民航局W地区管理局, CA5678), CommandCenter)\",\n            \"AviationAccident(CA5678) → (∃o (RelatedOrganization(航空公司Z, CA5678) ∧ ProvideInformation(航空公司Z, AccidentAircraftInformation(CA5678), CommandCenter)) ∧ ∃m (ManagementSupervises(民航局W地区管理局, CA5678) ∧ ProvideInformation(民航局W地区管理局, SupervisionInformation(民航局W地区管理局, CA5678), CommandCenter)) → StudyRescuePlan(CommandCenter)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“国务院民用航空主管部门” — 表示民用航空主管部门\",\n            \"i=“飞机失事” — 表示事故相关信息为飞机失事\",\n            \"r=“国务院相关部门” — 表示通报的接收方为国务院相关部门\",\n            \"Recipient1=“省级人民政府” — 表示通报的接收方为省级人民政府\",\n            \"Recipient2=“民用航空有关单位” — 表示通报的接收方为民用航空有关单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀i ∀r (ReceiveInformation(“国务院民用航空主管部门”, “飞机失事”) ∧ Accident(“飞机失事”) → (ConfirmAndSummarize(“国务院民用航空主管部门”) ∧ Notify(“国务院民用航空主管部门”, “国务院相关部门”) ∧ Notify(“国务院民用航空主管部门”, “省级人民政府”) ∧ Notify(“国务院民用航空主管部门”, “民用航空有关单位”) ∧ PrepareForEmergencyRescue(“国务院相关部门”) ∧ PrepareForEmergencyRescue(“省级人民政府”) ∧ PrepareForEmergencyRescue(“民用航空有关单位”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国务院民用航空主管部门” — 表示民用航空主管部门\",\n            \"i=“机场火灾” — 表示事故相关信息为机场火灾\",\n            \"r=“国务院相关部门” — 表示通报的接收方为国务院相关部门\",\n            \"Recipient1=“省级人民政府” — 表示通报的接收方为省级人民政府\",\n            \"Recipient2=“民用航空有关单位” — 表示通报的接收方为民用航空有关单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀i ∀r (ReceiveInformation(“国务院民用航空主管部门”, “机场火灾”) ∧ Accident(“机场火灾”) → (ConfirmAndSummarize(“国务院民用航空主管部门”) ∧ Notify(“国务院民用航空主管部门”, “国务院相关部门”) ∧ Notify(“国务院民用航空主管部门”, “省级人民政府”) ∧ Notify(“国务院民用航空主管部门”, “民用航空有关单位”) ∧ PrepareForEmergencyRescue(“国务院相关部门”) ∧ PrepareForEmergencyRescue(“省级人民政府”) ∧ PrepareForEmergencyRescue(“民用航空有关单位”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国务院民用航空主管部门” — 表示民用航空主管部门\",\n            \"i=“空中交通管制系统故障” — 表示事故相关信息为空中交通管制系统故障\",\n            \"r=“国务院相关部门” — 表示通报的接收方为国务院相关部门\",\n            \"Recipient1=“省级人民政府” — 表示通报的接收方为省级人民政府\",\n            \"Recipient2=“民用航空有关单位” — 表示通报的接收方为民用航空有关单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀i ∀r (ReceiveInformation(“国务院民用航空主管部门”, “空中交通管制系统故障”) ∧ Accident(“空中交通管制系统故障”) → (ConfirmAndSummarize(“国务院民用航空主管部门”) ∧ Notify(“国务院民用航空主管部门”, “国务院相关部门”) ∧ Notify(“国务院民用航空主管部门”, “省级人民政府”) ∧ Notify(“国务院民用航空主管部门”, “民用航空有关单位”) ∧ PrepareForEmergencyRescue(“国务院相关部门”) ∧ PrepareForEmergencyRescue(“省级人民政府”) ∧ PrepareForEmergencyRescue(“民用航空有关单位”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“国家处置飞行事故指挥部” — 表示国家处置飞行事故指挥部负责指挥\",\n            \"i=“MH370失联事件” — 表示MH370失联事件为飞行事故\",\n            \"r=“救援队伍A” — 表示救援队伍A被派出\",\n            \"a=“搜救” — 表示行动为搜救\",\n            \"m=“紧急处置” — 表示行动为紧急处置\",\n            \"e=“次生灾害” — 表示事件为次生灾害\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀i (InCharge(国家处置飞行事故指挥部, MH370失联事件) ∧ AccidentInfo(MH370失联事件) → (Command(国家处置飞行事故指挥部) ∧ ∀r (Dispatch(救援队伍A, MH370失联事件) → (PerformAction(救援队伍A, MH370失联事件, 搜救) ∨ PerformAction(救援队伍A, MH370失联事件, 紧急处置))))\",\n            \"InCharge(国家处置飞行事故指挥部, MH370失联事件) → Compose(国家处置飞行事故指挥部, [地方人民政府, 民用航空地区管理机构, 派出机构, 参加现场应急救援主要机构的负责人])\",\n            \"¬InCharge(国家处置飞行事故指挥部, MH370失联事件) → (Pre处置(救援队伍A, MH370失联事件) ∧ ControlIncident(救援队伍A, MH370失联事件) ∧ ∀e (PreventEvent(救援队伍A, MH370失联事件, 次生灾害)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“国家处置飞行事故指挥部” — 表示国家处置飞行事故指挥部负责指挥\",\n            \"i=“某航空公司坠机事件” — 表示某航空公司坠机事件为飞行事故\",\n            \"r=“救援队伍B” — 表示救援队伍B被派出\",\n            \"a=“紧急救援” — 表示行动为紧急救援\",\n            \"m=“事故现场清理” — 表示行动为事故现场清理\",\n            \"e=“衍生事故” — 表示事件为衍生事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀i (InCharge(国家处置飞行事故指挥部, 某航空公司坠机事件) ∧ AccidentInfo(某航空公司坠机事件) → (Command(国家处置飞行事故指挥部) ∧ ∀r (Dispatch(救援队伍B, 某航空公司坠机事件) → (PerformAction(救援队伍B, 某航空公司坠机事件, 紧急救援) ∨ PerformAction(救援队伍B, 某航空公司坠机事件, 事故现场清理))))\",\n            \"InCharge(国家处置飞行事故指挥部, 某航空公司坠机事件) → Compose(国家处置飞行事故指挥部, [地方人民政府, 民用航空地区管理机构, 派出机构, 参加现场应急救援主要机构的负责人])\",\n            \"¬InCharge(国家处置飞行事故指挥部, 某航空公司坠机事件) → (Pre处置(救援队伍B, 某航空公司坠机事件) ∧ ControlIncident(救援队伍B, 某航空公司坠机事件) ∧ ∀e (PreventEvent(救援队伍B, 某航空公司坠机事件, 衍生事故)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Type=“陆上” — 表示搜救类型为陆上\",\n            \"Aircraft=“航空器A” — 表示被搜救的民用航空器为航空器A\"\n        ],\n        \"instance_logicexpression\": [\n            \"民用航空器(航空器A) → (SearchAndRescue(陆上, 航空器A) ∨ SearchAndRescue(海上, 航空器A))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Type=“海上” — 表示搜救类型为海上\",\n            \"Aircraft=“航空器B” — 表示被搜救的民用航空器为航空器B\"\n        ],\n        \"instance_logicexpression\": [\n            \"民用航空器(航空器B) → (SearchAndRescue(陆上, 航空器B) ∨ SearchAndRescue(海上, 航空器B))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Aircraft=“航空器C” — 表示被指导的民用航空器为航空器C\"\n        ],\n        \"instance_logicexpression\": [\n            \"民用航空器(航空器C) → Guide(国家处置飞行事故指挥部, 全国)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Plan=“陆上搜救方案X” — 表示拟订的陆上搜救方案为方案X\",\n            \"Area=“东部地区” — 表示陆上使用航空器的区域为东部地区\",\n            \"Aircraft=“航空器D” — 表示被搜救的民用航空器为航空器D\",\n            \"Government=“东部地方政府” — 表示协调的当地政府为东部地方政府\",\n            \"Department=“东部救援部门” — 表示协调的有关部门为东部救援部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"陆上使用航空器(航空器D) → FormulatePlan(民用航空地区管理机构, 陆上搜救方案X, 东部地区) ∧ CoordinateSearchAndRescue(民用航空地区管理机构, 东部地方政府, 东部救援部门, 航空器D)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“省级政府” — 表示省级人民政府\",\n            \"a=“民航飞机A320” — 表示民用航空器A320\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀a (AdministrativeArea(省级政府) ∧ CivilAircraft(民航飞机A320) → ResponsibleForSearchAndRescue(省级政府, 民航飞机A320))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“市级政府” — 表示市级人民政府\",\n            \"a=“民航直升机B412” — 表示民用航空器直升机B412\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀a (AdministrativeArea(市级政府) ∧ CivilAircraft(民航直升机B412) → ResponsibleForSearchAndRescue(市级政府, 民航直升机B412))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“县级政府” — 表示县级人民政府\",\n            \"a=“民航小型飞机C172” — 表示民用航空器小型飞机C172\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀a (AdministrativeArea(县级政府) ∧ CivilAircraft(民航小型飞机C172) → ResponsibleForSearchAndRescue(县级政府, 民航小型飞机C172))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“省级政府” — 表示省级人民政府\",\n            \"a=“民航喷气机G550” — 表示民用航空器喷气机G550\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀a (AdministrativeArea(省级政府) ∧ CivilAircraft(民航喷气机G550) → ResponsibleForSearchAndRescue(省级政府, 民航喷气机G550))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“市级政府” — 表示市级人民政府\",\n            \"a=“民航客机B787” — 表示民用航空器客机B787\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀a (AdministrativeArea(市级政府) ∧ CivilAircraft(民航客机B787) → ResponsibleForSearchAndRescue(市级政府, 民航客机B787))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“国家海上搜救部门” — 表示国家海上搜救部门负责搜救民用航空器。\",\n            \"a=“C919” — 表示C919型号的民用航空器。\",\n            \"p=“广东省海上搜救中心” — 表示广东省海上搜救中心负责拟订方案。\",\n            \"s=“广东省海上搜救方案” — 表示广东省海上搜救中心拟订的搜救方案。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀a (ResponsibleForSearchAndRescue(国家海上搜救部门, C919) ∧ ∀p∀s (FormulatePlan(广东省海上搜救中心, 广东省海上搜救方案) ∧ ParticipateInSearchAndRescue(广东省海上搜救中心, C919) → 沿海省区市海上搜救机构(广东省海上搜救中心)))\",\n            \"ExecuteRegulation(《中华人民共和国搜寻援救民用航空器规定》)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家海上搜救部门” — 表示国家海上搜救部门负责搜救民用航空器。\",\n            \"a=“A320” — 表示A320型号的民用航空器。\",\n            \"p=“浙江省海上搜救中心” — 表示浙江省海上搜救中心负责拟订方案。\",\n            \"s=“浙江省海上搜救方案” — 表示浙江省海上搜救中心拟订的搜救方案。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀a (ResponsibleForSearchAndRescue(国家海上搜救部门, A320) ∧ ∀p∀s (FormulatePlan(浙江省海上搜救中心, 浙江省海上搜救方案) ∧ ParticipateInSearchAndRescue(浙江省海上搜救中心, A320) → 沿海省区市海上搜救机构(浙江省海上搜救中心)))\",\n            \"ExecuteRegulation(《中华人民共和国搜寻援救民用航空器规定》)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家海上搜救部门” — 表示国家海上搜救部门负责搜救民用航空器。\",\n            \"a=“B737” — 表示B737型号的民用航空器。\",\n            \"p=“上海市海上搜救中心” — 表示上海市海上搜救中心负责拟订方案。\",\n            \"s=“上海市海上搜救方案” — 表示上海市海上搜救中心拟订的搜救方案。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀a (ResponsibleForSearchAndRescue(国家海上搜救部门, B737) ∧ ∀p∀s (FormulatePlan(上海市海上搜救中心, 上海市海上搜救方案) ∧ ParticipateInSearchAndRescue(上海市海上搜救中心, B737) → 沿海省区市海上搜救机构(上海市海上搜救中心)))\",\n            \"ExecuteRegulation(《中华人民共和国搜寻援救民用航空器规定》)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家海上搜救部门” — 表示国家海上搜救部门负责搜救民用航空器。\",\n            \"a=“ARJ21” — 表示ARJ21型号的民用航空器。\",\n            \"p=“海南省海上搜救中心” — 表示海南省海上搜救中心负责拟订方案。\",\n            \"s=“海南省海上搜救方案” — 表示海南省海上搜救中心拟订的搜救方案。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀a (ResponsibleForSearchAndRescue(国家海上搜救部门, ARJ21) ∧ ∀p∀s (FormulatePlan(海南省海上搜救中心, 海南省海上搜救方案) ∧ ParticipateInSearchAndRescue(海南省海上搜救中心, ARJ21) → 沿海省区市海上搜救机构(海南省海上搜救中心)))\",\n            \"ExecuteRegulation(《中华人民共和国搜寻援救民用航空器规定》)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“某市” — 表示事发地人民政府为某市\",\n            \"a=“某民用运输机场” — 表示民用运输机场应急处置力量为某民用运输机场\"\n        ],\n        \"instance_logicexpression\": [\n            \"IncidentLocation(某市) ∧ Airport(某民用运输机场) → DependsOn(某市, 某民用运输机场)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"n=“国家处置飞行事故指挥部” — 表示国家处置飞行事故指挥部\",\n            \"d=“相关部门及民用航空其他专业应急救援力量” — 表示需要协调的部门及力量\"\n        ],\n        \"instance_logicexpression\": [\n            \"NationalCommand(国家处置飞行事故指挥部) → Coordinate(国家处置飞行事故指挥部, 相关部门及民用航空其他专业应急救援力量)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“现场应急救援队伍” — 表示参加现场应急救援的队伍\",\n            \"p=“应急救援人员” — 表示参加现场应急救援的人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyRescueSite(现场应急救援队伍, 应急救援人员) → PerformEmergencyRescue(现场应急救援队伍, 应急救援人员)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“旅客” — 表示需要撤离疏散的旅客\",\n            \"c=“机组人员” — 表示需要撤离疏散的机组人员\",\n            \"a=“安全区域” — 表示撤离疏散的安全区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"Passengers(旅客) ∨ Crew(机组人员) → Evacuate(旅客, 机组人员, 安全区域)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“机上受伤人员” — 表示需要救助的机上受伤人员\",\n            \"s=“地面幸存人员” — 表示需要救助的地面幸存人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"Injured(机上受伤人员) ∨ Survivors(地面幸存人员) → ProvideAssistance(机上受伤人员, 地面幸存人员)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“机上货物” — 表示需要掌握情况的机上货物\",\n            \"h=“危险品” — 表示需要掌握情况的危险品\"\n        ],\n        \"instance_logicexpression\": [\n            \"Cargo(机上货物) ∨ HazardousMaterials(危险品) → HaveInformation(机上货物, 危险品)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"h=“现场危险品” — 表示需要探明状态的现场危险品\"\n        ],\n        \"instance_logicexpression\": [\n            \"HazardousMaterials(现场危险品) → DetermineStatus(现场危险品)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"h=“现场危险品” — 表示需要采取保护措施的现场危险品\"\n        ],\n        \"instance_logicexpression\": [\n            \"HazardousMaterials(现场危险品) → TakeProtectiveMeasures(现场危险品)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“专业危险品处理队伍” — 表示需要调集的专业救援队伍\"\n        ],\n        \"instance_logicexpression\": [\n            \"SpecialistTeams(专业危险品处理队伍) → MobilizeSpecialistTeams(专业危险品处理队伍)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“首都国际机场” — 表示飞行事故发生在首都国际机场\",\n            \"CommandCenter=“首都国际机场应急指挥中心” — 表示机场应急指挥中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (Accident(首都国际机场) → (EmergencyResponse(首都国际机场应急指挥中心) ∧ RemoveDebris(首都国际机场) → AirportOperation(首都国际机场)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“浦东国际机场” — 表示飞行事故发生在浦东国际机场\",\n            \"c=“华东地区空中交通管制中心” — 表示空中交通管制部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀c (Accident(浦东国际机场) → (FlightAdjustment(华东地区空中交通管制中心, 浦东国际机场) → ¬AirportOperation(浦东国际机场)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“白云国际机场” — 表示飞行事故发生在白云国际机场\",\n            \"b=“南方航空公司” — 表示相关航空运输企业\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀b (Accident(白云国际机场) → PassengerManagement(白云国际机场, 南方航空公司) → AirportOperation(白云国际机场))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“成田国际机场” — 表示飞行事故发生在成田国际机场\",\n            \"CommandCenter=“成田国际机场应急指挥中心” — 表示机场应急指挥中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (Accident(成田国际机场) → (EmergencyResponse(成田国际机场应急指挥中心) ∧ RemoveDebris(成田国际机场) → AirportOperation(成田国际机场)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“希思罗国际机场” — 表示飞行事故发生在希思罗国际机场\",\n            \"c=“英国国家空中交通管制中心” — 表示空中交通管制部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀c (Accident(希思罗国际机场) → (FlightAdjustment(英国国家空中交通管制中心, 希思罗国际机场) → ¬AirportOperation(希思罗国际机场)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“戴高乐国际机场” — 表示飞行事故发生在戴高乐国际机场\",\n            \"b=“法国航空公司” — 表示相关航空运输企业\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀b (Accident(戴高乐国际机场) → PassengerManagement(戴高乐国际机场, 法国航空公司) → AirportOperation(戴高乐国际机场))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“市卫生局” — 表示事发地卫生行政部门为市卫生局\",\n            \"t=“紧急医疗救护” — 表示紧急医疗救护任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀t (事发地(市卫生局) ∧ 卫生行政部门(市卫生局) ∧ 紧急医疗救护(紧急医疗救护) → ResponsibleForOrganization(市卫生局, 紧急医疗救护))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“市卫生局” — 表示事发地卫生行政部门为市卫生局\",\n            \"t=“现场卫生处置” — 表示现场卫生处置任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀t (事发地(市卫生局) ∧ 卫生行政部门(市卫生局) ∧ 现场卫生处置(现场卫生处置) → ResponsibleForOrganization(市卫生局, 现场卫生处置))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“省卫生厅” — 表示上级卫生部门为省卫生厅\",\n            \"e=“传染病专家” — 表示需要派出的专家\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀e (上级卫生部门(省卫生厅) → (需要(传染病专家) → DispatchExpert(省卫生厅, 传染病专家)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“省卫生厅” — 表示上级卫生部门为省卫生厅\",\n            \"t=“传染病防治队伍” — 表示需要派出的专业防治队伍\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀t (上级卫生部门(省卫生厅) → (需要(传染病防治队伍) → DispatchSpecializedTeam(省卫生厅, 传染病防治队伍)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“国家处置飞行事故指挥部” — 表示特殊情况下的国家处置飞行事故指挥部\",\n            \"d=“市卫生局” — 表示需要协调支援的卫生部门\",\n            \"s=“特种药品” — 表示事故现场需求的特种药品\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀d∀s (特殊情况(国家处置飞行事故指挥部) ∧ 国家处置飞行事故指挥部(国家处置飞行事故指挥部) ∧ 事故现场需求(特种药品) → (协调支援(国家处置飞行事故指挥部, 市卫生局, 特种药品) ∧ 专业医疗救护中心(特种药品) ∨ 专科医院(特种药品)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“现场防疫工作” — 表示现场防疫工作\",\n            \"a=“市疾病控制中心” — 表示依托事故发生地疾病控制中心\",\n            \"p=“化学泄露事故” — 表示事故类型为化学泄露事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀a∀p (现场防疫工作(现场防疫工作) ∧ 依托事故发生地疾病控制中心(市疾病控制中心) ∧ 事故类型(化学泄露事故) → OnsiteEpidemicPrevention(市疾病控制中心, 化学泄露事故))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“化工厂爆炸现场” — 表示应急救援工作在化工厂爆炸现场进行\",\n            \"p=“李指挥” — 表示指挥人员为李指挥\",\n            \"e=“专业防护服和头盔” — 表示李指挥配带的专业防护服装及装备为专业防护服和头盔\",\n            \"c=“化工厂应急指挥部” — 表示应急指挥部为化工厂应急指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyRescueWork(“化工厂爆炸现场”) → EnsureSafety(“化工厂爆炸现场”)\",\n            \"(CommandPersonnel(“李指挥”) ∨ Investigator(“李指挥”)) → EquipWithProtection(“李指挥”, “专业防护服和头盔”)\",\n            \"CommandCenter(“化工厂应急指挥部”) → (OrganizeSafetyMeasures(“化工厂应急指挥部”) ∧ ExecuteManagementProcedure(“化工厂应急指挥部”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“洪水灾区” — 表示应急救援工作在洪水灾区进行\",\n            \"p=“王调查员” — 表示事故调查人员为王调查员\",\n            \"e=“救生衣和防护眼镜” — 表示王调查员配带的专业防护服装及装备为救生衣和防护眼镜\",\n            \"c=“洪水应急指挥部” — 表示应急指挥部为洪水应急指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyRescueWork(“洪水灾区”) → EnsureSafety(“洪水灾区”)\",\n            \"(CommandPersonnel(“王调查员”) ∨ Investigator(“王调查员”)) → EquipWithProtection(“王调查员”, “救生衣和防护眼镜”)\",\n            \"CommandCenter(“洪水应急指挥部”) → (OrganizeSafetyMeasures(“洪水应急指挥部”) ∧ ExecuteManagementProcedure(“洪水应急指挥部”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“地震灾区” — 表示应急救援工作在地震灾区进行\",\n            \"p=“赵救援队长” — 表示指挥人员为赵救援队长\",\n            \"e=“防化服和防护面具” — 表示赵救援队长配带的专业防护服装及装备为防化服和防护面具\",\n            \"c=“地震应急指挥部” — 表示应急指挥部为地震应急指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyRescueWork(“地震灾区”) → EnsureSafety(“地震灾区”)\",\n            \"(CommandPersonnel(“赵救援队长”) ∨ Investigator(“赵救援队长”)) → EquipWithProtection(“赵救援队长”, “防化服和防护面具”)\",\n            \"CommandCenter(“地震应急指挥部”) → (OrganizeSafetyMeasures(“地震应急指挥部”) ∧ ExecuteManagementProcedure(“地震应急指挥部”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“火灾现场” — 表示应急救援工作在火灾现场进行\",\n            \"p=“钱技术员” — 表示事故调查人员为钱技术员\",\n            \"e=“防火服和呼吸器” — 表示钱技术员配带的专业防护服装及装备为防火服和呼吸器\",\n            \"c=“火灾应急指挥部” — 表示应急指挥部为火灾应急指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyRescueWork(“火灾现场”) → EnsureSafety(“火灾现场”)\",\n            \"(CommandPersonnel(“钱技术员”) ∨ Investigator(“钱技术员”)) → EquipWithProtection(“钱技术员”, “防火服和呼吸器”)\",\n            \"CommandCenter(“火灾应急指挥部”) → (OrganizeSafetyMeasures(“火灾应急指挥部”) ∧ ExecuteManagementProcedure(“火灾应急指挥部”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“化工厂” — 表示事故场景在化工厂\",\n            \"CommandCenter=“化工厂应急指挥部” — 表示负责的应急指挥部\",\n            \"m=“佩戴防毒面具” — 表示明确的安全防护措施\",\n            \"s=“化工厂周边2公里” — 表示疏散的范围\",\n            \"Scope=“化工厂周边居民” — 表示疏散的对象\",\n            \"Method=“有序撤离” — 表示疏散的方式\",\n            \"Procedure=“分批进行” — 表示疏散的程序\",\n            \"Task=“医疗防疫” — 表示协调卫生部门的任务\",\n            \"PoliceDepartment=“化工厂区公安局” — 表示负责治安管理的公安部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀t (Accident(“化工厂”) → ResponsibleForOrganization(“化工厂应急指挥部”, SafetyProtection(“化工厂”)))\",\n            \"∀c ∀m (Accident(“化工厂”) → ClarifyMeasures(“化工厂应急指挥部”, “佩戴防毒面具”))\",\n            \"∀c ∀s ∀m ∀p (Accident(“化工厂”) → DecideEvacuation(“化工厂应急指挥部”, “化工厂周边居民”, “有序撤离”, “分批进行”))\",\n            \"∀c (Accident(“化工厂”) → OrganizeImplementation(“化工厂应急指挥部”))\",\n            \"∀c (Accident(“化工厂”) → CoordinateHealthDepartment(“化工厂应急指挥部”, MedicalPrevention(“化工厂”)))\",\n            \"∀c (Accident(“化工厂”) → ResponsibleForSecurity(“化工厂区公安局”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“地铁站” — 表示事故场景在地铁站\",\n            \"CommandCenter=“地铁站应急指挥部” — 表示负责的应急指挥部\",\n            \"m=“紧急疏散” — 表示明确的安全防护措施\",\n            \"s=“地铁站周边1公里” — 表示疏散的范围\",\n            \"Scope=“地铁站内乘客” — 表示疏散的对象\",\n            \"Method=“快速通道” — 表示疏散的方式\",\n            \"Procedure=“立即执行” — 表示疏散的程序\",\n            \"Task=“疾病控制” — 表示协调卫生部门的任务\",\n            \"PoliceDepartment=“地铁站区公安局” — 表示负责治安管理的公安部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀t (Accident(“地铁站”) → ResponsibleForOrganization(“地铁站应急指挥部”, SafetyProtection(“地铁站”)))\",\n            \"∀c ∀m (Accident(“地铁站”) → ClarifyMeasures(“地铁站应急指挥部”, “紧急疏散”))\",\n            \"∀c ∀s ∀m ∀p (Accident(“地铁站”) → DecideEvacuation(“地铁站应急指挥部”, “地铁站内乘客”, “快速通道”, “立即执行”))\",\n            \"∀c (Accident(“地铁站”) → OrganizeImplementation(“地铁站应急指挥部”))\",\n            \"∀c (Accident(“地铁站”) → CoordinateHealthDepartment(“地铁站应急指挥部”, MedicalPrevention(“地铁站”)))\",\n            \"∀c (Accident(“地铁站”) → ResponsibleForSecurity(“地铁站区公安局”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“事故现场应急指挥部” — 表示事故现场应急指挥部\",\n            \"g=“地方政府” — 表示地方政府\",\n            \"s=“本行政区域社会力量” — 表示本行政区域的社会力量\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀g∀s (Coordinate(“事故现场应急指挥部”, g) → (Mobilize(g, “本行政区域社会力量”) ∧ Participate(“本行政区域社会力量”, Rescue)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“国家处置飞行事故指挥部” — 表示国家处置飞行事故指挥部\",\n            \"d=“省（区、市）人民政府” — 表示省（区、市）人民政府\",\n            \"s=“有关社会力量” — 表示有关的社会力量\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀d∀s (Support(c, s) → (Organize(c, s) ∧ Participate(s, Rescue)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“事故现场应急指挥部” — 表示事故现场应急指挥部\",\n            \"g=“某市地方政府” — 表示某市地方政府\",\n            \"s=“志愿者组织” — 表示志愿者组织\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀g∀s (Coordinate(“事故现场应急指挥部”, “某市地方政府”) → (Mobilize(“某市地方政府”, “志愿者组织”) ∧ Participate(“志愿者组织”, Rescue)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“国家处置飞行事故指挥部” — 表示国家处置飞行事故指挥部\",\n            \"d=“某省人民政府” — 表示某省人民政府\",\n            \"s=“专业救援队” — 表示专业救援队\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀d∀s (Support(c, “专业救援队”) → (Organize(c, “专业救援队”) ∧ Participate(“专业救援队”, Rescue)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“航空器A” — 表示事故航空器为航空器A\",\n            \"Survivors=“机上幸存人员” — 表示机上幸存人员\",\n            \"Casualties=“伤亡人员” — 表示伤亡人员\",\n            \"Valuables=“重要财产” — 表示重要财产\",\n            \"Site=“事故现场” — 表示事故现场\",\n            \"Personnel=“应急人员” — 表示应急人员\",\n            \"Public=“群众” — 表示群众\",\n            \"Hazard=“事故造成的危害” — 表示事故造成的危害\",\n            \"Actions=“应急处置行动” — 表示应急处置行动\",\n            \"Airport=“受影响的民用运输机场” — 表示受影响的民用运输机场\",\n            \"Facilities=“重要地面设施” — 表示重要地面设施\",\n            \"Environment=“环境” — 表示环境\",\n            \"PublicSafety=“公众安全” — 表示公众安全\",\n            \"SocialStability=“社会稳定” — 表示社会稳定\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (SearchAndRescueCompleted(航空器A) ∧ EvacuateAndDisperse(机上幸存人员) ∧ CasualtyTreatment(伤亡人员) ∧ PropertyProtection(重要财产) ∧ ProtectionMeasures(事故现场, 应急人员, 群众) ∧ HazardEliminated(事故造成的危害) ∧ EmergencyActionsTerminated(应急处置行动) ∧ AirportOperationRestored(受影响的民用运输机场) ∧ SiteControl(事故现场, 重要地面设施, 环境, 公众安全, 社会稳定) → EmergencyTermination(航空器A))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“航空器B” — 表示事故航空器为航空器B\",\n            \"Survivors=“机上幸存人员” — 表示机上幸存人员\",\n            \"Casualties=“伤亡人员” — 表示伤亡人员\",\n            \"Valuables=“重要财产” — 表示重要财产\",\n            \"Site=“事故现场” — 表示事故现场\",\n            \"Personnel=“应急人员” — 表示应急人员\",\n            \"Public=“群众” — 表示群众\",\n            \"Hazard=“事故造成的危害” — 表示事故造成的危害\",\n            \"Actions=“应急处置行动” — 表示应急处置行动\",\n            \"Airport=“受影响的民用运输机场” — 表示受影响的民用运输机场\",\n            \"Facilities=“重要地面设施” — 表示重要地面设施\",\n            \"Environment=“环境” — 表示环境\",\n            \"PublicSafety=“公众安全” — 表示公众安全\",\n            \"SocialStability=“社会稳定” — 表示社会稳定\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (SearchAndRescueCompleted(航空器B) ∧ EvacuateAndDisperse(机上幸存人员) ∧ CasualtyTreatment(伤亡人员) ∧ PropertyProtection(重要财产) ∧ ProtectionMeasures(事故现场, 应急人员, 群众) ∧ HazardEliminated(事故造成的危害) ∧ EmergencyActionsTerminated(应急处置行动) ∧ AirportOperationRestored(受影响的民用运输机场) ∧ SiteControl(事故现场, 重要地面设施, 环境, 公众安全, 社会稳定) → EmergencyTermination(航空器B))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“事故现场应急指挥部1” — 表示事故现场应急指挥部1\",\n            \"d=“国家处置飞行事故指挥部办公室” — 表示国家处置飞行事故指挥部办公室\",\n            \"e=“国家处置飞行事故指挥部” — 表示国家处置飞行事故指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (ConfirmEmergencyTerminationCondition(事故现场应急指挥部1) ∧ ChooseTerminationTiming(事故现场应急指挥部1) → ApproveEmergencyTermination(国家处置飞行事故指挥部, 事故现场应急指挥部1))\",\n            \"∀c (ApproveEmergencyTermination(国家处置飞行事故指挥部, 事故现场应急指挥部1) → IssueEmergencyTerminationNotice(国家处置飞行事故指挥部办公室, 事故现场应急指挥部1))\",\n            \"∀d (IssueEmergencyTerminationNotice(国家处置飞行事故指挥部办公室, 事故现场应急指挥部1) → (AnalyzeAssessEmergencyResponse(国家处置飞行事故指挥部办公室) ∧ SummarizeLessonsLearned(国家处置飞行事故指挥部办公室) ∧ ProposeImprovementSuggestions(国家处置飞行事故指挥部办公室) ∧ ReviseEmergencyPlan(国家处置飞行事故指挥部办公室)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“事故现场应急指挥部2” — 表示事故现场应急指挥部2\",\n            \"d=“某航空公司应急响应部门” — 表示某航空公司应急响应部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (ConfirmEmergencyTerminationCondition(事故现场应急指挥部2) ∧ ChooseTerminationTiming(事故现场应急指挥部2) → ApproveEmergencyTermination(NationalCommand, 事故现场应急指挥部2))\",\n            \"∀c (ApproveEmergencyTermination(NationalCommand, 事故现场应急指挥部2) → IssueEmergencyTerminationNotice(NationalOffice, 事故现场应急指挥部2))\",\n            \"∀d (IssueEmergencyTerminationNotice(NationalOffice, 事故现场应急指挥部2) → (AnalyzeAssessEmergencyResponse(某航空公司应急响应部门) ∧ SummarizeLessonsLearned(某航空公司应急响应部门) ∧ ProposeImprovementSuggestions(某航空公司应急响应部门) ∧ ReviseEmergencyPlan(某航空公司应急响应部门)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“某市” — 表示事故发生地人民政府为某市\",\n            \"t=“国家处置飞行事故指挥部办公室” — 表示负责协调的办公室是国家处置飞行事故指挥部办公室\",\n            \"e=“某航空公司” — 表示发生事故的民航运输企业为某航空公司\",\n            \"i=“某保险公司” — 表示被通知的保险机构为某保险公司\",\n            \"s=“事故现场” — 表示保险机构派员赶赴的事故现场\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀t (Accident(某市) → (OrganizeCoordinate(某市, AftermathDisposal) ∧ EliminateConsequences(某市) ∧ ComfortVictims(某市) ∧ EnsureStability(某市) ∧ RestoreOrder(某市)))\",\n            \"∀o∀t (Accident(国家处置飞行事故指挥部办公室) → (ResponsibleForCoordination(国家处置飞行事故指挥部办公室, AftermathDisposal) ∧ ∀e (Accident(某航空公司) → (Compensate(某航空公司, Passengers) ∧ Compensate(某航空公司, Shippers) ∧ Compensate(某航空公司, GroundVictims) ∧ NotifyInsurance(某航空公司, 某保险公司))))\",\n            \"∀i∀s (NotifyInsurance(某航空公司, 某保险公司) → HandleClaims(某保险公司, 事故现场))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“某县” — 表示事故发生地人民政府为某县\",\n            \"t=“地区应急响应中心” — 表示负责协调的办公室是地区应急响应中心\",\n            \"e=“另一航空公司” — 表示发生事故的民航运输企业为另一航空公司\",\n            \"i=“另一保险公司” — 表示被通知的保险机构为另一保险公司\",\n            \"s=“另一事故现场” — 表示保险机构派员赶赴的另一事故现场\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀t (Accident(某县) → (OrganizeCoordinate(某县, AftermathDisposal) ∧ EliminateConsequences(某县) ∧ ComfortVictims(某县) ∧ EnsureStability(某县) ∧ RestoreOrder(某县)))\",\n            \"∀o∀t (Accident(地区应急响应中心) → (ResponsibleForCoordination(地区应急响应中心, AftermathDisposal) ∧ ∀e (Accident(另一航空公司) → (Compensate(另一航空公司, Passengers) ∧ Compensate(另一航空公司, Shippers) ∧ Compensate(另一航空公司, GroundVictims) ∧ NotifyInsurance(另一航空公司, 另一保险公司))))\",\n            \"∀i∀s (NotifyInsurance(另一航空公司, 另一保险公司) → HandleClaims(另一保险公司, 另一事故现场))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“MH370” — 表示事故调查针对MH370飞行事故\",\n            \"Scene=“南印度洋” — 表示现场应急处置工作在南印度洋进行\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (AccidentInvestigation(MH370) → (EmergencyResponse(SouthIndianOcean) ∧ InvestigationContent(MH370, EmergencyRescue)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“ET302” — 表示事故调查针对ET302飞行事故\",\n            \"Regulation=《民用航空器飞行事故调查规定》\",\n            \"Convention=《国际民用航空公约》\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (AccidentInvestigation(ET302) → (InvestigationRegulation(ET302) ∧ InternationalConvention(ET302)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“JT610” — 表示事故调查针对JT610飞行事故\",\n            \"Team=“印尼国家运输安全委员会” — 表示调查组由印尼国家运输安全委员会组成\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (AccidentInvestigation(JT610) → (InvestigationTeamFormation(IndonesianNationalTransportSafetyCommittee) ∧ SceneInvestigation(JT610) ∧ TechnicalVerification(JT610) ∧ CauseAnalysis(JT610) ∧ WriteReport(JT610) ∧ ProposeRecommendations(JT610)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“AI101” — 表示事故调查针对AI101飞行事故\",\n            \"Situation=“现场应急处置工作情况”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (AccidentInvestigation(AI101) → (MasterSituation(AI101, EmergencyResponse) ∧ ProposeOpinions(AI101, EmergencyResponse)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“DL425” — 表示事故调查针对DL425飞行事故\",\n            \"Introduction=“现场应急处置工作情况介绍”\",\n            \"Command=“现场应急指挥部”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (AccidentInvestigation(DL425) → (ListenIntroduction(DL425, EmergencyResponseIntroduction) ∧ Coordinate(DL425, Command) ∧ ParticipateDisposal(DL425, EmergencyResponse)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“QZ8501” — 表示事故调查针对QZ8501飞行事故\",\n            \"Evidence=“黑匣子数据” — 表示初始证据为黑匣子数据\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (AccidentInvestigation(QZ8501) → (SceneSupervisionProtection(QZ8501) ∧ InitialEvidenceReception(BlackBoxData) ∧ Inquiry(QZ8501) ∧ DetectHazard(QZ8501) ∧ EliminateHazard(QZ8501) ∧ GuardHazard(QZ8501) ∧ ScenePersonnelProtection(QZ8501)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“MH370” — 表示事故为MH370飞行事故\",\n            \"CommandCenter=“MH370应急现场指挥部” — 表示事故现场应急指挥部为MH370应急现场指挥部\",\n            \"Office=“国家处置飞行事故指挥部办公室” — 表示国家处置飞行事故指挥部办公室\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (EmergencyResponseEnded(MH370) → SubmitReport(MH370应急现场指挥部, 国家处置飞行事故指挥部办公室))\",\n            \"∀a (EmergencyResponseEnded(MH370) → AnalyzeAssess(国家处置飞行事故指挥部办公室))\",\n            \"∀a (EmergencyResponseEnded(MH370) → SummarizeLessons(国家处置飞行事故指挥部办公室))\",\n            \"∀a (EmergencyResponseEnded(MH370) → ProposeImprovements(国家处置飞行事故指挥部办公室))\",\n            \"∀a (EmergencyResponseEnded(MH370) → ReviseEmergencyPlan(国家处置飞行事故指挥部办公室))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“ET302” — 表示事故为ET302飞行事故\",\n            \"CommandCenter=“ET302应急现场指挥部” — 表示事故现场应急指挥部为ET302应急现场指挥部\",\n            \"Office=“国家处置飞行事故指挥部办公室” — 表示国家处置飞行事故指挥部办公室\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (EmergencyResponseEnded(ET302) → SubmitReport(ET302应急现场指挥部, 国家处置飞行事故指挥部办公室))\",\n            \"∀a (EmergencyResponseEnded(ET302) → AnalyzeAssess(国家处置飞行事故指挥部办公室))\",\n            \"∀a (EmergencyResponseEnded(ET302) → SummarizeLessons(国家处置飞行事故指挥部办公室))\",\n            \"∀a (EmergencyResponseEnded(ET302) → ProposeImprovements(国家处置飞行事故指挥部办公室))\",\n            \"∀a (EmergencyResponseEnded(ET302) → ReviseEmergencyPlan(国家处置飞行事故指挥部办公室))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“AI123” — 表示事故为AI123飞行事故\",\n            \"CommandCenter=“AI123应急现场指挥部” — 表示事故现场应急指挥部为AI123应急现场指挥部\",\n            \"Office=“国家处置飞行事故指挥部办公室” — 表示国家处置飞行事故指挥部办公室\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (EmergencyResponseEnded(AI123) → SubmitReport(AI123应急现场指挥部, 国家处置飞行事故指挥部办公室))\",\n            \"∀a (EmergencyResponseEnded(AI123) → AnalyzeAssess(国家处置飞行事故指挥部办公室))\",\n            \"∀a (EmergencyResponseEnded(AI123) → SummarizeLessons(国家处置飞行事故指挥部办公室))\",\n            \"∀a (EmergencyResponseEnded(AI123) → ProposeImprovements(国家处置飞行事故指挥部办公室))\",\n            \"∀a (EmergencyResponseEnded(AI123) → ReviseEmergencyPlan(国家处置飞行事故指挥部办公室))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“国家民用航空局” — 表示国家民用航空局\",\n            \"DatabaseType=“专家数据库” — 表示建立和完善专家数据库\",\n            \"ResourceType=“应急处置装备” — 表示增加应急处置装备的储备\",\n            \"CapabilityType=“检验能力” — 表示提高检验能力\"\n        ],\n        \"instance_logicexpression\": [\n            \"PerformDuties(国家民用航空局) → (EstablishDatabase(国家民用航空局, 专家数据库) ∧ EstablishDatabase(国家民用航空局, SafetyInfoDB) ∧ IncreaseReserves(国家民用航空局, 应急处置装备) ∧ IncreaseReserves(国家民用航空局, RapidMobility) ∧ IncreaseReserves(国家民用航空局, SelfProtection) ∧ ImproveCapability(国家民用航空局, 检验能力) ∧ ImproveCapability(国家民用航空局, Appraisal) ∧ ImproveCapability(国家民用航空局, Monitoring))\",\n            \"PerformDuties(国家民用航空局) → EnsureEmergencyWork(国家民用航空局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“地区民用航空管理局” — 表示地区民用航空管理局\",\n            \"DatabaseType=“民用航空安全信息数据库” — 表示建立和完善民用航空安全信息数据库\",\n            \"ResourceType=“快速机动装备” — 表示增加快速机动装备的储备\",\n            \"CapabilityType=“鉴定能力” — 表示提高鉴定能力\"\n        ],\n        \"instance_logicexpression\": [\n            \"PerformDuties(地区民用航空管理局) → (EstablishDatabase(地区民用航空管理局, ExpertDB) ∧ EstablishDatabase(地区民用航空管理局, 民用航空安全信息数据库) ∧ IncreaseReserves(地区民用航空管理局, 快速机动装备) ∧ IncreaseReserves(地区民用航空管理局, EmergencyResponse) ∧ IncreaseReserves(地区民用航空管理局, SelfProtection) ∧ ImproveCapability(地区民用航空管理局, 鉴定能力) ∧ ImproveCapability(地区民用航空管理局, Inspection) ∧ ImproveCapability(地区民用航空管理局, Monitoring))\",\n            \"PerformDuties(地区民用航空管理局) → EnsureEmergencyWork(地区民用航空管理局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“地方民用航空办公室” — 表示地方民用航空办公室\",\n            \"DatabaseType=“专家数据库” — 表示建立和完善专家数据库\",\n            \"ResourceType=“自身防护装备” — 表示增加自身防护装备的储备\",\n            \"CapabilityType=“监测能力” — 表示提高监测能力\"\n        ],\n        \"instance_logicexpression\": [\n            \"PerformDuties(地方民用航空办公室) → (EstablishDatabase(地方民用航空办公室, ExpertDB) ∧ EstablishDatabase(地方民用航空办公室, SafetyInfoDB) ∧ IncreaseReserves(地方民用航空办公室, 自身防护装备) ∧ IncreaseReserves(地方民用航空办公室, EmergencyResponse) ∧ IncreaseReserves(地方民用航空办公室, RapidMobility) ∧ ImproveCapability(地方民用航空办公室, 监测能力) ∧ ImproveCapability(地方民用航空办公室, Inspection) ∧ ImproveCapability(地方民用航空办公室, Appraisal))\",\n            \"PerformDuties(地方民用航空办公室) → EnsureEmergencyWork(地方民用航空办公室)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=“计算机技术” — 使用先进的计算机技术\",\n            \"t=“网络技术” — 使用先进的网络技术\",\n            \"t=“无线通信技术” — 使用先进的无线通信技术\",\n            \"t=“卫星技术” — 使用先进的卫星技术\"\n        ],\n        \"instance_logicexpression\": [\n            \"UseTechnology(计算机技术) → (EstablishSystem(CommunicationSystem) ∧ EquipDevice(Hardware) ∧ EquipDevice(Software))\",\n            \"UseTechnology(网络技术) → (EstablishSystem(CommunicationSystem) ∧ EquipDevice(Hardware) ∧ EquipDevice(Software))\",\n            \"UseTechnology(无线通信技术) → (EstablishSystem(CommunicationSystem) ∧ EquipDevice(Hardware) ∧ EquipDevice(Software))\",\n            \"UseTechnology(卫星技术) → (EstablishSystem(CommunicationSystem) ∧ EquipDevice(Hardware) ∧ EquipDevice(Software))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“畅通” — 联络的效率要求是畅通\",\n            \"v=“迅速” — 联络的形式要求是迅速\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishSystem(CommunicationSystem) ∧ EquipDevice(Hardware) ∧ EquipDevice(Software) → EnsureCommunication(畅通, 迅速)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“高效” — 联络的效率要求是高效\",\n            \"v=“多样” — 联络的形式要求是多样\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishSystem(CommunicationSystem) ∧ EquipDevice(Hardware) ∧ EquipDevice(Software) → EnsureCommunication(高效, 多样)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“迅速” — 联络的效率要求是迅速\",\n            \"v=“高效” — 联络的形式要求是高效\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishSystem(CommunicationSystem) ∧ EquipDevice(Hardware) ∧ EquipDevice(Software) → EnsureCommunication(迅速, 高效)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“畅通” — 联络的效率要求是畅通\",\n            \"v=“多样” — 联络的形式要求是多样\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishSystem(CommunicationSystem) ∧ EquipDevice(Hardware) ∧ EquipDevice(Software) → EnsureCommunication(畅通, 多样)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=“民用航空器飞行事故应急处置队伍” — 表示加强民用航空器飞行事故应急处置队伍的建设\",\n            \"p1=“李雷” — 表示应急处置人员李雷\",\n            \"p2=“韩梅梅” — 表示应急处置人员韩梅梅\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseTeam(“民用航空器飞行事故应急处置队伍”) → StrengthenConstruction(“民用航空器飞行事故应急处置队伍”)\",\n            \"Training(“李雷”) ∧ Drill(“李雷”) → (ImproveQuality(“李雷”) ∧ ImproveTechnology(“李雷”))\",\n            \"Training(“韩梅梅”) ∧ Drill(“韩梅梅”) → (ImproveQuality(“韩梅梅”) ∧ ImproveTechnology(“韩梅梅”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“民用航空器飞行事故应急处置队伍” — 表示加强民用航空器飞行事故应急处置队伍的建设\",\n            \"p3=“Jim” — 表示应急处置人员Jim\",\n            \"p4=“Lily” — 表示应急处置人员Lily\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseTeam(“民用航空器飞行事故应急处置队伍”) → StrengthenConstruction(“民用航空器飞行事故应急处置队伍”)\",\n            \"Training(“Jim”) ∧ Drill(“Jim”) → (ImproveQuality(“Jim”) ∧ ImproveTechnology(“Jim”))\",\n            \"Training(“Lily”) ∧ Drill(“Lily”) → (ImproveQuality(“Lily”) ∧ ImproveTechnology(“Lily”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“技术支持部” — 表示技术支持部门\",\n            \"i=“MH370失联事件” — 表示民用航空器飞行事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"SupportDepartment(技术支持部) → (StrengthenConstruction(技术支持部) ∧ IncreaseInvestment(技术支持部) ∧ StudyExperience(技术支持部))\",\n            \"AviationIncident(MH370失联事件) → ∃d (SupportDepartment(d) ∧ ProvideSupport(d, MH370失联事件))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“信息技术部” — 表示信息技术部门\",\n            \"i=“埃塞俄比亚航空坠机事件” — 表示民用航空器飞行事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"SupportDepartment(信息技术部) → (StrengthenConstruction(信息技术部) ∧ IncreaseInvestment(信息技术部) ∧ StudyExperience(信息技术部))\",\n            \"AviationIncident(埃塞俄比亚航空坠机事件) → ∃d (SupportDepartment(d) ∧ ProvideSupport(d, 埃塞俄比亚航空坠机事件))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“通信保障部” — 表示通信保障部门\",\n            \"i=“法国航空447号班机事故” — 表示民用航空器飞行事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"SupportDepartment(通信保障部) → (StrengthenConstruction(通信保障部) ∧ IncreaseInvestment(通信保障部) ∧ StudyExperience(通信保障部))\",\n            \"AviationIncident(法国航空447号班机事故) → ∃d (SupportDepartment(d) ∧ ProvideSupport(d, 法国航空447号班机事故))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“安全监管部” — 表示安全监管部门\",\n            \"i=“哥伦比亚航空052号班机事故” — 表示民用航空器飞行事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"SupportDepartment(安全监管部) → (StrengthenConstruction(安全监管部) ∧ IncreaseInvestment(安全监管部) ∧ StudyExperience(安全监管部))\",\n            \"AviationIncident(哥伦比亚航空052号班机事故) → ∃d (SupportDepartment(d) ∧ ProvideSupport(d, 哥伦比亚航空052号班机事故))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“民航局” — 表示民用航空行政管理部门为民航局\",\n            \"e=“李工” — 表示职工为李工\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(民航局) ∧ Employee(李工) → EnhanceEducation(民航局, 李工)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“国家电视台” — 表示新闻媒体为国家电视台\",\n            \"p=“普通市民” — 表示公众为普通市民\"\n        ],\n        \"instance_logicexpression\": [\n            \"Media(国家电视台) ∧ Public(普通市民) → PromoteMeasures(国家电视台, 普通市民)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“大学生” — 表示公众为大学生\"\n        ],\n        \"instance_logicexpression\": [\n            \"Public(大学生) → EnhanceAwareness(大学生) ∧ ImproveAbility(大学生)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“10人” — 表示人员伤亡为10人\",\n            \"pr=“价值100万的财产” — 表示财产损失为价值100万的财产\"\n        ],\n        \"instance_logicexpression\": [\n            \"Casualty(10人) ∨ Property(价值100万的财产) → ReduceLoss(10人, 价值100万的财产)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“航空公司” — 表示民航企事业单位为航空公司\",\n            \"e=“王机长” — 表示职工为王机长\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(航空公司) ∧ Employee(王机长) → EnhanceEducation(航空公司, 王机长)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“社交媒体平台” — 表示新闻媒体为社交媒体平台\",\n            \"p=“网友” — 表示公众为网友\"\n        ],\n        \"instance_logicexpression\": [\n            \"Media(社交媒体平台) ∧ Public(网友) → PromoteMeasures(社交媒体平台, 网友)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“旅游团” — 表示公众为旅游团\"\n        ],\n        \"instance_logicexpression\": [\n            \"Public(旅游团) → EnhanceAwareness(旅游团) ∧ ImproveAbility(旅游团)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“5人” — 表示人员伤亡为5人\",\n            \"pr=“价值50万的财产” — 表示财产损失为价值50万的财产\"\n        ],\n        \"instance_logicexpression\": [\n            \"Casualty(5人) ∨ Property(价值50万的财产) → ReduceLoss(5人, 价值50万的财产)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“国家民用航空局” — 表示国家民用航空局作为民用航空行政管理部门\",\n            \"p=“张工程师” — 表示张工程师为应急处置、事故调查的专业技术人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"民用航空行政管理部门(国家民用航空局) → (OrganizeTraining(国家民用航空局) ∧ EnhanceCommunication(国家民用航空局))\",\n            \"专业技术人员(张工程师) → (OrganizeTraining(国家民用航空局) ∧ EnhanceCommunication(国家民用航空局) → ImproveKnowledgeLevel(张工程师))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“华东地区民用航空管理局” — 表示华东地区民用航空管理局作为民用航空行政管理部门\",\n            \"p=“李研究员” — 表示李研究员为应急处置、事故调查的专业技术人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"民用航空行政管理部门(华东地区民用航空管理局) → (OrganizeTraining(华东地区民用航空管理局) ∧ EnhanceCommunication(华东地区民用航空管理局))\",\n            \"专业技术人员(李研究员) → (OrganizeTraining(华东地区民用航空管理局) ∧ EnhanceCommunication(华东地区民用航空管理局) → ImproveKnowledgeLevel(李研究员))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“西南地区民用航空管理局” — 表示西南地区民用航空管理局作为民用航空行政管理部门\",\n            \"p=“王技术员” — 表示王技术员为应急处置、事故调查的专业技术人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"民用航空行政管理部门(西南地区民用航空管理局) → (OrganizeTraining(西南地区民用航空管理局) ∧ EnhanceCommunication(西南地区民用航空管理局))\",\n            \"专业技术人员(王技术员) → (OrganizeTraining(西南地区民用航空管理局) ∧ EnhanceCommunication(西南地区民用航空管理局) → ImproveKnowledgeLevel(王技术员))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“东北地区民用航空管理局” — 表示东北地区民用航空管理局作为民用航空行政管理部门\",\n            \"p=“赵分析师” — 表示赵分析师为应急处置、事故调查的专业技术人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"民用航空行政管理部门(东北地区民用航空管理局) → (OrganizeTraining(东北地区民用航空管理局) ∧ EnhanceCommunication(东北地区民用航空管理局))\",\n            \"专业技术人员(赵分析师) → (OrganizeTraining(东北地区民用航空管理局) ∧ EnhanceCommunication(东北地区民用航空管理局) → ImproveKnowledgeLevel(赵分析师))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“国家处置飞行事故指挥部办公室” — 表示国家处置飞行事故指挥部办公室负责组织演练\",\n            \"d=“某省民航管理局” — 表示某省民航管理局是民用航空行政管理部门\",\n            \"f=“每半年” — 表示演练的频率为每半年一次\",\n            \"t=“火灾应急演练” — 表示演练的类型为火灾应急演练\"\n        ],\n        \"instance_logicexpression\": [\n            \"OrganizeDrill(国家处置飞行事故指挥部办公室, 每年至少一次, 综合演练) ∧ 某省民航管理局 是民用航空行政管理部门 → (OrganizeDrill(某省民航管理局, 每半年, 火灾应急演练) ∧ (EmergencyPreparedness(某省民航管理局) ∧ EmergencyResponse(某省民航管理局) ∧ EmergencyManagement(某省民航管理局)) → WorkEfficiency(某省民航管理局) ∧ ImprovePlan(某省民航管理局))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家处置飞行事故指挥部办公室” — 表示国家处置飞行事故指挥部办公室负责组织演练\",\n            \"d=“某市民航管理局” — 表示某市民航管理局是民用航空行政管理部门\",\n            \"f=“每年” — 表示演练的频率为每年一次\",\n            \"t=“恐怖袭击应急演练” — 表示演练的类型为恐怖袭击应急演练\"\n        ],\n        \"instance_logicexpression\": [\n            \"OrganizeDrill(国家处置飞行事故指挥部办公室, 每年至少一次, 综合演练) ∧ 某市民航管理局 是民用航空行政管理部门 → (OrganizeDrill(某市民航管理局, 每年, 恐怖袭击应急演练) ∧ (EmergencyPreparedness(某市民航管理局) ∧ EmergencyResponse(某市民航管理局) ∧ EmergencyManagement(某市民航管理局)) → WorkEfficiency(某市民航管理局) ∧ ImprovePlan(某市民航管理局))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家处置飞行事故指挥部办公室” — 表示国家处置飞行事故指挥部办公室负责组织演练\",\n            \"d=“某自治区民航管理局” — 表示某自治区民航管理局是民用航空行政管理部门\",\n            \"f=“每季度” — 表示演练的频率为每季度一次\",\n            \"t=“紧急疏散应急演练” — 表示演练的类型为紧急疏散应急演练\"\n        ],\n        \"instance_logicexpression\": [\n            \"OrganizeDrill(国家处置飞行事故指挥部办公室, 每年至少一次, 综合演练) ∧ 某自治区民航管理局 是民用航空行政管理部门 → (OrganizeDrill(某自治区民航管理局, 每季度, 紧急疏散应急演练) ∧ (EmergencyPreparedness(某自治区民航管理局) ∧ EmergencyResponse(某自治区民航管理局) ∧ EmergencyManagement(某自治区民航管理局)) → WorkEfficiency(某自治区民航管理局) ∧ ImprovePlan(某自治区民航管理局))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“东方航空公司” — 表示东方航空公司在民用航空器飞行事故应急处置工作中作出突出贡献\",\n            \"TimelyReport(东方航空公司) — 表示东方航空公司报告及时\",\n            \"PreventAccident(东方航空公司) — 表示东方航空公司的行为避免了民用航空器飞行事故的发生\"\n        ],\n        \"instance_logicexpression\": [\n            \"OutstandingContribution(东方航空公司) → Reward(东方航空公司)\",\n            \"TimelyReport(东方航空公司) ∧ (PreventAccident(东方航空公司) ∨ ReduceLoss(东方航空公司)) → OutstandingContribution(东方航空公司)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“张伟” — 表示张伟个人在民用航空器飞行事故应急处置工作中作出突出贡献\",\n            \"AppropriateResponse(张伟) — 表示张伟采取的处置措施适当\",\n            \"ReduceLoss(张伟) — 表示张伟的行为减轻了民用航空器飞行事故所造成的人员伤亡和财产损失\"\n        ],\n        \"instance_logicexpression\": [\n            \"OutstandingContribution(张伟) → Reward(张伟)\",\n            \"AppropriateResponse(张伟) ∧ (PreventAccident(张伟) ∨ ReduceLoss(张伟)) → OutstandingContribution(张伟)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“蓝天救援队” — 表示蓝天救援队在民用航空器飞行事故应急处置工作中作出突出贡献\",\n            \"TimelyReport(蓝天救援队) — 表示蓝天救援队报告及时\",\n            \"ReduceLoss(蓝天救援队) — 表示蓝天救援队的行为减轻了民用航空器飞行事故所造成的人员伤亡和财产损失\"\n        ],\n        \"instance_logicexpression\": [\n            \"OutstandingContribution(蓝天救援队) → Reward(蓝天救援队)\",\n            \"TimelyReport(蓝天救援队) ∧ (PreventAccident(蓝天救援队) ∨ ReduceLoss(蓝天救援队)) → OutstandingContribution(蓝天救援队)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“李娜” — 表示李娜个人在民用航空器飞行事故应急处置工作中作出突出贡献\",\n            \"AppropriateResponse(李娜) — 表示李娜采取的处置措施适当\",\n            \"PreventAccident(李娜) — 表示李娜的行为避免了民用航空器飞行事故的发生\"\n        ],\n        \"instance_logicexpression\": [\n            \"OutstandingContribution(李娜) → Reward(李娜)\",\n            \"AppropriateResponse(李娜) ∧ (PreventAccident(李娜) ∨ ReduceLoss(李娜)) → OutstandingContribution(李娜)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“李明” — 李明未及时报告民用航空器飞行事故\",\n            \"a=“2023-12-17” — 事故时间是2023年12月17日\",\n            \"u=“民用航空管理局” — 李明所在单位是民用航空管理局\"\n        ],\n        \"instance_logicexpression\": [\n            \"¬ReportAccident(李明, 2023-12-17) ∧ AccidentCausesLoss(2023-12-17) → (Crime(2023-12-17) → PursueCriminalLiability(李明) ∨ (¬Crime(2023-12-17) ∧ AdministrativePenalty(李明, 民用航空管理局)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“王强” — 王强在应急处置工作中玩忽职守\",\n            \"a=“2023-11-22” — 事故时间是2023年11月22日\",\n            \"u=“地区民航监管局” — 王强上级主管机关是地区民航监管局\"\n        ],\n        \"instance_logicexpression\": [\n            \"DerelictionOfDuty(王强) ∧ AccidentCausesLoss(2023-11-22) → (Crime(2023-11-22) → PursueCriminalLiability(王强) ∨ (¬Crime(2023-11-22) ∧ AdministrativePenalty(王强, 地区民航监管局)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“赵丽” — 赵丽未及时报告民用航空器飞行事故\",\n            \"a=“2023-10-15” — 事故时间是2023年10月15日\",\n            \"u=“航空公司总部” — 赵丽所在单位是航空公司总部\"\n        ],\n        \"instance_logicexpression\": [\n            \"¬ReportAccident(赵丽, 2023-10-15) ∧ AccidentCausesLoss(2023-10-15) → (Crime(2023-10-15) → PursueCriminalLiability(赵丽) ∨ (¬Crime(2023-10-15) ∧ AdministrativePenalty(赵丽, 航空公司总部)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“孙伟” — 孙伟在应急处置工作中玩忽职守\",\n            \"a=“2023-09-20” — 事故时间是2023年9月20日\",\n            \"u=“国家民航安全监管局” — 孙伟上级主管机关是国家民航安全监管局\"\n        ],\n        \"instance_logicexpression\": [\n            \"DerelictionOfDuty(孙伟) ∧ AccidentCausesLoss(2023-09-20) → (Crime(2023-09-20) → PursueCriminalLiability(孙伟) ∨ (¬Crime(2023-09-20) ∧ AdministrativePenalty(孙伟, 国家民航安全监管局)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"总局=“国家安全生产监督管理总局” — 表示总局负责指导和协调任务\",\n            \"任务=“矿山事故灾难应急救援” — 表示总局负责指导和协调的具体任务\",\n            \"实体=“某市地方政府” — 表示地方政府负责应急管理和应急处置\",\n            \"场景=“某市矿山” — 表示事故灾难发生的场景\"\n        ],\n        \"instance_logicexpression\": [\n            \"国家安全生产监督管理总局 ∧ 国务院 ∧ 国务院安委会 → GuideAndCoordinate(国家安全生产监督管理总局, 矿山事故灾难应急救援)\",\n            \"地方政府(某市地方政府) ∨ 有关部门(e) ∨ 企业(e) → (Disaster(某市矿山) → (EmergencyManagement(某市地方政府, 某市矿山) ∧ EmergencyResponse(某市地方政府, 某市矿山)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"总局=“国家安全生产监督管理总局” — 表示总局负责指导和协调任务\",\n            \"任务=“矿山事故灾难应急救援” — 表示总局负责指导和协调的具体任务\",\n            \"实体=“某省安全监督管理局” — 表示有关部门负责应急管理和应急处置\",\n            \"场景=“某省矿山” — 表示事故灾难发生的场景\"\n        ],\n        \"instance_logicexpression\": [\n            \"国家安全生产监督管理总局 ∧ 国务院 ∧ 国务院安委会 → GuideAndCoordinate(国家安全生产监督管理总局, 矿山事故灾难应急救援)\",\n            \"地方政府(e) ∨ 有关部门(某省安全监督管理局) ∨ 企业(e) → (Disaster(某省矿山) → (EmergencyManagement(某省安全监督管理局, 某省矿山) ∧ EmergencyResponse(某省安全监督管理局, 某省矿山)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"总局=“国家安全生产监督管理总局” — 表示总局负责指导和协调任务\",\n            \"任务=“矿山事故灾难应急救援” — 表示总局负责指导和协调的具体任务\",\n            \"实体=“某矿业公司” — 表示企业负责应急管理和应急处置\",\n            \"场景=“某矿业公司矿山” — 表示事故灾难发生的场景\"\n        ],\n        \"instance_logicexpression\": [\n            \"国家安全生产监督管理总局 ∧ 国务院 ∧ 国务院安委会 → GuideAndCoordinate(国家安全生产监督管理总局, 矿山事故灾难应急救援)\",\n            \"地方政府(e) ∨ 有关部门(e) ∨ 企业(某矿业公司) → (Disaster(某矿业公司矿山) → (EmergencyManagement(某矿业公司, 某矿业公司矿山) ∧ EmergencyResponse(某矿业公司, 某矿业公司矿山)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“省级” — 表示矿山事故灾难应急救援工作实行的是省级人民政府行政领导负责制\",\n            \"Government=“省级人民政府”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g (ResponsibleSystem(省级) → UnifiedLeadership(省级人民政府))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Scene=“煤矿” — 表示事故场景在煤矿\",\n            \"d=“安全监管局” — 表示安全监管局依法履行职责\",\n            \"Law=“矿山安全法”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Accident(煤矿) → PerformDuties(安全监管局, 矿山安全法))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Scene=“铁矿” — 表示事故场景在铁矿\",\n            \"e=“地质专家” — 表示地质专家提供技术支持\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (Accident(铁矿) → ProvideTechnicalSupport(地质专家))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Scene=“铜矿” — 表示事故场景在铜矿\",\n            \"e=“矿业公司” — 表示矿业公司充分发挥自救作用\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (Accident(铜矿) → PlaySelfRescueRole(矿业公司))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“市级” — 表示矿山事故灾难应急救援工作实行的是市级人民政府行政领导负责制\",\n            \"Government=“市级人民政府”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g (ResponsibleSystem(市级) → UnifiedLeadership(市级人民政府))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Scene=“金矿” — 表示事故场景在金矿\",\n            \"d=“环保局” — 表示环保局依法履行职责\",\n            \"Law=“环境保护法”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Accident(金矿) → PerformDuties(环保局, 环境保护法))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Scene=“铅锌矿” — 表示事故场景在铅锌矿\",\n            \"e=“环境专家” — 表示环境专家提供技术支持\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (Accident(铅锌矿) → ProvideTechnicalSupport(环境专家))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Scene=“银矿” — 表示事故场景在银矿\",\n            \"e=“金属冶炼公司” — 表示金属冶炼公司充分发挥自救作用\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (Accident(银矿) → PlaySelfRescueRole(金属冶炼公司))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"FollowScientificPrinciples() — 表示遵循科学原理。\",\n            \"UtilizeExperts() — 表示充分发挥专家的作用。\"\n        ],\n        \"instance_logicexpression\": [\n            \"FollowScientificPrinciples() ∧ UtilizeExperts() → AchieveScientificDemocraticDecisionMaking()\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"RelyOnTechnologicalProgress() — 表示依靠科技进步。\",\n            \"ImproveEmergencyEquipment() — 表示不断改进应急救援的装备。\",\n            \"ImproveEmergencyFacilities() — 表示不断完善应急救援的设施。\",\n            \"UpdateEmergencyMethods() — 表示不断更新应急救援的手段。\"\n        ],\n        \"instance_logicexpression\": [\n            \"RelyOnTechnologicalProgress() → (ImproveEmergencyEquipment() ∧ ImproveEmergencyFacilities() ∧ UpdateEmergencyMethods())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"RegulateEmergencyWorkByLaw() — 表示依法规范应急救援工作。\",\n            \"EnsurePlanScientific() — 表示确保预案的科学性。\",\n            \"EnsurePlanAuthoritative() — 表示确保预案的权威性。\",\n            \"EnsurePlanOperability() — 表示确保预案的可操作性。\"\n        ],\n        \"instance_logicexpression\": [\n            \"RegulateEmergencyWorkByLaw() → (EnsurePlanScientific() ∧ EnsurePlanAuthoritative() ∧ EnsurePlanOperability())\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"方针：Policy(“安全第一”, “预防为主”, “综合治理”) — 表示“安全第一，预防为主，综合治理”的方针。\",\n            \"应急与预防相结合：CombineEmergencyAndPrevention — 表示事故应急与预防相结合。\"\n        ],\n        \"instance_logicexpression\": [\n            \"Policy(“安全第一”, “预防为主”, “综合治理”) ∧ CombineEmergencyAndPrevention\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"思想准备：MentalPreparation — 表示做好思想准备。\",\n            \"预案准备：PlanPreparation — 表示做好预案准备。\",\n            \"物资和经费准备：MaterialAndFundingPreparation — 表示做好物资和经费准备。\",\n            \"工作准备：WorkPreparation — 表示做好工作准备。\"\n        ],\n        \"instance_logicexpression\": [\n            \"MentalPreparation ∧ PlanPreparation ∧ MaterialAndFundingPreparation ∧ WorkPreparation\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"培训演练：TrainingAndDrill — 表示加强培训演练。\"\n        ],\n        \"instance_logicexpression\": [\n            \"TrainingAndDrill → AlwaysReady\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"日常管理与应急救援相结合：CombineDailyManagementAndEmergencyRescue — 表示将日常管理工作和应急救援工作相结合。\",\n            \"充分利用专业力量：FullyUtilizeProfessionalForces — 表示充分利用现有专业力量。\",\n            \"实现一队多能：AchieveMultiFunctionTeam — 表示努力实现一队多能。\"\n        ],\n        \"instance_logicexpression\": [\n            \"CombineDailyManagementAndEmergencyRescue → (FullyUtilizeProfessionalForces ∧ AchieveMultiFunctionTeam)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"培养兼职应急救援力量：CultivatePartTimeEmergencyRescueForces — 表示培养兼职应急救援力量。\",\n            \"发挥兼职应急救援力量作用：UtilizePartTimeEmergencyRescueForces — 表示发挥兼职应急救援力量作用。\"\n        ],\n        \"instance_logicexpression\": [\n            \"CultivatePartTimeEmergencyRescueForces → UtilizePartTimeEmergencyRescueForces\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“煤矿爆炸事故” — 表示煤矿发生的爆炸事故\",\n            \"a不是石油天然气开采事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"MiningAccident(煤矿爆炸事故) ∧ ¬(煤矿爆炸事故是石油天然气开采事故) → (VerySevereMiningAccident(煤矿爆炸事故) ∨ CrossProvincialMajorAccident(煤矿爆炸事故) ∨ ProvincialRescueInsufficient(煤矿爆炸事故) ∨ StateCouncilDirectiveAccident(煤矿爆炸事故) ∨ SafetyRegulationStartPlan(煤矿爆炸事故))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“跨省金矿事故” — 表示跨省行政区的重大金矿事故\",\n            \"a不是石油天然气开采事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"MiningAccident(跨省金矿事故) ∧ ¬(跨省金矿事故是石油天然气开采事故) → (VerySevereMiningAccident(跨省金矿事故) ∨ CrossProvincialMajorAccident(跨省金矿事故) ∨ ProvincialRescueInsufficient(跨省金矿事故) ∨ StateCouncilDirectiveAccident(跨省金矿事故) ∨ SafetyRegulationStartPlan(跨省金矿事故))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“省级铁矿事故” — 表示省级应急救援力量和资源不足的铁矿事故\",\n            \"a不是石油天然气开采事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"MiningAccident(省级铁矿事故) ∧ ¬(省级铁矿事故是石油天然气开采事故) → (VerySevereMiningAccident(省级铁矿事故) ∨ CrossProvincialMajorAccident(省级铁矿事故) ∨ ProvincialRescueInsufficient(省级铁矿事故) ∨ StateCouncilDirectiveAccident(省级铁矿事故) ∨ SafetyRegulationStartPlan(省级铁矿事故))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“国务院批示的铜矿事故” — 表示国务院领导同志有重要批示的铜矿事故\",\n            \"a不是石油天然气开采事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"MiningAccident(国务院批示的铜矿事故) ∧ ¬(国务院批示的铜矿事故是石油天然气开采事故) → (VerySevereMiningAccident(国务院批示的铜矿事故) ∨ CrossProvincialMajorAccident(国务院批示的铜矿事故) ∨ ProvincialRescueInsufficient(国务院批示的铜矿事故) ∨ StateCouncilDirectiveAccident(国务院批示的铜矿事故) ∨ SafetyRegulationStartPlan(国务院批示的铜矿事故))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“安全监管总局启动预案的铅矿事故” — 表示安全监管总局认为有必要启动本预案的铅矿事故\",\n            \"a不是石油天然气开采事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"MiningAccident(安全监管总局启动预案的铅矿事故) ∧ ¬(安全监管总局启动预案的铅矿事故是石油天然气开采事故) → (VerySevereMiningAccident(安全监管总局启动预案的铅矿事故) ∨ CrossProvincialMajorAccident(安全监管总局启动预案的铅矿事故) ∨ ProvincialRescueInsufficient(安全监管总局启动预案的铅矿事故) ∨ StateCouncilDirectiveAccident(安全监管总局启动预案的铅矿事故) ∨ SafetyRegulationStartPlan(安全监管总局启动预案的铅矿事故))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Organization=“安全监管总局” — 表示安全监管总局负责指导协调特别重大矿山事故灾难的应急救援工作\",\n            \"Type=“特别重大矿山事故灾难”\"\n        ],\n        \"instance_logicexpression\": [\n            \"ResponsibleForCoordination(安全监管总局, 特别重大矿山事故灾难)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“煤矿安监局” — 表示煤矿安监局负责指导协调煤矿事故的应急救援工作\",\n            \"Type=“煤矿事故”\"\n        ],\n        \"instance_logicexpression\": [\n            \"ResponsibleForCoordination(煤矿安监局, 煤矿事故)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“应急指挥中心” — 表示应急指挥中心具体承办有关工作\",\n            \"Work=“有关工作”\"\n        ],\n        \"instance_logicexpression\": [\n            \"SpecificallyHandle(应急指挥中心, 有关工作)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Leader=“安全监管总局局长”\",\n            \"DeputyLeader=“[安全监管总局分管调度副局长, 安全监管总局应急管理副局长, 安全监管总局非煤矿山安全监管副局长, 煤矿安监局局长]”\",\n            \"MemberUnits=“[办公厅, 政策法规司, 安全生产协调司, 调度统计司, 监督管理一司, 应急指挥中心, 煤矿安监局综合司, 煤矿安监局安全监察司, 煤矿安监局事故调查司, 矿山救援指挥中心, 矿山医疗救护中心, 机关服务中心, 通信信息中心]”\"\n        ],\n        \"instance_logicexpression\": [\n            \"LeadershipGroupComposition(安全监管总局局长, [安全监管总局分管调度副局长, 安全监管总局应急管理副局长, 安全监管总局非煤矿山安全监管副局长, 煤矿安监局局长], [办公厅, 政策法规司, 安全生产协调司, 调度统计司, 监督管理一司, 应急指挥中心, 煤矿安监局综合司, 煤矿安监局安全监察司, 煤矿安监局事故调查司, 矿山救援指挥中心, 矿山医疗救护中心, 机关服务中心, 通信信息中心])\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Position=“组长” — 表示组长的主要职责在安全监管总局\",\n            \"Organization=“安全监管总局”\"\n        ],\n        \"instance_logicexpression\": [\n            \"MainResponsibilities(组长, 安全监管总局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Position=“副组长” — 表示副组长的主要职责在安全监管总局\",\n            \"Organization=“安全监管总局”\"\n        ],\n        \"instance_logicexpression\": [\n            \"MainResponsibilities(副组长, 安全监管总局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Position=“成员单位” — 表示成员单位的主要职责在安全监管总局\",\n            \"Organization=“安全监管总局”\"\n        ],\n        \"instance_logicexpression\": [\n            \"MainResponsibilities(成员单位, 安全监管总局)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“办公厅” — 表示负责应急值守的部门为办公厅\",\n            \"Leader=“安全监管总局领导” — 表示安全监管总局的领导\",\n            \"CentralOffice=“中央办公厅” — 表示中央办公厅\",\n            \"StateCouncilOffice=“国务院办公厅” — 表示国务院办公厅\",\n            \"Departments=“国务院有关部门” — 表示需要抄送的国务院有关部门\",\n            \"Scene=“事故现场” — 表示需要派工作组前往的事故现场\",\n            \"Authorities=“国务院有关部门、事发地省级政府” — 表示需要通报情况的部门和政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyDuty(办公厅) → (ReportAccident(办公厅, 安全监管总局领导) ∧ ConveyDirectives(办公厅, 安全监管总局领导))\",\n            \"EmergencyDuty(办公厅) → (SubmitDutyInfo(办公厅, 中央办公厅, 国务院办公厅) ∧ CopyToDepartments(办公厅, 国务院有关部门))\",\n            \"EmergencyDuty(办公厅) → (ReceiveDirectives(办公厅, 安全监管总局领导) → ReportForApproval(办公厅, 安全监管总局领导) ∧ SuperviseImplementation(办公厅))\",\n            \"EmergencyDuty(办公厅) → (SendWorkGroup(办公厅, 事故现场) → (InformAuthorities(办公厅, 国务院有关部门、事发地省级政府) ∧ CoordinateMatters(办公厅)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“办公厅” — 表示负责应急值守的部门为办公厅\",\n            \"Leader=“党中央领导” — 表示党中央的领导\",\n            \"CentralOffice=“中央办公厅” — 表示中央办公厅\",\n            \"StateCouncilOffice=“国务院办公厅” — 表示国务院办公厅\",\n            \"Departments=“国务院有关部门” — 表示需要抄送的国务院有关部门\",\n            \"Scene=“煤矿事故现场” — 表示煤矿事故现场\",\n            \"Authorities=“国务院有关部门、事发地省级政府” — 表示需要通报情况的部门和政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyDuty(办公厅) → (ReportAccident(办公厅, 党中央领导) ∧ ConveyDirectives(办公厅, 党中央领导))\",\n            \"EmergencyDuty(办公厅) → (SubmitDutyInfo(办公厅, 中央办公厅, 国务院办公厅) ∧ CopyToDepartments(办公厅, 国务院有关部门))\",\n            \"EmergencyDuty(办公厅) → (ReceiveDirectives(办公厅, 党中央领导) → ReportForApproval(办公厅, 党中央领导) ∧ SuperviseImplementation(办公厅))\",\n            \"EmergencyDuty(办公厅) → (SendWorkGroup(办公厅, 煤矿事故现场) → (InformAuthorities(办公厅, 国务院有关部门、事发地省级政府) ∧ CoordinateMatters(办公厅)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“政策法规司” — 表示负责事故信息发布的部门\",\n            \"i=“事故信息” — 表示需要发布的信息\",\n            \"m=“新华社” — 表示与政策法规司联系的媒体之一\",\n            \"l=“事故现场” — 表示新闻发布的地点\"\n        ],\n        \"instance_logicexpression\": [\n            \"ResponsibleForRelease(政策法规司, 事故信息) → (Contact(政策法规司, 中宣部) ∧ Contact(政策法规司, 国务院新闻办) ∧ Contact(政策法规司, 新华社) ∧ Contact(政策法规司, 人民日报社) ∧ Contact(政策法规司, 中央人民广播电台) ∧ Contact(政策法规司, 中央电视台) ∧ AssistInRelease(政策法规司, 新华社, 事故现场) ∧ GuidePublicOpinion(政策法规司, 新华社))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“政策法规司” — 表示负责事故信息发布的部门\",\n            \"i=“事故信息” — 表示需要发布的信息\",\n            \"m=“人民日报社” — 表示与政策法规司联系的媒体之一\",\n            \"l=“事故现场” — 表示新闻发布的地点\"\n        ],\n        \"instance_logicexpression\": [\n            \"ResponsibleForRelease(政策法规司, 事故信息) → (Contact(政策法规司, 中宣部) ∧ Contact(政策法规司, 国务院新闻办) ∧ Contact(政策法规司, 新华社) ∧ Contact(政策法规司, 人民日报社) ∧ Contact(政策法规司, 中央人民广播电台) ∧ Contact(政策法规司, 中央电视台) ∧ AssistInRelease(政策法规司, 人民日报社, 事故现场) ∧ GuidePublicOpinion(政策法规司, 人民日报社))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“政策法规司” — 表示负责事故信息发布的部门\",\n            \"i=“事故信息” — 表示需要发布的信息\",\n            \"m=“中央电视台” — 表示与政策法规司联系的媒体之一\",\n            \"l=“事故现场” — 表示新闻发布的地点\"\n        ],\n        \"instance_logicexpression\": [\n            \"ResponsibleForRelease(政策法规司, 事故信息) → (Contact(政策法规司, 中宣部) ∧ Contact(政策法规司, 国务院新闻办) ∧ Contact(政策法规司, 新华社) ∧ Contact(政策法规司, 人民日报社) ∧ Contact(政策法规司, 中央人民广播电台) ∧ Contact(政策法规司, 中央电视台) ∧ AssistInRelease(政策法规司, 中央电视台, 事故现场) ∧ GuidePublicOpinion(政策法规司, 中央电视台))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“化工厂” — 表示事故场景在化工厂\",\n            \"i=“张三” — 表示安全监察专员为张三\",\n            \"r=“化工事故应急处理规定” — 表示领导发出的指示和相关规定\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s∀i∀r (Accident(“化工厂”) ∧ Instruction(Leader, “化工事故应急处理规定”) → (GoTo(“张三”, “化工厂”) ∧ Participate(“张三”, “化工厂”, “应急救援”) ∧ Participate(“张三”, “化工厂”, “调查”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“矿井” — 表示事故场景在矿井\",\n            \"i=“李四” — 表示安全监察专员为李四\",\n            \"r=“矿山安全生产规章” — 表示领导发出的指示和相关规定\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s∀i∀r (Accident(“矿井”) ∧ Instruction(Leader, “矿山安全生产规章”) → (GoTo(“李四”, “矿井”) ∧ Participate(“李四”, “矿井”, “应急救援”) ∧ Participate(“李四”, “矿井”, “调查”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“港口” — 表示事故场景在港口\",\n            \"i=“王五” — 表示安全监察专员为王五\",\n            \"r=“港口作业安全管理条例” — 表示领导发出的指示和相关规定\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s∀i∀r (Accident(“港口”) ∧ Instruction(Leader, “港口作业安全管理条例”) → (GoTo(“王五”, “港口”) ∧ Participate(“王五”, “港口”, “应急救援”) ∧ Participate(“王五”, “港口”, “调查”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“建筑工地” — 表示事故场景在建筑工地\",\n            \"i=“赵六” — 表示安全监察专员为赵六\",\n            \"r=“建筑施工安全规章” — 表示领导发出的指示和相关规定\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s∀i∀r (Accident(“建筑工地”) ∧ Instruction(Leader, “建筑施工安全规章”) → (GoTo(“赵六”, “建筑工地”) ∧ Participate(“赵六”, “建筑工地”, “应急救援”) ∧ Participate(“赵六”, “建筑工地”, “调查”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“调度统计司” — 表示调度统计司负责应急值守\",\n            \"i=“化工厂爆炸事故” — 表示接收和处置的事故信息为化工厂爆炸事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀i (EmergencyDuty(“调度统计司”) → (ReceiveAccidentInfo(“调度统计司”, “化工厂爆炸事故”) ∧ HandleAccidentInfo(“调度统计司”, “化工厂爆炸事故”) ∧ ReportToLeader(“调度统计司”, “化工厂爆炸事故”) ∧ ForwardToOffice(“调度统计司”, “化工厂爆炸事故”) ∧ ForwardToCenter(“调度统计司”, “化工厂爆炸事故”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“调度统计司” — 表示调度统计司负责应急值守\",\n            \"g=“紧急疏散和救援行动指南” — 表示起草的事故救援工作指导意见\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀g (EmergencyDuty(d) → ∃i (Instruction(Leader, “紧急疏散和救援行动指南”) → DraftGuidance(“调度统计司”, “紧急疏散和救援行动指南”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“调度统计司” — 表示调度统计司负责应急值守\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (EmergencyDuty(“调度统计司”) → TrackRescueProgress(“调度统计司”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“调度统计司” — 表示调度统计司负责应急值守\",\n            \"i=“矿井坍塌事故” — 表示接收和处置的事故信息为矿井坍塌事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀i (EmergencyDuty(“调度统计司”) → (ReceiveAccidentInfo(“调度统计司”, “矿井坍塌事故”) ∧ HandleAccidentInfo(“调度统计司”, “矿井坍塌事故”) ∧ ReportToLeader(“调度统计司”, “矿井坍塌事故”) ∧ ForwardToOffice(“调度统计司”, “矿井坍塌事故”) ∧ ForwardToCenter(“调度统计司”, “矿井坍塌事故”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“调度统计司” — 表示调度统计司负责应急值守\",\n            \"g=“矿井救援安全操作规程” — 表示起草的事故救援工作指导意见\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀g (EmergencyDuty(d) → ∃i (Instruction(Leader, “矿井救援安全操作规程”) → DraftGuidance(“调度统计司”, “矿井救援安全操作规程”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“监督管理一司” — 表示监督管理一司部门\",\n            \"s=“铁矿” — 表示事故场景在铁矿\",\n            \"i=“相关信息” — 表示提供的信息是关于非煤矿山事故的相关信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀s∀i (Accident(铁矿) ∧ NonCoalMine(铁矿) → (ProvideInformation(监督管理一司, 相关信息) ∧ Participate(监督管理一司, 铁矿, EmergencyRescue) ∧ Participate(监督管理一司, 铁矿, Investigation)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“监督管理一司” — 表示监督管理一司部门\",\n            \"s=“铜矿” — 表示事故场景在铜矿\",\n            \"i=“详细信息” — 表示提供的信息是关于非煤矿山事故的详细信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀s∀i (Accident(铜矿) ∧ NonCoalMine(铜矿) → (ProvideInformation(监督管理一司, 详细信息) ∧ Participate(监督管理一司, 铜矿, EmergencyRescue) ∧ Participate(监督管理一司, 铜矿, Investigation)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“监督管理一司” — 表示监督管理一司部门\",\n            \"s=“金矿” — 表示事故场景在金矿\",\n            \"i=“关键信息” — 表示提供的信息是关于非煤矿山事故的关键信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀s∀i (Accident(金矿) ∧ NonCoalMine(金矿) → (ProvideInformation(监督管理一司, 关键信息) ∧ Participate(监督管理一司, 金矿, EmergencyRescue) ∧ Participate(监督管理一司, 金矿, Investigation)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“监督管理一司” — 表示监督管理一司部门\",\n            \"s=“铅锌矿” — 表示事故场景在铅锌矿\",\n            \"i=“紧急信息” — 表示提供的信息是关于非煤矿山事故的紧急信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀s∀i (Accident(铅锌矿) ∧ NonCoalMine(铅锌矿) → (ProvideInformation(监督管理一司, 紧急信息) ∧ Participate(监督管理一司, 铅锌矿, EmergencyRescue) ∧ Participate(监督管理一司, 铅锌矿, Investigation)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“应急指挥中心” — 应急指挥中心根据领导指示和规定下达指令\",\n            \"o=“立即启动应急预案” — 应急指挥中心下达的指令为立即启动应急预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"指示(应急指挥中心) ∧ 规定(应急指挥中心) → IssueOrder(应急指挥中心, 立即启动应急预案)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“化工厂爆炸事故” — 事故为化工厂爆炸事故\",\n            \"g=“应急指挥中心” — 应急指挥中心协调指导事故应急救援工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"事故(化工厂爆炸事故) → Coordinate(应急指挥中心, 化工厂爆炸事故)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“化工厂爆炸应急救援方案” — 应急指挥中心提出的应急救援建议方案为化工厂爆炸应急救援方案\"\n        ],\n        \"instance_logicexpression\": [\n            \"应急(化工厂爆炸应急救援方案) → Propose(应急指挥中心, 化工厂爆炸应急救援方案)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“消防救援队” — 应急指挥中心调度的救援力量为消防救援队\",\n            \"d=“应急指挥中心” — 应急指挥中心调度有关救援力量参加救援工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"救援(消防救援队) → Dispatch(应急指挥中心, 消防救援队)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“化工厂爆炸事故救援” — 应急指挥中心跟踪的事故救援情况为化工厂爆炸事故救援\",\n            \"l=“安全监管总局领导” — 应急指挥中心及时向安全监管总局领导报告\"\n        ],\n        \"instance_logicexpression\": [\n            \"救援(化工厂爆炸事故救援) → Track(应急指挥中心, 化工厂爆炸事故救援) ∧ Report(应急指挥中心, 安全监管总局领导)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“化工安全专家” — 应急指挥中心协调组织的专家咨询为化工安全专家\"\n        ],\n        \"instance_logicexpression\": [\n            \"应急(化工安全专家) → Consult(应急指挥中心, 化工安全专家) ∧ Support(化工安全专家, 救援)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“煤矿安监局综合司” — 表示负责协调的部门为煤矿安监局综合司\",\n            \"r=“煤矿安全事故应急救援规定” — 表示领导发出的指示和相关规定\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀r (Instruction(Leader, “煤矿安全事故应急救援规定”) → (Coordinate(“煤矿安监局综合司”, EmergencyRescue) ∧ Coordinate(“煤矿安监局综合司”, Investigation)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“煤矿安监局综合司” — 表示负责协调的部门为煤矿安监局综合司\",\n            \"r=“煤矿事故调查处理条例” — 表示领导发出的指示和相关规定\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀r (Instruction(Leader, “煤矿事故调查处理条例”) → (Coordinate(“煤矿安监局综合司”, EmergencyRescue) ∧ Coordinate(“煤矿安监局综合司”, Investigation)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“煤矿安监局综合司” — 表示负责协调的部门为煤矿安监局综合司\",\n            \"r=“煤矿安全生产管理规定” — 表示领导发出的指示和相关规定\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀r (Instruction(Leader, “煤矿安全生产管理规定”) → (Coordinate(“煤矿安监局综合司”, EmergencyRescue) ∧ Coordinate(“煤矿安监局综合司”, Investigation)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“煤矿安监局综合司” — 表示负责协调的部门为煤矿安监局综合司\",\n            \"r=“煤矿事故应急响应程序” — 表示领导发出的指示和相关规定\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀r (Instruction(Leader, “煤矿事故应急响应程序”) → (Coordinate(“煤矿安监局综合司”, EmergencyRescue) ∧ Coordinate(“煤矿安监局综合司”, Investigation)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“安监局安全监察司” — 表示安监局安全监察司\",\n            \"u=“煤矿A” — 表示煤矿事故单位为煤矿A\",\n            \"a=“煤矿A事故” — 表示煤矿A发生的事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀u (CoalMineAccident(煤矿A) → ProvideInfo(安监局安全监察司, 煤矿A, 监察情况) ∧ ProvideInfo(安监局安全监察司, 煤矿A, 信息) ∧ SafetyAssessment(煤矿A) ∧ ThreeSimultaneous(煤矿A))\",\n            \"CoalMineAccident(煤矿A事故) → ParticipateInRescue(安监局安全监察司, 煤矿A事故)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“安监局安全监察司” — 表示安监局安全监察司\",\n            \"u=“煤矿B” — 表示煤矿事故单位为煤矿B\",\n            \"a=“煤矿B事故” — 表示煤矿B发生的事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀u (CoalMineAccident(煤矿B) → ProvideInfo(安监局安全监察司, 煤矿B, 监察情况) ∧ ProvideInfo(安监局安全监察司, 煤矿B, 信息) ∧ SafetyAssessment(煤矿B) ∧ ThreeSimultaneous(煤矿B))\",\n            \"CoalMineAccident(煤矿B事故) → ParticipateInRescue(安监局安全监察司, 煤矿B事故)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“安监局安全监察司” — 表示安监局安全监察司\",\n            \"u=“煤矿C” — 表示煤矿事故单位为煤矿C\",\n            \"a=“煤矿C事故” — 表示煤矿C发生的事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀u (CoalMineAccident(煤矿C) → ProvideInfo(安监局安全监察司, 煤矿C, 监察情况) ∧ ProvideInfo(安监局安全监察司, 煤矿C, 信息) ∧ SafetyAssessment(煤矿C) ∧ ThreeSimultaneous(煤矿C))\",\n            \"CoalMineAccident(煤矿C事故) → ParticipateInRescue(安监局安全监察司, 煤矿C事故)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“煤矿安监局事故调查司” — 表示部门为煤矿安监局事故调查司\",\n            \"a=“煤矿爆炸事故” — 表示煤矿事故为煤矿爆炸事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀a (Department(d, '煤矿安监局事故调查司') ∧ Accident(a, '煤矿爆炸事故') → (ParticipateInEmergencyRescue(d, a) ∨ (MajorAccident(a) ∧ OrganizeAccidentInvestigation(d, a)) ∨ (ExtraordinaryMajorAccident(a) ∧ ParticipateInAccidentInvestigation(d, a))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“煤矿安监局事故调查司” — 表示部门为煤矿安监局事故调查司\",\n            \"a=“煤矿塌方事故” — 表示煤矿事故为煤矿塌方事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀a (Department(d, '煤矿安监局事故调查司') ∧ Accident(a, '煤矿塌方事故') → (ParticipateInEmergencyRescue(d, a) ∨ (MajorAccident(a) ∧ OrganizeAccidentInvestigation(d, a)) ∨ (ExtraordinaryMajorAccident(a) ∧ ParticipateInAccidentInvestigation(d, a))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“煤矿安监局事故调查司” — 表示部门为煤矿安监局事故调查司\",\n            \"a=“煤矿瓦斯爆炸事故” — 表示煤矿事故为煤矿瓦斯爆炸事故\",\n            \"a=“重大事故” — 表示煤矿瓦斯爆炸事故是重大事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀a (Department(d, '煤矿安监局事故调查司') ∧ Accident(a, '煤矿瓦斯爆炸事故') ∧ MajorAccident(a) → (ParticipateInEmergencyRescue(d, a) ∨ OrganizeAccidentInvestigation(d, a)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“煤矿安监局事故调查司” — 表示部门为煤矿安监局事故调查司\",\n            \"a=“煤矿透水事故” — 表示煤矿事故为煤矿透水事故\",\n            \"a=“特别重大事故” — 表示煤矿透水事故是特别重大事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀a (Department(d, '煤矿安监局事故调查司') ∧ Accident(a, '煤矿透水事故') ∧ ExtraordinaryMajorAccident(a) → (ParticipateInEmergencyRescue(d, a) ∨ ParticipateInAccidentInvestigation(d, a)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“矿山救援指挥中心” — 表示矿山救援指挥中心\",\n            \"e=“煤矿爆炸事故” — 表示煤矿爆炸事故\",\n            \"SafetySupervision=“安全监管总局” — 表示安全监管总局\",\n            \"EmergencyCommand=“应急指挥中心” — 表示应急指挥中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r ∀e (UnifiedDeployment(“安全监管总局”, “应急指挥中心”) → (OrganizeCoordinate(“矿山救援指挥中心”, “煤矿爆炸事故”) ∧ AllocateResources(“矿山救援指挥中心”, Resources) ∧ ParticipateRescue(“矿山救援指挥中心”, “煤矿爆炸事故”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“矿山救援指挥中心” — 表示矿山救援指挥中心\",\n            \"e=“煤矿爆炸事故” — 表示煤矿爆炸事故\",\n            \"p=“紧急救援计划” — 表示紧急救援计划\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r ∀p (OrganizeCoordinate(r, e) → ProposePlan(r, p) ∧ OrganizeConsultation(r, Experts) ∧ ProvideSupport(r, TechnicalSupport))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“矿山救援指挥中心” — 表示矿山救援指挥中心\",\n            \"e=“煤矿爆炸事故” — 表示煤矿爆炸事故\",\n            \"BasicInfo=“矿山救援基础资料” — 表示矿山救援的基础资料和信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (OrganizeCoordinate(r, e) → ProvideInformation(r, BasicInfo))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“矿山救援指挥中心” — 表示矿山救援指挥中心\",\n            \"e=“矿井坍塌事故” — 表示矿井坍塌事故\",\n            \"SafetySupervision=“安全监管总局” — 表示安全监管总局\",\n            \"EmergencyCommand=“应急指挥中心” — 表示应急指挥中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r ∀e (UnifiedDeployment(“安全监管总局”, “应急指挥中心”) → (OrganizeCoordinate(“矿山救援指挥中心”, “矿井坍塌事故”) ∧ AllocateResources(“矿山救援指挥中心”, Resources) ∧ ParticipateRescue(“矿山救援指挥中心”, “矿井坍塌事故”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“矿山救援指挥中心” — 表示矿山救援指挥中心\",\n            \"e=“矿井坍塌事故” — 表示矿井坍塌事故\",\n            \"p=“坍塌事故救援计划” — 表示坍塌事故救援计划\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r ∀p (OrganizeCoordinate(r, e) → ProposePlan(r, p) ∧ OrganizeConsultation(r, Experts) ∧ ProvideSupport(r, TechnicalSupport))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“矿山救援指挥中心” — 表示矿山救援指挥中心\",\n            \"e=“矿井坍塌事故” — 表示矿井坍塌事故\",\n            \"BasicInfo=“矿井坍塌救援基础资料” — 表示矿井坍塌救援的基础资料和信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (OrganizeCoordinate(r, e) → ProvideInformation(r, BasicInfo))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“矿山医疗救护中心” — 表示矿山医疗救护中心\",\n            \"a=“黑石矿山” — 表示矿山事故地点为黑石矿山\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀a (MiningAccident(黑石矿山) → Coordinate(矿山医疗救护中心, 黑石矿山))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“王医生” — 表示医疗救护专家为王医生\",\n            \"a=“黑石矿山” — 表示矿山事故地点为黑石矿山\",\n            \"必要(e)=“是” — 表示派遣王医生是必要的\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e∀a (MiningAccident(黑石矿山) ∧ 必要(是) → (Dispatch(矿山医疗救护中心, 王医生, 黑石矿山) ∧ AssistTreatment(王医生, 黑石矿山) ∧ AssistRescue(王医生, 黑石矿山)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“矿山医疗救护中心” — 表示矿山医疗救护中心\",\n            \"a=“银矿矿山” — 表示矿山事故地点为银矿矿山\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀a (MiningAccident(银矿矿山) → Coordinate(矿山医疗救护中心, 银矿矿山))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“李护士” — 表示医疗救护专家为李护士\",\n            \"a=“银矿矿山” — 表示矿山事故地点为银矿矿山\",\n            \"必要(e)=“是” — 表示派遣李护士是必要的\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e∀a (MiningAccident(银矿矿山) ∧ 必要(是) → (Dispatch(矿山医疗救护中心, 李护士, 银矿矿山) ∧ AssistTreatment(李护士, 银矿矿山) ∧ AssistRescue(李护士, 银矿矿山)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“矿山医疗救护中心” — 表示矿山医疗救护中心\",\n            \"a=“金矿矿山” — 表示矿山事故地点为金矿矿山\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀a (MiningAccident(金矿矿山) → Coordinate(矿山医疗救护中心, 金矿矿山))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“张医生” — 表示医疗救护专家为张医生\",\n            \"a=“金矿矿山” — 表示矿山事故地点为金矿矿山\",\n            \"必要(e)=“否” — 表示派遣张医生不是必要的\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e∀a (MiningAccident(金矿矿山) ∧ 必要(否) → ¬(Dispatch(矿山医疗救护中心, 张医生, 金矿矿山)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“化工厂爆炸事故” — 表示事故应急处置过程为化工厂爆炸事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (IncidentEmergencyResponse(“化工厂爆炸事故”) → LogisticsSupport(机关服务中心, “化工厂爆炸事故”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“矿难救援行动” — 表示事故应急处置过程为矿难救援行动\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (IncidentEmergencyResponse(“矿难救援行动”) → LogisticsSupport(机关服务中心, “矿难救援行动”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“化学品泄漏事件” — 表示事故应急处置过程为化学品泄漏事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (IncidentEmergencyResponse(“化学品泄漏事件”) → LogisticsSupport(机关服务中心, “化学品泄漏事件”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“火灾紧急疏散” — 表示事故应急处置过程为火灾紧急疏散\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (IncidentEmergencyResponse(“火灾紧急疏散”) → LogisticsSupport(机关服务中心, “火灾紧急疏散”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Center=“通信信息中心” — 表示负责的中心为通信信息中心\",\n            \"GeneralBureau=“安全监管总局” — 表示总局为安全监管总局\",\n            \"Website=“总局官方网站” — 表示网站为总局官方网站\",\n            \"i=“事故A信息” — 表示事故信息为事故A的信息\",\n            \"j=“救援进展B” — 表示救援进展为救援B的进展情况\"\n        ],\n        \"instance_logicexpression\": [\n            \"Ensure(“通信信息中心”, 外网(“安全监管总局”)) ∧ Ensure(“通信信息中心”, 内网(“安全监管总局”)) ∧ Publish(“通信信息中心”, “总局官方网站”, “事故A信息”) ∧ Publish(“通信信息中心”, “总局官方网站”, “救援进展B”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Center=“通信信息中心” — 表示负责的中心为通信信息中心\",\n            \"GeneralBureau=“安全监管总局” — 表示总局为安全监管总局\",\n            \"Website=“总局官方网站” — 表示网站为总局官方网站\",\n            \"i=“事故C信息” — 表示事故信息为事故C的信息\",\n            \"j=“救援进展D” — 表示救援进展为救援D的进展情况\"\n        ],\n        \"instance_logicexpression\": [\n            \"Ensure(“通信信息中心”, 外网(“安全监管总局”)) ∧ Ensure(“通信信息中心”, 内网(“安全监管总局”)) ∧ Publish(“通信信息中心”, “总局官方网站”, “事故C信息”) ∧ Publish(“通信信息中心”, “总局官方网站”, “救援进展D”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a.Controllable=“不可控” — 表示事故灾难的可控性为不可控\",\n            \"a.Severity=“特别严重” — 表示事故灾难的严重程度为特别严重\",\n            \"a.Impact=“广泛” — 表示事故灾难的影响范围为广泛\",\n            \"a.Count=35 — 表示死亡人数为35人\",\n            \"a.Count=150 — 表示中毒或重伤人数为150人\",\n            \"a.Amount=120000000 — 表示直接经济损失为1.2亿元\",\n            \"a.Severity=“特别重大” — 表示社会影响的严重程度为特别重大\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (AccidentDisaster(不可控, 特别严重, 广泛) → (LevelIResponse(a) ↔ (Death(35) ≥ 30 ∨ PoisoningInjury(150) ≥ 100 ∨ EconomicLoss(120000000) ≥ 100000000 ∨ SocialImpact(特别重大) = 特别重大)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a.Controllable=“部分可控” — 表示事故灾难的可控性为部分可控\",\n            \"a.Severity=“严重” — 表示事故灾难的严重程度为严重\",\n            \"a.Impact=“区域性” — 表示事故灾难的影响范围为区域性\",\n            \"a.Count=28 — 表示死亡人数为28人\",\n            \"a.Count=90 — 表示中毒或重伤人数为90人\",\n            \"a.Amount=90000000 — 表示直接经济损失为9000万元\",\n            \"a.Severity=“重大” — 表示社会影响的严重程度为重大\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (AccidentDisaster(部分可控, 严重, 区域性) → (LevelIResponse(a) ↔ (Death(28) ≥ 30 ∨ PoisoningInjury(90) ≥ 100 ∨ EconomicLoss(90000000) ≥ 100000000 ∨ SocialImpact(重大) = 特别重大)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a.Controllable=“可控” — 表示事故灾难的可控性为可控\",\n            \"a.Severity=“一般” — 表示事故灾难的严重程度为一般\",\n            \"a.Impact=“局部” — 表示事故灾难的影响范围为局部\",\n            \"a.Count=40 — 表示死亡人数为40人\",\n            \"a.Count=110 — 表示中毒或重伤人数为110人\",\n            \"a.Amount=80,000,000 — 表示直接经济损失为8000万元\",\n            \"a.Severity=“一般” — 表示社会影响的严重程度为一般\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (AccidentDisaster(可控, 一般, 局部) → (LevelIResponse(a) ↔ (Death(40) ≥ 30 ∨ PoisoningInjury(110) ≥ 100 ∨ EconomicLoss(80000000) ≥ 100000000 ∨ SocialImpact(一般) = 特别重大)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c1=15 — 表示死亡人数为15人\",\n            \"c2=70 — 表示中毒或重伤的人数为70人\",\n            \"a1=8000 — 表示直接经济损失的金额为8000万元\",\n            \"s1='重大' — 表示社会影响的严重程度为重大\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃c1 ∃c2 ∃a1 ∃a2 ∃s1 ∃s2 (Death(15) ∧ 10 ≤ 15 ∧ 15 ≤ 29 ∨ PoisoningInjury(70) ∧ 50 ≤ 70 ∧ 70 ≤ 100 ∨ EconomicLoss(8000) ∧ 5000 ≤ 8000 ∧ 8000 ≤ 10000 ∨ SocialImpact('重大') ∧ '重大' = '重大' → StartLevelIIResponse())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c1=20 — 表示死亡人数为20人\",\n            \"c2=55 — 表示中毒或重伤的人数为55人\",\n            \"a1=6000 — 表示直接经济损失的金额为6000万元\",\n            \"s1='重大' — 表示社会影响的严重程度为重大\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃c1 ∃c2 ∃a1 ∃a2 ∃s1 ∃s2 (Death(20) ∧ 10 ≤ 20 ∧ 20 ≤ 29 ∨ PoisoningInjury(55) ∧ 50 ≤ 55 ∧ 55 ≤ 100 ∨ EconomicLoss(6000) ∧ 5000 ≤ 6000 ∧ 6000 ≤ 10000 ∨ SocialImpact('重大') ∧ '重大' = '重大' → StartLevelIIResponse())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c1=10 — 表示死亡人数为10人\",\n            \"c2=90 — 表示中毒或重伤的人数为90人\",\n            \"a1=9500 — 表示直接经济损失的金额为9500万元\",\n            \"s1='重大' — 表示社会影响的严重程度为重大\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃c1 ∃c2 ∃a1 ∃a2 ∃s1 ∃s2 (Death(10) ∧ 10 ≤ 10 ∧ 10 ≤ 29 ∨ PoisoningInjury(90) ∧ 50 ≤ 90 ∧ 90 ≤ 100 ∨ EconomicLoss(9500) ∧ 5000 ≤ 9500 ∧ 9500 ≤ 10000 ∨ SocialImpact('重大') ∧ '重大' = '重大' → StartLevelIIResponse())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c1=29 — 表示死亡人数为29人\",\n            \"c2=60 — 表示中毒或重伤的人数为60人\",\n            \"a1=7000 — 表示直接经济损失的金额为7000万元\",\n            \"s1='重大' — 表示社会影响的严重程度为重大\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃c1 ∃c2 ∃a1 ∃a2 ∃s1 ∃s2 (Death(29) ∧ 10 ≤ 29 ∧ 29 ≤ 29 ∨ PoisoningInjury(60) ∧ 50 ≤ 60 ∧ 60 ≤ 100 ∨ EconomicLoss(7000) ∧ 5000 ≤ 7000 ∧ 7000 ≤ 10000 ∨ SocialImpact('重大') ∧ '重大' = '重大' → StartLevelIIResponse())\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=5 — 表示死亡人数为5人\",\n            \"p=40 — 表示中毒或重伤的人数为40人\",\n            \"e='较大' — 表示经济损失的大小为较大\",\n            \"s='较大' — 表示社会影响的大小为较大\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀p ∀e ∀s (Death(5) ∧ 3 ≤ 5 ∧ 5 ≤ 9 ∨ PoisoningInjury(40) ∧ 30 ≤ 40 ∧ 40 ≤ 50 ∨ EconomicLoss(e) ∧ Magnitude(e, '较大') ∨ SocialImpact(s) ∧ Magnitude(s, '较大') → ActivateResponse('Ⅲ级'))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=8 — 表示死亡人数为8人\",\n            \"p=35 — 表示中毒或重伤的人数为35人\",\n            \"e='较小' — 表示经济损失的大小为较小\",\n            \"s='较大' — 表示社会影响的大小为较大\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀p ∀e ∀s (Death(8) ∧ 3 ≤ 8 ∧ 8 ≤ 9 ∨ PoisoningInjury(35) ∧ 30 ≤ 35 ∧ 35 ≤ 50 ∨ EconomicLoss(e) ∧ Magnitude(e, '较小') ∨ SocialImpact(s) ∧ Magnitude(s, '较大') → ActivateResponse('Ⅲ级'))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=3 — 表示死亡人数为3人\",\n            \"p=45 — 表示中毒或重伤的人数为45人\",\n            \"e='较大' — 表示经济损失的大小为较大\",\n            \"s='较小' — 表示社会影响的大小为较小\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀p ∀e ∀s (Death(3) ∧ 3 ≤ 3 ∧ 3 ≤ 9 ∨ PoisoningInjury(45) ∧ 30 ≤ 45 ∧ 45 ≤ 50 ∨ EconomicLoss(e) ∧ Magnitude(e, '较大') ∨ SocialImpact(s) ∧ Magnitude(s, '较小') → ActivateResponse('Ⅲ级'))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=9 — 表示死亡人数为9人\",\n            \"p=30 — 表示中毒或重伤的人数为30人\",\n            \"e='较大' — 表示经济损失的大小为较大\",\n            \"s='较大' — 表示社会影响的大小为较大\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀p ∀e ∀s (Death(9) ∧ 3 ≤ 9 ∧ 9 ≤ 9 ∨ PoisoningInjury(30) ∧ 30 ≤ 30 ∧ 30 ≤ 50 ∨ EconomicLoss(e) ∧ Magnitude(e, '较大') ∨ SocialImpact(s) ∧ Magnitude(s, '较大') → ActivateResponse('Ⅲ级'))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“化工厂爆炸” — 表示事件为化工厂爆炸\",\n            \"n=2 — 表示死亡人数为2\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i ( (∃n (1 ≤ n ∧ n ≤ 3 ∧ CausesDeath(“化工厂爆炸”, n)) ∨ ∃n (0 < n ≤ 30 ∧ CausesPoisoningInjury(“化工厂爆炸”, n)) ∨ CausesSocialImpact(“化工厂爆炸”) ) → 启动IV级响应(“化工厂爆炸”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“化学品泄漏” — 表示事件为化学品泄漏\",\n            \"n=28 — 表示中毒或重伤人数为28\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i ( (∃n (1 ≤ n ∧ n ≤ 3 ∧ CausesDeath(i, n)) ∨ ∃n (0 < n ≤ 30 ∧ CausesPoisoningInjury(“化学品泄漏”, n)) ∨ CausesSocialImpact(“化学品泄漏”) ) → 启动IV级响应(“化学品泄漏”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“食品中毒事件” — 表示事件为食品中毒\",\n            \"n=0 — 表示没有死亡，但有中毒事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i ( (∃n (1 ≤ n ∧ n ≤ 3 ∧ CausesDeath(“食品中毒事件”, n)) ∨ ∃n (0 < n ≤ 30 ∧ CausesPoisoningInjury(“食品中毒事件”, n)) ∨ CausesSocialImpact(“食品中毒事件”) ) → 启动IV级响应(“食品中毒事件”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“交通事故” — 表示事件为交通事故\",\n            \"n=3 — 表示死亡人数为3\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i ( (∃n (1 ≤ n ∧ n ≤ 3 ∧ CausesDeath(“交通事故”, n)) ∨ ∃n (0 < n ≤ 30 ∧ CausesPoisoningInjury(“交通事故”, n)) ∨ CausesSocialImpact(“交通事故”) ) → 启动IV级响应(“交通事故”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“工业污染事件” — 表示事件为工业污染\",\n            \"CausesSocialImpact(“工业污染事件”) — 表示事件造成社会影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i ( (∃n (1 ≤ n ∧ n ≤ 3 ∧ CausesDeath(“工业污染事件”, n)) ∨ ∃n (0 < n ≤ 30 ∧ CausesPoisoningInjury(“工业污染事件”, n)) ∨ CausesSocialImpact(“工业污染事件”) ) → 启动IV级响应(“工业污染事件”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“某市地方政府” — 表示相应的地方人民政府为某市地方政府\",\n            \"c=“某市应急救援指挥部” — 表示现场应急救援指挥部为某市应急救援指挥部\",\n            \"Leader=“市长” — 表示地方政府负责人为市长\",\n            \"s=“化工厂爆炸事故现场” — 表示事故现场为化工厂爆炸事故现场\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀c (FormCommandCenter(某市地方政府, 某市应急救援指挥部) → (ActAsCommander(市长, 某市应急救援指挥部) ∧ ResponsibleForCommand(市长, 某市应急救援指挥部)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=“应急局局长” — 表示有关领导为应急局局长\",\n            \"s=“矿难事故现场” — 表示事故现场为矿难事故现场\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀l∀s (FamiliarWithSituation(应急局局长, 矿难事故现场) → ResponsibleForCommand(应急局局长, 某市应急救援指挥部))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“某市应急救援指挥部”\",\n            \"s=“地震灾害现场” — 表示事故现场为地震灾害现场\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀s (FormCommandCenter(某市地方政府, 某市应急救援指挥部) → ReportSituation(某市应急救援指挥部, SafetyRegulationBureau, 地震灾害现场))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“某市应急救援指挥部”\",\n            \"SafetyRegulationBureau=“国家安全生产监督管理总局”\",\n            \"ReinforcementDetails=“需要医疗队伍和重型机械” — 表示需要的救援力量和装备为医疗队伍和重型机械\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (RequestReinforcement(某市应急救援指挥部, 国家安全生产监督管理总局, 需要医疗队伍和重型机械) → (ReportSituation(某市应急救援指挥部, SafetyRegulationBureau, s) ∧ ¬SelfSufficient(某市应急救援指挥部))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Organization=“安全监管总局” — 表示组织为安全监管总局\",\n            \"ExpertGroup=“矿山应急救援专家组” — 表示专家组为矿山应急救援专家组\",\n            \"Support=“技术支持” — 表示提供的是技术支持\"\n        ],\n        \"instance_logicexpression\": [\n            \"Establish(安全监管总局, 矿山应急救援专家组) ∧ Provide(矿山应急救援专家组, 技术支持)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"ExpertGroup=“矿山应急救援专家组” — 表示专家组为矿山应急救援专家组\",\n            \"Study=“救援方案研究” — 表示参与的研究为矿山事故灾难救援方案的研究\"\n        ],\n        \"instance_logicexpression\": [\n            \"Participate(矿山应急救援专家组, 救援方案研究)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"ExpertGroup=“矿山应急救援专家组” — 表示专家组为矿山应急救援专家组\",\n            \"Information=“事故信息” — 表示研究分析的信息为事故信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"Analyze(矿山应急救援专家组, 事故信息) ∧ Suggest(矿山应急救援专家组, 救援决策)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"ExpertGroup=“矿山应急救援专家组” — 表示专家组为矿山应急救援专家组\",\n            \"Precautions=“事故防范措施” — 表示提出的防范措施为事故防范措施\"\n        ],\n        \"instance_logicexpression\": [\n            \"Propose(矿山应急救援专家组, 事故防范措施)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"ExpertGroup=“矿山应急救援专家组” — 表示专家组为矿山应急救援专家组\"\n        ],\n        \"instance_logicexpression\": [\n            \"SupportRecovery(矿山应急救援专家组)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Organization=“安全监管总局” — 表示负责组织为安全监管总局\",\n            \"Task=“接收报告全国矿山企业重特大事故信息” — 表示任务为接收报告全国矿山企业重特大事故信息\",\n            \"Information=“全国矿山企业重特大事故信息” — 表示信息为全国矿山企业重特大事故信息\",\n            \"Regulations=“相关工作制度” — 表示工作制度为相关工作制度\"\n        ],\n        \"instance_logicexpression\": [\n            \"Responsible(安全监管总局, 接收报告全国矿山企业重特大事故信息) ∧ Responsible(安全监管总局, 报告全国矿山企业重特大事故信息) ∧ Responsible(安全监管总局, 初步处理全国矿山企业重特大事故信息) ∧ Responsible(安全监管总局, 统计分析全国矿山企业重特大事故信息) ∧ EstablishRegulations(安全监管总局, 相关工作制度)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“安全监管总局” — 表示负责组织为安全监管总局\",\n            \"Database=“全国矿山基本情况数据库” — 表示数据库为全国矿山基本情况数据库\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishDatabase(安全监管总局, 全国矿山基本情况数据库) ∧ EstablishDatabase(安全监管总局, 重大危险源数据库) ∧ EstablishDatabase(安全监管总局, 重大事故隐患数据库) ∧ EstablishDatabase(安全监管总局, 重大灾害事故数据库)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“安全监管总局” — 表示负责组织为安全监管总局\",\n            \"Source=“全国存在的重大危险源” — 表示危险源为全国存在的重大危险源\",\n            \"Information=“重点监控信息” — 表示信息为重点监控信息\",\n            \"Situation=“整改情况” — 表示整改情况为整改情况\"\n        ],\n        \"instance_logicexpression\": [\n            \"FocusMonitoring(安全监管总局, 全国存在的重大危险源) ∧ FocusMonitoring(安全监管总局, 风险高的矿山企业) ∧ AnalyzeInformation(安全监管总局, 重点监控信息) ∧ TrackRectification(安全监管总局, 整改情况)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“某市安全生产监督管理部门” — 表示组织为某市安全生产监督管理部门\",\n            \"Situation=“辖区内的矿山分布” — 表示情况为辖区内的矿山分布\",\n            \"Database=“辖区内矿山基本情况数据库” — 表示数据库为辖区内矿山基本情况数据库\"\n        ],\n        \"instance_logicexpression\": [\n            \"MasterSituation(某市安全生产监督管理部门, 辖区内的矿山分布) ∧ MasterSituation(某市安全生产监督管理部门, 灾害等基本状况) → (EstablishDatabase(某市安全生产监督管理部门, 辖区内矿山基本情况数据库) ∧ EstablishDatabase(某市安全生产监督管理部门, 重大危险源数据库) ∧ Report(某市安全生产监督管理部门, 辖区内矿山基本情况数据库, 安全监管总局) ∧ Report(某市安全生产监督管理部门, 重大危险源数据库, 安全监管总局))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“某矿山企业” — 表示企业为某矿山企业\",\n            \"Condition=“地质条件” — 表示条件为地质条件\",\n            \"Disaster=“可能发生灾害” — 表示灾害为可能发生灾害\",\n            \"Hazard=“危害程度” — 表示危害程度为危害程度\"\n        ],\n        \"instance_logicexpression\": [\n            \"地质条件(某矿山企业) ∧ 可能发生灾害(某矿山企业) ∧ 危害程度(某矿山企业) → (EstablishDatabase(某矿山企业, 本企业基本情况数据库) ∧ EstablishDatabase(某矿山企业, 危险源数据库) ∧ Report(某矿山企业, 本企业基本情况数据库, 当地安全生产监督管理部门) ∧ Report(某矿山企业, 本企业基本情况数据库, 煤矿安全监察机构) ∧ Report(某矿山企业, 重大危险源数据库, 省级矿山救援指挥中心))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“市级安全生产监督管理部门” — 表示市级安全生产监督管理部门\",\n            \"i=“煤矿安全事故信息” — 表示可能导致安全生产事故的信息\",\n            \"p=“煤矿安全事故预防措施” — 表示确定的应对方案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀i∀p (Analyze(“市级安全生产监督管理部门”, “煤矿安全事故信息”) ∧ DeterminePlan(“市级安全生产监督管理部门”, “煤矿安全事故预防措施”) → ∀t Notify(“市级安全生产监督管理部门”, t, “煤矿安全事故预防措施”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“矿山应急救援指挥机构” — 表示矿山应急救援指挥机构\",\n            \"a=“矿井坍塌事故” — 表示发生的矿井坍塌事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀a (Accident(“矿井坍塌事故”) → (ActivatePlan(“矿山应急救援指挥机构”, p) ∧ OrganizeRescue(“矿山应急救援指挥机构”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“县级煤矿安全监察机构” — 表示县级煤矿安全监察机构\",\n            \"HigherAuthority=“省级煤矿安全监察局” — 表示请求的上级机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Necessary(“矿井坍塌事故”) → RequestSupport(“县级煤矿安全监察机构”, “省级煤矿安全监察局”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“区级矿山应急救援指挥机构” — 表示区级矿山应急救援指挥机构\",\n            \"i=“化学品泄漏信息” — 表示可能导致安全生产事故的化学品泄漏信息\",\n            \"p=“化学品泄漏应急措施” — 表示确定的应对方案\",\n            \"t=“区级化工厂” — 表示需要通知的区级化工厂\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀i∀p (Analyze(“区级矿山应急救援指挥机构”, “化学品泄漏信息”) ∧ DeterminePlan(“区级矿山应急救援指挥机构”, “化学品泄漏应急措施”) → ∀t Notify(“区级矿山应急救援指挥机构”, “区级化工厂”, “化学品泄漏应急措施”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“省级安全生产监督管理部门” — 表示省级安全生产监督管理部门\",\n            \"a=“重大火灾事故” — 表示发生的重大火灾事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀a (Accident(“重大火灾事故”) → (ActivatePlan(“省级安全生产监督管理部门”, p) ∧ OrganizeRescue(“省级安全生产监督管理部门”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“煤矿事故” — 表示事故为煤矿事故\",\n            \"Severity=“Ⅱ级” — 表示事故严重程度为Ⅱ级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (MiningAccident(a, Ⅱ) ∨ AccidentExpansion(a) → (PotentialMajorDisaster(a) → (ResponsibleForDispatch(调度统计司, 调度了解) ∧ ReportToLeader(调度统计司) ∧ NotifyLeader(领导小组成员单位, 通知))))\",\n            \"∀a (EmergencyCenterLearns(应急指挥中心, a) → (NotifyUnits(应急指挥中心, [矿山应急救援基地, 救援装备储备单位, 救援专家, 救援技术支持机构], 通知) ∧ PrepareForEmergency([矿山应急救援基地, 救援装备储备单位, 救援专家, 救援技术支持机构])))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“铁矿事故” — 表示事故为铁矿事故\",\n            \"AccidentExpansion=“是” — 表示铁矿事故已经扩大\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (MiningAccident(a, Ⅱ) ∨ AccidentExpansion(a) → (PotentialMajorDisaster(a) → (ResponsibleForDispatch(调度统计司, 调度了解) ∧ ReportToLeader(调度统计司) ∧ NotifyLeader(领导小组成员单位, 通知))))\",\n            \"∀a (EmergencyCenterLearns(应急指挥中心, a) → (NotifyUnits(应急指挥中心, [矿山应急救援基地, 救援装备储备单位, 救援专家, 救援技术支持机构], 通知) ∧ PrepareForEmergency([矿山应急救援基地, 救援装备储备单位, 救援专家, 救援技术支持机构])))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“金矿事故” — 表示事故为金矿事故\",\n            \"PotentialMajorDisaster=“是” — 表示金矿事故有可能发展成特别重大事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (MiningAccident(a, Ⅱ) ∨ AccidentExpansion(a) → (PotentialMajorDisaster(a) → (ResponsibleForDispatch(调度统计司, 调度了解) ∧ ReportToLeader(调度统计司) ∧ NotifyLeader(领导小组成员单位, 通知))))\",\n            \"∀a (EmergencyCenterLearns(应急指挥中心, a) → (NotifyUnits(应急指挥中心, [矿山应急救援基地, 救援装备储备单位, 救援专家, 救援技术支持机构], 通知) ∧ PrepareForEmergency([矿山应急救援基地, 救援装备储备单位, 救援专家, 救援技术支持机构])))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Center=“国家应急指挥中心” — 表示应急指挥中心为国家应急指挥中心\",\n            \"a=“铜矿事故” — 表示事故为铜矿事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (EmergencyCenterLearns(国家应急指挥中心, a) → (NotifyUnits(国家应急指挥中心, [矿山应急救援基地, 救援装备储备单位, 救援专家, 救援技术支持机构], 通知) ∧ PrepareForEmergency([矿山应急救援基地, 救援装备储备单位, 救援专家, 救援技术支持机构])))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"m=“矿山A” — 表示矿山A发生事故\",\n            \"Staff=“矿山A员工” — 表示矿山A的现场员工\",\n            \"Manager=“矿山A负责人” — 表示矿山A的负责人\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀m (Accident(矿山A) → (SelfRescue(矿山A员工) ∧ Report(矿山A员工, 矿山A负责人)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“矿山B” — 表示矿山B发生事故\",\n            \"Government=“当地人民政府” — 表示矿山B所在地的人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀m (Accident(矿山B) ∧ Report(矿山B员工, 矿山B负责人) → OrganizeRescue(矿山B负责人) ∧ ReportAccurately(矿山B负责人, 当地人民政府))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“省人民政府” — 表示省人民政府\",\n            \"NextLevel=“国务院” — 表示省人民政府的上一级政府，即国务院\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g (ReportAccurately(矿山C负责人, 省人民政府) → ReportUpwards(省人民政府, 国务院))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“矿山D” — 表示矿山D发生事故\",\n            \"调度统计司=“安全监管总局调度统计司” — 表示安全监管总局调度统计司\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (Accident(矿山D) → (ReportUpwards(矿山D, NextLevel) ∧ (ReceiveReport(安全监管总局调度统计司, 报告) ∧ OnDuty(安全监管总局调度统计司))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“重大矿山事故E” — 表示重大矿山事故E\",\n            \"Leader=“安全监管总局分管领导” — 表示安全监管总局分管领导\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (ReceiveReport(安全监管总局调度统计司, 重大矿山事故E) ∧ MajorAccident(重大矿山事故E) → (ReportToLeader(安全监管总局调度统计司, 安全监管总局分管领导) ∧ NotifyEmergencyCenter(安全监管总局调度统计司)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“特别重大矿山事故F” — 表示特别重大矿山事故F\",\n            \"Director=“安全总局局长” — 表示安全总局局长\",\n            \"办公厅=“安全监管总局办公厅” — 表示安全监管总局办公厅\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (ReceiveReport(安全监管总局调度统计司, 特别重大矿山事故F) ∧ ExtraordinaryMajorAccident(特别重大矿山事故F) → (ReportToLeader(安全监管总局调度统计司, 安全总局局长) ∧ NotifyEmergencyCenter(安全监管总局调度统计司) ∧ ReportToStateCouncil(安全监管总局办公厅)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“矿山坍塌事故” — 表示事故为矿山坍塌事故\",\n            \"g=“市级政府” — 表示政府为市级政府\",\n            \"Level=Ⅳ级 — 表示事故等级为一般事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀g (Accident(矿山坍塌事故) → (ActivatePlan(市级政府, Plan, Ⅳ级) ∧ Report(市级政府, 矿山坍塌事故)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“化学品泄漏事故” — 表示事故为化学品泄漏事故\",\n            \"g=“省级人民政府” — 表示政府为省级人民政府\",\n            \"Level=Ⅰ级 — 表示事故等级为特别重大事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (AccidentLevel(化学品泄漏事故, Ⅰ级) → (ActivatePlan(省级人民政府, Plan, Ⅰ) ∧ ActivatePlan(省级人民政府, Plan, Ⅱ) ∧ ActivatePlan(省级人民政府, Plan, Ⅲ) ∧ ActivatePlan(省级人民政府, Plan, Ⅳ)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“矿井火灾事故” — 表示事故为矿井火灾事故\",\n            \"g=“省级人民政府” — 表示政府为省级人民政府\",\n            \"Level=Ⅱ级 — 表示事故等级为重大事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g ∀a (AccidentLevel(矿井火灾事故, Ⅱ级) → EmergencyResponse(省级人民政府, Ⅱ))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“县级政府” — 表示政府为县级政府\",\n            \"a=“矿井瓦斯爆炸事故” — 表示事故为矿井瓦斯爆炸事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g ∀a (BeyondCapacity(县级政府, 矿井瓦斯爆炸事故) → RequestRescue(县级政府, HigherGovernment))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“2024-04-01事故” — 表示2024年4月1日发生的II级矿山事故\",\n            \"Government=“省级人民政府” — 表示省级人民政府\",\n            \"Statistics=“调度统计司” — 表示调度统计司\",\n            \"Leader=“领导小组组长” — 表示领导小组组长\",\n            \"Units=“有关成员单位” — 表示有关成员单位\",\n            \"CommandCenter=“应急指挥中心” — 表示应急指挥中心\",\n            \"Personnel=“矿山应急救援专家组” — 表示矿山应急救援专家组\",\n            \"Scene=“事故矿山” — 表示事故矿山\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g (发生II级矿山事故(“2024-04-01事故”) → (ActivateEmergencyPlan(“省级人民政府”) ∧ OrganizeRescue(“省级人民政府”)))\",\n            \"∀g (发生II级矿山事故(“2024-04-01事故”) → (ReportAccident(“2024-04-01事故”, “领导小组组长”, “有关成员单位”) ∧ LeaderArrival(“领导小组组长”) ∧ ConveyGuidance(“领导小组组长”, “2024-04-01事故”)))\",\n            \"∀g (发生II级矿山事故(“2024-04-01事故”) → (MonitorSituation(“应急指挥中心”) ∧ ReportSituation(“应急指挥中心”, “领导小组组长”)))\",\n            \"∀g (发生II级矿山事故(“2024-04-01事故”) → (NotifyPrepare(“应急指挥中心”, “有关单位”)))\",\n            \"∀g (发生II级矿山事故(“2024-04-01事故”) → (GoToScene(“矿山应急救援专家组”, “事故矿山”) ∧ GuideRescue(“矿山应急救援专家组”, “事故矿山”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“2024-05-15事故” — 表示2024年5月15日发生的II级矿山事故\",\n            \"Government=“省级人民政府” — 表示省级人民政府\",\n            \"Statistics=“调度统计司” — 表示调度统计司\",\n            \"Leader=“领导小组组长” — 表示领导小组组长\",\n            \"Units=“有关成员单位” — 表示有关成员单位\",\n            \"CommandCenter=“应急指挥中心” — 表示应急指挥中心\",\n            \"Personnel=“国家级矿山救援基地” — 表示国家级矿山救援基地\",\n            \"Scene=“事故矿山” — 表示事故矿山\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g (发生II级矿山事故(“2024-05-15事故”) → (ActivateEmergencyPlan(“省级人民政府”) ∧ OrganizeRescue(“省级人民政府”)))\",\n            \"∀g (发生II级矿山事故(“2024-05-15事故”) → (ReportAccident(“2024-05-15事故”, “领导小组组长”, “有关成员单位”) ∧ LeaderArrival(“领导小组组长”) ∧ ConveyGuidance(“领导小组组长”, “2024-05-15事故”)))\",\n            \"∀g (发生II级矿山事故(“2024-05-15事故”) → (MonitorSituation(“应急指挥中心”) ∧ ReportSituation(“应急指挥中心”, “领导小组组长”)))\",\n            \"∀g (发生II级矿山事故(“2024-05-15事故”) → (NotifyPrepare(“应急指挥中心”, “有关单位”)))\",\n            \"∀g (发生II级矿山事故(“2024-05-15事故”) → (GoToScene(“国家级矿山救援基地”, “事故矿山”) ∧ GuideRescue(“国家级矿山救援基地”, “事故矿山”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“矿区A” — 表示矿山事故场景在矿区A\",\n            \"g=“当地人民政府” — 表示当地人民政府负责人\",\n            \"d=“有关部门” — 表示有关部门\",\n            \"e=“矿山企业” — 表示矿山企业有关人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (MiningAccident(矿区A) → ∃g ∃d ∃e EmergencyCommand(当地人民政府, 有关部门, 矿山企业) ∧ LeadCommand(当地人民政府, 矿区A))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“矿山企业X” — 表示矿山企业X\",\n            \"l=“企业负责人Y” — 表示企业负责人Y\",\n            \"t=“矿山救护队Z” — 表示矿山救护队Z\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e ∃l ∃t (FormRescueTeam(矿山企业X, 企业负责人Y, 矿山救护队Z) ∧ ActAsLeader(企业负责人Y, 矿山救护队Z))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“矿区B” — 表示矿山事故场景在矿区B\",\n            \"g=“当地人民政府B” — 表示当地人民政府B负责人\",\n            \"d=“有关部门B” — 表示有关部门B\",\n            \"e=“矿山企业B” — 表示矿山企业B有关人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (MiningAccident(矿区B) → ∃g ∃d ∃e EmergencyCommand(当地人民政府B, 有关部门B, 矿山企业B) ∧ LeadCommand(当地人民政府B, 矿区B))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“矿山企业Y” — 表示矿山企业Y\",\n            \"l=“企业负责人Z” — 表示企业负责人Z\",\n            \"t=“矿山救护队W” — 表示矿山救护队W\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e ∃l ∃t (FormRescueTeam(矿山企业Y, 企业负责人Z, 矿山救护队W) ∧ ActAsLeader(企业负责人Z, 矿山救护队W))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“煤矿事故” — 表示特别重大事故为煤矿事故\",\n            \"r=“煤矿应急救援” — 表示应急救援任务为煤矿应急救援\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀r (特别重大事故(“煤矿事故”) → (GuideCoordinate(安全监管总局, “煤矿应急救援”) ∧ MobilizeRescueForces(国家级矿山救援基地, 国家矿山应急救援资源) ∧ CoordinateMedicalForces(矿山医疗救护中心, 医疗设备) ∧ SendWorkGroup(安全监管总局, 现场) ∧ OrganizeExpertGroup(安全监管总局, 技术支持) ∧ ReportProgress(安全监管总局, “煤矿事故”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“化工厂爆炸” — 表示特别重大事故为化工厂爆炸\",\n            \"r=“化工厂应急救援” — 表示应急救援任务为化工厂应急救援\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀r (特别重大事故(“化工厂爆炸”) → (GuideCoordinate(安全监管总局, “化工厂应急救援”) ∧ MobilizeRescueForces(国家级矿山救援基地, 国家矿山应急救援资源) ∧ CoordinateMedicalForces(矿山医疗救护中心, 医疗设备) ∧ SendWorkGroup(安全监管总局, 现场) ∧ OrganizeExpertGroup(安全监管总局, 技术支持) ∧ ReportProgress(安全监管总局, “化工厂爆炸”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“地铁塌方” — 表示特别重大事故为地铁塌方\",\n            \"r=“地铁应急救援” — 表示应急救援任务为地铁应急救援\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀r (特别重大事故(“地铁塌方”) → (GuideCoordinate(安全监管总局, “地铁应急救援”) ∧ MobilizeRescueForces(国家级矿山救援基地, 国家矿山应急救援资源) ∧ CoordinateMedicalForces(矿山医疗救护中心, 医疗设备) ∧ SendWorkGroup(安全监管总局, 现场) ∧ OrganizeExpertGroup(安全监管总局, 技术支持) ∧ ReportProgress(安全监管总局, “地铁塌方”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“森林火灾” — 表示特别重大事故为森林火灾\",\n            \"r=“森林火灾应急救援” — 表示应急救援任务为森林火灾应急救援\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀r (特别重大事故(“森林火灾”) → (GuideCoordinate(安全监管总局, “森林火灾应急救援”) ∧ MobilizeRescueForces(国家级矿山救援基地, 国家矿山应急救援资源) ∧ CoordinateMedicalForces(矿山医疗救护中心, 医疗设备) ∧ SendWorkGroup(安全监管总局, 现场) ∧ OrganizeExpertGroup(安全监管总局, 技术支持) ∧ ReportProgress(安全监管总局, “森林火灾”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“矿山救援行动” — 表示正在进行的抢险救灾行动为矿山救援行动\",\n            \"p=“李雷” — 表示救援人员为李雷\",\n            \"Type=“专业” — 表示救援人员李雷是专业救援人员\",\n            \"Type=“辅助” — 表示救援人员是辅助救援人员\",\n            \"Nature=“瓦斯爆炸” — 表示矿山事故的性质为瓦斯爆炸\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r ∀p (RescueOperation(矿山救援行动) ∧ RescuePersonType(p, 专业) → (MineAccident(专业, 瓦斯爆炸) → TakeSafetyMeasures(李雷)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“矿山救援行动” — 表示正在进行的抢险救灾行动为矿山救援行动\",\n            \"Team=“矿山救护队” — 表示专业矿山救护队为矿山救护队\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (MineAccident(井工, 矿山) → ProfessionalRescueTeam(矿山救护队) ∧ ControlPersonnelEntry(灾区))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“王强” — 表示应急救援工作人员为王强\",\n            \"Area=“事故救援区域” — 表示事故救援区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (EmergencyRescueWork(王强, 事故救援区域) → WearSafetyEquipment(王强))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“赵敏” — 表示应急救援工作人员为赵敏\",\n            \"Area=“事故救援区域” — 表示事故救援区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (EmergencyRescueWork(赵敏, 事故救援区域) → MonitorGasWindTemperature(事故救援区域))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Organization=“安全监管总局” — 表示安全监管总局是信息的指定来源和负责对外发布工作的组织\"\n        ],\n        \"instance_logicexpression\": [\n            \"DesignatedSource(安全监管总局) ∧ ResponsibleForRelease(安全监管总局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“国务院新闻办” — 国务院新闻办派员参加事故现场应急救援指挥部工作\",\n            \"Scene=“矿山事故现场” — 表示事故现场为矿山事故现场\",\n            \"Task=“矿山事故灾难报道” — 表示任务为矿山事故灾难的对外报道工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"ParticipateInCommand(国务院新闻办, 矿山事故现场) → GuideAndCoordinate(国务院新闻办, 矿山事故灾难报道)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“安全监管总局” — 表示安全监管总局是信息的指定来源和负责对外发布工作的组织\",\n            \"Scene=“煤矿事故现场” — 表示事故现场为煤矿事故现场\"\n        ],\n        \"instance_logicexpression\": [\n            \"DesignatedSource(安全监管总局) ∧ ResponsibleForRelease(安全监管总局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“国务院新闻办” — 国务院新闻办派员参加事故现场应急救援指挥部工作\",\n            \"Scene=“铁矿事故现场” — 表示事故现场为铁矿事故现场\",\n            \"Task=“铁矿事故灾难报道” — 表示任务为铁矿事故灾难的对外报道工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"ParticipateInCommand(国务院新闻办, 铁矿事故现场) → GuideAndCoordinate(国务院新闻办, 铁矿事故灾难报道)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“化工厂爆炸事故现场” — 表示事故现场为化工厂爆炸事故现场\",\n            \"CommandCenter=“化工厂应急救援指挥部” — 表示现场应急救援指挥部\",\n            \"Authorities=“江苏省人民政府” — 表示省（区、市）人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (Controlled(“化工厂爆炸事故现场”) ∧ Compliant(Environment) ∧ EliminateRisks(“化工厂爆炸事故现场”) → (Confirmed(“化工厂应急救援指挥部”) ∧ Approved(“化工厂应急救援指挥部”) → (EmergencyResponseEnded(“化工厂爆炸事故现场”) ∧ TeamWithdrawn(“化工厂爆炸事故现场”)))\",\n            \"∀s (AftercareCompleted(“化工厂爆炸事故现场”) → (SummaryReportCompleted(“化工厂应急救援指挥部”) ∧ ReportSubmitted(“化工厂应急救援指挥部”, “江苏省人民政府”)))\",\n            \"∀a (ReportSubmitted(“化工厂应急救援指挥部”, a) → DeclaredEmergencyEnded(a))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“煤矿塌方事故现场” — 表示事故现场为煤矿塌方事故现场\",\n            \"CommandCenter=“煤矿应急救援指挥部” — 表示现场应急救援指挥部\",\n            \"Authorities=“山西省人民政府” — 表示省（区、市）人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (Controlled(“煤矿塌方事故现场”) ∧ Compliant(Environment) ∧ EliminateRisks(“煤矿塌方事故现场”) → (Confirmed(“煤矿应急救援指挥部”) ∧ Approved(“煤矿应急救援指挥部”) → (EmergencyResponseEnded(“煤矿塌方事故现场”) ∧ TeamWithdrawn(“煤矿塌方事故现场”)))\",\n            \"∀s (AftercareCompleted(“煤矿塌方事故现场”) → (SummaryReportCompleted(“煤矿应急救援指挥部”) ∧ ReportSubmitted(“煤矿应急救援指挥部”, “山西省人民政府”)))\",\n            \"∀a (ReportSubmitted(“煤矿应急救援指挥部”, a) → DeclaredEmergencyEnded(a))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“化学品泄漏事故现场” — 表示事故现场为化学品泄漏事故现场\",\n            \"CommandCenter=“化学品泄漏应急救援指挥部” — 表示现场应急救援指挥部\",\n            \"Authorities=“广东省人民政府” — 表示省（区、市）人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (Controlled(“化学品泄漏事故现场”) ∧ Compliant(Environment) ∧ EliminateRisks(“化学品泄漏事故现场”) → (Confirmed(“化学品泄漏应急救援指挥部”) ∧ Approved(“化学品泄漏应急救援指挥部”) → (EmergencyResponseEnded(“化学品泄漏事故现场”) ∧ TeamWithdrawn(“化学品泄漏事故现场”)))\",\n            \"∀s (AftercareCompleted(“化学品泄漏事故现场”) → (SummaryReportCompleted(“化学品泄漏应急救援指挥部”) ∧ ReportSubmitted(“化学品泄漏应急救援指挥部”, “广东省人民政府”)))\",\n            \"∀a (ReportSubmitted(“化学品泄漏应急救援指挥部”, a) → DeclaredEmergencyEnded(a))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“地震灾害事故现场” — 表示事故现场为地震灾害事故现场\",\n            \"CommandCenter=“地震灾害应急救援指挥部” — 表示现场应急救援指挥部\",\n            \"Authorities=“四川省人民政府” — 表示省（区、市）人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (Controlled(“地震灾害事故现场”) ∧ Compliant(Environment) ∧ EliminateRisks(“地震灾害事故现场”) → (Confirmed(“地震灾害应急救援指挥部”) ∧ Approved(“地震灾害应急救援指挥部”) → (EmergencyResponseEnded(“地震灾害事故现场”) ∧ TeamWithdrawn(“地震灾害事故现场”)))\",\n            \"∀s (AftercareCompleted(“地震灾害事故现场”) → (SummaryReportCompleted(“地震灾害应急救援指挥部”) ∧ ReportSubmitted(“地震灾害应急救援指挥部”, “四川省人民政府”)))\",\n            \"∀a (ReportSubmitted(“地震灾害应急救援指挥部”, a) → DeclaredEmergencyEnded(a))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“省级政府” — 表示省级人民政府负责组织善后处置工作\",\n            \"Task=“遇难人员亲属安置” — 表示善后处置工作包括遇难人员亲属的安置\",\n            \"Task=“补偿” — 表示善后处置工作包括补偿\",\n            \"Task=“支付救援费用” — 表示善后处置工作包括支付救援费用\",\n            \"Task=“灾后重建” — 表示善后处置工作包括灾后重建\",\n            \"Task=“污染物处理” — 表示善后处置工作包括污染物处理\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g (Government(省级政府) → (ResponsibleForOrganization(省级政府, FamilySettlement) ∧ ResponsibleForOrganization(省级政府, Compensation) ∧ ResponsibleForOrganization(省级政府, PayRescueCosts) ∧ ResponsibleForOrganization(省级政府, DisasterReconstruction) ∧ ResponsibleForOrganization(省级政府, PollutantHandling) ∧ RestoreOrder(省级政府) ∧ EliminateAccidentConsequences(省级政府) ∧ ComfortAffectedPersons(省级政府) ∧ EnsureSocialStability(省级政府)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“应急救援部门” — 表示应急救援部门负责核对救援人数和清点救援装备\",\n            \"d=“财务部门” — 表示财务部门负责核算救灾费用和整理救援记录\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Department(应急救援部门) → (CheckRescueNumbers(应急救援部门) ∧ InventoryRescueEquipment(应急救援部门)))\",\n            \"∀d (Department(财务部门) → (CalculateDisasterReliefCosts(财务部门) ∧ OrganizeRescueRecords(财务部门) ∧ WriteDisasterReliefReport(财务部门)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“地方政府” — 表示地方政府负责分析事故原因和强化安全管理\",\n            \"Enterprise=“矿山企业” — 表示矿山企业应吸取事故教训，加强安全管理\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g (Government(地方政府) → (AnalyzeAccidentCause(地方政府) ∧ StrengthenSafetyManagement(地方政府) ∧ IncreaseSafetyInvestment(地方政府) ∧ ImplementSafetyResponsibilitySystem(地方政府) ∧ EstablishSafetyMeasures(地方政府) ∧ PreventAccidents(地方政府)))\",\n            \"∀e (Enterprise(矿山企业) → (StrengthenSafetyManagement(矿山企业) ∧ IncreaseSafetyInvestment(矿山企业) ∧ ImplementSafetyResponsibilitySystem(矿山企业) ∧ EstablishSafetyMeasures(矿山企业) ∧ PreventAccidents(矿山企业)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"D=“地震” — 表示事故灾难为地震\",\n            \"InsuranceCompany=“平安保险” — 表示保险机构为平安保险\",\n            \"Employee=“李华” — 表示派出的员工为李华\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀D (Disaster(地震) → ∃i ∃e (SendEmployee(平安保险, 李华) ∧ AcceptInsurance(平安保险, 李华, 地震) ∧ PayCompensation(平安保险, 李华, 地震)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"D=“洪水” — 表示事故灾难为洪水\",\n            \"InsuranceCompany=“太平洋保险” — 表示保险机构为太平洋保险\",\n            \"Employee=“张伟” — 表示派出的员工为张伟\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀D (Disaster(洪水) → ∃i ∃e (SendEmployee(太平洋保险, 张伟) ∧ AcceptInsurance(太平洋保险, 张伟, 洪水) ∧ PayCompensation(太平洋保险, 张伟, 洪水)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"D=“火灾” — 表示事故灾难为火灾\",\n            \"InsuranceCompany=“中国人寿” — 表示保险机构为中国人寿\",\n            \"Employee=“王芳” — 表示派出的员工为王芳\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀D (Disaster(火灾) → ∃i ∃e (SendEmployee(中国人寿, 王芳) ∧ AcceptInsurance(中国人寿, 王芳, 火灾) ∧ PayCompensation(中国人寿, 王芳, 火灾)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"D=“台风” — 表示事故灾难为台风\",\n            \"InsuranceCompany=“新华保险” — 表示保险机构为新华保险\",\n            \"Employee=“赵敏” — 表示派出的员工为赵敏\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀D (Disaster(台风) → ∃i ∃e (SendEmployee(新华保险, 赵敏) ∧ AcceptInsurance(新华保险, 赵敏, 台风) ∧ PayCompensation(新华保险, 赵敏, 台风)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"EmergencyResponseEnded() — 表示应急响应已经结束\",\n            \"Government=“某市地方人民政府” — 表示负责的地方政府\",\n            \"Department1=“某市安全生产监督管理部门” — 表示负责收集资料和组织评估的部门之一\",\n            \"Department2=“某市煤矿安全监察机构” — 表示负责收集资料和组织评估的部门之二\",\n            \"Data=“应急救援工作记录、方案、文件等” — 表示需要收集的资料\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseEnded() → (AnalyzeAccidentCause(某市地方人民政府) ∧ DevelopPreventiveMeasures(某市地方人民政府) ∧ ImplementSafetyResponsibilitySystem(某市地方人民政府))\",\n            \"(CollectData(某市安全生产监督管理部门, 应急救援工作记录、方案、文件等) ∨ CollectData(某市煤矿安全监察机构, 应急救援工作记录、方案、文件等)) ∧ OrganizeExpertAssessment(某市安全生产监督管理部门) ∨ OrganizeExpertAssessment(某市煤矿安全监察机构) ∧ ProposeImprovements(某市安全生产监督管理部门) ∨ ProposeImprovements(某市煤矿安全监察机构) ∧ SubmitAssessmentReport(某市安全生产监督管理部门, 1个月) ∨ SubmitAssessmentReport(某市煤矿安全监察机构, 1个月)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"EmergencyResponseEnded() — 表示应急响应已经结束\",\n            \"Government=“某省地方人民政府” — 表示负责的地方政府\",\n            \"Department3=“某省应急救援指挥机构” — 表示负责收集资料和组织评估的部门之三\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseEnded() → (AnalyzeAccidentCause(某省地方人民政府) ∧ DevelopPreventiveMeasures(某省地方人民政府) ∧ ImplementSafetyResponsibilitySystem(某省地方人民政府))\",\n            \"CollectData(某省应急救援指挥机构, 应急救援工作记录、方案、文件等) ∧ OrganizeExpertAssessment(某省应急救援指挥机构) ∧ ProposeImprovements(某省应急救援指挥机构) ∧ SubmitAssessmentReport(某省应急救援指挥机构, 1个月)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“张三” — 张三是有关人员\",\n            \"u=“应急响应中心” — 应急响应中心是有关单位\",\n            \"Means=“有线电话” — 使用的通信手段是有线电话\"\n        ],\n        \"instance_logicexpression\": [\n            \"ContactValid(张三, 应急响应中心) → (CommunicationMeans(有线电话) ∨ CommunicationMeans(移动电话) ∨ CommunicationMeans(卫星) ∨ CommunicationMeans(微波))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“电力调度中心” — 电力调度中心是有关单位\",\n            \"t=“22” — 表示时间是晚上10点\"\n        ],\n        \"instance_logicexpression\": [\n            \"PhoneManned(电力调度中心) → ∃p (值守(p, 电力调度中心, 22))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u1=“消防局” — 消防局是有关单位之一\",\n            \"u2=“公安局” — 公安局是有关单位之二\"\n        ],\n        \"instance_logicexpression\": [\n            \"CommunicationClear(消防局, 公安局) → (ContactValid(消防局, 公安局) ∧ PhoneManned(消防局) ∧ PhoneManned(公安局))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“李四” — 李四是有关人员\",\n            \"u=“气象局” — 气象局是有关单位\",\n            \"Means=“移动电话” — 使用的通信手段是移动电话\"\n        ],\n        \"instance_logicexpression\": [\n            \"ContactValid(李四, 气象局) → (CommunicationMeans(有线电话) ∨ CommunicationMeans(移动电话) ∨ CommunicationMeans(卫星) ∨ CommunicationMeans(微波))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“交通管理局” — 交通管理局是有关单位\",\n            \"t=“3” — 表示时间是凌晨3点\"\n        ],\n        \"instance_logicexpression\": [\n            \"PhoneManned(交通管理局) → ∃p (值守(p, 交通管理局, 3))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"A=“安全监管总局” — 表示安全监管总局\",\n            \"B=“某省人民政府” — 表示某个省的人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishCommunicationSystem(安全监管总局, 某省人民政府)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“安全监管总局” — 表示安全监管总局\",\n            \"B=“某省级安全生产监督管理部门” — 表示某个省的安全生产监督管理部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishCommunicationSystem(安全监管总局, 某省级安全生产监督管理部门)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“安全监管总局” — 表示安全监管总局\",\n            \"B=“某市煤矿安全监察机构” — 表示某个市的煤矿安全监察机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishCommunicationSystem(安全监管总局, 某市煤矿安全监察机构)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“安全监管总局” — 表示安全监管总局\",\n            \"B=“某省矿山救援指挥中心” — 表示某个省的矿山救援指挥中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishCommunicationSystem(安全监管总局, 某省矿山救援指挥中心)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“安全监管总局” — 表示安全监管总局\",\n            \"B=“某国家级矿山救援基地” — 表示某个国家级矿山救援基地\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishCommunicationSystem(安全监管总局, 某国家级矿山救援基地)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“安全监管总局” — 表示安全监管总局\",\n            \"B=“某国家矿山救援物资储备单位” — 表示某个国家矿山救援物资储备单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishCommunicationSystem(安全监管总局, 某国家矿山救援物资储备单位)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“安全监管总局” — 表示安全监管总局\",\n            \"B=“某矿山医疗救护中心” — 表示某个矿山医疗救护中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishCommunicationSystem(安全监管总局, 某矿山医疗救护中心)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Center=“中国金属非金属矿山尾矿库安全技术中心” — 表示中国金属非金属矿山尾矿库安全技术中心\",\n            \"System=“安全技术信息系统” — 表示安全技术信息系统\"\n        ],\n        \"instance_logicexpression\": [\n            \"RelyingOnSystem(中国金属非金属矿山尾矿库安全技术中心, 安全技术信息系统) → MasterSituation(中国金属非金属矿山尾矿库安全技术中心, 全国尾矿库)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“应急指挥中心” — 表示应急指挥中心\",\n            \"d=“应急救援机构通信联系数据库” — 表示应急救援机构的通信联系数据库\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀d (DatabaseType(“应急救援机构通信联系数据库”) → (EstablishDatabase(“应急指挥中心”, “应急救援机构通信联系数据库”) ∧ MaintainDatabase(“应急指挥中心”, “应急救援机构通信联系数据库”) ∧ UpdateDatabase(“应急指挥中心”, “应急救援机构通信联系数据库”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“应急指挥中心” — 表示应急指挥中心\",\n            \"d=“省级应急救援指挥机构通信联系数据库” — 表示省级应急救援指挥机构的通信联系数据库\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀d (DatabaseType(“省级应急救援指挥机构通信联系数据库”) → (EstablishDatabase(“应急指挥中心”, “省级应急救援指挥机构通信联系数据库”) ∧ MaintainDatabase(“应急指挥中心”, “省级应急救援指挥机构通信联系数据库”) ∧ UpdateDatabase(“应急指挥中心”, “省级应急救援指挥机构通信联系数据库”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“应急指挥中心” — 表示应急指挥中心\",\n            \"s=“矿山应急救援指挥系统” — 表示矿山应急救援指挥系统\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀s (SystemType(“矿山应急救援指挥系统”) → (EstablishSystem(“应急指挥中心”, “矿山应急救援指挥系统”) ∧ MaintainSystem(“应急指挥中心”, “矿山应急救援指挥系统”) ∧ UpdateSystem(“应急指挥中心”, “矿山应急救援指挥系统”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“应急指挥中心” — 表示应急指挥中心\",\n            \"d=“国家级矿山救援基地通信联系数据库” — 表示国家级矿山救援基地的通信联系数据库\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀d (DatabaseType(“国家级矿山救援基地通信联系数据库”) → (EstablishDatabase(“应急指挥中心”, “国家级矿山救援基地通信联系数据库”) ∧ MaintainDatabase(“应急指挥中心”, “国家级矿山救援基地通信联系数据库”) ∧ UpdateDatabase(“应急指挥中心”, “国家级矿山救援基地通信联系数据库”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“应急指挥中心” — 表示应急指挥中心\",\n            \"s=“决策支持系统” — 表示决策支持系统\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀s (SystemType(“决策支持系统”) → (EstablishSystem(“应急指挥中心”, “决策支持系统”) ∧ MaintainSystem(“应急指挥中心”, “决策支持系统”) ∧ UpdateSystem(“应急指挥中心”, “决策支持系统”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“省级安全监督管理部门” — 表示省级安全监督管理部门\",\n            \"r=“某省” — 表示负责的区域为某省\",\n            \"p=“矿山安全监察人员” — 表示需要即时联系的人员为矿山安全监察人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r ∀d (ResponsibleForCommunication(省级安全监督管理部门, 某省) → (InstantContact(省级安全监督管理部门, 矿山安全监察人员) ∧ InformationFlow(省级安全监督管理部门)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“省级煤矿安全监察机构” — 表示省级煤矿安全监察机构\",\n            \"r=“某自治区” — 表示负责的区域为某自治区\",\n            \"p=“煤矿安全负责人” — 表示需要即时联系的人员为煤矿安全负责人\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r ∀d (ResponsibleForCommunication(省级煤矿安全监察机构, 某自治区) → (InstantContact(省级煤矿安全监察机构, 煤矿安全负责人) ∧ InformationFlow(省级煤矿安全监察机构)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“某矿山企业” — 表示负责保障通信畅通的企业为某矿山企业\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EnsureCommunication(某矿山企业) → (CommunicationFlow(某矿山企业) ∧ NetworkFlow(某矿山企业)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“某市煤矿公司” — 表示负责保障通信畅通的公司为某市煤矿公司\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EnsureCommunication(某市煤矿公司) → (CommunicationFlow(某市煤矿公司) ∧ NetworkFlow(某市煤矿公司)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“国家级矿山救援基地A” — 表示国家级矿山救援基地A储备了重点救援装备\",\n            \"煤矿(o) — 表示国家级矿山救援基地A是煤矿\"\n        ],\n        \"instance_logicexpression\": [\n            \"国家级矿山救援基地(国家级矿山救援基地A) ∧ 煤矿(国家级矿山救援基地A) → ReserveKeyRescueEquipment(国家级矿山救援基地A)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家矿山排水设备储备单位B” — 表示国家矿山排水设备储备单位B储备了排水设备\"\n        ],\n        \"instance_logicexpression\": [\n            \"国家矿山排水设备储备单位(国家矿山排水设备储备单位B) → ReserveDewateringEquipment(国家矿山排水设备储备单位B)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“深孔钻机装备储备单位C” — 表示深孔钻机装备储备单位C储备了深孔钻机装备\"\n        ],\n        \"instance_logicexpression\": [\n            \"深孔钻机装备储备单位(深孔钻机装备储备单位C) → ReserveDeepHoleDrillingEquipment(深孔钻机装备储备单位C)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“矿山企业D” — 表示矿山企业D负责储备必要的救灾装备和物资\"\n        ],\n        \"instance_logicexpression\": [\n            \"矿山企业(矿山企业D) → ResponsibleForRescueEquipmentAndMaterials(矿山企业D)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家级矿山救援基地E” — 表示国家级矿山救援基地E储备了重点救援装备\",\n            \"煤矿(o) — 表示国家级矿山救援基地E是煤矿\"\n        ],\n        \"instance_logicexpression\": [\n            \"国家级矿山救援基地(国家级矿山救援基地E) ∧ 煤矿(国家级矿山救援基地E) → ReserveKeyRescueEquipment(国家级矿山救援基地E)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“矿山企业F” — 表示矿山企业F负责储备必要的救灾装备和物资\"\n        ],\n        \"instance_logicexpression\": [\n            \"矿山企业(矿山企业F) → ResponsibleForRescueEquipmentAndMaterials(矿山企业F)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“瓦斯爆炸” — 表示瓦斯爆炸类型的矿山事故灾难\",\n            \"t=“无人机救援技术” — 表示无人机救援技术的开发应用\",\n            \"r=“无人机” — 表示无人机这种救援资源\",\n            \"e=“生命探测仪” — 表示生命探测仪这种先进救灾装备\",\n            \"f=“临时避难所” — 表示临时避难所这种救援设施\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (MiningAccident(d) → EmergencyNeeds(d)) → MiningAccident(“瓦斯爆炸”) → EmergencyNeeds(“瓦斯爆炸”)\",\n            \"∀t (NewTechDevelopment(t) → EstablishReserve(AdvancedRescueEquipment(t)) ∧ EstablishReserve(Facility(t))) → NewTechDevelopment(“无人机救援技术”) → EstablishReserve(“无人机”) ∧ EstablishReserve(“临时避难所”)\",\n            \"∀r (EstablishReserve(r) → EnhanceCapability(ComplexMiningAccident)) → EstablishReserve(“无人机”) → EnhanceCapability(ComplexMiningAccident) ∧ EstablishReserve(“临时避难所”) → EnhanceCapability(ComplexMiningAccident)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“矿井坍塌” — 表示矿井坍塌类型的矿山事故灾难\",\n            \"t=“机器人救援技术” — 表示机器人救援技术的开发应用\",\n            \"r=“机器人” — 表示机器人这种救援资源\",\n            \"e=“多功能救援车” — 表示多功能救援车这种先进救灾装备\",\n            \"f=“移动医疗站” — 表示移动医疗站这种救援设施\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (MiningAccident(d) → EmergencyNeeds(d)) → MiningAccident(“矿井坍塌”) → EmergencyNeeds(“矿井坍塌”)\",\n            \"∀t (NewTechDevelopment(t) → EstablishReserve(AdvancedRescueEquipment(t)) ∧ EstablishReserve(Facility(t))) → NewTechDevelopment(“机器人救援技术”) → EstablishReserve(“机器人”) ∧ EstablishReserve(“移动医疗站”)\",\n            \"∀r (EstablishReserve(r) → EnhanceCapability(ComplexMiningAccident)) → EstablishReserve(“机器人”) → EnhanceCapability(ComplexMiningAccident) ∧ EstablishReserve(“移动医疗站”) → EnhanceCapability(ComplexMiningAccident)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“地震灾害” — 表示当前处于地震灾害的应急救援状态\",\n            \"d=“消防部门” — 表示被征用救援装备的部门为消防部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (EmergencyRescue(地震灾害) ∧ InsufficientResources(地震灾害) → ∃d (RequisitionEquipment(总局, 消防部门.Equipment) ∧ FullSupport(消防部门) ∧ ActiveCooperation(消防部门)))\",\n            \"∀e (RequisitionEquipment(总局, e) → CostSolved(当地政府, 事故单位))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“洪水灾害” — 表示当前处于洪水灾害的应急救援状态\",\n            \"d=“医疗部门” — 表示被征用救援装备的部门为医疗部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (EmergencyRescue(洪水灾害) ∧ InsufficientResources(洪水灾害) → ∃d (RequisitionEquipment(总局, 医疗部门.Equipment) ∧ FullSupport(医疗部门) ∧ ActiveCooperation(医疗部门)))\",\n            \"∀e (RequisitionEquipment(总局, e) → CostSolved(当地政府, 事故单位))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“森林火灾” — 表示当前处于森林火灾的应急救援状态\",\n            \"d=“林业部门” — 表示被征用救援装备的部门为林业部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (EmergencyRescue(森林火灾) ∧ InsufficientResources(森林火灾) → ∃d (RequisitionEquipment(总局, 林业部门.Equipment) ∧ FullSupport(林业部门) ∧ ActiveCooperation(林业部门)))\",\n            \"∀e (RequisitionEquipment(总局, e) → CostSolved(当地政府, 事故单位))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“化工厂爆炸” — 表示当前处于化工厂爆炸的应急救援状态\",\n            \"d=“环保部门” — 表示被征用救援装备的部门为环保部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (EmergencyRescue(化工厂爆炸) ∧ InsufficientResources(化工厂爆炸) → ∃d (RequisitionEquipment(总局, 环保部门.Equipment) ∧ FullSupport(环保部门) ∧ ActiveCooperation(环保部门)))\",\n            \"∀e (RequisitionEquipment(总局, e) → CostSolved(当地政府, 事故单位))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"应急指挥中心=“国家应急指挥中心” — 表示负责协调全国矿山应急救援工作的组织\",\n            \"矿山应急救援工作=“全国矿山应急救援工作” — 表示需要协调的活动\"\n        ],\n        \"instance_logicexpression\": [\n            \"ResponsibleForCoordination(国家应急指挥中心, 全国矿山应急救援工作) ∧ OrganizeManage(国家应急指挥中心, 救援队伍)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"省级矿山救援指挥中心=“河北省矿山救援指挥中心” — 表示负责组织、指导协调本行政区域矿山应急救援体系建设及矿山应急救援工作的组织\",\n            \"本行政区域矿山应急救援体系建设=“河北省矿山应急救援体系建设” — 表示需要组织的活动\"\n        ],\n        \"instance_logicexpression\": [\n            \"Organize(河北省矿山救援指挥中心, 河北省矿山应急救援体系建设) ∧ GuideCoordinate(河北省矿山救援指挥中心, 矿山应急救援工作)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“某市” — 表示有矿山企业的地方政府\",\n            \"矿山应急组织=“某市矿山应急组织” — 表示需要建立的组织\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g (有矿山企业(g) → Establish(某市, 某市矿山应急组织))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“某大型矿山企业” — 表示需要建立救援组织的矿山企业\",\n            \"救援组织=“某大型矿山企业救援组织” — 表示需要建立的救援组织\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (矿山企业(e) → EstablishRescueOrganization(e, 救援组织))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“某小型矿山企业” — 表示不具备单独建立专业救援组织的小型矿山企业\",\n            \"兼职救援组织=“某小型矿山企业兼职救援组织” — 表示需要建立的兼职救援组织\",\n            \"临近专业救援组织=“某临近专业救援组织” — 表示需要签订救援协议的专业救援组织\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (小型矿山企业(e) → (¬单独建立专业救援组织(e) → (EstablishRescueOrganization(e, 兼职救援组织) ∧ SignRescueAgreement(e, 临近专业救援组织)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"国家级矿山救援基地=“国家第一矿山救援基地” — 表示参加全国矿山重特大事故应急救援工作的组织\"\n        ],\n        \"instance_logicexpression\": [\n            \"Participate(国家第一矿山救援基地, 全国矿山重特大事故应急救援工作)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“河北省” — 表示需要建立省级矿山救援基地的省份\",\n            \"省级矿山救援基地=“河北省第一矿山救援基地” — 表示需要建立的省级矿山救援基地\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (省(p) → (1 ≤ 建立省级矿山救援基地数量(p) ∧ 建立省级矿山救援基地数量(p) ≤ 3) ∧ Participate(省级矿山救援基地, 矿山事故应急救援工作))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“张救援” — 表示矿山救援人员\",\n            \"所在单位=“某矿山企业” — 表示为矿山救援人员缴纳保险金的组织\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (矿山救援人员(r) → PayInsurance(某矿山企业, r))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“交通管理局” — 表示交通管理局对救援工作的支持\",\n            \"g=“地方政府” — 表示沿途有关地方人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (SupportRescue(交通管理局) → (ProvideTransportSupport(交通管理局) ∧ ∃g (ProvideTrafficSecuritySupport(地方政府))))\",\n            \"∀r ∀e ∀m (SupportRescue(交通管理局) → Transport(r, e, m))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"v=“矿山救援车1号” — 表示矿山救援和医疗救护车辆\",\n            \"v=“矿山救援车2号” — 表示矿山救援和医疗救护车辆\"\n        ],\n        \"instance_logicexpression\": [\n            \"RescueVehicle(矿山救援车1号) → EquipWithSirens(矿山救援车1号)\",\n            \"RescueVehicle(矿山救援车2号) → EquipWithSirens(矿山救援车2号)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“省级人民政府” — 表示省级人民政府\",\n            \"s=“事故现场” — 表示事故发生地\"\n        ],\n        \"instance_logicexpression\": [\n            \"TrafficControl(省级人民政府, 事故现场) ∧ OpenEmergencyChannel(省级人民政府)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"矿山医疗救护中心负责指导全国矿山事故伤员的急救工作\",\n            \"矿山医疗救护专家组为矿山事故应急救援提供医疗救护方面的技术支持\"\n        ],\n        \"instance_logicexpression\": [\n            \"Guide(矿山医疗救护中心, 急救工作) ∧ Support(矿山医疗救护专家组, 技术支持)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"河北省选择了石家庄第一人民医院作为省级矿山医疗救护中心\",\n            \"石家庄第一人民医院指导、参加矿山事故中危重伤员的救治工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"Select(河北省, 石家庄第一人民医院) → (Guide(河北省, 救治工作) ∧ Participate(石家庄第一人民医院, 救治工作))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"江苏省选择了南京医科大学附属医院作为省级矿山医疗救护中心\",\n            \"南京医科大学附属医院指导、参加矿山事故中危重伤员的救治工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"Select(江苏省, 南京医科大学附属医院) → (Guide(江苏省, 救治工作) ∧ Participate(南京医科大学附属医院, 救治工作))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"红星煤矿企业建立了矿山医疗救护站\",\n            \"红星煤矿企业负责企业矿山事故伤员的医疗急救和矿山救援队伍医疗救护知识专项培训工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"Establish(红星煤矿企业, 矿山医疗救护站) ∧ Responsible(红星煤矿企业, 医疗急救) ∧ Responsible(红星煤矿企业, 培训工作)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"蓝海矿业公司与当地人民医院签订了医疗救护协议\",\n            \"蓝海矿业公司负责企业矿山事故伤员的医疗急救和矿山救援队伍医疗救护知识专项培训工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"SignAgreement(蓝海矿业公司, 当地人民医院, 医疗救护协议) ∧ Responsible(蓝海矿业公司, 医疗急救) ∧ Responsible(蓝海矿业公司, 培训工作)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“江苏省人民政府” — 表示省级人民政府为江苏省人民政府\",\n            \"s=“南京市” — 表示事故现场在南京市\",\n            \"KeyArea=“市中心” — 表示重点地区为市中心\",\n            \"KeyPlace=“商业广场” — 表示重点场所为商业广场\",\n            \"KeyPeople=“游客” — 表示重点人群为游客\",\n            \"KeyEquipment=“应急物资” — 表示重要物资设备为应急物资\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀s (Accident(s) ∧ Government(g, Provincial) → (OrganizePublicSecurity(g, s) ∧ OrganizeSecurityManagement(g, s) ∧ StrengthenProtection(g, 市中心, 商业广场, 游客, 应急物资) ∧ MaintainOrder(g, s) ∧ EvacuateCrowd(g, s)))\",\n            \"∀g (Government(g, Provincial) → (MobilizePublic(g) ∧ ConductJointPrevention(g) ∧ AssistPublicSecurity(g)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“广东省人民政府” — 表示省级人民政府为广东省人民政府\",\n            \"s=“广州市” — 表示事故现场在广州市\",\n            \"KeyArea=“珠江新城” — 表示重点地区为珠江新城\",\n            \"KeyPlace=“博物馆” — 表示重点场所为博物馆\",\n            \"KeyPeople=“学生” — 表示重点人群为学生\",\n            \"KeyEquipment=“珍贵文物” — 表示重要物资设备为珍贵文物\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀s (Accident(s) ∧ Government(g, Provincial) → (OrganizePublicSecurity(g, s) ∧ OrganizeSecurityManagement(g, s) ∧ StrengthenProtection(g, 珠江新城, 博物馆, 学生, 珍贵文物) ∧ MaintainOrder(g, s) ∧ EvacuateCrowd(g, s)))\",\n            \"∀g (Government(g, Provincial) → (MobilizePublic(g) ∧ ConductJointPrevention(g) ∧ AssistPublicSecurity(g)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“浙江省人民政府” — 表示省级人民政府为浙江省人民政府\",\n            \"s=“杭州市” — 表示事故现场在杭州市\",\n            \"KeyArea=“西湖区” — 表示重点地区为西湖区\",\n            \"KeyPlace=“西湖” — 表示重点场所为西湖\",\n            \"KeyPeople=“居民” — 表示重点人群为居民\",\n            \"KeyEquipment=“救援车辆” — 表示重要物资设备为救援车辆\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀s (Accident(s) ∧ Government(g, Provincial) → (OrganizePublicSecurity(g, s) ∧ OrganizeSecurityManagement(g, s) ∧ StrengthenProtection(g, 西湖区, 西湖, 居民, 救援车辆) ∧ MaintainOrder(g, s) ∧ EvacuateCrowd(g, s)))\",\n            \"∀g (Government(g, Provincial) → (MobilizePublic(g) ∧ ConductJointPrevention(g) ∧ AssistPublicSecurity(g)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“四川省人民政府” — 表示省级人民政府为四川省人民政府\",\n            \"s=“成都市” — 表示事故现场在成都市\",\n            \"KeyArea=“高新区” — 表示重点地区为高新区\",\n            \"KeyPlace=“科技园区” — 表示重点场所为科技园区\",\n            \"KeyPeople=“科研人员” — 表示重点人群为科研人员\",\n            \"KeyEquipment=“实验设备” — 表示重要物资设备为实验设备\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀s (Accident(s) ∧ Government(g, Provincial) → (OrganizePublicSecurity(g, s) ∧ OrganizeSecurityManagement(g, s) ∧ StrengthenProtection(g, 高新区, 科技园区, 科研人员, 实验设备) ∧ MaintainOrder(g, s) ∧ EvacuateCrowd(g, s)))\",\n            \"∀g (Government(g, Provincial) → (MobilizePublic(g) ∧ ConductJointPrevention(g) ∧ AssistPublicSecurity(g)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“金山矿业” — 表示金山矿业是矿山企业\",\n            \"u=“金山矿业” — 表示金山矿业是事故责任单位\",\n            \"g=“当地人民政府” — 表示当地人民政府负责协调解决资金问题\",\n            \"r=“矿山事故灾难” — 表示发生了矿山事故灾难\",\n            \"n=“国家” — 表示国家负责解决矿山事故灾难所需资金\",\n            \"Regulation=《财政应急保障预案》 — 表示国家按照《财政应急保障预案》的规定解决资金问题\"\n        ],\n        \"instance_logicexpression\": [\n            \"矿山企业(金山矿业) → FundPreparation(金山矿业)\",\n            \"事故责任单位(金山矿业) → BearFunds(金山矿业)\",\n            \"事故责任单位(金山矿业) ∧ ¬BearFunds(金山矿业) → ∃g (当地人民政府(g) ∧ CoordinateSolution(g))\",\n            \"矿山事故灾难(矿山事故灾难) → ∃n (国家(n) ∧ RegulationSolution(n, 《财政应急保障预案》))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“银山矿业” — 表示银山矿业是矿山企业\",\n            \"u=“银山矿业” — 表示银山矿业是事故责任单位\",\n            \"g=“当地人民政府” — 表示当地人民政府负责协调解决资金问题\",\n            \"r=“矿山事故灾难” — 表示发生了矿山事故灾难\",\n            \"n=“国家” — 表示国家负责解决矿山事故灾难所需资金\",\n            \"Regulation=《财政应急保障预案》 — 表示国家按照《财政应急保障预案》的规定解决资金问题\"\n        ],\n        \"instance_logicexpression\": [\n            \"矿山企业(银山矿业) → FundPreparation(银山矿业)\",\n            \"事故责任单位(银山矿业) → BearFunds(银山矿业)\",\n            \"事故责任单位(银山矿业) ∧ ¬BearFunds(银山矿业) → ∃g (当地人民政府(g) ∧ CoordinateSolution(g))\",\n            \"矿山事故灾难(矿山事故灾难) → ∃n (国家(n) ∧ RegulationSolution(n, 《财政应急保障预案》))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“铜山矿业” — 表示铜山矿业是矿山企业\",\n            \"u=“铜山矿业” — 表示铜山矿业是事故责任单位\",\n            \"g=“当地人民政府” — 表示当地人民政府负责协调解决资金问题\",\n            \"r=“矿山事故灾难” — 表示发生了矿山事故灾难\",\n            \"n=“国家” — 表示国家负责解决矿山事故灾难所需资金\",\n            \"Regulation=《财政应急保障预案》 — 表示国家按照《财政应急保障预案》的规定解决资金问题\"\n        ],\n        \"instance_logicexpression\": [\n            \"矿山企业(铜山矿业) → FundPreparation(铜山矿业)\",\n            \"事故责任单位(铜山矿业) → BearFunds(铜山矿业)\",\n            \"事故责任单位(铜山矿业) ∧ ¬BearFunds(铜山矿业) → ∃g (当地人民政府(g) ∧ CoordinateSolution(g))\",\n            \"矿山事故灾难(矿山事故灾难) → ∃n (国家(n) ∧ RegulationSolution(n, 《财政应急保障预案》))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"安全监管总局 — 表示安全监管总局这个组织\",\n            \"矿山事故应急救援 — 表示矿山事故应急救援这个事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishExpertGroup(安全监管总局) ∧ ProvideTechnicalSupport(安全监管总局, 矿山事故应急救援)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"省级地方人民政府矿山应急组织(A省) — 表示A省的省级地方人民政府矿山应急组织\",\n            \"矿山事故应急救援 — 表示矿山事故应急救援这个事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishExpertGroup(A省) ∧ ProvideTechnicalSupport(A省, 矿山事故应急救援)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"院校(清华大学) — 表示清华大学这个院校\",\n            \"科研单位(中国科学院) — 表示中国科学院这个科研单位\",\n            \"事故预防 — 表示事故预防这个研究和开发领域\",\n            \"应急技术 — 表示应急技术这个研究和开发领域\",\n            \"矿山救援技术设备 — 表示矿山救援技术设备这个研究和开发领域\"\n        ],\n        \"instance_logicexpression\": [\n            \"院校(清华大学) ∨ 科研单位(中国科学院) → (ConductRD(清华大学, AccidentPrevention) ∧ ConductRD(清华大学, EmergencyTechnology) ∧ ConductRD(清华大学, MiningRescueTech)) ∧ (ConductRD(中国科学院, AccidentPrevention) ∧ ConductRD(中国科学院, EmergencyTechnology) ∧ ConductRD(中国科学院, MiningRescueTech))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"院校(北京大学) — 表示北京大学这个院校\",\n            \"科研单位(中国矿业大学) — 表示中国矿业大学这个科研单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"院校(北京大学) ∨ 科研单位(中国矿业大学) → (ConductRD(北京大学, AccidentPrevention) ∧ ConductRD(北京大学, EmergencyTechnology) ∧ ConductRD(北京大学, MiningRescueTech)) ∧ (ConductRD(中国矿业大学, AccidentPrevention) ∧ ConductRD(中国矿业大学, EmergencyTechnology) ∧ ConductRD(中国矿业大学, MiningRescueTech))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“市级政府” — 表示组织为市级政府\",\n            \"a=“公众” — 表示受众为公众\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀a (Organization(市级政府) ∧ (Audience(公众, public) ∨ Audience(公众, employee)) → (ExplainDanger(市级政府, 公众) ∧ PromoteRegulations(市级政府, 公众) ∧ PromoteKnowledge(市级政府, 公众)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“矿山企业A” — 表示组织为矿山企业A\",\n            \"a=“员工” — 表示受众为员工\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀a (Organization(矿山企业A) ∧ (Audience(员工, public) ∨ Audience(员工, employee)) → (ExplainDanger(矿山企业A, 员工) ∧ PromoteRegulations(矿山企业A, 员工) ∧ PromoteKnowledge(矿山企业A, 员工)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“省级政府” — 表示组织为省级政府\",\n            \"a=“社区居民” — 表示受众为社区居民\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀a (Organization(省级政府) ∧ (Audience(社区居民, public) ∨ Audience(社区居民, employee)) → (ExplainDanger(省级政府, 社区居民) ∧ PromoteRegulations(省级政府, 社区居民) ∧ PromoteKnowledge(省级政府, 社区居民)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“矿山企业B” — 表示组织为矿山企业B\",\n            \"a=“学校师生” — 表示受众为学校师生\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀a (Organization(矿山企业B) ∧ (Audience(学校师生, public) ∨ Audience(学校师生, employee)) → (ExplainDanger(矿山企业B, 学校师生) ∧ PromoteRegulations(矿山企业B, 学校师生) ∧ PromoteKnowledge(矿山企业B, 学校师生)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“国家应急指挥中心” — 表示应急指挥中心为国家应急指挥中心\",\n            \"t=“国家矿山救护队” — 表示矿山救护队为国家矿山救护队\"\n        ],\n        \"instance_logicexpression\": [\n            \"应急指挥中心(国家应急指挥中心) → ∀t (矿山救护队(t) → (ResponsibleForTraining(国家应急指挥中心, t) ∧ EnhanceTraining(t) ∧ OrganizeTraining(国家应急指挥中心, t) ∧ EnsureCombatReadiness(t)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“李矿长” — 表示矿长资格培训的对象为李矿长\"\n        ],\n        \"instance_logicexpression\": [\n            \"矿长资格培训(李矿长) → MineRescueKnowledgeTraining(李矿长)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“江苏省安全生产监督管理部门” — 表示安全生产监督管理部门为江苏省的部门\",\n            \"e=“江苏省某矿山企业” — 表示矿山企业为江苏省的某矿山企业\"\n        ],\n        \"instance_logicexpression\": [\n            \"安全生产监督管理部门(江苏省安全生产监督管理部门) ∧ 矿山企业(江苏省某矿山企业) → EmergencyRescueKnowledgeTraining(江苏省某矿山企业)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“河北省某矿山企业” — 表示矿山企业为河北省的某矿山企业\",\n            \"em=“王工人” — 表示企业职工为王工人\"\n        ],\n        \"instance_logicexpression\": [\n            \"矿山企业(河北省某矿山企业) → ∀em (企业职工(em, 河北省某矿山企业) → RescueAndSelfRescueKnowledgeTraining(em))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Organization=“安全监管总局” — 表示安全监管总局负责组织演习\",\n            \"Frequency=“每年” — 表示演习的频率为每年一次\"\n        ],\n        \"instance_logicexpression\": [\n            \"OrganizeExercise(安全监管总局, 每年) ∧ EmergencyRescueSystem(安全监管总局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“北京市矿山应急救援指挥机构” — 表示北京市矿山应急救援指挥机构负责组织演习\",\n            \"Frequency=“每年” — 表示演习的频率为每年一次\"\n        ],\n        \"instance_logicexpression\": [\n            \"OrganizeExercise(北京市矿山应急救援指挥机构, 每年) ∧ EmergencyRescueSystem(北京市矿山应急救援指挥机构)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“中煤能源公司” — 表示中煤能源公司负责组织矿井救灾演习\",\n            \"Frequency=“至少每年一次” — 表示演习的频率至少为每年一次\"\n        ],\n        \"instance_logicexpression\": [\n            \"MineDisasterExercise(中煤能源公司, 至少每年一次)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“上海市矿山应急救援指挥机构” — 表示上海市矿山应急救援指挥机构负责组织演习\",\n            \"Frequency=“每年” — 表示演习的频率为每年一次\"\n        ],\n        \"instance_logicexpression\": [\n            \"OrganizeExercise(上海市矿山应急救援指挥机构, 每年) ∧ EmergencyRescueSystem(上海市矿山应急救援指挥机构)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“神华集团” — 表示神华集团负责组织矿井救灾演习\",\n            \"Frequency=“每年” — 表示演习的频率为每年一次\"\n        ],\n        \"instance_logicexpression\": [\n            \"MineDisasterExercise(神华集团, 每年)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“矿山事故灾难应急预案1号” — 表示矿山事故灾难应急预案的编号1\",\n            \"Agency=“安全监管总局” — 表示负责监督和检查的机构为安全监管总局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (EmergencyPlan(“矿山事故灾难应急预案1号”) → SuperviseAndInspect(安全监管总局, “矿山事故灾难应急预案1号”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“矿山事故灾难应急预案2号” — 表示矿山事故灾难应急预案的编号2\",\n            \"Agency=“安全监管总局” — 表示负责监督和检查的机构为安全监管总局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (EmergencyPlan(“矿山事故灾难应急预案2号”) → SuperviseAndInspect(安全监管总局, “矿山事故灾难应急预案2号”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“矿山事故灾难应急预案3号” — 表示矿山事故灾难应急预案的编号3\",\n            \"Agency=“安全监管总局” — 表示负责监督和检查的机构为安全监管总局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (EmergencyPlan(“矿山事故灾难应急预案3号”) → SuperviseAndInspect(安全监管总局, “矿山事故灾难应急预案3号”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“矿山事故灾难应急预案4号” — 表示矿山事故灾难应急预案的编号4\",\n            \"Agency=“安全监管总局” — 表示负责监督和检查的机构为安全监管总局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (EmergencyPlan(“矿山事故灾难应急预案4号”) → SuperviseAndInspect(安全监管总局, “矿山事故灾难应急预案4号”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“省级安全生产应急救援指挥机构” — 表示省级安全生产应急救援指挥机构\",\n            \"p=“火灾应急预案” — 表示火灾应急预案\",\n            \"应急任务：火灾应急处置\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀p (应急机构(省级安全生产应急救援指挥机构) ∧ 应急任务(火灾应急处置) → DevelopPlan(省级安全生产应急救援指挥机构, 火灾应急预案) ∧ Record(火灾应急预案, GeneralBureau))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=“安全生产法” — 表示安全生产法\",\n            \"i=“省级安全生产应急救援指挥机构” — 表示省级安全生产应急救援指挥机构\",\n            \"p=“火灾应急预案” — 表示火灾应急预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀l∀i∀p (Change(安全生产法, 省级安全生产应急救援指挥机构, 火灾应急预案) ∨ Defect(火灾应急预案) → Revise(GeneralBureau, 火灾应急预案))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“洪水应急预案” — 表示洪水应急预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"RegularReview(GeneralBureau, 洪水应急预案) → Revise(GeneralBureau, 洪水应急预案)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“市级应急保障单位” — 表示市级应急保障单位\",\n            \"p=“地震应急预案” — 表示地震应急预案\",\n            \"应急任务：地震应急处置\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀p (应急机构(市级应急保障单位) ∧ 应急任务(地震应急处置) → DevelopPlan(市级应急保障单位, 地震应急预案) ∧ Record(地震应急预案, GeneralBureau))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“化学品泄漏应急预案” — 表示化学品泄漏应急预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"Defect(化学品泄漏应急预案) → Revise(GeneralBureau, 化学品泄漏应急预案)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"u=“消防局” — 表示消防局在应急救援工作中有突出贡献\",\n            \"p=“李雷” — 表示李雷个人在应急救援工作中有突出贡献\"\n        ],\n        \"instance_logicexpression\": [\n            \"OutstandingContribution(消防局, 李雷) → (RecognizeAndReward(消防局, 李雷))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“王芳” — 表示王芳在应急救援工作中受伤\"\n        ],\n        \"instance_logicexpression\": [\n            \"InjuredOrDisabledOrDeceased(王芳) → MedicalAndCondolence(王芳)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“赵刚” — 表示赵刚在救援工作中英勇牺牲\"\n        ],\n        \"instance_logicexpression\": [\n            \"HeroicSacrifice(赵刚) → PosthumouslyHonoredAsMartyr(赵刚)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“钱七” — 表示钱七不服从指挥部调遣\"\n        ],\n        \"instance_logicexpression\": [\n            \"Disobedience(钱七) → (AdministrativeOrEconomicPenalty(钱七) ∨ PursueCriminalLiability(钱七))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“红十字会” — 表示红十字会在应急救援工作中有突出贡献\",\n            \"p=“孙八” — 表示孙八个人在应急救援工作中有突出贡献\"\n        ],\n        \"instance_logicexpression\": [\n            \"OutstandingContribution(红十字会, 孙八) → (RecognizeAndReward(红十字会, 孙八))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“周九” — 表示周九在应急救援工作中致残\"\n        ],\n        \"instance_logicexpression\": [\n            \"InjuredOrDisabledOrDeceased(周九) → MedicalAndCondolence(周九)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“吴十” — 表示吴十在救援工作中为抢救他人英勇牺牲\"\n        ],\n        \"instance_logicexpression\": [\n            \"HeroicSacrifice(吴十) → PosthumouslyHonoredAsMartyr(吴十)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“郑十一” — 表示郑十一临阵脱逃\"\n        ],\n        \"instance_logicexpression\": [\n            \"Disobedience(郑十一) → (AdministrativeOrEconomicPenalty(郑十一) ∨ PursueCriminalLiability(郑十一))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“地震灾害” — 表示事件为地震灾害\",\n            \"g=“省级人民政府” — 表示请求支持的政府为省级人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (Casualties(地震灾害) ∧ HealthHazard(地震灾害) → (∃g (RequestSupport(省级人民政府, 地震灾害) ∧ (NuclearAccident(地震灾害) ∨ RadiationEvent(地震灾害) ∨ ChemicalLeak(地震灾害)) ∧ MedicalRescue(地震灾害)) ∨ CrossProvince(地震灾害) ∧ MedicalRescue(地震灾害) ∨ StateCouncilDetermine(地震灾害) ∧ MedicalRescue(地震灾害)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“核电厂泄漏” — 表示事件为核电厂泄漏\",\n            \"g=“核安全局” — 表示请求支持的部门为核安全局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (Casualties(核电厂泄漏) ∧ HealthHazard(核电厂泄漏) → (∃g (RequestSupport(核安全局, 核电厂泄漏) ∧ (NuclearAccident(核电厂泄漏) ∨ RadiationEvent(核电厂泄漏) ∨ ChemicalLeak(核电厂泄漏)) ∧ MedicalRescue(核电厂泄漏)) ∨ CrossProvince(核电厂泄漏) ∧ MedicalRescue(核电厂泄漏) ∨ StateCouncilDetermine(核电厂泄漏) ∧ MedicalRescue(核电厂泄漏)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“跨省洪水” — 表示事件为跨省洪水\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (Casualties(跨省洪水) ∧ HealthHazard(跨省洪水) → (∃g (RequestSupport(g, 跨省洪水) ∧ (NuclearAccident(跨省洪水) ∨ RadiationEvent(跨省洪水) ∨ ChemicalLeak(跨省洪水)) ∧ MedicalRescue(跨省洪水)) ∨ CrossProvince(跨省洪水) ∧ MedicalRescue(跨省洪水) ∨ StateCouncilDetermine(跨省洪水) ∧ MedicalRescue(跨省洪水)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“化学品工厂爆炸” — 表示事件为化学品工厂爆炸\",\n            \"g=“环保部” — 表示请求支持的部门为环保部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (Casualties(化学品工厂爆炸) ∧ HealthHazard(化学品工厂爆炸) → (∃g (RequestSupport(环保部, 化学品工厂爆炸) ∧ (NuclearAccident(化学品工厂爆炸) ∨ RadiationEvent(化学品工厂爆炸) ∨ ChemicalLeak(化学品工厂爆炸)) ∧ MedicalRescue(化学品工厂爆炸)) ∨ CrossProvince(化学品工厂爆炸) ∧ MedicalRescue(化学品工厂爆炸) ∨ StateCouncilDetermine(化学品工厂爆炸) ∧ MedicalRescue(化学品工厂爆炸)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“重大疫情” — 表示事件为重大疫情\",\n            \"g=“国家卫生健康委员会” — 表示请求支持的部门为国家卫生健康委员会\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (Casualties(重大疫情) ∧ HealthHazard(重大疫情) → (∃g (RequestSupport(国家卫生健康委员会, 重大疫情) ∧ (NuclearAccident(重大疫情) ∨ RadiationEvent(重大疫情) ∨ ChemicalLeak(重大疫情)) ∧ MedicalRescue(重大疫情)) ∨ CrossProvince(重大疫情) ∧ MedicalRescue(重大疫情) ∨ StateCouncilDetermine(重大疫情) ∧ MedicalRescue(重大疫情)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“地震灾害” — 表示事件为地震灾害\",\n            \"Count=10 — 表示死亡和危重病例数量为10\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (MajorCasualty(地震灾害) ∧ (DeathAndCriticalCases(地震灾害, 10) ∧ 10 > 5) → 重大事件(地震灾害))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“洪水灾害” — 表示事件为洪水灾害\",\n            \"Count=7 — 表示死亡和危重病例数量为7\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (MajorCasualty(洪水灾害) ∧ (DeathAndCriticalCases(洪水灾害, 7) ∧ 7 > 5) → 重大事件(洪水灾害))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“化工厂爆炸” — 表示事件为化工厂爆炸\",\n            \"Count=6 — 表示死亡和危重病例数量为6\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (MajorCasualty(化工厂爆炸) ∧ (DeathAndCriticalCases(化工厂爆炸, 6) ∧ 6 > 5) → 重大事件(化工厂爆炸))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“跨市交通事故” — 表示事件为跨市交通事故\",\n            \"Count=8 — 表示严重人员伤亡数量为8\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (CrossCityEvent(跨市交通事故) ∧ SevereCasualty(跨市交通事故) → 重大事件(跨市交通事故))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“煤矿塌方” — 表示事件为煤矿塌方\",\n            \"Count=9 — 表示严重人员伤亡数量为9\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (CrossCityEvent(煤矿塌方) ∧ SevereCasualty(煤矿塌方) → 重大事件(煤矿塌方))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“省级传染病爆发” — 表示事件为省级传染病爆发\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (ProvincialGovernmentDetermine(省级传染病爆发) ∧ NeedMedicalRescue(省级传染病爆发) → 重大事件(省级传染病爆发))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“大规模食物中毒” — 表示事件为大规模食物中毒\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (ProvincialGovernmentDetermine(大规模食物中毒) ∧ NeedMedicalRescue(大规模食物中毒) → 重大事件(大规模食物中毒))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“地震灾害” — 表示事件为地震灾害\",\n            \"d=5 — 表示死亡人数为5\",\n            \"c=2 — 表示危重病例人数为2\"\n        ],\n        \"instance_logicexpression\": [\n            \"PublicEmergency(地震灾害) ∧ (Death(地震灾害, 5) ∧ CriticalCases(地震灾害, 2) ∧ 5 + 2 > 3) → 较大事件(地震灾害)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“化工厂爆炸” — 表示事件为化工厂爆炸\",\n            \"d=2 — 表示死亡人数为2\",\n            \"c=4 — 表示危重病例人数为4\"\n        ],\n        \"instance_logicexpression\": [\n            \"PublicEmergency(化工厂爆炸) ∧ (Death(化工厂爆炸, 2) ∧ CriticalCases(化工厂爆炸, 4) ∧ 2 + 4 > 3) → 较大事件(化工厂爆炸)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“重大交通事故” — 表示事件为重大交通事故\",\n            \"d=3 — 表示死亡人数为3\",\n            \"c=1 — 表示危重病例人数为1\"\n        ],\n        \"instance_logicexpression\": [\n            \"PublicEmergency(重大交通事故) ∧ (Death(重大交通事故, 3) ∧ CriticalCases(重大交通事故, 1) ∧ 3 + 1 > 3) → 较大事件(重大交通事故)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“洪水灾害” — 表示事件为洪水灾害\",\n            \"Government=“市（地）级人民政府” — 表示市（地）级人民政府\",\n            \"MedicalRescue=“是” — 表示需要开展医疗卫生救援工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"Determine(市（地）级人民政府, 洪水灾害) ∧ MedicalRescue(洪水灾害) → 较大事件(洪水灾害)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“大规模食物中毒” — 表示事件为大规模食物中毒\",\n            \"Government=“市（地）级人民政府” — 表示市（地）级人民政府\",\n            \"MedicalRescue=“是” — 表示需要开展医疗卫生救援工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"Determine(市（地）级人民政府, 大规模食物中毒) ∧ MedicalRescue(大规模食物中毒) → 较大事件(大规模食物中毒)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“地震” — 表示事件为地震\",\n            \"d=2 — 表示地震中死亡的人数为2\",\n            \"c=3 — 表示地震中危重病例的数量为3\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (PublicEmergency(地震) ∧ (Death(地震, 2) ∧ CriticalCases(地震, 3) ∧ (2 + 3 > 1)) → ∃n (Casualties(地震) > n))\",\n            \"∀e (Determine(Government, 地震) → MedicalRescue(地震))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“洪水” — 表示事件为洪水\",\n            \"d=1 — 表示洪水中死亡的人数为1\",\n            \"c=4 — 表示洪水中危重病例的数量为4\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (PublicEmergency(洪水) ∧ (Death(洪水, 1) ∧ CriticalCases(洪水, 4) ∧ (1 + 4 > 1)) → ∃n (Casualties(洪水) > n))\",\n            \"∀e (Determine(Government, 洪水) → MedicalRescue(洪水))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“交通事故” — 表示事件为交通事故\",\n            \"d=0 — 表示交通事故中死亡的人数为0\",\n            \"c=2 — 表示交通事故中危重病例的数量为2\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (PublicEmergency(交通事故) ∧ (Death(交通事故, 0) ∧ CriticalCases(交通事故, 2) ∧ (0 + 2 > 1)) → ∃n (Casualties(交通事故) > n))\",\n            \"∀e (Determine(Government, 交通事故) → MedicalRescue(交通事故))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“工业事故” — 表示事件为工业事故\",\n            \"d=3 — 表示工业事故中死亡的人数为3\",\n            \"c=1 — 表示工业事故中危重病例的数量为1\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (PublicEmergency(工业事故) ∧ (Death(工业事故, 3) ∧ CriticalCases(工业事故, 1) ∧ (3 + 1 > 1)) → ∃n (Casualties(工业事故) > n))\",\n            \"∀e (Determine(Government, 工业事故) → MedicalRescue(工业事故))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“自然灾害” — 表示事件为自然灾害\",\n            \"d=4 — 表示自然灾害中死亡的人数为4\",\n            \"c=0 — 表示自然灾害中危重病例的数量为0\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (PublicEmergency(自然灾害) ∧ (Death(自然灾害, 4) ∧ CriticalCases(自然灾害, 0) ∧ (4 + 0 > 1)) → ∃n (Casualties(自然灾害) > n))\",\n            \"∀e (Determine(Government, 自然灾害) → MedicalRescue(自然灾害))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"h=“市级” — 表示市级卫生行政部门\",\n            \"p=“市级” — 表示市级人民政府\",\n            \"e=“市级” — 表示市级应急指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀h∀p∀e (HealthDepartment(市级) ∧ (PeoplesGovernment(市级) ∨ EmergencyCommandInstitution(市级)) → (UnifiedLeadership(市级 ∨ 市级, 市级) ∧ ∀d (CloseCooperation(市级, d) ∧ Coordinated(市级, d)))\",\n            \"∀h∀e (HealthDepartment(市级) ∧ EmergencyEvent(e) → Respond(市级, e) ∧ MedicalRescue(市级, e))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"h=“省级” — 表示省级卫生行政部门\",\n            \"p=“省级” — 表示省级人民政府\",\n            \"e=“省级” — 表示省级应急指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀h∀p∀e (HealthDepartment(省级) ∧ (PeoplesGovernment(省级) ∨ EmergencyCommandInstitution(省级)) → (UnifiedLeadership(省级 ∨ 省级, 省级) ∧ ∀d (CloseCooperation(省级, d) ∧ Coordinated(省级, d)))\",\n            \"∀h∀e (HealthDepartment(省级) ∧ EmergencyEvent(e) → Respond(省级, e) ∧ MedicalRescue(省级, e))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"h=“国家级” — 表示国家级卫生行政部门\",\n            \"p=“国家级” — 表示国家级人民政府\",\n            \"e=“国家级” — 表示国家级应急指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀h∀p∀e (HealthDepartment(国家级) ∧ (PeoplesGovernment(国家级) ∨ EmergencyCommandInstitution(国家级)) → (UnifiedLeadership(国家级 ∨ 国家级, 国家级) ∧ ∀d (CloseCooperation(国家级, d) ∧ Coordinated(国家级, d)))\",\n            \"∀h∀e (HealthDepartment(国家级) ∧ EmergencyEvent(e) → Respond(国家级, e) ∧ MedicalRescue(国家级, e))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"h=“区级” — 表示区级卫生行政部门\",\n            \"p=“区级” — 表示区级人民政府\",\n            \"e=“区级” — 表示区级应急指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀h∀p∀e (HealthDepartment(区级) ∧ (PeoplesGovernment(区级) ∨ EmergencyCommandInstitution(区级)) → (UnifiedLeadership(区级 ∨ 区级, 区级) ∧ ∀d (CloseCooperation(区级, d) ∧ Coordinated(区级, d)))\",\n            \"∀h∀e (HealthDepartment(区级) ∧ EmergencyEvent(e) → Respond(区级, e) ∧ MedicalRescue(区级, e))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“国家卫生部门” — 表示国家卫生部门\",\n            \"o=“国家医疗卫生救援领导小组” — 表示国家医疗卫生救援领导小组\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀o (Establish(国家卫生部门, 国家医疗卫生救援领导小组) ∧ (MedicalRescueLeadingGroup(国家医疗卫生救援领导小组) ∨ ExpertGroup(国家医疗卫生救援领导小组) ∨ MedicalRescueInstitution(国家医疗卫生救援领导小组)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“省级卫生部门” — 表示省级卫生部门\",\n            \"o=“省级医疗卫生救援专家组” — 表示省级医疗卫生救援专家组\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀o (Establish(省级卫生部门, 省级医疗卫生救援专家组) ∧ (MedicalRescueLeadingGroup(省级医疗卫生救援专家组) ∨ ExpertGroup(省级医疗卫生救援专家组) ∨ MedicalRescueInstitution(省级医疗卫生救援专家组)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“市级医疗急救中心” — 表示市级医疗急救中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"MedicalRescueInstitution(市级医疗急救中心) → (MedicalInstitution(市级医疗急救中心) ∧ (EmergencyCenter(市级医疗急救中心)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“区级综合医院” — 表示区级综合医院\"\n        ],\n        \"instance_logicexpression\": [\n            \"MedicalRescueInstitution(区级综合医院) → (MedicalInstitution(区级综合医院) ∧ (GeneralHospital(区级综合医院)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“化学中毒应急医疗救治专业机构” — 表示化学中毒应急医疗救治专业机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"MedicalRescueInstitution(化学中毒应急医疗救治专业机构) → (MedicalInstitution(化学中毒应急医疗救治专业机构) ∧ (EmergencyTreatmentInstitution(化学中毒应急医疗救治专业机构)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“现场医疗卫生救援指挥部” — 表示现场医疗卫生救援指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃o OnsiteMedicalRescueCommand(现场医疗卫生救援指挥部)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“国务院卫生行政部门” — 表示国务院卫生行政部门\",\n            \"Task=“医疗卫生救援” — 表示医疗卫生救援工作\",\n            \"LeaderGroup=“国家级医疗卫生救援领导小组” — 表示国家级医疗卫生救援领导小组\"\n        ],\n        \"instance_logicexpression\": [\n            \"国务院卫生行政部门(国务院卫生行政部门) → (EstablishLeaderGroup(国务院卫生行政部门, 国家级) ∧ LeadWork(国家级医疗卫生救援领导小组, 医疗卫生救援) ∧ OrganizeWork(国家级医疗卫生救援领导小组, 医疗卫生救援) ∧ CoordinateWork(国家级医疗卫生救援领导小组, 医疗卫生救援) ∧ DeployWork(国家级医疗卫生救援领导小组, 医疗卫生救援))\",\n            \"国务院卫生行政部门(国务院卫生行政部门) → ResponsibleForDailyWork(卫生应急办公室, 国务院卫生行政部门)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“北京市卫生局” — 表示北京市卫生局\",\n            \"l=“市级” — 表示市级行政级别\",\n            \"Task=“医疗卫生救援” — 表示医疗卫生救援工作\",\n            \"LeaderGroup=“北京市医疗卫生救援领导小组” — 表示北京市医疗卫生救援领导小组\",\n            \"i=“北京市卫生应急办公室” — 表示北京市卫生应急办公室\"\n        ],\n        \"instance_logicexpression\": [\n            \"省市级卫生行政部门(北京市卫生局, 市级) → EstablishLeaderGroup(北京市卫生局, 市级) ∧ LeadWork(北京市医疗卫生救援领导小组, 医疗卫生救援) ∧ OrganizeWork(北京市医疗卫生救援领导小组, 医疗卫生救援) ∧ CoordinateWork(北京市医疗卫生救援领导小组, 医疗卫生救援)\",\n            \"省市级卫生行政部门(北京市卫生局, 市级) → ResponsibleForDailyWork(北京市卫生应急办公室, 北京市卫生局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“江苏省卫生厅” — 表示江苏省卫生厅\",\n            \"l=“省级” — 表示省级行政级别\",\n            \"Task=“医疗卫生救援” — 表示医疗卫生救援工作\",\n            \"LeaderGroup=“江苏省医疗卫生救援领导小组” — 表示江苏省医疗卫生救援领导小组\",\n            \"i=“江苏省卫生应急办公室” — 表示江苏省卫生应急办公室\"\n        ],\n        \"instance_logicexpression\": [\n            \"省市级卫生行政部门(江苏省卫生厅, 省级) → EstablishLeaderGroup(江苏省卫生厅, 省级) ∧ LeadWork(江苏省医疗卫生救援领导小组, 医疗卫生救援) ∧ OrganizeWork(江苏省医疗卫生救援领导小组, 医疗卫生救援) ∧ CoordinateWork(江苏省医疗卫生救援领导小组, 医疗卫生救援) ∧ DeployWork(江苏省医疗卫生救援领导小组, 医疗卫生救援)\",\n            \"省市级卫生行政部门(江苏省卫生厅, 省级) → ResponsibleForDailyWork(江苏省卫生应急办公室, 江苏省卫生厅)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“杭州市卫生局” — 表示杭州市卫生局\",\n            \"l=“市级” — 表示市级行政级别\",\n            \"Task=“医疗卫生救援” — 表示医疗卫生救援工作\",\n            \"LeaderGroup=“杭州市医疗卫生救援领导小组” — 表示杭州市医疗卫生救援领导小组\",\n            \"i=“杭州市卫生应急办公室” — 表示杭州市卫生应急办公室\"\n        ],\n        \"instance_logicexpression\": [\n            \"省市级卫生行政部门(杭州市卫生局, 市级) → EstablishLeaderGroup(杭州市卫生局, 市级) ∧ LeadWork(杭州市医疗卫生救援领导小组, 医疗卫生救援) ∧ OrganizeWork(杭州市医疗卫生救援领导小组, 医疗卫生救援) ∧ CoordinateWork(杭州市医疗卫生救援领导小组, 医疗卫生救援)\",\n            \"省市级卫生行政部门(杭州市卫生局, 市级) → ResponsibleForDailyWork(杭州市卫生应急办公室, 杭州市卫生局)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“市级卫生局” — 表示市级卫生行政部门\",\n            \"e=“H市流感爆发” — 表示H市发生的流感爆发事件\",\n            \"ExpertGroup=“H市流感防控专家组” — 表示为H市流感爆发组建的专家组\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀e (Department(市级卫生局) ∧ EmergencyEvent(H市流感爆发) ∧ MedicalRescue(H市流感爆发) → (Formulate(市级卫生局, H市流感防控专家组) ∧ Provide(H市流感防控专家组, Consultation, H市流感爆发) ∧ Provide(H市流感防控专家组, TechnicalGuidance, H市流感爆发) ∧ Provide(H市流感防控专家组, Support, H市流感爆发)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“省级疾控中心” — 表示省级卫生行政部门\",\n            \"e=“E县地震灾害” — 表示E县发生的地震灾害事件\",\n            \"ExpertGroup=“E县地震救援专家组” — 表示为E县地震灾害组建的专家组\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀e (Department(省级疾控中心) ∧ EmergencyEvent(E县地震灾害) ∧ MedicalRescue(E县地震灾害) → (Formulate(省级疾控中心, E县地震救援专家组) ∧ Provide(E县地震救援专家组, Consultation, E县地震灾害) ∧ Provide(E县地震救援专家组, TechnicalGuidance, E县地震灾害) ∧ Provide(E县地震救援专家组, Support, E县地震灾害)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家卫生健康委员会” — 表示国家级卫生行政部门\",\n            \"e=“F国新冠疫情” — 表示F国发生的新冠疫情事件\",\n            \"ExpertGroup=“F国疫情防控专家组” — 表示为F国新冠疫情组建的专家组\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀e (Department(国家卫生健康委员会) ∧ EmergencyEvent(F国新冠疫情) ∧ MedicalRescue(F国新冠疫情) → (Formulate(国家卫生健康委员会, F国疫情防控专家组) ∧ Provide(F国疫情防控专家组, Consultation, F国新冠疫情) ∧ Provide(F国疫情防控专家组, TechnicalGuidance, F国新冠疫情) ∧ Provide(F国疫情防控专家组, Support, F国新冠疫情)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“区级社区卫生服务中心” — 表示区级卫生行政部门\",\n            \"e=“G区食物中毒事件” — 表示G区发生的食物中毒事件\",\n            \"ExpertGroup=“G区中毒处置专家组” — 表示为G区食物中毒事件组建的专家组\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀e (Department(区级社区卫生服务中心) ∧ EmergencyEvent(G区食物中毒事件) ∧ MedicalRescue(G区食物中毒事件) → (Formulate(区级社区卫生服务中心, G区中毒处置专家组) ∧ Provide(G区中毒处置专家组, Consultation, G区食物中毒事件) ∧ Provide(G区中毒处置专家组, TechnicalGuidance, G区食物中毒事件) ∧ Provide(G区中毒处置专家组, Support, G区食物中毒事件)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“市立医院” — 表示市立医院为承担医疗卫生救援任务的医疗机构\",\n            \"t=“地震灾害” — 表示突发公共事件为地震灾害\"\n        ],\n        \"instance_logicexpression\": [\n            \"医疗机构(市立医院) ∧ 突发公共事件(地震灾害) → UndertakeTask(市立医院, MedicalRescue(地震灾害))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“市急救中心” — 表示市急救中心为承担现场医疗卫生救援和伤员转送的急救中心\",\n            \"e=“化学泄漏事故” — 表示突发公共事件为化学泄漏事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"急救中心(市急救中心) → (OnsiteRescue(市急救中心, 化学泄漏事故) ∧ PatientTransfer(市急救中心, 化学泄漏事故))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“市核辐射应急中心” — 表示市核辐射应急中心为承担核辐射事故应急医疗救治的专业机构\",\n            \"e=“核辐射事故” — 表示突发公共事件为核辐射事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"核辐射(市核辐射应急中心) → (OnsiteRescue(市核辐射应急中心, 核辐射事故) ∧ PatientTransfer(市核辐射应急中心, 核辐射事故))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“市疾病预防控制中心” — 表示市疾病预防控制中心为进行疾病预防控制工作的机构\",\n            \"e=“流感疫情” — 表示突发公共事件为流感疫情\"\n        ],\n        \"instance_logicexpression\": [\n            \"疾病预防控制机构(市疾病预防控制中心) → DiseasePrevention(市疾病预防控制中心, 流感疫情)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“市卫生监督所” — 表示市卫生监督所为进行卫生监督工作的机构\",\n            \"e=“水污染事件” — 表示突发公共事件为水污染事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"卫生监督机构(市卫生监督所) → HealthSupervision(市卫生监督所, 水污染事件)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“市级卫生局” — 表示卫生行政部门为市级卫生局\",\n            \"e=“地震灾害” — 表示突发公共事件为地震灾害\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀e (EmergencyEvent(地震灾害) ∧ Department(市级卫生局) → (EstablishCommandCenter(市级卫生局, 地震灾害) ∧ Command(市级卫生局, 地震灾害) ∧ Coordinate(市级卫生局, 地震灾害)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“省级疾控中心” — 表示卫生行政部门为省级疾控中心\",\n            \"e=“重大疫情” — 表示突发公共事件为重大疫情\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀e (EmergencyEvent(重大疫情) ∧ Department(省级疾控中心) → (EstablishCommandCenter(省级疾控中心, 重大疫情) ∧ Command(省级疾控中心, 重大疫情) ∧ Coordinate(省级疾控中心, 重大疫情)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“区级卫生监督所” — 表示卫生行政部门为区级卫生监督所\",\n            \"e=“化学泄露事故” — 表示突发公共事件为化学泄露事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀e (EmergencyEvent(化学泄露事故) ∧ Department(区级卫生监督所) → (EstablishCommandCenter(区级卫生监督所, 化学泄露事故) ∧ Command(区级卫生监督所, 化学泄露事故) ∧ Coordinate(区级卫生监督所, 化学泄露事故)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家级应急办” — 表示卫生行政部门为国家级应急办\",\n            \"e=“大规模自然灾害” — 表示突发公共事件为大规模自然灾害\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀e (EmergencyEvent(大规模自然灾害) ∧ Department(国家级应急办) → (EstablishCommandCenter(国家级应急办, 大规模自然灾害) ∧ Command(国家级应急办, 大规模自然灾害) ∧ Coordinate(国家级应急办, 大规模自然灾害)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“地震灾害” — 表示发生地震灾害这一特别重大突发公共事件\",\n            \"Condition=“国务院启动国家突发公共事件总体应急预案” — 表示国务院启动了总体应急预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (MajorPublicEvent(e) ∧ (StartEmergencyPlan(OverallEmergencyPlan()) ∨ StartEmergencyPlan(SpecialEmergencyPlan()) ∨ MeetsLevel1Criteria(e)) → StartLevel1Response(e))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“重大疫情” — 表示发生重大疫情这一特别重大突发公共事件\",\n            \"Condition=“国务院启动国家突发公共事件专项应急预案” — 表示国务院启动了专项应急预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (MajorPublicEvent(e) ∧ (StartEmergencyPlan(OverallEmergencyPlan()) ∨ StartEmergencyPlan(SpecialEmergencyPlan()) ∨ MeetsLevel1Criteria(e)) → StartLevel1Response(e))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“化学泄露事故” — 表示发生化学泄露事故这一符合Ⅰ级响应级别的突发公共事件\",\n            \"Condition=“符合医疗卫生救援特别重大事件（Ⅰ级）级别” — 表示该事件符合Ⅰ级响应级别\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (MajorPublicEvent(e) ∧ (StartEmergencyPlan(OverallEmergencyPlan()) ∨ StartEmergencyPlan(SpecialEmergencyPlan()) ∨ MeetsLevel1Criteria(e)) → StartLevel1Response(e))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“大规模食物中毒事件” — 表示发生大规模食物中毒事件这一特别重大突发公共事件\",\n            \"Condition=“国务院启动国家突发公共事件总体应急预案” — 表示国务院启动了总体应急预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (MajorPublicEvent(e) ∧ (StartEmergencyPlan(OverallEmergencyPlan()) ∨ StartEmergencyPlan(SpecialEmergencyPlan()) ∨ MeetsLevel1Criteria(e)) → StartLevel1Response(e))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“严重自然灾害” — 表示发生严重自然灾害这一特别重大突发公共事件\",\n            \"Condition=“国务院启动国家突发公共事件专项应急预案” — 表示国务院启动了专项应急预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (MajorPublicEvent(e) ∧ (StartEmergencyPlan(OverallEmergencyPlan()) ∨ StartEmergencyPlan(SpecialEmergencyPlan()) ∨ MeetsLevel1Criteria(e)) → StartLevel1Response(e))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“国务院卫生行政部门” — 表示国务院卫生行政部门\",\n            \"t=“特别重大事件” — 表示医疗卫生救援特别重大事件\",\n            \"Experts=“专家团队” — 表示组织专家\",\n            \"Patients=“伤病员” — 表示伤病员\",\n            \"Treatment=“救治情况” — 表示救治情况\",\n            \"Institution=“医疗卫生救援机构” — 表示医疗卫生救援机构\",\n            \"Scene=“现场” — 表示现场\",\n            \"Department=“国务院卫生行政部门” — 表示国务院卫生行政部门\",\n            \"Measures=“医疗救治等措施” — 表示医疗救治等措施\",\n            \"ExpertsSupport=“专家和专业队伍” — 表示专家和专业队伍\",\n            \"Location=“地方” — 表示地方\",\n            \"Government=“国务院和国家相关突发公共事件应急指挥机构” — 表示国务院和国家相关突发公共事件应急指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀t (ReceiveInstruction(国务院卫生行政部门, 特别重大事件) → (Activate(医疗卫生救援领导小组) ∧ OrganizeAssessment(专家团队, 伤病员, 救治情况) ∧ CarryOutRescue(医疗卫生救援机构, 现场) ∧ GuideCoordinate(国务院卫生行政部门, 医疗救治等措施) ∧ DispatchSupport(专家团队, 专家和专业队伍, 地方) ∧ ReportFeedback(国务院卫生行政部门, 国务院和国家相关突发公共事件应急指挥机构)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“国家总体应急预案” — 表示国家总体应急预案\",\n            \"Department=“医疗卫生救援领导小组” — 表示医疗卫生救援领导小组\"\n        ],\n        \"instance_logicexpression\": [\n            \"ActivatePlan(国家总体应急预案, 医疗卫生救援领导小组) → Activate(医疗卫生救援领导小组)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“某省人民政府卫生行政部门” — 表示某省人民政府卫生行政部门\",\n            \"e=“突发公共事件” — 表示突发公共事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"ReceiveInstruction(某省人民政府卫生行政部门, 突发公共事件) → (OrganizeCoordinate(某省人民政府卫生行政部门, 突发公共事件))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“地震” — 表示发生了地震这一重大突发公共事件\",\n            \"GovernmentLevel=“省级人民政府”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (MajorPublicEvent(e) → (ActivateEmergencyPlan(省级人民政府, e) ∨ ActivateEmergencyPlan(省级有关部门, e) → LevelIIResponse(e)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“洪水” — 表示发生了洪水这一重大突发公共事件\",\n            \"GovernmentLevel=“省级有关部门”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (MajorPublicEvent(e) → (ActivateEmergencyPlan(省级人民政府, e) ∨ ActivateEmergencyPlan(省级有关部门, e) → LevelIIResponse(e)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“重大交通事故” — 表示发生了重大交通事故这一重大突发公共事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (¬(ActivateEmergencyPlan(省级人民政府, e) ∨ ActivateEmergencyPlan(省级有关部门, e)) ∧ MajorPublicEvent(e) → LevelIIResponse(e))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“危险化学品泄漏” — 表示发生了危险化学品泄漏这一重大突发公共事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (¬(ActivateEmergencyPlan(省级人民政府, e) ∨ ActivateEmergencyPlan(省级有关部门, e)) ∧ MajorPublicEvent(e) → LevelIIResponse(e))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“省级卫生行政部门” — 表示省级卫生行政部门\",\n            \"Instruction=“关于医疗卫生救援重大事件的指示” — 表示有关医疗卫生救援重大事件的指示\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (ReceiveInstruction(省级卫生行政部门, 关于医疗卫生救援重大事件的指示) → (ActivateLeadershipGroup(省级卫生行政部门) ∧ OrganizeExpertAssessment(省级卫生行政部门)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“省级卫生行政部门” — 表示省级卫生行政部门\",\n            \"Instruction=“关于医疗卫生救援重大事件的通报” — 表示有关医疗卫生救援重大事件的通报\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (ReceiveInstruction(省级卫生行政部门, 关于医疗卫生救援重大事件的通报) → (OrganizeRescueTeam(省级卫生行政部门) ∧ ReachScene(Team) ∧ ProvideMedicalTreatment(Team)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“省级卫生行政部门” — 表示省级卫生行政部门\",\n            \"Instruction=“关于医疗卫生救援重大事件的报告” — 表示有关医疗卫生救援重大事件的报告\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (ReceiveInstruction(省级卫生行政部门, 关于医疗卫生救援重大事件的报告) → (AnalyzeTrend(省级卫生行政部门) ∧ ProposeRecommendations(省级卫生行政部门) ∧ ReportSituation(省级卫生行政部门, 人民政府)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“省级卫生行政部门” — 表示省级卫生行政部门\",\n            \"Instruction=“启动省级应急预案的指示” — 表示启动省级应急预案的指示\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (ReceiveInstruction(省级卫生行政部门, 启动省级应急预案的指示) → ActivateEmergencyPlan(省级卫生行政部门))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s1=“国务院卫生行政部门” — 表示国务院卫生行政部门\",\n            \"s2=“省级卫生行政部门” — 表示省级卫生行政部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s1 ∀s2 (Supervise(国务院卫生行政部门, 省级卫生行政部门) → (OrganizeSupport(国务院卫生行政部门, Team, Expert) ∧ InformProvinces(国务院卫生行政部门)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"E=“H市化工厂爆炸” — 表示H市化工厂发生了爆炸事件\",\n            \"GovernmentLevel=“市级人民政府”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (PublicEvent(E) → (ActivateEmergencyPlan(市级人民政府, E) ∨ 其他符合医疗卫生救援较大事件(E) → LevelIIIResponse(E)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“G市地震灾害” — 表示G市发生了地震灾害\",\n            \"GovernmentLevel=“市级人民政府”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (PublicEvent(G市地震灾害) → (ActivateEmergencyPlan(市级人民政府, G市地震灾害) ∨ 其他符合医疗卫生救援较大事件(G市地震灾害) → LevelIIIResponse(G市地震灾害)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“F市重大交通事故” — 表示F市发生了重大交通事故\",\n            \"GovernmentLevel=“市级人民政府”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (PublicEvent(F市重大交通事故) → (ActivateEmergencyPlan(市级人民政府, F市重大交通事故) ∨ 其他符合医疗卫生救援较大事件(F市重大交通事故) → LevelIIIResponse(F市重大交通事故)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“J市洪水灾害” — 表示J市发生了洪水灾害\",\n            \"GovernmentLevel=“市级人民政府”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (PublicEvent(J市洪水灾害) → (ActivateEmergencyPlan(市级人民政府, J市洪水灾害) ∨ 其他符合医疗卫生救援较大事件(J市洪水灾害) → LevelIIIResponse(J市洪水灾害)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“市卫生局” — 表示市卫生局\",\n            \"t=“较大事件” — 表示接到的是关于较大事件的指示\",\n            \"Experts=“医疗专家团队” — 表示组织评估的专家团队\",\n            \"Patients=“受灾群众” — 表示需要救治的伤病员\",\n            \"Treatment=“紧急救治” — 表示对伤病员进行的紧急救治\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀t (ReceiveInstruction(市卫生局, 较大事件) ∧ d=市级卫生行政部门 → (ActivateWork(医疗卫生救援领导小组) ∧ OrganizeAssessment(医疗专家团队, 受灾群众, 紧急救治) ∧ CarryOutRescue(市卫生局) ∧ ReportSituation(市卫生局, 本级人民政府, 应急指挥机构)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“省级卫生厅” — 表示省级卫生厅\",\n            \"r=“市（地）级应急预案” — 表示市（地）级应急预案\",\n            \"Location=“受灾地区” — 表示事件发生地\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀r (ActivateEmergencyPlan(医疗卫生救援领导小组, 市（地）级应急预案) → ActivateWork(医疗卫生救援领导小组))\",\n            \"∀d (ReceiveInstruction(省级卫生厅, 较大事件) ∧ d=省级卫生行政部门 → Supervise(省级卫生厅, 受灾地区))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“省级卫生厅” — 表示省级卫生厅\",\n            \"Location=“受灾地区” — 表示事件发生地\",\n            \"Experts=“省级医疗专家团队” — 表示省级组织专家提供技术指导和支持\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀l (Supervise(省级卫生厅, 受灾地区) ∧ 必要时 → ProvideSupport(省级医疗专家团队, 受灾地区))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“省级卫生厅” — 表示省级卫生厅\",\n            \"Region=“本省（区、市）有关地区” — 表示省级卫生厅需要发出通报的地区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀r (Supervise(省级卫生厅, 受灾地区) → IssueBulletin(省级卫生厅, 本省（区、市）有关地区))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“一般突发公共事件” — 表示发生了一般突发公共事件\",\n            \"GovernmentLevel=“县级人民政府” — 表示县级人民政府\",\n            \"EventType=“一般突发公共事件” — 表示事件类型为一般突发公共事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EmergencyEvent(e) ∧ (ActivateEmergencyPlan(县级人民政府, e) ∨ LevelIVResponse(e))) → LevelIVResponse(e)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“医疗卫生救援一般事件” — 表示发生了医疗卫生救援一般事件\",\n            \"GovernmentLevel=“县级人民政府” — 表示县级人民政府\",\n            \"EventType=“医疗卫生救援一般事件” — 表示事件类型为医疗卫生救援一般事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EmergencyEvent(e) ∧ (ActivateEmergencyPlan(县级人民政府, e) ∨ LevelIVResponse(e))) → LevelIVResponse(e)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“自然灾害” — 表示发生了自然灾害\",\n            \"GovernmentLevel=“县级人民政府” — 表示县级人民政府\",\n            \"EventType=“自然灾害” — 表示事件类型为自然灾害\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EmergencyEvent(e) ∧ (ActivateEmergencyPlan(县级人民政府, e) ∨ LevelIVResponse(e))) → LevelIVResponse(e)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“交通事故” — 表示发生了交通事故\",\n            \"GovernmentLevel=“县级人民政府” — 表示县级人民政府\",\n            \"EventType=“交通事故” — 表示事件类型为交通事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EmergencyEvent(e) ∧ (ActivateEmergencyPlan(县级人民政府, e) ∨ LevelIVResponse(e))) → LevelIVResponse(e)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“县级卫生行政部门” — 表示县级卫生行政部门\",\n            \"t=“医疗卫生救援一般事件” — 表示接到的指示、通报或报告类型\",\n            \"Event=“突发公共事件” — 表示突发公共事件\",\n            \"Experts=“医疗专家团队” — 表示组织调查的专家团队\",\n            \"Patients=“伤病员” — 表示需要调查的伤病员\",\n            \"Treatment=“救治情况” — 表示救治情况\",\n            \"Government=“本级人民政府” — 表示本级人民政府\",\n            \"Command=“突发公共事件应急指挥机构” — 表示突发公共事件应急指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀t (ReceiveInstruction(“县级卫生行政部门”, “医疗卫生救援一般事件”) → (ActivateLeadershipGroup(“县级卫生行政部门”) ∧ OrganizeRescue(“县级卫生行政部门”, “突发公共事件”) ∧ OrganizeExpertInvestigation(“医疗专家团队”, “伤病员”, “救治情况”) ∧ ReportSituation(“县级卫生行政部门”, “本级人民政府”, “突发公共事件应急指挥机构”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“县级卫生行政部门” — 表示县级卫生行政部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (ActivateLeadershipGroup(“县级卫生行政部门”) → ActivateEmergencyPlan(“县级卫生行政部门”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“市（地）级卫生行政部门” — 表示市（地）级卫生行政部门\",\n            \"e=“突发公共事件医疗卫生救援” — 表示突发公共事件医疗卫生救援\",\n            \"p=“医疗专家” — 表示医疗专家\",\n            \"t=“突发公共事件” — 表示突发公共事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃d ∃e (TechnicalGuidance(“市（地）级卫生行政部门”, “突发公共事件医疗卫生救援”) → (∃p ∃t (Expert(“医疗专家”) ∧ PublicEvent(“突发公共事件”) ∧ Rescue(“医疗专家”, “突发公共事件”))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=“医疗救援队1号” — 表示医疗卫生救援应急队伍为医疗救援队1号\",\n            \"Scene=“地震灾区” — 表示事故现场为地震灾区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t (ReceiveRescueOrder(医疗救援队1号) → (GoToScene(医疗救援队1号) ∧ CarryOutRescue(医疗救援队1号, 地震灾区)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“医疗救援队2号” — 表示医疗卫生救援应急队伍为医疗救援队2号\",\n            \"Scene=“洪水受灾区” — 表示事故现场为洪水受灾区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t (CarryOutRescue(医疗救援队2号, 洪水受灾区) → (ActiveTreatment(医疗救援队2号) ∧ FocusOnSelfProtection(医疗救援队2号)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“市卫生局” — 表示有关卫生行政部门为市卫生局\",\n            \"Leader=“局长” — 表示主要或分管领导同志为局长\",\n            \"CommandPost=“现场医疗卫生救援指挥部” — 表示现场医疗卫生救援指挥部\",\n            \"IncidentCommand=“突发公共事件现场处置指挥机构” — 表示突发公共事件现场处置指挥机构\",\n            \"RescueTeams=“各救援部门” — 表示现场各救援部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (SetUpCommandPost(市卫生局) → (OnSiteLeadership(局长) ∧ AcceptLeadership(现场医疗卫生救援指挥部, 突发公共事件现场处置指挥机构) ∧ EnhanceCommunication(现场医疗卫生救援指挥部, 各救援部门)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=“医疗救援队1号” — 表示医疗卫生救援应急队伍为医疗救援队1号\",\n            \"i=“伤员A” — 表示伤员为伤员A\",\n            \"Category=“重度” — 表示伤员的分类是重度\",\n            \"Color=“红色” — 表示伤员的分类颜色是红色\",\n            \"BodyPart=“手腕” — 表示腕带扣系在伤员的手腕\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t ∀i (ArriveAtScene(医疗救援队1号) ∧ Injured(伤员A) → (TransferInjured(医疗救援队1号, 伤员A) ∧ Triage(伤员A, 重度) ∧ Categorize(伤员A, 红色) ∧ AttachWristband(伤员A, 手腕, 红色)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“医疗救援队2号” — 表示医疗卫生救援应急队伍为医疗救援队2号\",\n            \"i=“伤员B” — 表示伤员为伤员B\",\n            \"Category=“中度” — 表示伤员的分类是中度\",\n            \"Color=“黄色” — 表示伤员的分类颜色是黄色\",\n            \"BodyPart=“脚踝” — 表示腕带扣系在伤员的脚踝\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t ∀i (ArriveAtScene(医疗救援队2号) ∧ Injured(伤员B) → (TransferInjured(医疗救援队2号, 伤员B) ∧ Triage(伤员B, 中度) ∧ Categorize(伤员B, 黄色) ∧ AttachWristband(伤员B, 脚踝, 黄色)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“医疗救援队3号” — 表示医疗卫生救援应急队伍为医疗救援队3号\",\n            \"i=“伤员C” — 表示伤员为伤员C\",\n            \"Category=“轻度” — 表示伤员的分类是轻度\",\n            \"Color=“蓝色” — 表示伤员的分类颜色是蓝色\",\n            \"BodyPart=“手腕” — 表示腕带扣系在伤员的手腕\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t ∀i (ArriveAtScene(医疗救援队3号) ∧ Injured(伤员C) → (TransferInjured(医疗救援队3号, 伤员C) ∧ Triage(伤员C, 轻度) ∧ Categorize(伤员C, 蓝色) ∧ AttachWristband(伤员C, 手腕, 蓝色)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“医疗救援队4号” — 表示医疗卫生救援应急队伍为医疗救援队4号\",\n            \"i=“伤员D” — 表示伤员为伤员D\",\n            \"Category=“危重” — 表示伤员的分类是危重\",\n            \"Color=“黑色” — 表示伤员的分类颜色是黑色\",\n            \"BodyPart=“脚踝” — 表示腕带扣系在伤员的脚踝\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t ∀i (ArriveAtScene(医疗救援队4号) ∧ Injured(伤员D) → (TransferInjured(医疗救援队4号, 伤员D) ∧ Triage(伤员D, 危重) ∧ Categorize(伤员D, 黑色) ∧ AttachWristband(伤员D, 脚踝, 黑色)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“地震灾区” — 表示现场环境处于危险\",\n            \"p=“伤员A” — 表示待转送的伤病员\",\n            \"m=“医生1” — 表示负责填写转运卡的医护人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s∀p (DangerousEnvironment(地震灾区) ∨ PermittedTransfer(伤员A) → (Reexamine(伤员A) ∧ (∃m RescueTreat(伤员A) ∧ ContinueTreatment(伤员A)) ∧ FillTransferCard(伤员A, 医生1) ∧ MonitorCondition(医生1, 伤员A) ∧ ScientificHandling(伤员A)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"h=“医院X” — 表示医疗机构\",\n            \"p=“伤员B” — 表示待转送的伤病员\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀h∀p (¬RefuseTreatment(医院X, 伤员B))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“伤员C” — 表示待转送的伤病员\",\n            \"Command=“现场医疗卫生救援指挥部” — 表示现场医疗卫生救援指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (DivertTransfer(伤员C, 现场医疗卫生救援指挥部))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“火灾现场” — 表示现场环境处于危险\",\n            \"p=“伤员D” — 表示待转送的伤病员\",\n            \"m=“护士2” — 表示负责填写转运卡的医护人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s∀p (DangerousEnvironment(火灾现场) ∨ PermittedTransfer(伤员D) → (Reexamine(伤员D) ∧ (∃m RescueTreat(伤员D) ∧ ContinueTreatment(伤员D)) ∧ FillTransferCard(伤员D, 护士2) ∧ MonitorCondition(护士2, 伤员D) ∧ ScientificHandling(伤员D)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"h=“医院Y” — 表示医疗机构\",\n            \"p=“伤员E” — 表示待转送的伤病员\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀h∀p (¬RefuseTreatment(医院Y, 伤员E))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“伤员F” — 表示待转送的伤病员\",\n            \"Command=“现场医疗卫生救援指挥部” — 表示现场医疗卫生救援指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (DivertTransfer(伤员F, 现场医疗卫生救援指挥部))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"E=“H市流感爆发” — 表示H市发生了流感爆发这一突发公共事件\",\n            \"D=“H市卫生局” — 表示H市卫生局负责组织\",\n            \"P=“H市疾病预防控制中心” — 表示H市疾病预防控制中心为专业机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (EmergencyEvent(H市流感爆发) → ∃D ∃P (Organize(H市卫生局, H市疾病预防控制中心) ∧ (Conduct(EpidemiologicalSurvey, H市疾病预防控制中心) ∨ Conduct(HealthLawEnforcement, H市疾病预防控制中心)) ∧ TakePreventiveMeasures(H市卫生局) → PreventSecondaryPublicHealthEvents(H市卫生局)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“G区食物中毒事件” — 表示G区发生了食物中毒事件\",\n            \"D=“G区卫生监督所” — 表示G区卫生监督所负责组织\",\n            \"P=“G区卫生监督执法队” — 表示G区卫生监督执法队为专业机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (EmergencyEvent(G区食物中毒事件) → ∃D ∃P (Organize(G区卫生监督所, G区卫生监督执法队) ∧ (Conduct(EpidemiologicalSurvey, G区卫生监督执法队) ∨ Conduct(HealthLawEnforcement, G区卫生监督执法队)) ∧ TakePreventiveMeasures(G区卫生监督所) → PreventSecondaryPublicHealthEvents(G区卫生监督所)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“F省水污染事件” — 表示F省发生了水污染事件\",\n            \"D=“F省疾病预防控制中心” — 表示F省疾病预防控制中心负责组织\",\n            \"P=“F省环境健康研究所” — 表示F省环境健康研究所为专业机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (EmergencyEvent(F省水污染事件) → ∃D ∃P (Organize(F省疾病预防控制中心, F省环境健康研究所) ∧ (Conduct(EpidemiologicalSurvey, F省环境健康研究所) ∨ Conduct(HealthLawEnforcement, F省环境健康研究所)) ∧ TakePreventiveMeasures(F省疾病预防控制中心) → PreventSecondaryPublicHealthEvents(F省疾病预防控制中心)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“B市地震灾害” — 表示B市发生了地震灾害\",\n            \"D=“B市卫生应急办公室” — 表示B市卫生应急办公室负责组织\",\n            \"P=“B市紧急医疗救援队” — 表示B市紧急医疗救援队为专业机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (EmergencyEvent(B市地震灾害) → ∃D ∃P (Organize(B市卫生应急办公室, B市紧急医疗救援队) ∧ (Conduct(EpidemiologicalSurvey, B市紧急医疗救援队) ∨ Conduct(HealthLawEnforcement, B市紧急医疗救援队)) ∧ TakePreventiveMeasures(B市卫生应急办公室) → PreventSecondaryPublicHealthEvents(B市卫生应急办公室)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“医疗急救中心1号” — 表示医疗急救中心1号接到了关于突发公共事件的报告\",\n            \"e=“地震灾害” — 表示突发公共事件为地震灾害\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀e (ReceiveReport(医疗急救中心1号, 地震灾害) ∧ (医疗急救中心1号 = 医疗急救中心 ∨ 医疗急救中心1号 = 其他医疗机构) → (CarryOutRescue(医疗急救中心1号) ∧ ReportSituation(医疗急救中心1号, 现场医疗卫生救援指挥部, 人员伤亡情况) ∧ ReportSituation(医疗急救中心1号, 当地卫生行政部门, 人员伤亡情况)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“市立医院” — 表示市立医院接到了关于突发公共事件的报告\",\n            \"e=“化学泄露” — 表示突发公共事件为化学泄露\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀e (ReceiveReport(市立医院, 化学泄露) ∧ (市立医院 = 医疗急救中心 ∨ 市立医院 = 其他医疗机构) → (CarryOutRescue(市立医院) ∧ ReportSituation(市立医院, 现场医疗卫生救援指挥部, 人员伤亡情况) ∧ ReportSituation(市立医院, 当地卫生行政部门, 人员伤亡情况)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“省级医院” — 表示省级医院承担医疗卫生救援任务\",\n            \"r=“医疗救治进展” — 表示省级医院每日向上级卫生行政部门报告医疗救治进展\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀r (承担医疗卫生救援任务(省级医院) → (DailyReport(省级医院, 上级卫生行政部门, 伤病员情况) ∧ DailyReport(省级医院, 上级卫生行政部门, 医疗救治进展) ∧ (∃i (重要情况(i) → ReportAsNeeded(省级医院, 上级卫生行政部门, i))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“市卫生局” — 表示市卫生局是有关卫生行政部门\",\n            \"i=“救援物资短缺” — 表示市卫生局需要随时报告的重要情况\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (有关卫生行政部门(市卫生局) → (ReportSituation(市卫生局, 本级人民政府, 有关情况) ∧ ReportSituation(市卫生局, 突发公共事件应急指挥机构, 有关情况)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家卫生部门” — 表示国家卫生部门是各级卫生行政部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (各级卫生行政部门(国家卫生部门) → PublishInformation(国家卫生部门, 突发公共事件医疗卫生救援信息))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“地震灾害” — 表示突发公共事件为地震灾害\",\n            \"Hospital=“市立医院” — 表示伤病员在市立医院得到救治\",\n            \"Government=“市级人民政府” — 表示市级人民政府\",\n            \"EmergencyCommand=“市级应急指挥机构” — 表示市级应急指挥机构\",\n            \"HealthDepartment=“市级卫生行政部门” — 表示市级卫生行政部门\",\n            \"RescueTeam=“医疗卫生救援领导小组” — 表示医疗卫生救援领导小组\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (MedicalRescueCompleted(“地震灾害”) ∧ PatientsTreated(“市立医院”) → (Approved(“市级人民政府”, “地震灾害”) ∨ Approved(“市级应急指挥机构”, “地震灾害”) ∨ Approved(“市级卫生行政部门”, “地震灾害”) → (AnnounceTermination(“医疗卫生救援领导小组”, “地震灾害”) ∧ Report(“医疗卫生救援领导小组”, “市级卫生行政部门”, “地震灾害”))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“洪水灾害” — 表示突发公共事件为洪水灾害\",\n            \"Hospital=“县立医院” — 表示伤病员在县立医院得到救治\",\n            \"Government=“县级人民政府” — 表示县级人民政府\",\n            \"EmergencyCommand=“县级应急指挥机构” — 表示县级应急指挥机构\",\n            \"HealthDepartment=“县级卫生行政部门” — 表示县级卫生行政部门\",\n            \"RescueTeam=“医疗卫生救援领导小组” — 表示医疗卫生救援领导小组\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (MedicalRescueCompleted(“洪水灾害”) ∧ PatientsTreated(“县立医院”) → (Approved(“县级人民政府”, “洪水灾害”) ∨ Approved(“县级应急指挥机构”, “洪水灾害”) ∨ Approved(“县级卫生行政部门”, “洪水灾害”) → (AnnounceTermination(“医疗卫生救援领导小组”, “洪水灾害”) ∧ Report(“医疗卫生救援领导小组”, “县级卫生行政部门”, “洪水灾害”))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“重大交通事故” — 表示突发公共事件为重大交通事故\",\n            \"Hospital=“省级医院” — 表示伤病员在省级医院得到救治\",\n            \"Government=“省级人民政府” — 表示省级人民政府\",\n            \"EmergencyCommand=“省级应急指挥机构” — 表示省级应急指挥机构\",\n            \"HealthDepartment=“省级卫生行政部门” — 表示省级卫生行政部门\",\n            \"RescueTeam=“医疗卫生救援领导小组” — 表示医疗卫生救援领导小组\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (MedicalRescueCompleted(“重大交通事故”) ∧ PatientsTreated(“省级医院”) → (Approved(“省级人民政府”, “重大交通事故”) ∨ Approved(“省级应急指挥机构”, “重大交通事故”) ∨ Approved(“省级卫生行政部门”, “重大交通事故”) → (AnnounceTermination(“医疗卫生救援领导小组”, “重大交通事故”) ∧ Report(“医疗卫生救援领导小组”, “省级卫生行政部门”, “重大交通事故”))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“国家卫生行政部门” — 表示国家级的卫生行政部门\",\n            \"t=“国家医疗卫生救援应急队伍” — 表示国家级医疗卫生救援应急队伍\",\n            \"p=“国家医疗卫生救援应急技术方案” — 表示国家级医疗卫生救援应急技术方案\",\n            \"h=“国家医疗救治信息网络” — 表示国家医疗救治信息网络\",\n            \"d1=“国家卫生行政部门” — 表示国家级卫生行政部门\",\n            \"d2=“应急管理部门” — 表示应急管理部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(国家卫生行政部门) → (FollowPrinciple(国家卫生行政部门, '平战结合、常备不懈') ∧ StrengthenOrganization(国家卫生行政部门))\",\n            \"Department(国家卫生行政部门) → FormulateTeam(国家医疗卫生救援应急队伍) ∧ Construction(国家医疗卫生救援应急队伍)\",\n            \"Department(国家卫生行政部门) → FormulatePlan(国家医疗卫生救援应急技术方案) ∧ Construction(国家医疗卫生救援应急技术方案)\",\n            \"Organization(国家医疗救治信息网络) ∧ Organization(国家卫生行政部门) ∧ Organization(应急管理部门) → InformationSharing(国家医疗救治信息网络, 国家卫生行政部门) ∧ InformationSharing(国家卫生行政部门, 应急管理部门)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“省级卫生行政部门” — 表示省级的卫生行政部门\",\n            \"t=“省级医疗卫生救援应急队伍” — 表示省级医疗卫生救援应急队伍\",\n            \"p=“省级医疗卫生救援应急技术方案” — 表示省级医疗卫生救援应急技术方案\",\n            \"h=“省级医疗救治信息网络” — 表示省级医疗救治信息网络\",\n            \"d1=“省级卫生行政部门” — 表示省级卫生行政部门\",\n            \"d2=“省级应急管理部门” — 表示省级应急管理部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(省级卫生行政部门) → (FollowPrinciple(省级卫生行政部门, '平战结合、常备不懈') ∧ StrengthenOrganization(省级卫生行政部门))\",\n            \"Department(省级卫生行政部门) → FormulateTeam(省级医疗卫生救援应急队伍) ∧ Construction(省级医疗卫生救援应急队伍)\",\n            \"Department(省级卫生行政部门) → FormulatePlan(省级医疗卫生救援应急技术方案) ∧ Construction(省级医疗卫生救援应急技术方案)\",\n            \"Organization(省级医疗救治信息网络) ∧ Organization(省级卫生行政部门) ∧ Organization(省级应急管理部门) → InformationSharing(省级医疗救治信息网络, 省级卫生行政部门) ∧ InformationSharing(省级卫生行政部门, 省级应急管理部门)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“市级卫生行政部门” — 表示市级的卫生行政部门\",\n            \"t=“市级医疗卫生救援应急队伍” — 表示市级医疗卫生救援应急队伍\",\n            \"p=“市级医疗卫生救援应急技术方案” — 表示市级医疗卫生救援应急技术方案\",\n            \"h=“市级医疗救治信息网络” — 表示市级医疗救治信息网络\",\n            \"d1=“市级卫生行政部门” — 表示市级卫生行政部门\",\n            \"d2=“市级应急管理部门” — 表示市级应急管理部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(市级卫生行政部门) → (FollowPrinciple(市级卫生行政部门, '平战结合、常备不懈') ∧ StrengthenOrganization(市级卫生行政部门))\",\n            \"Department(市级卫生行政部门) → FormulateTeam(市级医疗卫生救援应急队伍) ∧ Construction(市级医疗卫生救援应急队伍)\",\n            \"Department(市级卫生行政部门) → FormulatePlan(市级医疗卫生救援应急技术方案) ∧ Construction(市级医疗卫生救援应急技术方案)\",\n            \"Organization(市级医疗救治信息网络) ∧ Organization(市级卫生行政部门) ∧ Organization(市级应急管理部门) → InformationSharing(市级医疗救治信息网络, 市级卫生行政部门) ∧ InformationSharing(市级卫生行政部门, 市级应急管理部门)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“北京” — 北京为直辖市\",\n            \"s=“高” — 服务人口需求高\",\n            \"医疗救治需求：高\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (直辖市(c) ∨ 省会城市(c) → (∃s (服务人口需求(c, s) ∧ 医疗救治需求(c, s) → (EstablishEmergencyCenter(c) ∧ ImproveEmergencyNetwork(c))))\",\n            \"∀c (市(c) ∨ 县(c) → (∃h (StrongComprehensivePower(h) → EstablishEmergencyService(c, h))))\",\n            \"北京是直辖市，服务人口需求高，医疗救治需求高，因此建立急救中心并完善急救网络。\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“上海” — 上海为直辖市\",\n            \"h=“上海华东医院” — 上海华东医院综合力量强\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (直辖市(c) ∨ 省会城市(c) → (∃s (服务人口需求(c, s) ∧ 医疗救治需求(c, s) → (EstablishEmergencyCenter(c) ∧ ImproveEmergencyNetwork(c))))\",\n            \"∀c (市(c) ∨ 县(c) → (∃h (StrongComprehensivePower(h) → EstablishEmergencyService(c, h))))\",\n            \"上海是直辖市，上海华东医院综合力量强，因此依托上海华东医院建立急救机构。\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“广州” — 广州为省会城市\",\n            \"s=“中” — 服务人口需求中等\",\n            \"医疗救治需求：中\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (直辖市(c) ∨ 省会城市(c) → (∃s (服务人口需求(c, s) ∧ 医疗救治需求(c, s) → (EstablishEmergencyCenter(c) ∧ ImproveEmergencyNetwork(c))))\",\n            \"∀c (市(c) ∨ 县(c) → (∃h (StrongComprehensivePower(h) → EstablishEmergencyService(c, h))))\",\n            \"广州是省会城市，服务人口需求中等，医疗救治需求中等，因此建立急救中心并完善急救网络。\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“杭州市” — 杭州市为地级市\",\n            \"h=“杭州市第一人民医院” — 杭州市第一人民医院综合力量强\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (直辖市(c) ∨ 省会城市(c) → (∃s (服务人口需求(c, s) ∧ 医疗救治需求(c, s) → (EstablishEmergencyCenter(c) ∧ ImproveEmergencyNetwork(c))))\",\n            \"∀c (市(c) ∨ 县(c) → (∃h (StrongComprehensivePower(h) → EstablishEmergencyService(c, h))))\",\n            \"杭州市是地级市，杭州市第一人民医院综合力量强，因此依托杭州市第一人民医院建立急救机构。\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“成都市” — 成都市为省会城市\",\n            \"s=“高” — 服务人口需求高\",\n            \"医疗救治需求：高\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (直辖市(c) ∨ 省会城市(c) → (∃s (服务人口需求(c, s) ∧ 医疗救治需求(c, s) → (EstablishEmergencyCenter(c) ∧ ImproveEmergencyNetwork(c))))\",\n            \"∀c (市(c) ∨ 县(c) → (∃h (StrongComprehensivePower(h) → EstablishEmergencyService(c, h))))\",\n            \"成都市是省会城市，服务人口需求高，医疗救治需求高，因此建立急救中心并完善急救网络。\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“市立专业防治中心” — 表示专业防治机构为市立专业防治中心\",\n            \"Type=“化学中毒医疗救治” — 表示建立的组织类型为化学中毒医疗救治\",\n            \"Type=“核辐射应急医疗救治” — 表示建立的组织类型为核辐射应急医疗救治\"\n        ],\n        \"instance_logicexpression\": [\n            \"ProfessionalPreventionOrganization(市立专业防治中心) ∨ GeneralHospital(市立专业防治中心) → (Establish(市立专业防治中心, 化学中毒医疗救治) ∧ Establish(市立专业防治中心, 核辐射应急医疗救治))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“仁爱综合医院” — 表示综合医院为仁爱综合医院\",\n            \"h=“仁爱综合医院” — 表示综合医院为仁爱综合医院\",\n            \"Type=“化学中毒医疗救治” — 表示专业科室类型为化学中毒医疗救治\",\n            \"Type=“核辐射应急医疗救治” — 表示专业科室类型为核辐射应急医疗救治\"\n        ],\n        \"instance_logicexpression\": [\n            \"GeneralHospital(仁爱综合医院) ∧ StrongCapability(仁爱综合医院) → (SpecializedDepartment(仁爱综合医院, 化学中毒医疗救治) ∧ SpecializedDepartment(仁爱综合医院, 核辐射应急医疗救治))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家核应急中心” — 表示专业防治机构为国家核应急中心\",\n            \"Type=“化学中毒医疗救治” — 表示建立的组织类型为化学中毒医疗救治\",\n            \"Type=“核辐射应急医疗救治” — 表示建立的组织类型为核辐射应急医疗救治\"\n        ],\n        \"instance_logicexpression\": [\n            \"ProfessionalPreventionOrganization(国家核应急中心) ∨ GeneralHospital(国家核应急中心) → (Establish(国家核应急中心, 化学中毒医疗救治) ∧ Establish(国家核应急中心, 核辐射应急医疗救治))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“中心综合医院” — 表示综合医院为中心综合医院\",\n            \"h=“中心综合医院” — 表示综合医院为中心综合医院\",\n            \"Type=“化学中毒医疗救治” — 表示专业科室类型为化学中毒医疗救治\",\n            \"Type=“核辐射应急医疗救治” — 表示专业科室类型为核辐射应急医疗救治\"\n        ],\n        \"instance_logicexpression\": [\n            \"GeneralHospital(中心综合医院) ∧ StrongCapability(中心综合医院) → (SpecializedDepartment(中心综合医院, 化学中毒医疗救治) ∧ SpecializedDepartment(中心综合医院, 核辐射应急医疗救治))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“市级卫生局” — 表示市级卫生行政部门\",\n            \"t=“综合性医疗卫生救援应急队伍” — 表示综合性医疗卫生救援应急队伍类型\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀t (Department(市级卫生局) ∧ TeamType(综合性医疗卫生救援应急队伍) → (FormTeam(市级卫生局, 综合性医疗卫生救援应急队伍) ∧ Need(综合性医疗卫生救援应急队伍)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“省级卫生厅” — 表示省级卫生行政部门\",\n            \"t=“特殊专业医疗卫生救援应急队伍” — 表示特殊专业医疗卫生救援应急队伍类型\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀t (Department(省级卫生厅) ∧ TeamType(特殊专业医疗卫生救援应急队伍) → (FormTeam(省级卫生厅, 特殊专业医疗卫生救援应急队伍) ∧ Need(特殊专业医疗卫生救援应急队伍)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“区级卫生所” — 表示区级卫生行政部门\",\n            \"Team=“综合性医疗卫生救援应急队伍” — 表示综合性医疗卫生救援应急队伍\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀t (Department(区级卫生所) ∧ Team(综合性医疗卫生救援应急队伍) → (EnsureStability(区级卫生所, 综合性医疗卫生救援应急队伍) ∧ StrictManagement(区级卫生所, 综合性医疗卫生救援应急队伍) ∧ RegularTraining(区级卫生所, 综合性医疗卫生救援应急队伍) ∧ ImproveCapability(区级卫生所, 综合性医疗卫生救援应急队伍)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“2023年市级医疗卫生救援演练” — 表示需要公众参与的医疗卫生救援演练\",\n            \"GovernmentLevel=“市级人民政府” — 表示本级人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"PublicParticipation(2023年市级医疗卫生救援演练) → GovernmentApproval(2023年市级医疗卫生救援演练, 市级人民政府)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家级卫生部门” — 表示国家级卫生行政部门\",\n            \"Team=“特殊专业医疗卫生救援应急队伍” — 表示特殊专业医疗卫生救援应急队伍\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀t (Department(国家级卫生部门) ∧ Team(特殊专业医疗卫生救援应急队伍) → (EnsureStability(国家级卫生部门, 特殊专业医疗卫生救援应急队伍) ∧ StrictManagement(国家级卫生部门, 特殊专业医疗卫生救援应急队伍) ∧ RegularTraining(国家级卫生部门, 特殊专业医疗卫生救援应急队伍) ∧ ImproveCapability(国家级卫生部门, 特殊专业医疗卫生救援应急队伍)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“应急药品储备计划” — 表示卫生行政部门提出的应急药品储备计划建议\",\n            \"t=“生产应急药品” — 表示发展改革部门负责生产应急药品的任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (Propose(卫生行政部门, “应急药品储备计划”) → (∃t (Responsible(发展改革部门, t) ∧ (t = 生产应急药品)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“医疗器械储备计划” — 表示卫生行政部门提出的医疗器械储备计划建议\",\n            \"t=“储备医疗器械” — 表示发展改革部门负责储备医疗器械的任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (Propose(卫生行政部门, “医疗器械储备计划”) → (∃t (Responsible(发展改革部门, t) ∧ (t = 储备医疗器械)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“调运快速检测器材” — 表示发展改革部门负责调运快速检测器材的任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Responsible(发展改革部门, “调运快速检测器材”) → (EnsureSupply(发展改革部门) ∧ MaintainMarketOrder(发展改革部门) ∧ KeepPriceStable(发展改革部门)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“卫生防护用品” — 表示应急储备物资中的卫生防护用品\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀m (应急储备物资使用(“卫生防护用品”) → TimelyReplenish(发展改革部门))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“地震” — 表示事件为地震\",\n            \"Department=“财政部门”\"\n        ],\n        \"instance_logicexpression\": [\n            \"突发公共事件(地震) → (ArrangeFunds(财政部门, 地震) ∧ Supervise(财政部门, 地震))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“洪水” — 表示事件为洪水\",\n            \"Department=“财政部门”\"\n        ],\n        \"instance_logicexpression\": [\n            \"自然灾害(洪水) ∧ 人员伤亡(洪水) → (BearCosts(财政部门, 洪水) ∨ ProvideSubsidy(财政部门, 洪水))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“化工厂爆炸” — 表示事件为化工厂爆炸\",\n            \"Unit=“化工厂”\",\n            \"Center=“医疗急救中心”\"\n        ],\n        \"instance_logicexpression\": [\n            \"安全生产事故(化工厂爆炸) ∧ 人员伤亡(化工厂爆炸) → (PayCosts(化工厂, 医疗急救中心) ∧ UrgeImplementation(有关部门, 化工厂))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“恐怖袭击” — 表示事件为恐怖袭击\",\n            \"u=“袭击策划者” — 表示责任单位为袭击策划者\",\n            \"Department=“有关部门”\"\n        ],\n        \"instance_logicexpression\": [\n            \"社会安全突发事件(恐怖袭击) ∧ 人员伤亡(恐怖袭击) → (BearCosts(袭击策划者, 恐怖袭击) ∧ UrgeImplementation(有关部门, 袭击策划者))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“重大交通事故” — 表示事件为重大交通事故\",\n            \"p=“张三” — 表示伤亡人员为张三\",\n            \"Insurance=“平安保险”\"\n        ],\n        \"instance_logicexpression\": [\n            \"参加保险(张三) ∧ 伤亡人员(张三) → HandleClaims(平安保险, 张三)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“疫情” — 表示事件为疫情\",\n            \"Department=“财政部门”\",\n            \"Policy=“疫情防控政策”\"\n        ],\n        \"instance_logicexpression\": [\n            \"医疗救治(疫情) → (ProvideSubsidy(财政部门, 疫情) ↔ 有关政策规定(疫情防控政策))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=“市级医疗卫生救援队” — 表示应急队伍为市级医疗卫生救援队\",\n            \"e=“救护车辆、交通工具和通讯设备” — 表示需要配备的救护车辆、交通工具和通讯设备\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t∀e (Team(“市级医疗卫生救援队”) → Equip(“市级医疗卫生救援队”, “救护车辆、交通工具和通讯设备”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“铁路部门” — 表示有关部门为铁路部门\",\n            \"p=“医疗卫生救援人员” — 表示医疗卫生救援人员\",\n            \"m=“医疗卫生救援物资” — 表示医疗卫生救援物资\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀p∀m (Department(“铁路部门”) ∧ (Personnel(“医疗卫生救援人员”) ∨ Material(“医疗卫生救援物资”)) → (PriorityArrange(“铁路部门”, “医疗卫生救援人员”, “医疗卫生救援物资”) ∧ PriorityDispatch(“铁路部门”, “医疗卫生救援人员”, “医疗卫生救援物资”) ∧ PriorityRelease(“铁路部门”, “医疗卫生救援人员”, “医疗卫生救援物资”) ∧ EnsureSmoothTransport(“铁路部门”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“事故现场” — 表示现场为事故现场\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (Emergency(“事故现场”) → (TrafficControl(“事故现场”) ∧ GreenChannel(“事故现场”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“省级医疗卫生救援队” — 表示应急队伍为省级医疗卫生救援队\",\n            \"e=“高级生命支持救护车、直升机和卫星通讯设备” — 表示需要配备的高级生命支持救护车、直升机和卫星通讯设备\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t∀e (Team(“省级医疗卫生救援队”) → Equip(“省级医疗卫生救援队”, “高级生命支持救护车、直升机和卫星通讯设备”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“交通管理部门” — 表示有关部门为交通管理部门\",\n            \"p=“紧急医疗救援队” — 表示紧急医疗救援队\",\n            \"m=“急救药品和设备” — 表示急救药品和设备\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀p∀m (Department(“交通管理部门”) ∧ (Personnel(“紧急医疗救援队”) ∨ Material(“急救药品和设备”)) → (PriorityArrange(“交通管理部门”, “紧急医疗救援队”, “急救药品和设备”) ∧ PriorityDispatch(“交通管理部门”, “紧急医疗救援队”, “急救药品和设备”) ∧ PriorityRelease(“交通管理部门”, “紧急医疗救援队”, “急救药品和设备”) ∧ EnsureSmoothTransport(“交通管理部门”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“自然灾害区域” — 表示现场为自然灾害区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (Emergency(“自然灾害区域”) → (TrafficControl(“自然灾害区域”) ∧ GreenChannel(“自然灾害区域”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Police=“市公安局” — 表示市公安局负责维护突发公共事件现场治安秩序。\",\n            \"Police=“市公安局” — 表示市公安局保证现场医疗卫生救援工作的顺利进行。\"\n        ],\n        \"instance_logicexpression\": [\n            \"MaintainOrder(“市公安局”) ∧ EnsureRescue(“市公安局”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"TechDept=“科技局” — 表示科技局制定突发公共事件医疗卫生救援应急技术研究方案。\",\n            \"TechDept=“科技局” — 表示科技局组织科研力量开展医疗卫生救援应急技术科研攻关。\",\n            \"TechDept=“科技局” — 表示科技局统一协调、解决检测技术及药物研发和应用中的科技问题。\"\n        ],\n        \"instance_logicexpression\": [\n            \"DevelopPlan(“科技局”) ∧ Research(“科技局”) ∧ CoordinateSolve(“科技局”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Customs=“海关” — 表示海关负责突发公共事件医疗卫生救援急需进口特殊药品、试剂、器材的优先通关验放工作。\"\n        ],\n        \"instance_logicexpression\": [\n            \"PriorityClearance(“海关”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"FoodDrugDept=“食品药品监管局” — 表示食品药品监管局负责突发公共事件医疗卫生救援药品、医疗器械和设备的监督管理。\",\n            \"FoodDrugDept=“食品药品监管局” — 表示食品药品监管局参与组织特殊药品的研发和生产。\",\n            \"FoodDrugDept=“食品药品监管局” — 表示食品药品监管局组织对特殊药品进口的审批。\"\n        ],\n        \"instance_logicexpression\": [\n            \"Supervise(“食品药品监管局”) ∧ DevelopProduce(“食品药品监管局”) ∧ ApproveImport(“食品药品监管局”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"RedCross=“中国红十字会” — 表示中国红十字会负责组织群众开展现场自救和互救。\",\n            \"RedCross=“中国红十字会” — 表示中国红十字会根据突发公共事件的具体情况，向国内外发出呼吁。\",\n            \"RedCross=“中国红十字会” — 表示中国红十字会依法接受国内外组织和个人的捐赠。\",\n            \"RedCross=“中国红十字会” — 表示中国红十字会提供急需的人道主义援助。\"\n        ],\n        \"instance_logicexpression\": [\n            \"OrganizeSelfRescue(“中国红十字会”) ∧ Appeal(“中国红十字会”) ∧ AcceptDonation(“中国红十字会”) ∧ ProvideAid(“中国红十字会”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"MilitaryHealth=“总后卫生部” — 表示总后卫生部负责组织军队有关医疗卫生技术人员和力量。\",\n            \"MilitaryHealth=“总后卫生部” — 表示总后卫生部支持和配合突发公共事件医疗卫生救援工作。\"\n        ],\n        \"instance_logicexpression\": [\n            \"OrganizeMilitary(“总后卫生部”) ∧ Support(“总后卫生部”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“国家卫生健康委员会” — 表示国家卫生健康委员会作为组织部门\",\n            \"t=“医疗卫生救援知识普及” — 表示任务为医疗卫生救援知识普及\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(国家卫生健康委员会) ∧ Task(t, '医疗卫生救援知识普及') → OrganizeWork(国家卫生健康委员会, t)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“中央电视台” — 表示中央电视台作为媒介\",\n            \"a=“社会公众” — 表示受众为社会公众\"\n        ],\n        \"instance_logicexpression\": [\n            \"Medium(中央电视台, '广播、电视、报刊、互联网') ∧ Audience(社会公众, '社会公众') → PublicityEducation(中央电视台, 社会公众)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“某大型企业” — 表示某大型企业作为组织\",\n            \"p=“企业员工” — 表示人员为企业员工\"\n        ],\n        \"instance_logicexpression\": [\n            \"Organization(某大型企业) ∧ Personnel(企业员工, '所属人员') → EnhanceEducation(某大型企业, 企业员工)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“市立医院” — 表示市立医院作为医疗卫生机构\",\n            \"m=“救援手册” — 表示宣传资料为救援手册\"\n        ],\n        \"instance_logicexpression\": [\n            \"Institution(市立医院, '医疗卫生机构') ∧ Material(救援手册, '宣传资料') → ProvideMaterials(市立医院, 救援手册)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“市立医院” — 表示市立医院作为医疗卫生机构\",\n            \"p=“医生” — 表示人员为医生\"\n        ],\n        \"instance_logicexpression\": [\n            \"Institution(市立医院, '医疗卫生机构') ∧ Personnel(医生, '师资') → TeacherTraining(市立医院, 医生)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"n=“城市救援网络” — 表示城市救援网络作为群众性救助网络\",\n            \"p=“公安干警、企事业单位安全员和卫生员” — 表示人员为公安干警、企事业单位安全员和卫生员\"\n        ],\n        \"instance_logicexpression\": [\n            \"Network(城市救援网络, '群众性救助网络') ∧ Personnel(公安干警、企事业单位安全员和卫生员, '公安干警、企事业单位安全员和卫生员') → BuildRescueNetwork(城市救援网络, 公安干警、企事业单位安全员和卫生员)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“市立医院” — 表示市立医院作为医疗卫生机构\",\n            \"p=“公安干警、企事业单位安全员和卫生员” — 表示人员为公安干警、企事业单位安全员和卫生员\"\n        ],\n        \"instance_logicexpression\": [\n            \"Institution(市立医院, '医疗卫生机构') ∧ Personnel(公安干警、企事业单位安全员和卫生员, '公安干警、企事业单位安全员和卫生员') → ImproveSelfRescue(市立医院, 公安干警、企事业单位安全员和卫生员)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o.Quantity=501吨 — 表示溢油量超过500吨\",\n            \"o.Area=“珊瑚礁保护区” — 表示受影响区域位于敏感区域\",\n            \"o.Impact=“重大” — 表示事件可能造成重大国际影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (OilSpill(501, “珊瑚礁保护区”, “重大”) → (501 > 500 ∧ (SensitiveArea(“珊瑚礁保护区”) ∨ MajorInternationalImpact(“重大”) ∨ MajorSocialImpact(“重大”))) ∨ (501 > 1000) → EmergencyResponse(OilSpill(501, “珊瑚礁保护区”, “重大”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o.Quantity=1200吨 — 表示溢油量超过1000吨\",\n            \"o.Area=“国际航道” — 表示受影响区域可能造成重大国际影响\",\n            \"o.Impact=“无” — 表示事件没有造成重大社会影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (OilSpill(1200, “国际航道”, “无”) → (1200 > 500 ∧ (SensitiveArea(“国际航道”) ∨ MajorInternationalImpact(“无”) ∨ MajorSocialImpact(“无”))) ∨ (1200 > 1000) → EmergencyResponse(OilSpill(1200, “国际航道”, “无”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o.Quantity=450吨 — 表示溢油量未超过500吨\",\n            \"o.Area=“近海渔场” — 表示受影响区域位于敏感区域\",\n            \"o.Impact=“无” — 表示事件没有造成重大社会影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (OilSpill(450, “近海渔场”, “无”) → (450 > 500 ∧ (SensitiveArea(“近海渔场”) ∨ MajorInternationalImpact(“无”) ∨ MajorSocialImpact(“无”))) ∨ (450 > 1000) → EmergencyResponse(OilSpill(450, “近海渔场”, “无”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o.Quantity=800吨 — 表示溢油量超过500吨\",\n            \"o.Area=“沿海城市” — 表示受影响区域可能造成重大社会影响\",\n            \"o.Impact=“重大” — 表示事件造成了重大社会影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (OilSpill(800, “沿海城市”, “重大”) → (800 > 500 ∧ (SensitiveArea(“沿海城市”) ∨ MajorInternationalImpact(“重大”) ∨ MajorSocialImpact(“重大”))) ∨ (800 > 1000) → EmergencyResponse(OilSpill(800, “沿海城市”, “重大”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"OilSpill(“东海”) — 表示在东海发生了溢油事件\",\n            \"EmergencyAction(“海上围油栏布设”) — 表示布设海上围油栏的应急行动\",\n            \"ControlPollution(“海上围油栏布设”) — 表示布设海上围油栏的行动旨在控制污染\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (OilSpill(“东海”) → (EmergencyAction(“海上围油栏布设”) ∧ ControlPollution(“海上围油栏布设”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"OilSpill(“南海”) — 表示在南海发生了溢油事件\",\n            \"EmergencyAction(“化学分散剂喷洒”) — 表示喷洒化学分散剂的应急行动\",\n            \"ReduceDamage(“化学分散剂喷洒”) — 表示喷洒化学分散剂的行动旨在减轻损害\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (OilSpill(“南海”) → (EmergencyAction(“化学分散剂喷洒”) ∧ ReduceDamage(“化学分散剂喷洒”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"OilSpill(“黄海”) — 表示在黄海发生了溢油事件\",\n            \"EmergencyAction(“油污回收”) — 表示进行油污回收的应急行动\",\n            \"EliminatePollution(“油污回收”) — 表示油污回收的行动旨在消除污染\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (OilSpill(“黄海”) → (EmergencyAction(“油污回收”) ∧ EliminatePollution(“油污回收”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"OilSpill(“渤海”) — 表示在渤海发生了溢油事件\",\n            \"EmergencyAction(“海上交通管制”) — 表示实施海上交通管制的应急行动\",\n            \"PreventPollution(“海上交通管制”) — 表示海上交通管制的行动旨在防止污染\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (OilSpill(“渤海”) → (EmergencyAction(“海上交通管制”) ∧ PreventPollution(“海上交通管制”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"OilSpill(“西沙群岛”) — 表示在西沙群岛发生了溢油事件\",\n            \"EmergencyAction(“环境监测”) — 表示进行环境监测的应急行动\",\n            \"MonitorPollution(“环境监测”) — 表示环境监测的行动旨在监视污染\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (OilSpill(“西沙群岛”) → (EmergencyAction(“环境监测”) ∧ MonitorPollution(“环境监测”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“海上溢油事件1” — 表示一个具体的海上溢油事件\",\n            \"Government=“广东省人民政府” — 表示地方政府为广东省人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"Incident(海上溢油事件1) → ResponsibleForResponse(广东省人民政府, 海上溢油事件1)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海上溢油事件2” — 表示另一个具体的海上溢油事件\",\n            \"ProvincialGovernment=“江苏省人民政府” — 表示相关省级人民政府为江苏省人民政府\",\n            \"AdministrativeAuthorities=“国家海洋局” — 表示行业行政主管部门为国家海洋局\",\n            \"EnterprisesAndInstitutions=“中海油公司” — 表示相关企事业单位为中海油公司\"\n        ],\n        \"instance_logicexpression\": [\n            \"MajorMarineOilSpill(海上溢油事件2) → (CarryOutInitialResponse(江苏省人民政府, 海上溢油事件2) ∧ CarryOutInitialResponse(国家海洋局, 海上溢油事件2) ∧ CarryOutInitialResponse(中海油公司, 海上溢油事件2))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海上溢油事件3” — 表示第三个具体的海上溢油事件\",\n            \"NeedForSupport=“是” — 表示需要国家层面的支持\"\n        ],\n        \"instance_logicexpression\": [\n            \"MajorMarineOilSpill(海上溢油事件3) ∧ NeedForSupport(是) → ProvideSupportAndCoordination(National, 海上溢油事件3)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海上溢油事件4” — 表示第四个具体的海上溢油事件\",\n            \"Government=“浙江省人民政府” — 表示地方政府为浙江省人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"Incident(海上溢油事件4) → ResponsibleForResponse(浙江省人民政府, 海上溢油事件4)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海上溢油事件5” — 表示第五个具体的海上溢油事件\",\n            \"ProvincialGovernment=“海南省人民政府” — 表示相关省级人民政府为海南省人民政府\",\n            \"AdministrativeAuthorities=“国家环保总局” — 表示行业行政主管部门为国家环保总局\",\n            \"EnterprisesAndInstitutions=“中石油公司” — 表示相关企事业单位为中石油公司\"\n        ],\n        \"instance_logicexpression\": [\n            \"MajorMarineOilSpill(海上溢油事件5) → (CarryOutInitialResponse(海南省人民政府, 海上溢油事件5) ∧ CarryOutInitialResponse(国家环保总局, 海上溢油事件5) ∧ CarryOutInitialResponse(中石油公司, 海上溢油事件5))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=“全国重大海上溢油应急处置工作” — 表示国家重大海上溢油应急处置部际联席会议负责组织和指导的任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t (ResponsibleForOrganization(国家重大海上溢油应急处置部际联席会议, 全国重大海上溢油应急处置工作) ∧ ResponsibleForGuidance(国家重大海上溢油应急处置部际联席会议, 全国重大海上溢油应急处置工作))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“海上溢油应急响应” — 表示启动的应急响应类型\",\n            \"Forces=“海上救援队伍” — 表示需要组织协调的相关力量\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (EmergencyResponse(海上溢油应急响应) → (OrganizeAndCoordinate(国家重大海上溢油应急处置部际联席会议, 海上救援队伍) ∧ CarryOutWork(国家重大海上溢油应急处置部际联席会议, 海上溢油应急处置工作)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“海上溢油应急处置行动” — 表示由国务院统一组织开展的行动\",\n            \"Requirements=“环境保护和应急响应规定” — 表示需要执行的相关要求\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (StateCouncilAction(海上溢油应急处置行动) → ExecuteRequirements(国务院, 环境保护和应急响应规定))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“国家重大海上溢油应急处置部际联席会议” — 表示组织为国家重大海上溢油应急处置部际联席会议\",\n            \"i=“党中央、国务院、中央军委的指示” — 表示党中央、国务院、中央军委发出的指示\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀i (ConveyDirectives(“国家重大海上溢油应急处置部际联席会议”, i) ∧ ReportProgress(“国家重大海上溢油应急处置部际联席会议”, i))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家重大海上溢油应急处置部际联席会议” — 表示组织为国家重大海上溢油应急处置部际联席会议\",\n            \"u=“成员单位” — 表示成员单位\",\n            \"t=“应急工作任务” — 表示应急工作任务\",\n            \"i=“应急过程中遇到的重大问题” — 表示应急过程中遇到的重大问题\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀u ∀t ∀i (CoordinateTasks(“国家重大海上溢油应急处置部际联席会议”, u, t) ∧ SolveMajorIssues(“国家重大海上溢油应急处置部际联席会议”, i) → ConsultDecision(“国家重大海上溢油应急处置部际联席会议”, i))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家重大海上溢油应急处置部际联席会议” — 表示组织为国家重大海上溢油应急处置部际联席会议\",\n            \"f=“海上溢油应急力量和综合保障力量” — 表示海上溢油应急力量和综合保障力量\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀f (CoordinateEmergencyForces(“国家重大海上溢油应急处置部际联席会议”, f) → AssistSupport(“国家重大海上溢油应急处置部际联席会议”, f))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家重大海上溢油应急处置部际联席会议” — 表示组织为国家重大海上溢油应急处置部际联席会议\",\n            \"a=“跨省级人民政府管辖区域的国家重大海上溢油应急行动” — 表示跨省级人民政府管辖区域的国家重大海上溢油应急行动\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀a (OrganizeEmergencyActions(“国家重大海上溢油应急处置部际联席会议”, a) ∧ CoordinateMilitaryPolice(“国家重大海上溢油应急处置部际联席会议”, a))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家重大海上溢油应急处置部际联席会议” — 表示组织为国家重大海上溢油应急处置部际联席会议\",\n            \"a=“涉外事务和国际援助” — 表示涉外事务和国际援助\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀a (CoordinateForeignAffairs(“国家重大海上溢油应急处置部际联席会议”, a))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家重大海上溢油应急处置部际联席会议” — 表示组织为国家重大海上溢油应急处置部际联席会议\",\n            \"u=“参与国家重大海上溢油应急处置行动的有关单位” — 表示参与国家重大海上溢油应急处置行动的有关单位\",\n            \"p=“《国家重大海上溢油应急处置预案》” — 表示《国家重大海上溢油应急处置预案》\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀u ∀p (SuperviseExecution(“国家重大海上溢油应急处置部际联席会议”, u, p))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家重大海上溢油应急处置部际联席会议” — 表示组织为国家重大海上溢油应急处置部际联席会议\",\n            \"i=“应急行动信息” — 表示应急行动信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀i (ReleaseInformation(“国家重大海上溢油应急处置部际联席会议”, i))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“交通运输部” — 交通运输部为国家重大海上溢油应急处置部际联席会议的牵头单位\",\n            \"a=“海上溢油应急处置” — 应急响应为海上溢油应急处置\",\n            \"wg=“应急处置工作组” — 参与的工作组为应急处置工作组\"\n        ],\n        \"instance_logicexpression\": [\n            \"MemberUnit(交通运输部) → (LeadUnit(交通运输部) ∨ (∃a EmergencyResponse(海上溢油应急处置) ∧ ResponsibilityDivision(交通运输部, 海上溢油应急处置) ∧ (ParticipateInWorkingGroup(交通运输部, 应急处置工作组) ∨ LeadInWorkingGroup(交通运输部, 应急处置工作组))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“外交部” — 外交部为国家重大海上溢油应急处置部际联席会议的成员单位\",\n            \"a=“海上溢油应急处置” — 应急响应为海上溢油应急处置\",\n            \"wg=“国际合作工作组” — 参与的工作组为国际合作工作组\"\n        ],\n        \"instance_logicexpression\": [\n            \"MemberUnit(外交部) → (LeadUnit(外交部) ∨ (∃a EmergencyResponse(海上溢油应急处置) ∧ ResponsibilityDivision(外交部, 海上溢油应急处置) ∧ (ParticipateInWorkingGroup(外交部, 国际合作工作组) ∨ LeadInWorkingGroup(外交部, 国际合作工作组))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“中国科学院” — 中国科学院为非成员单位\",\n            \"指示=“国务院” — 国务院发出指示\"\n        ],\n        \"instance_logicexpression\": [\n            \"¬MemberUnit(中国科学院) ∧ 指示(国务院, 中国科学院) → Invite(中国科学院)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“中国石油天然气集团公司” — 中国石油天然气集团公司为国家重大海上溢油应急处置部际联席会议的成员单位\",\n            \"a=“海上溢油应急处置” — 应急响应为海上溢油应急处置\",\n            \"wg=“资源调配工作组” — 参与的工作组为资源调配工作组\"\n        ],\n        \"instance_logicexpression\": [\n            \"MemberUnit(中国石油天然气集团公司) → (LeadUnit(中国石油天然气集团公司) ∨ (∃a EmergencyResponse(海上溢油应急处置) ∧ ResponsibilityDivision(中国石油天然气集团公司, 海上溢油应急处置) ∧ (ParticipateInWorkingGroup(中国石油天然气集团公司, 资源调配工作组) ∨ LeadInWorkingGroup(中国石油天然气集团公司, 资源调配工作组))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“武警部队” — 武警部队为国家重大海上溢油应急处置部际联席会议的成员单位\",\n            \"a=“海上溢油应急处置” — 应急响应为海上溢油应急处置\",\n            \"wg=“安全保卫工作组” — 参与的工作组为安全保卫工作组\"\n        ],\n        \"instance_logicexpression\": [\n            \"MemberUnit(武警部队) → (LeadUnit(武警部队) ∨ (∃a EmergencyResponse(海上溢油应急处置) ∧ ResponsibilityDivision(武警部队, 海上溢油应急处置) ∧ (ParticipateInWorkingGroup(武警部队, 安全保卫工作组) ∨ LeadInWorkingGroup(武警部队, 安全保卫工作组))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Department=“交通运输部” — 表示负责部门为交通运输部\",\n            \"Plan=“国家重大海上溢油应急处置预案” — 表示预案名称为国家重大海上溢油应急处置预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"FormulatePlan(交通运输部, 国家重大海上溢油应急处置预案) ∧ ImplementPlan(交通运输部, 国家重大海上溢油应急处置预案)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“交通运输部” — 表示负责部门为交通运输部\",\n            \"Planning=“国家重大海上溢油应急能力建设规划” — 表示规划名称为国家重大海上溢油应急能力建设规划\",\n            \"Opinion=“国家重大海上溢油应急能力建设意见” — 表示意见为国家重大海上溢油应急能力建设意见\"\n        ],\n        \"instance_logicexpression\": [\n            \"FormulatePlan(交通运输部, 国家重大海上溢油应急能力建设规划) ∧ ProposeOpinion(交通运输部, 国家重大海上溢油应急能力建设意见)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“交通运输部” — 表示负责部门为交通运输部\",\n            \"Platform=“国家海上溢油信息共享平台” — 表示平台名称为国家海上溢油信息共享平台\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishPlatform(交通运输部, 国家海上溢油信息共享平台)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“交通运输部” — 表示负责部门为交通运输部\",\n            \"Task=“重大海上溢油应急处置工作” — 表示任务为重大海上溢油应急处置工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"OrganizeCoordinateCommand(交通运输部, 重大海上溢油应急处置工作)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“交通运输部” — 表示负责部门为交通运输部\"\n        ],\n        \"instance_logicexpression\": [\n            \"PreventPollution(交通运输部)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“交通运输部” — 表示负责部门为交通运输部\",\n            \"Issue=“海上溢油应急相关重大事项” — 表示问题为海上溢油应急相关重大事项\",\n            \"Work=“国务院安排的其他有关工作” — 表示工作为国务院安排的其他有关工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"OrganizeResearch(交通运输部, 海上溢油应急相关重大事项) ∧ ImplementWork(交通运输部, 国务院安排的其他有关工作)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“交通运输部” — 表示负责部门为交通运输部\",\n            \"Task=“海上应急清污” — 表示任务为海上应急清污\",\n            \"Task=“信息发布与宣传” — 表示任务为信息发布与宣传\"\n        ],\n        \"instance_logicexpression\": [\n            \"CarryOutWork(交通运输部, 海上应急清污) ∧ CarryOutWork(交通运输部, 信息发布与宣传)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“交通运输部” — 表示负责部门为交通运输部\",\n            \"Information=“船舶溢油污染信息” — 表示信息为船舶溢油污染信息\",\n            \"Source=“船舶溢油源” — 表示源头为船舶溢油源\"\n        ],\n        \"instance_logicexpression\": [\n            \"VerifyInformation(交通运输部, 船舶溢油污染信息) ∧ BlockAndControl(交通运输部, 船舶溢油源)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“交通运输部” — 表示负责部门为交通运输部\"\n        ],\n        \"instance_logicexpression\": [\n            \"CommunicationSupport(交通运输部) ∧ TechnicalEquipmentSupport(交通运输部) ∧ CoordinateInternationalAid(交通运输部)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“交通运输部” — 表示负责部门为交通运输部\"\n        ],\n        \"instance_logicexpression\": [\n            \"InterMinisterialMeeting(交通运输部)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"n=“全国海洋环境监测网络” — 表示海洋局组织的全国海洋环境监测、监视网络\",\n            \"d=“海洋局” — 表示海洋局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀n (OrganizeMonitoring(“全国海洋环境监测网络”, 海洋局) ∧ Monitor(海洋局, 溢油污染) ∧ Forecast(海洋局, 溢油污染) ∧ Report(海洋局, 溢油污染情况))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“海上溢油污染” — 表示海洋局负责的海洋环境污染损害\",\n            \"d=“海洋局” — 表示海洋局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀p (PreventAndRespond(海洋局, “海上溢油污染”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"dmg=“海上溢油造成的海洋生态损害” — 表示海洋局负责的损害评估\",\n            \"d=“海洋局” — 表示海洋局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀dmg (AssessDamage(海洋局, “海上溢油造成的海洋生态损害”) ∧ EcologicalRestoration(海洋局, “海上溢油造成的海洋生态损害”) ∧ Claim(海洋局, “海上溢油造成的海洋生态损害”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“人员、船舶、飞机” — 表示海洋局组织的应急行动资源\",\n            \"d=“海洋局” — 表示海洋局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀r (OrganizeEmergencyAction(海洋局, “人员、船舶、飞机”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“溢油事件1” — 表示一个具体的陆源溢油事件\",\n            \"Department=“环境保护部”\"\n        ],\n        \"instance_logicexpression\": [\n            \"陆源溢油(溢油事件1) → Supervise(环境保护部, 溢油事件1)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“应急处置任务1” — 表示一个具体的应急处置任务\",\n            \"Department=“环境保护部”\"\n        ],\n        \"instance_logicexpression\": [\n            \"应急处置(应急处置任务1) → EmergencyResponse(环境保护部, 应急处置任务1)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“环境敏感区1” — 表示一个具体的环境敏感区\",\n            \"Department=“环境保护部”\"\n        ],\n        \"instance_logicexpression\": [\n            \"环境敏感区环境敏感区1 → ProvideInformation(环境保护部, 环境敏感区1)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“陆域1” — 表示一个具体的陆域或岸线区域\",\n            \"Department=“环境保护部”\"\n        ],\n        \"instance_logicexpression\": [\n            \"陆域或岸线陆域1 → EnvironmentalMonitoring(环境保护部, 陆域1)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“岸线1” — 表示一个具体的岸线\",\n            \"Department=“环境保护部”\"\n        ],\n        \"instance_logicexpression\": [\n            \"岸线岸线1 → Cleanup(环境保护部, 岸线1)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=“油污废弃物1” — 表示一个具体的油污或废弃物\",\n            \"Department=“环境保护部”\"\n        ],\n        \"instance_logicexpression\": [\n            \"油污或废弃物油污废弃物1 → TransportAndDispose(环境保护部, 油污废弃物1)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“溢油事件2” — 表示另一个具体的陆源溢油事件\",\n            \"Department=“环境保护部”\"\n        ],\n        \"instance_logicexpression\": [\n            \"陆源溢油事件溢油事件2 → VerifyInformation(环境保护部, 溢油事件2)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“重大陆源溢油事件1” — 表示一个具体的重大陆源溢油事件\",\n            \"Department=“环境保护部”\"\n        ],\n        \"instance_logicexpression\": [\n            \"重大陆源溢油事件重大陆源溢油事件1 → (EnvironmentalImpactAssessment(环境保护部, 重大陆源溢油事件1) ∧ RecoveryPlan(环境保护部, 重大陆源溢油事件1))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“海上溢油应急行动1” — 表示一个具体的海上溢油应急行动\",\n            \"Department=“环境保护部”\"\n        ],\n        \"instance_logicexpression\": [\n            \"海上溢油应急行动海上溢油应急行动1 → ParticipateInEmergency(环境保护部, 海上溢油应急行动1)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Department=“农业部” — 表示负责监督管理的部门为农业部\",\n            \"Issue=“渔业船舶溢油污染” — 表示监督管理的问题为渔业船舶溢油污染\"\n        ],\n        \"instance_logicexpression\": [\n            \"Supervise(“农业部”, “渔业船舶溢油污染”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“农业部” — 表示指导应急处置的部门为农业部\"\n        ],\n        \"instance_logicexpression\": [\n            \"GuideEmergencyResponse(“农业部”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“农业部” — 表示负责处理损害的部门为农业部\",\n            \"DamageType=“海洋野生动植物资源和渔业损害” — 表示处理的损害类型为海洋野生动植物资源和渔业损害\"\n        ],\n        \"instance_logicexpression\": [\n            \"HandleDamage(“农业部”, “海洋野生动植物资源和渔业损害”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“农业部” — 表示负责监测评估索赔的部门为农业部\",\n            \"Resource=“海洋野生动植物资源和渔业损害” — 表示监测评估索赔的资源为海洋野生动植物资源和渔业损害\"\n        ],\n        \"instance_logicexpression\": [\n            \"MonitorAssessClaim(“农业部”, “海洋野生动植物资源和渔业损害”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“农业部” — 表示组织协调应急力量的部门为农业部\",\n            \"ForceType=“渔业部门和渔民的应急力量” — 表示组织协调的应急力量类型为渔业部门和渔民的应急力量\"\n        ],\n        \"instance_logicexpression\": [\n            \"OrganizeCoordinateEmergencyForces(“农业部”, “渔业部门和渔民的应急力量”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“农业部” — 表示开展防护救助清洗工作的部门为农业部\",\n            \"Target=“野生动植物和渔业重要目标” — 表示开展防护救助清洗工作的目标为野生动植物和渔业重要目标\"\n        ],\n        \"instance_logicexpression\": [\n            \"CarryOutProtectionRescueCleaning(“农业部”, “野生动植物和渔业重要目标”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“农业部” — 表示核实通报信息的部门为农业部\",\n            \"Information=“海上溢油信息” — 表示核实并通报的信息为海上溢油信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"VerifyReportInformation(“农业部”, “海上溢油信息”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“农业部” — 表示提供信息的部门为农业部\",\n            \"TypeInfo=“渔业船舶、渔业资源和渔业生产” — 表示提供的类型信息为渔业船舶、渔业资源和渔业生产\"\n        ],\n        \"instance_logicexpression\": [\n            \"ProvideInformation(“农业部”, “渔业船舶、渔业资源和渔业生产”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“农业部” — 表示参与保障性工作的部门为农业部\",\n            \"WorkType=“运输、通信、装备、生活物资” — 表示参与的保障性工作类型为运输、通信、装备、生活物资\"\n        ],\n        \"instance_logicexpression\": [\n            \"ParticipateSupportWork(“农业部”, “运输、通信、装备、生活物资”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Organization=“安全监管总局” — 表示负责监督管理的组织为安全监管总局\",\n            \"Activity=“海上石油安全生产” — 表示监督管理的活动为海上石油安全生产\"\n        ],\n        \"instance_logicexpression\": [\n            \"Supervise(“安全监管总局”, “海上石油安全生产”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Grantor=“国务院” — 表示授权者为国务院\",\n            \"Grantee=“安全监管总局” — 表示被授权者为安全监管总局\",\n            \"Activity=“调查海上溢油特别重大安全生产事故” — 表示被授权进行的活动为调查海上溢油特别重大安全生产事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"Authorize(“国务院”, “安全监管总局”, “调查海上溢油特别重大安全生产事故”) → Investigate(“安全监管总局”, “海上溢油特别重大安全生产事故”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Grantor=“国务院” — 表示授权者为国务院\",\n            \"Grantee=“安全监管总局” — 表示被授权者为安全监管总局\",\n            \"Activity=“参与海上溢油特别重大安全生产事故的应急救援” — 表示被授权进行的活动为参与海上溢油特别重大安全生产事故的应急救援\"\n        ],\n        \"instance_logicexpression\": [\n            \"Authorize(“国务院”, “安全监管总局”, “参与海上溢油特别重大安全生产事故的应急救援”) → ParticipateInRescue(“安全监管总局”, “海上溢油特别重大安全生产事故”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“安全监管总局” — 表示指导协调的组织为安全监管总局\",\n            \"Activity=“安全生产重大科学技术研究和推广” — 表示指导协调的活动为安全生产重大科学技术研究和推广\"\n        ],\n        \"instance_logicexpression\": [\n            \"GuideAndCoordinate(“安全监管总局”, “安全生产重大科学技术研究和推广”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=“能源装备建设” — 表示能源局指导能源装备建设工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"EnergyEquipmentConstruction(“能源装备建设”) → Guide(EnergyBureau, “能源装备建设”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“中石油” — 表示中石油公司\",\n            \"o=“东海海域” — 表示东海海域发生海上溢油\"\n        ],\n        \"instance_logicexpression\": [\n            \"OilProduction(“中石油”) ∨ OilProcessing(“中石油”) ∨ OilReserve(“中石油”) → MarineOilSpill(“东海海域”) → CoordinateEmergency(“中石油”, “东海海域”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“中石化” — 表示中石化公司\",\n            \"m=“回收的油类” — 表示回收的油类材料\"\n        ],\n        \"instance_logicexpression\": [\n            \"CoordinateEmergency(“中石化”, “回收的油类”) → ParticipateInHandling(“中石化”, “回收的油类”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“国家石油储备基地” — 表示国家石油储备基地\",\n            \"o=“南海海域” — 表示南海海域发生海上溢油\"\n        ],\n        \"instance_logicexpression\": [\n            \"OilProduction(“国家石油储备基地”) ∨ OilProcessing(“国家石油储备基地”) ∨ OilReserve(“国家石油储备基地”) → MarineOilSpill(“南海海域”) → CoordinateEmergency(“国家石油储备基地”, “南海海域”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“地方炼油厂” — 表示地方炼油厂\",\n            \"m=“油污水” — 表示油污水材料\"\n        ],\n        \"instance_logicexpression\": [\n            \"CoordinateEmergency(“地方炼油厂”, “油污水”) → ParticipateInHandling(“地方炼油厂”, “油污水”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“外交部” — 表示负责指导和协调的部门为外交部\",\n            \"m=“重大海上溢油应急处置” — 表示涉外事宜为重大海上溢油应急处置\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀m (ForeignAffairs(“重大海上溢油应急处置”) → (Guide(“外交部”, “重大海上溢油应急处置”) ∧ CoordinateContact(“外交部”, “重大海上溢油应急处置”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“外交部” — 表示参与协调的部门为外交部\",\n            \"c=“国际救援行动” — 表示国际合作为国际救援行动\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀c (InternationalCooperation(“国际救援行动”) → ParticipateCoordinate(“外交部”, “国际救援行动”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“外交部” — 表示提供便利的部门为外交部\",\n            \"p=“救援专家” — 表示相关人员为救援专家\",\n            \"a=“入境” — 表示行动为入境\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀p∀a (EntryExit(“救援专家”) → ProvideConvenience(“外交部”, “救援专家”, “入境”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“外交部” — 表示提供便利的部门为外交部\",\n            \"p=“应急设备” — 表示相关设备为应急设备\",\n            \"a=“出境” — 表示行动为出境\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀p∀a (EntryExit(“应急设备”) → ProvideConvenience(“外交部”, “应急设备”, “出境”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“海上溢油事故” — 表示海上溢油应急事件\",\n            \"m=“应急物资A” — 表示一种重要的应急物资\",\n            \"i=“跨海大桥” — 表示损坏的重大基础设施\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (海上溢油应急(“海上溢油事故”) → ProvideSupport(发展改革委, “海上溢油事故”))\",\n            \"∀m (重要应急物资(“应急物资A”) → (UrgentPurchase(发展改革委, “应急物资A”) ∧ Dispatch(发展改革委, “应急物资A”) ∧ Transport(发展改革委, “应急物资A”)))\",\n            \"MarketPriceRegulation(发展改革委) ∧ EnsureMarketStability(发展改革委)\",\n            \"∀i (损坏的重大基础设施(“跨海大桥”) → RepairAndRestore(发展改革委, “跨海大桥”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“海上石油泄漏” — 表示海上石油泄漏应急事件\",\n            \"m=“应急物资B” — 表示另一种重要的应急物资\",\n            \"i=“海底隧道” — 表示另一种损坏的重大基础设施\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (海上溢油应急(“海上石油泄漏”) → ProvideSupport(发展改革委, “海上石油泄漏”))\",\n            \"∀m (重要应急物资(“应急物资B”) → (UrgentPurchase(发展改革委, “应急物资B”) ∧ Dispatch(发展改革委, “应急物资B”) ∧ Transport(发展改革委, “应急物资B”)))\",\n            \"MarketPriceRegulation(发展改革委) ∧ EnsureMarketStability(发展改革委)\",\n            \"∀i (损坏的重大基础设施(“海底隧道”) → RepairAndRestore(发展改革委, “海底隧道”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Department=“工业和信息化部” — 表示负责协调的部门为工业和信息化部\",\n            \"Incident=“重大海上溢油应急处置” — 表示应急处置的事件为重大海上溢油\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (CoordinateCommunicationResources(工业和信息化部) ∧ ProvideCommunicationSupport(工业和信息化部, 重大海上溢油应急处置))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“工业和信息化部” — 表示负责协调的部门为工业和信息化部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (CoordinateEquipmentInfrastructure(工业和信息化部) ∧ ParticipateInOilSpillResponse(工业和信息化部) ∧ ParticipateInOilStorageTransport(工业和信息化部) ∧ OrganizeCoordinateEmergencySupplies(工业和信息化部))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“海上溢油事件X” — 表示重大海上溢油事件为事件X\",\n            \"p=“受灾群众A” — 表示受灾群众为A\",\n            \"a=“特殊区域Y” — 表示陆上特殊区域为Y\",\n            \"p=“责任人Z” — 表示相关责任人为Z\",\n            \"a=“周边区域W” — 表示周边区域为W\",\n            \"p=“应急行动人员C” — 表示跨国跨地区应急行动人员为C\",\n            \"p=“外籍人员D” — 表示外籍人员为D\"\n        ],\n        \"instance_logicexpression\": [\n            \"重大海上溢油事件(海上溢油事件X) → CoordinateGuide(公安部, 海上溢油事件X) ∧ ParticipateInMarineEmergency(公安部, 海上溢油事件X) ∧ ProvideFirefightingSupport(公安部)\",\n            \"受灾人员(受灾群众A) → Evacuate(公安部, 受灾群众A)\",\n            \"陆上特殊区域(特殊区域Y) → TemporaryControl(公安部, 特殊区域Y)\",\n            \"相关责任人(责任人Z) → TakeForcefulMeasures(事发地公安机关, 责任人Z)\",\n            \"周边区域(周边区域W) → MaintainOrder(公安部, 周边区域W)\",\n            \"跨国跨地区应急行动人员(应急行动人员C) → ProvideEntryExitService(公安部, 应急行动人员C)\",\n            \"外籍人员(外籍人员D) → DeportForeignPersonnel(公安部)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“海上溢油事件M” — 表示重大海上溢油事件为事件M\",\n            \"p=“受灾群众B” — 表示受灾群众为B\",\n            \"a=“特殊区域N” — 表示陆上特殊区域为N\",\n            \"p=“责任人V” — 表示相关责任人为V\",\n            \"a=“周边区域U” — 表示周边区域为U\",\n            \"p=“应急行动人员E” — 表示跨国跨地区应急行动人员为E\",\n            \"p=“外籍人员F” — 表示外籍人员为F\"\n        ],\n        \"instance_logicexpression\": [\n            \"重大海上溢油事件(海上溢油事件M) → CoordinateGuide(公安部, 海上溢油事件M) ∧ ParticipateInMarineEmergency(公安部, 海上溢油事件M) ∧ ProvideFirefightingSupport(公安部)\",\n            \"受灾人员(受灾群众B) → Evacuate(公安部, 受灾群众B)\",\n            \"陆上特殊区域(特殊区域N) → TemporaryControl(公安部, 特殊区域N)\",\n            \"相关责任人(责任人V) → TakeForcefulMeasures(事发地公安机关, 责任人V)\",\n            \"周边区域(周边区域U) → MaintainOrder(公安部, 周边区域U)\",\n            \"跨国跨地区应急行动人员(应急行动人员E) → ProvideEntryExitService(公安部, 应急行动人员E)\",\n            \"外籍人员(外籍人员F) → DeportForeignPersonnel(公安部)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“海上溢油事件A” — 表示海上溢油应急处置事件A\",\n            \"d=“环保部门” — 表示与财政部协调解决资金需求的环保部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"OilSpillEmergency(海上溢油事件A) ∧ CentralAuthority(海上溢油事件A) → CoordinateFunds(财政部, 环保部门, 海上溢油事件A)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海上溢油事件B” — 表示海上溢油应急处置事件B\",\n            \"t=“紧急应急物资采购” — 表示紧急应急物资的政府采购任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencySupplies(紧急应急物资采购) → AssistIn(财政部, 紧急应急物资采购)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海上溢油事件C” — 表示海上溢油应急处置事件C\",\n            \"t=“政府采购任务X” — 表示政府采购任务X\"\n        ],\n        \"instance_logicexpression\": [\n            \"GovernmentProcurement(政府采购任务X) → AssistIn(财政部, 政府采购任务X)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海上溢油事件D” — 表示海上溢油应急处置事件D\",\n            \"t=“财务管理任务Y” — 表示财务管理任务Y\"\n        ],\n        \"instance_logicexpression\": [\n            \"FinancialManagement(财务管理任务Y) → AssistIn(财政部, 财务管理任务Y)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“卫生计生委” — 表示负责实施的组织为卫生计生委\",\n            \"a=“应急医疗救护” — 表示行动为应急医疗救护\",\n            \"v=“受伤人员” — 表示参与救助的对象为受伤人员\",\n            \"p=“应急行动” — 表示行动为应急行动\",\n            \"t=“医疗” — 表示保障类型为医疗\",\n            \"t=“安全卫生防护” — 表示保障类型为安全卫生防护\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀a∀v (ResponsibleForImplementation(卫生计生委, 应急医疗救护) ∧ a = 应急医疗救护 → ParticipateInRescue(卫生计生委, 受伤人员))\",\n            \"∀o∀p∀t (ResponsibleForImplementation(卫生计生委, 应急行动) ∧ p = 应急行动 → ProvideProtection(卫生计生委, 应急行动, 医疗) ∧ ProvideProtection(卫生计生委, 应急行动, 安全卫生防护))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“卫生计生委” — 表示负责实施的组织为卫生计生委\",\n            \"a=“应急医疗救护” — 表示行动为应急医疗救护\",\n            \"v=“地震受灾人员” — 表示参与救助的对象为地震受灾人员\",\n            \"p=“地震应急行动” — 表示行动为地震应急行动\",\n            \"t=“医疗” — 表示保障类型为医疗\",\n            \"t=“安全卫生防护” — 表示保障类型为安全卫生防护\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀a∀v (ResponsibleForImplementation(卫生计生委, 应急医疗救护) ∧ a = 应急医疗救护 → ParticipateInRescue(卫生计生委, 地震受灾人员))\",\n            \"∀o∀p∀t (ResponsibleForImplementation(卫生计生委, 地震应急行动) ∧ p = 应急行动 → ProvideProtection(卫生计生委, 地震应急行动, 医疗) ∧ ProvideProtection(卫生计生委, 地震应急行动, 安全卫生防护))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“卫生计生委” — 表示负责实施的组织为卫生计生委\",\n            \"a=“应急医疗救护” — 表示行动为应急医疗救护\",\n            \"v=“交通事故伤者” — 表示参与救助的对象为交通事故伤者\",\n            \"p=“交通事故应急行动” — 表示行动为交通事故应急行动\",\n            \"t=“医疗” — 表示保障类型为医疗\",\n            \"t=“安全卫生防护” — 表示保障类型为安全卫生防护\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀a∀v (ResponsibleForImplementation(卫生计生委, 应急医疗救护) ∧ a = 应急医疗救护 → ParticipateInRescue(卫生计生委, 交通事故伤者))\",\n            \"∀o∀p∀t (ResponsibleForImplementation(卫生计生委, 交通事故应急行动) ∧ p = 应急行动 → ProvideProtection(卫生计生委, 交通事故应急行动, 医疗) ∧ ProvideProtection(卫生计生委, 交通事故应急行动, 安全卫生防护))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“救生艇” — 表示救生艇是用于应急行动的装备\",\n            \"e=“医疗包” — 表示医疗包是用于应急行动的物资\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EmergencyMaterials(e) ∨ Equipment(e) → (Responsible(Customs, ConvenientService(Customs, e)) ∧ PriorityClearance(e)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“食品供应” — 表示食品供应是用于应急行动的物资\",\n            \"e=“通讯设备” — 表示通讯设备是用于应急行动的装备\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EmergencyMaterials(e) ∨ Equipment(e) → (Responsible(Customs, ConvenientService(Customs, e)) ∧ PriorityClearance(e)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“救援车辆” — 表示救援车辆是用于应急行动的装备\",\n            \"e=“临时避难帐篷” — 表示临时避难帐篷是用于应急行动的物资\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EmergencyMaterials(e) ∨ Equipment(e) → (Responsible(Customs, ConvenientService(Customs, e)) ∧ PriorityClearance(e)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“净水设备” — 表示净水设备是用于应急行动的装备\",\n            \"e=“急救药品” — 表示急救药品是用于应急行动的物资\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EmergencyMaterials(e) ∨ Equipment(e) → (Responsible(Customs, ConvenientService(Customs, e)) ∧ PriorityClearance(e)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=“农业” — 表示长期气象预报用于农业\",\n            \"p=“交通” — 表示短期气象预报用于交通\",\n            \"u=“海上溢油” — 表示气象信息用于海上溢油应急行动\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t∀p∀u (ProvideForecast(中国气象局, 长期预报, 农业) ∧ ProvideForecast(中国气象局, 短期预报, 交通) ∧ ProvideWeatherInfo(中国气象局, 恶劣天气) ∧ ProvideWeatherInfo(中国气象局, 溢油应急行动, 海上溢油))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“城市规划” — 表示长期气象预报用于城市规划\",\n            \"p=“户外活动” — 表示短期气象预报用于户外活动\",\n            \"u=“森林火灾” — 表示气象信息用于森林火灾应急行动\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t∀p∀u (ProvideForecast(中国气象局, 长期预报, 城市规划) ∧ ProvideForecast(中国气象局, 短期预报, 户外活动) ∧ ProvideWeatherInfo(中国气象局, 恶劣天气) ∧ ProvideWeatherInfo(中国气象局, 溢油应急行动, 森林火灾))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“能源供应” — 表示长期气象预报用于能源供应\",\n            \"p=“航空” — 表示短期气象预报用于航空\",\n            \"u=“洪水” — 表示气象信息用于洪水应急行动\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t∀p∀u (ProvideForecast(中国气象局, 长期预报, 能源供应) ∧ ProvideForecast(中国气象局, 短期预报, 航空) ∧ ProvideWeatherInfo(中国气象局, 恶劣天气) ∧ ProvideWeatherInfo(中国气象局, 溢油应急行动, 洪水))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“旅游” — 表示长期气象预报用于旅游\",\n            \"p=“海运” — 表示短期气象预报用于海运\",\n            \"u=“地震” — 表示气象信息用于地震应急行动\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t∀p∀u (ProvideForecast(中国气象局, 长期预报, 旅游) ∧ ProvideForecast(中国气象局, 短期预报, 海运) ∧ ProvideWeatherInfo(中国气象局, 恶劣天气) ∧ ProvideWeatherInfo(中国气象局, 溢油应急行动, 地震))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Department=“军委联合参谋部作战局” — 表示负责协调的部门\",\n            \"Units=[“军委机关有关部门”, “军委联合作战指挥中心”, “东部战区”, “海军”, “武装警察部队”] — 表示需要协调的相关部门和单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"Coordinate(“军委联合参谋部作战局”, [“军委机关有关部门”, “军委联合作战指挥中心”, “东部战区”, “海军”, “武装警察部队”]) ∧\",\n            \"OrganizeParticipation([“海军”, “空军”, “武装警察部队”, “民兵”, “预备役力量]”, [EmergencyResponse(“海上溢油”), EmergencyRescue(“相关”)]) ∧\",\n            \"ProvideSupport(Monitoring(“海上重大溢油应急”)) ∧\",\n            \"VerifyReport(OilSpillIncident(“军用船舶”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“军委联合参谋部作战局” — 表示负责协调的部门\",\n            \"Units=[“军委机关有关部门”, “军委联合作战指挥中心”, “南部战区”, “空军”, “民兵”] — 表示需要协调的相关部门和单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"Coordinate(“军委联合参谋部作战局”, [“军委机关有关部门”, “军委联合作战指挥中心”, “南部战区”, “空军”, “民兵”]) ∧\",\n            \"OrganizeParticipation([“海军”, “空军”, “武装警察部队”, “民兵”, “预备役力量]”, [EmergencyResponse(“海上溢油”), EmergencyRescue(“相关”)]) ∧\",\n            \"ProvideSupport(Monitoring(“海上重大溢油应急”)) ∧\",\n            \"VerifyReport(OilSpillIncident(“军用船舶”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“军委联合参谋部作战局” — 表示负责协调的部门\",\n            \"Units=[“军委机关有关部门”, “军委联合作战指挥中心”, “北部战区”, “陆军”, “预备役力量”] — 表示需要协调的相关部门和单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"Coordinate(“军委联合参谋部作战局”, [“军委机关有关部门”, “军委联合作战指挥中心”, “北部战区”, “陆军”, “预备役力量”]) ∧\",\n            \"OrganizeParticipation([“海军”, “空军”, “武装警察部队”, “民兵”, “预备役力量]”, [EmergencyResponse(“海上溢油”), EmergencyRescue(“相关”)]) ∧\",\n            \"ProvideSupport(Monitoring(“海上重大溢油应急”)) ∧\",\n            \"VerifyReport(OilSpillIncident(“军用船舶”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“军委联合参谋部作战局” — 表示负责协调的部门\",\n            \"Units=[“军委机关有关部门”, “军委联合作战指挥中心”, “西部战区”, “火箭军”, “武装警察部队”] — 表示需要协调的相关部门和单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"Coordinate(“军委联合参谋部作战局”, [“军委机关有关部门”, “军委联合作战指挥中心”, “西部战区”, “火箭军”, “武装警察部队”]) ∧\",\n            \"OrganizeParticipation([“海军”, “空军”, “武装警察部队”, “民兵”, “预备役力量]”, [EmergencyResponse(“海上溢油”), EmergencyRescue(“相关”)]) ∧\",\n            \"ProvideSupport(Monitoring(“海上重大溢油应急”)) ∧\",\n            \"VerifyReport(OilSpillIncident(“军用船舶”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"n=“海军指挥部” — 表示指导者为海军指挥部\",\n            \"u=“第一舰队” — 表示单位为第一舰队\"\n        ],\n        \"instance_logicexpression\": [\n            \"海军(海军指挥部) → (Coordinate(海军指挥部, 第一舰队) ∧ Participate(第一舰队, EmergencyCleanup) ∧ Participate(第一舰队, EmergencyRescue) ∧ Participate(第一舰队, OilSpillMonitoring) ∧ SecureAndBlock(第一舰队, Area) ∧ TrafficControl(第一舰队) ∧ Transport(第一舰队) ∧ EmergencySupport(第一舰队))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"n=“海军司令部” — 表示指导者为海军司令部\",\n            \"u=“第二舰队” — 表示单位为第二舰队\"\n        ],\n        \"instance_logicexpression\": [\n            \"海军(海军司令部) → (Coordinate(海军司令部, 第二舰队) ∧ Participate(第二舰队, EmergencyCleanup) ∧ Participate(第二舰队, EmergencyRescue) ∧ Participate(第二舰队, OilSpillMonitoring) ∧ SecureAndBlock(第二舰队, Area) ∧ TrafficControl(第二舰队) ∧ Transport(第二舰队) ∧ EmergencySupport(第二舰队))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"n=“海军基地” — 表示指导者为海军基地\",\n            \"u=“第三舰队” — 表示单位为第三舰队\"\n        ],\n        \"instance_logicexpression\": [\n            \"海军(海军基地) → (Coordinate(海军基地, 第三舰队) ∧ Participate(第三舰队, EmergencyCleanup) ∧ Participate(第三舰队, EmergencyRescue) ∧ Participate(第三舰队, OilSpillMonitoring) ∧ SecureAndBlock(第三舰队, Area) ∧ TrafficControl(第三舰队) ∧ Transport(第三舰队) ∧ EmergencySupport(第三舰队))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"n=“海军舰队” — 表示指导者为海军舰队\",\n            \"u=“第四舰队” — 表示单位为第四舰队\"\n        ],\n        \"instance_logicexpression\": [\n            \"海军(海军舰队) → (Coordinate(海军舰队, 第四舰队) ∧ Participate(第四舰队, EmergencyCleanup) ∧ Participate(第四舰队, EmergencyRescue) ∧ Participate(第四舰队, OilSpillMonitoring) ∧ SecureAndBlock(第四舰队, Area) ∧ TrafficControl(第四舰队) ∧ Transport(第四舰队) ∧ EmergencySupport(第四舰队))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"u=“空军第一侦查队” — 表示空军第一侦查队为参与单位\",\n            \"Activity=“污染监视” — 表示活动为污染监视\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀u (Coordinate(空军, 空军第一侦查队) → (Participate(空军第一侦查队, 污染监视) ∧ PollutionMonitoring(污染监视)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“空军救援大队” — 表示空军救援大队为参与单位\",\n            \"Activity=“人员营救” — 表示活动为人员营救\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀u (Coordinate(空军, 空军救援大队) → (Participate(空军救援大队, 人员营救) ∧ Rescue(人员营救)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“空军医疗队” — 表示空军医疗队为参与单位\",\n            \"Activity=“伤员转移” — 表示活动为伤员转移\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀u (Coordinate(空军, 空军医疗队) → (Participate(空军医疗队, 伤员转移) ∧ Evacuation(伤员转移)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“空军物流部队” — 表示空军物流部队为参与单位\",\n            \"Activity=“紧急物资运输” — 表示活动为紧急物资运输\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀u (Coordinate(空军, 空军物流部队) → (Participate(空军物流部队, 紧急物资运输) ∧ EmergencyTransport(紧急物资运输)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“空军特种部队” — 表示空军特种部队为参与单位\",\n            \"Activity=“综合救援行动” — 表示活动为综合救援行动，包括污染监视、人员营救、伤员转移和紧急物资运输\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀u (Coordinate(空军, 空军特种部队) → (Participate(空军特种部队, 综合救援行动) ∧ (PollutionMonitoring(综合救援行动) ∨ Rescue(综合救援行动) ∨ Evacuation(综合救援行动) ∨ EmergencyTransport(综合救援行动))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Army=“武警部队” — 表示执行职责的主体为武警部队\",\n            \"Action=“海上溢油应急行动” — 表示行动为海上溢油应急行动\",\n            \"Force=“海上救援队” — 表示参加行动的力量为海上救援队\",\n            \"Department=“海事局” — 表示武警部队协助的部门为海事局\",\n            \"Victim=“受伤船员” — 表示需要营救的受伤受害人员为受伤船员\",\n            \"Personnel=“附近居民” — 表示需要疏散撤离和安置的人员为附近居民\",\n            \"Area=“溢油区域” — 表示需要实施临时管制的危险区域为溢油区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀d ∀p ∀v ∀s (CoordinateGuide(“武警部队”, “海上溢油应急行动”) ∧ Participate(“海上救援队”, “海上溢油应急行动”) → (Assist(“武警部队”, “海事局”, Rescue(v)) ∧ Evacuate(“武警部队”, “附近居民”) ∧ Settle(“附近居民”) ∧ ImposeTemporaryControl(“武警部队”, “溢油区域”) ∧ MaintainSocialStability(“武警部队”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Army=“武警部队” — 表示执行职责的主体为武警部队\",\n            \"Action=“台风灾害应急响应” — 表示行动为台风灾害应急响应\",\n            \"Force=“应急救援队” — 表示参加行动的力量为应急救援队\",\n            \"Department=“气象局” — 表示武警部队协助的部门为气象局\",\n            \"Victim=“受伤居民” — 表示需要营救的受伤受害人员为受伤居民\",\n            \"Personnel=“沿海居民” — 表示需要疏散撤离和安置的人员为沿海居民\",\n            \"Area=“台风影响区域” — 表示需要实施临时管制的危险区域为台风影响区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀d ∀p ∀v ∀s (CoordinateGuide(“武警部队”, “台风灾害应急响应”) ∧ Participate(“应急救援队”, “台风灾害应急响应”) → (Assist(“武警部队”, “气象局”, Rescue(v)) ∧ Evacuate(“武警部队”, “沿海居民”) ∧ Settle(“沿海居民”) ∧ ImposeTemporaryControl(“武警部队”, “台风影响区域”) ∧ MaintainSocialStability(“武警部队”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Army=“武警部队” — 表示执行职责的主体为武警部队\",\n            \"Action=“地震灾害救援” — 表示行动为地震灾害救援\",\n            \"Force=“地震救援队” — 表示参加行动的力量为地震救援队\",\n            \"Department=“地震局” — 表示武警部队协助的部门为地震局\",\n            \"Victim=“受伤学生” — 表示需要营救的受伤受害人员为受伤学生\",\n            \"Personnel=“学校师生” — 表示需要疏散撤离和安置的人员为学校师生\",\n            \"Area=“震中区域” — 表示需要实施临时管制的危险区域为震中区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀d ∀p ∀v ∀s (CoordinateGuide(“武警部队”, “地震灾害救援”) ∧ Participate(“地震救援队”, “地震灾害救援”) → (Assist(“武警部队”, “地震局”, Rescue(v)) ∧ Evacuate(“武警部队”, “学校师生”) ∧ Settle(“学校师生”) ∧ ImposeTemporaryControl(“武警部队”, “震中区域”) ∧ MaintainSocialStability(“武警部队”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“中国石油天然气集团公司” — 表示中国石油天然气集团公司负责满足要求\",\n            \"r=“国家重大海上溢油应急处置部际联席会议的要求” — 表示国家重大海上溢油应急处置部际联席会议的要求\",\n            \"u=“所属单位A” — 表示中国石油天然气集团公司所属的单位A\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀r∀u (Responsible(“中国石油天然气集团公司”, “国家重大海上溢油应急处置部际联席会议的要求”) ∧ Coordinate(“中国石油天然气集团公司”, “所属单位A”) → Participate(“所属单位A”, EmergencyResponse(Task)))\",\n            \"∀c∀p∀e∀f∀m (Responsible(“中国石油天然气集团公司”, “国家重大海上溢油应急处置部际联席会议的要求”) → ProvideSupport(“中国石油天然气集团公司”, p, e, f, m))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“中国石油化工集团公司” — 表示中国石油化工集团公司负责满足要求\",\n            \"r=“国家重大海上溢油应急处置部际联席会议的要求” — 表示国家重大海上溢油应急处置部际联席会议的要求\",\n            \"u=“所属单位B” — 表示中国石油化工集团公司所属的单位B\",\n            \"p=“专业应急人员” — 表示提供的专业应急人员\",\n            \"e=“应急设备” — 表示提供的应急设备\",\n            \"f=“应急设施” — 表示提供的应急设施\",\n            \"m=“相关物资” — 表示提供的相关物资\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀r∀u (Responsible(“中国石油化工集团公司”, “国家重大海上溢油应急处置部际联席会议的要求”) ∧ Coordinate(“中国石油化工集团公司”, “所属单位B”) → Participate(“所属单位B”, EmergencyResponse(Task)))\",\n            \"∀c∀p∀e∀f∀m (Responsible(“中国石油化工集团公司”, “国家重大海上溢油应急处置部际联席会议的要求”) → ProvideSupport(“中国石油化工集团公司”, “专业应急人员”, “应急设备”, “应急设施”, “相关物资”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“中国海洋石油总公司” — 表示中国海洋石油总公司负责满足要求\",\n            \"r=“国家重大海上溢油应急处置部际联席会议的要求” — 表示国家重大海上溢油应急处置部际联席会议的要求\",\n            \"u=“所属单位C” — 表示中国海洋石油总公司所属的单位C\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀r∀u (Responsible(“中国海洋石油总公司”, “国家重大海上溢油应急处置部际联席会议的要求”) ∧ Coordinate(“中国海洋石油总公司”, “所属单位C”) → Participate(“所属单位C”, EmergencyResponse(Task)))\",\n            \"∀c∀p∀e∀f∀m (Responsible(“中国海洋石油总公司”, “国家重大海上溢油应急处置部际联席会议的要求”) → ProvideSupport(“中国海洋石油总公司”, p, e, f, m))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“中国远洋海运集团有限公司” — 表示中国远洋海运集团有限公司\",\n            \"p=“应急响应团队” — 表示相关人员为应急响应团队\",\n            \"v=“远洋1号” — 表示相关船舶为远洋1号\",\n            \"t=“重大海上溢油应急处置” — 表示任务为重大海上溢油应急处置\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀p∀v∀t (Responsible(中国远洋海运集团有限公司, 重大海上溢油应急处置) → (Mobilize(中国远洋海运集团有限公司, 应急响应团队, 远洋1号) ∧ Participate(中国远洋海运集团有限公司, 重大海上溢油应急处置) ∧ ProvideTransportSupport(中国远洋海运集团有限公司, 应急响应团队, 重大海上溢油应急处置)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“招商局集团有限公司” — 表示招商局集团有限公司\",\n            \"p=“救援小队” — 表示相关人员为救援小队\",\n            \"v=“招商救援1号” — 表示相关船舶为招商救援1号\",\n            \"t=“重大海上溢油应急处置” — 表示任务为重大海上溢油应急处置\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀p∀v∀t (Responsible(招商局集团有限公司, 重大海上溢油应急处置) → (Mobilize(招商局集团有限公司, 救援小队, 招商救援1号) ∧ Participate(招商局集团有限公司, 重大海上溢油应急处置) ∧ ProvideTransportSupport(招商局集团有限公司, 救援小队, 重大海上溢油应急处置)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“海事局” — 表示相关行业行政主管部门为海事局\",\n            \"u=“海洋石油公司” — 表示有关企事业单位为海洋石油公司\",\n            \"EmergencyCenter=“中国海上溢油应急中心” — 表示中国海上溢油应急中心\",\n            \"OtherUnits=“环保组织” — 表示其他有关单位为环保组织\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀u (Requirement(海事局, 海洋石油公司, '国家重大海上溢油应急处置预案') → (CoordinateForces(海事局, 海洋石油公司) ∧ VerifySituation(海事局, 海洋石油公司) ∧ AssessEvent(海事局, 海洋石油公司) ∧ ReportSituation(海事局, 海洋石油公司, '中国海上溢油应急中心', 环保组织)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“渔业局” — 表示相关行业行政主管部门为渔业局\",\n            \"u=“远洋捕捞公司” — 表示有关企事业单位为远洋捕捞公司\",\n            \"EmergencyCenter=“中国海上溢油应急中心” — 表示中国海上溢油应急中心\",\n            \"OtherUnits=“渔业协会” — 表示其他有关单位为渔业协会\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀u (Requirement(渔业局, 远洋捕捞公司, '国家重大海上溢油应急处置预案') → (CoordinateForces(渔业局, 远洋捕捞公司) ∧ VerifySituation(渔业局, 远洋捕捞公司) ∧ AssessEvent(渔业局, 远洋捕捞公司) ∧ ReportSituation(渔业局, 远洋捕捞公司, '中国海上溢油应急中心', 渔业协会)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“环保局” — 表示相关行业行政主管部门为环保局\",\n            \"u=“海洋保护组织” — 表示有关企事业单位为海洋保护组织\",\n            \"EmergencyCenter=“中国海上溢油应急中心” — 表示中国海上溢油应急中心\",\n            \"OtherUnits=“科研机构” — 表示其他有关单位为科研机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀u (Requirement(环保局, 海洋保护组织, '国家重大海上溢油应急处置预案') → (CoordinateForces(环保局, 海洋保护组织) ∧ VerifySituation(环保局, 海洋保护组织) ∧ AssessEvent(环保局, 海洋保护组织) ∧ ReportSituation(环保局, 海洋保护组织, '中国海上溢油应急中心', 科研机构)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“海事局” — 表示相关行业行政主管部门为海事局\",\n            \"u=“海洋石油公司” — 表示有关企事业单位为海洋石油公司\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀u (EmergencyResponse(海事局, 海洋石油公司) → CarryOutWork(海事局, 海洋石油公司))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“渔业局” — 表示相关行业行政主管部门为渔业局\",\n            \"u=“远洋捕捞公司” — 表示有关企事业单位为远洋捕捞公司\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀u (EmergencyResponse(渔业局, 远洋捕捞公司) → CarryOutWork(渔业局, 远洋捕捞公司))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“环保局” — 表示相关行业行政主管部门为环保局\",\n            \"u=“海洋保护组织” — 表示有关企事业单位为海洋保护组织\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀u (EmergencyResponse(环保局, 海洋保护组织) → CarryOutWork(环保局, 海洋保护组织))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“海上溢油应急处置” — 表示应急处置工作需要为海上溢油应急处置\",\n            \"联合指挥部=“国家重大海上溢油应急处置联合指挥部” — 表示成立的组织为国家重大海上溢油应急处置联合指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"应急处置工作需要(海上溢油应急处置) → Establish(国家重大海上溢油应急处置联合指挥部, 组织协调指挥工作)\",\n            \"应急处置工作需要(海上溢油应急处置) → ResponsibleFor(国家重大海上溢油应急处置联合指挥部, 部际层面的组织协调指挥工作)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“综合协调组” — 表示团队为综合协调组\",\n            \"p=“环境保护部” — 表示牵头单位为环境保护部\",\n            \"u=“环境保护部负责人” — 表示负责人为环境保护部负责人\"\n        ],\n        \"instance_logicexpression\": [\n            \"SubordinateTo(综合协调组, 国家重大海上溢油应急处置联合指挥部) ∧ 牵头单位(环境保护部, 综合协调组) → HoldPosition(负责人(环境保护部负责人), 组长, 综合协调组)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“应急行动组” — 表示团队为应急行动组\",\n            \"m=“应急行动组人员” — 表示参加单位的相关人员为应急行动组人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"SubordinateTo(应急行动组, 国家重大海上溢油应急处置联合指挥部) → Compose(应急行动组, 参加单位的相关人员(应急行动组人员))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“现场溢油控制” — 表示必要时为现场溢油控制\",\n            \"现场工作组=“国家重大海上溢油应急现场工作组” — 表示派出的小组为国家重大海上溢油应急现场工作组\"\n        ],\n        \"instance_logicexpression\": [\n            \"必要时(现场溢油控制) → Dispatch(国家重大海上溢油应急现场工作组, 国家重大海上溢油应急处置联合指挥部)\",\n            \"必要时(现场溢油控制) → Assist(国家重大海上溢油应急现场工作组, 现场指挥部)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Department=“交通运输部” — 表示交通运输部牵头组织协调组\",\n            \"Department=“外交部” — 表示外交部参加协调组\",\n            \"Department=“发展改革委” — 表示发展改革委参加协调组\",\n            \"Department=“财政部” — 表示财政部参加协调组\",\n            \"Department=“海洋局” — 表示海洋局参加协调组\",\n            \"Department=“环境保护部” — 表示环境保护部参加协调组\",\n            \"Department=“农业部” — 表示农业部参加协调组\",\n            \"Department=“安全监管总局” — 表示安全监管总局参加协调组\",\n            \"Department=“能源局” — 表示能源局参加协调组\",\n            \"Department=“军委联合参谋部作战局” — 表示军委联合参谋部作战局参加协调组\",\n            \"Department=“海军” — 表示海军参加协调组\",\n            \"Department=“空军” — 表示空军参加协调组\",\n            \"Department=“武警部队” — 表示武警部队参加协调组\"\n        ],\n        \"instance_logicexpression\": [\n            \"Lead(“交通运输部”) ∧ Participate(“外交部”) ∧ Participate(“发展改革委”) ∧ Participate(“财政部”) ∧ Participate(“海洋局”) ∧ Participate(“环境保护部”) ∧ Participate(“农业部”) ∧ Participate(“安全监管总局”) ∧ Participate(“能源局”) ∧ Participate(“军委联合参谋部作战局”) ∧ Participate(“海军”) ∧ Participate(“空军”) ∧ Participate(“武警部队”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“交通运输部” — 表示交通运输部负责落实和传达国务院指示\",\n            \"Instruction=“国务院关于海上溢油应急处置的指示” — 表示国务院发出的指示\"\n        ],\n        \"instance_logicexpression\": [\n            \"ImplementInstruction(“交通运输部”, “国务院关于海上溢油应急处置的指示”) → ReportStatus(“交通运输部”, “国务院关于海上溢油应急处置的指示”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“交通运输部” — 表示交通运输部负责跟踪海上溢油事件的进展\",\n            \"Incident=“重大海上溢油事件” — 表示重大海上溢油事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"TrackProgress(“交通运输部”, “重大海上溢油事件”) → ReportStatus(“交通运输部”, “重大海上溢油事件”)\",\n            \"TrackProgress(“交通运输部”, “重大海上溢油事件”) → OrganizeCoordinate(“交通运输部”, Units, “重大海上溢油事件”)\",\n            \"TrackProgress(“交通运输部”, “重大海上溢油事件”) → SupportEmergencyResponse(“交通运输部”, Government, “重大海上溢油事件”)\",\n            \"TrackProgress(“交通运输部”, “重大海上溢油事件”) → CoordinateSupervise(“交通运输部”, “重大海上溢油事件”)\",\n            \"TrackProgress(“交通运输部”, “重大海上溢油事件”) → CoordinateHandle(“交通运输部”, “重大海上溢油事件”)\",\n            \"TrackProgress(“交通运输部”, “重大海上溢油事件”) → CoordinateInternationalAid(“交通运输部”)\",\n            \"TrackProgress(“交通运输部”, “重大海上溢油事件”) → HandleForeignAffairs(“交通运输部”)\",\n            \"TrackProgress(“交通运输部”, “重大海上溢油事件”) → NegotiateDecision(“交通运输部”, “重大海上溢油事件”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Department=“交通运输部” — 表示交通运输部牵头应急行动组\",\n            \"Organization=“海洋局” — 表示海洋局参加应急行动组\",\n            \"Organization=“环境保护部” — 表示环境保护部参加应急行动组\",\n            \"Organization=“农业部” — 表示农业部参加应急行动组\",\n            \"Organization=“公安部” — 表示公安部参加应急行动组\",\n            \"Organization=“工业和信息化部” — 表示工业和信息化部参加应急行动组\",\n            \"Organization=“安全监管总局” — 表示安全监管总局参加应急行动组\",\n            \"Organization=“军委联合参谋部作战局” — 表示军委联合参谋部作战局参加应急行动组\",\n            \"Organization=“海军” — 表示海军参加应急行动组\",\n            \"Organization=“空军” — 表示空军参加应急行动组\",\n            \"Organization=“武警部队” — 表示武警部队参加应急行动组\",\n            \"Organization=“中国海洋石油总公司” — 表示中国海洋石油总公司参加应急行动组\",\n            \"Organization=“中国石油天然气集团公司” — 表示中国石油天然气集团公司参加应急行动组\",\n            \"Organization=“中国石油化工集团公司” — 表示中国石油化工集团公司参加应急行动组\",\n            \"Organization=“中国远洋海运集团有限公司” — 表示中国远洋海运集团有限公司参加应急行动组\",\n            \"Organization=“招商局集团有限公司” — 表示招商局集团有限公司参加应急行动组\"\n        ],\n        \"instance_logicexpression\": [\n            \"Lead(“交通运输部”) ∧ Participate(“海洋局”) ∧ Participate(“环境保护部”) ∧ Participate(“农业部”) ∧ Participate(“公安部”) ∧ Participate(“工业和信息化部”) ∧ Participate(“安全监管总局”) ∧ Participate(“军委联合参谋部作战局”) ∧ Participate(“海军”) ∧ Participate(“空军”) ∧ Participate(“武警部队”) ∧ Participate(“中国海洋石油总公司”) ∧ Participate(“中国石油天然气集团公司”) ∧ Participate(“中国石油化工集团公司”) ∧ Participate(“中国远洋海运集团有限公司”) ∧ Participate(“招商局集团有限公司”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Government=“广东省人民政府” — 表示广东省人民政府需要制定应急清污方案\"\n        ],\n        \"instance_logicexpression\": [\n            \"Government(“广东省人民政府”) → (Guide(“交通运输部”, “广东省人民政府”) ∧ Assist(“交通运输部”, “广东省人民政府”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Forces=“海军力量” — 表示海军力量参与应急行动\",\n            \"Forces=“武警部队” — 表示武警部队参与应急行动\",\n            \"Forces=“中国海洋石油总公司” — 表示中国海洋石油总公司参与应急行动\"\n        ],\n        \"instance_logicexpression\": [\n            \"Forces(“海军力量”) → (Organize(“交通运输部”, “海军力量”) ∧ Monitor(“交通运输部”, “海军力量”) ∧ Summarize(“交通运输部”, “海军力量”) ∧ Predict(“交通运输部”, “海军力量”) ∧ Protect(“交通运输部”, “海军力量”) ∧ EvacuateRescue(“交通运输部”, “海军力量”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Government=“浙江省人民政府” — 表示浙江省人民政府需要应急指导小组协助\"\n        ],\n        \"instance_logicexpression\": [\n            \"Government(“浙江省人民政府”) → (DispatchGuidanceTeam(“交通运输部”, “浙江省人民政府”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Organization=“卫生计生委” — 表示卫生计生委牵头负责任务\",\n            \"Organization=“交通运输部” — 表示交通运输部参加任务\",\n            \"Organization=“公安部” — 表示公安部参加任务\",\n            \"Organization=“军委联合参谋部作战局” — 表示军委联合参谋部作战局参加任务\",\n            \"Organization=“海军” — 表示海军参加任务\",\n            \"Organization=“空军” — 表示空军参加任务\",\n            \"Task=“伤员转移” — 表示组织协调伤员的转移\",\n            \"Task=“伤员运送” — 表示组织协调伤员的运送\",\n            \"Task=“医疗救治” — 表示组织协调对伤员进行医疗救治\",\n            \"Resource=“医疗机构” — 表示协调医疗机构\",\n            \"Resource=“医疗物资” — 表示协调医疗物资\",\n            \"Unit=“事发地相关单位” — 表示给事发地相关单位提供支持\"\n        ],\n        \"instance_logicexpression\": [\n            \"Lead(“卫生计生委”) ∧ Participate(“交通运输部”) ∧ Participate(“公安部”) ∧ Participate(“军委联合参谋部作战局”) ∧ Participate(“海军”) ∧ Participate(“空军”)\",\n            \"OrganizeCoordinate(Transfer(“伤员”)) ∧ OrganizeCoordinate(Transport(“伤员”)) ∧ OrganizeCoordinate(MedicalTreatment(“伤员”))\",\n            \"Coordinate(“医疗救护组”, “医疗机构”) ∧ Coordinate(“医疗救护组”, “医疗物资”) → ProvideSupport(“事发地相关单位”, “医疗救治”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“卫生计生委” — 表示卫生计生委牵头负责任务\",\n            \"Organization=“应急管理部” — 表示应急管理部参加任务\",\n            \"Organization=“民政部” — 表示民政部参加任务\",\n            \"Organization=“红十字会” — 表示红十字会参加任务\",\n            \"Task=“伤员心理辅导” — 表示组织协调伤员的心理辅导\",\n            \"Resource=“心理辅导专家” — 表示协调心理辅导专家\",\n            \"Unit=“受影响社区” — 表示给受影响社区提供支持\"\n        ],\n        \"instance_logicexpression\": [\n            \"Lead(“卫生计生委”) ∧ Participate(“应急管理部”) ∧ Participate(“民政部”) ∧ Participate(“红十字会”)\",\n            \"OrganizeCoordinate(Transfer(“伤员”)) ∧ OrganizeCoordinate(Transport(“伤员”)) ∧ OrganizeCoordinate(MedicalTreatment(“伤员”))\",\n            \"Coordinate(“医疗救护组”, “心理辅导专家”) → ProvideSupport(“受影响社区”, “心理辅导”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Department=“交通运输部” — 交通运输部牵头组织综合保障组\",\n            \"Department=“发展改革委” — 发展改革部牵头组织综合保障组\",\n            \"Department=“公安部” — 公安部参与综合保障组\",\n            \"Department=“海洋局” — 海洋局参与综合保障组\",\n            \"Department=“气象局” — 气象局参与综合保障组\",\n            \"Department=“农业部” — 农业部参与综合保障组\",\n            \"Department=“海关总署” — 海关总署参与综合保障组\",\n            \"Department=“工业和信息化部” — 工业和信息化部参与综合保障组\",\n            \"Department=“财政部” — 财政部参与综合保障组\",\n            \"Department=“环境保护部” — 环境保护部参与综合保障组\",\n            \"Department=“军委联合参谋部作战局” — 军委联合参谋部作战局参与综合保障组\",\n            \"Department=“海军” — 海军参与综合保障组\",\n            \"Department=“空军” — 空军参与综合保障组\",\n            \"Department=“武警部队” — 武警部队参与综合保障组\",\n            \"Department=“中国海洋石油总公司” — 中国海洋石油总公司参与综合保障组\",\n            \"Department=“中国石油天然气集团公司” — 中国石油天然气集团公司参与综合保障组\",\n            \"Department=“中国石油化工集团公司” — 中国石油化工集团公司参与综合保障组\",\n            \"Department=“中国远洋海运集团有限公司” — 中国远洋海运集团有限公司参与综合保障组\",\n            \"Department=“招商局集团有限公司” — 招商局集团有限公司参与综合保障组\"\n        ],\n        \"instance_logicexpression\": [\n            \"Lead(交通运输部) ∧ Lead(发展改革委) ∧ Participate(公安部) ∧ Participate(海洋局) ∧ Participate(气象局) ∧ Participate(农业部) ∧ Participate(海关总署) ∧ Participate(工业和信息化部) ∧ Participate(财政部) ∧ Participate(环境保护部) ∧ Participate(军委联合参谋部作战局) ∧ Participate(海军) ∧ Participate(空军) ∧ Participate(武警部队) ∧ Participate(中国海洋石油总公司) ∧ Participate(中国石油天然气集团公司) ∧ Participate(中国石油化工集团公司) ∧ Participate(中国远洋海运集团有限公司) ∧ Participate(招商局集团有限公司) → (DivideIntoGroups(应急物资保障小组) ∧ DivideIntoGroups(运输保障小组) ∧ DivideIntoGroups(决策支持保障小组) ∧ DivideIntoGroups(通信保障小组) ∧ DivideIntoGroups(生活物资保障小组) ∧ DivideIntoGroups(应急监督小组))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“应急物资” — 统筹应急物资资源\",\n            \"Team=“应急队伍” — 组织和协调应急队伍\",\n            \"Personnel=“应急人员” — 组织和协调应急人员\",\n            \"Support=“通信支持” — 应急通信保障\",\n            \"Equipment=“应急装备” — 保障应急装备运输\",\n            \"Material=“应急物资” — 保障应急物资运输\",\n            \"Waste=“废弃物” — 保障应急产生的废弃物运输\",\n            \"Material=“生活物资” — 根据应急需要协调生活物资供应\",\n            \"Support=“决策支持” — 提供气象、数值模拟等决策支持保障\",\n            \"Contact=“日常沟通” — 做好日常的沟通联络工作\",\n            \"Supervision=“应急监督” — 协助开展应急监督\",\n            \"Guarantee=“资金保障” — 相关应急资金保障\",\n            \"Evidence=“记录取证” — 记录取证等相关工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"CoordinateResources(应急物资) → (EmergencySupply(应急物资) ∧ OrganizeCoordinate(应急队伍, 应急人员) ∧ EmergencyCommunication(通信支持) ∧ TransportationGuarantee(应急装备, 应急人员, 应急物资, 废弃物) ∧ DailySupply(生活物资) ∧ DecisionSupport(决策支持) ∧ Communication(日常沟通) ∧ EmergencySupervision(应急监督) ∧ FinancialGuarantee(资金保障) ∧ RecordEvidence(记录取证))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Department=“交通运输部” — 交通运输部牵头负责信息发布与宣传组\",\n            \"Department=“外交部” — 外交部参与信息发布与宣传组\",\n            \"Department=“海洋局” — 海洋局参与信息发布与宣传组\",\n            \"Department=“环境保护部” — 环境保护部参与信息发布与宣传组\",\n            \"Department=“农业部” — 农业部参与信息发布与宣传组\",\n            \"Department=“安全监管总局” — 安全监管总局参与信息发布与宣传组\",\n            \"Type=“海上溢油污染” — 信息发布与宣传组负责发布海上溢油污染信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"Lead(交通运输部) ∧ Participate(外交部) ∧ Participate(海洋局) ∧ Participate(环境保护部) ∧ Participate(农业部) ∧ Participate(安全监管总局)\",\n            \"ReleaseInformation(信息发布与宣传组, 海上溢油污染) ∧ CreatePlatform(信息发布与宣传组) ∧ CollectInformation(信息发布与宣传组) ∧ EnhanceCommunication(信息发布与宣传组) ∧ GuidePublicOpinion(信息发布与宣传组) ∧ PromoteInformation(信息发布与宣传组)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“交通运输部” — 交通运输部牵头负责信息发布与宣传组\",\n            \"Department=“外交部” — 外交部参与信息发布与宣传组\",\n            \"Department=“海洋局” — 海洋局参与信息发布与宣传组\",\n            \"Department=“环境保护部” — 环境保护部参与信息发布与宣传组\",\n            \"Department=“农业部” — 农业部参与信息发布与宣传组\",\n            \"Department=“安全监管总局” — 安全监管总局参与信息发布与宣传组\",\n            \"Type=“环境信息” — 信息发布与宣传组负责发布环境信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"Lead(交通运输部) ∧ Participate(外交部) ∧ Participate(海洋局) ∧ Participate(环境保护部) ∧ Participate(农业部) ∧ Participate(安全监管总局)\",\n            \"ReleaseInformation(信息发布与宣传组, 环境信息) ∧ CreatePlatform(信息发布与宣传组) ∧ CollectInformation(信息发布与宣传组) ∧ EnhanceCommunication(信息发布与宣传组) ∧ GuidePublicOpinion(信息发布与宣传组) ∧ PromoteInformation(信息发布与宣传组)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Department=“公安部” — 公安部牵头负责治安保障组的工作\",\n            \"Department=“农业部” — 农业部参与治安保障组的工作\",\n            \"Department=“交通运输部” — 交通运输部参与治安保障组的工作\",\n            \"Department=“海洋局” — 海洋局参与治安保障组的工作\",\n            \"Department=“环境保护部” — 环境保护部参与治安保障组的工作\",\n            \"Department=“武警部队” — 武警部队参与治安保障组的工作\",\n            \"Area=“东海区域” — 东海区域受到海上溢油污染\"\n        ],\n        \"instance_logicexpression\": [\n            \"公安部 ∧ 农业部 ∧ 交通运输部 ∧ 海洋局 ∧ 环境保护部 ∧ 武警部队\",\n            \"∀a (OilSpillArea(东海区域) → (GuideLawEnforcement(Police, 东海区域) ∧ ∀i (Incident(i) → HandleEmergency(Police, i))))\",\n            \"∀a (OilSpillArea(东海区域) → (GuideSecurity(ArmedPolice, 东海区域) ∧ GuideStability(ArmedPolice, 东海区域)))\",\n            \"∀e (OilSpillEvent(e) → ∃d (GuideResolveConflict(d, {TransportEnterprises, ShipOwners, Fishermen, Aquaculturists, RelatedEnterprises})))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“公安部” — 公安部牵头负责治安保障组的工作\",\n            \"Department=“农业部” — 农业部参与治安保障组的工作\",\n            \"Department=“交通运输部” — 交通运输部参与治安保障组的工作\",\n            \"Department=“海洋局” — 海洋局参与治安保障组的工作\",\n            \"Department=“环境保护部” — 环境保护部参与治安保障组的工作\",\n            \"Department=“武警部队” — 武警部队参与治安保障组的工作\",\n            \"Area=“南海区域” — 南海区域受到海上溢油污染\"\n        ],\n        \"instance_logicexpression\": [\n            \"公安部 ∧ 农业部 ∧ 交通运输部 ∧ 海洋局 ∧ 环境保护部 ∧ 武警部队\",\n            \"∀a (OilSpillArea(南海区域) → (GuideLawEnforcement(Police, 南海区域) ∧ ∀i (Incident(i) → HandleEmergency(Police, i))))\",\n            \"∀a (OilSpillArea(南海区域) → (GuideSecurity(ArmedPolice, 南海区域) ∧ GuideStability(ArmedPolice, 南海区域)))\",\n            \"∀e (OilSpillEvent(e) → ∃d (GuideResolveConflict(d, {TransportEnterprises, ShipOwners, Fishermen, Aquaculturists, RelatedEnterprises})))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“专家组1” — 表示由国家重大海上溢油应急处置部际联席会议设立的专家组\",\n            \"m=“环保部” — 表示环保部作为成员单位\",\n            \"e'=“专家1” — 表示环保部推荐的专家\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishExpertGroup(国家重大海上溢油应急处置部际联席会议) ∧ MemberUnit(环保部) → RecommendExpert(环保部, 专家1)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“专家2” — 表示由国家重大海上溢油应急处置部际联席会议设立的专家组中的专家\",\n            \"Field=“法律” — 表示专家提供的法律领域咨询和建议\"\n        ],\n        \"instance_logicexpression\": [\n            \"Expert(专家2) → ProvideConsultation(专家2, 法律)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“专家3” — 表示由国家重大海上溢油应急处置部际联席会议设立的专家组中的专家\",\n            \"w=“应急响应工作组” — 表示专家参与的应急响应工作组\"\n        ],\n        \"instance_logicexpression\": [\n            \"Expert(专家3) ∧ WorkGroup(应急响应工作组) → ParticipateDiscussion(专家3, 应急响应工作组)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“专家4” — 表示由国家重大海上溢油应急处置部际联席会议设立的专家组中的专家\"\n        ],\n        \"instance_logicexpression\": [\n            \"Expert(专家4) → ProvideTechnicalSupport(专家4, 海上溢油应急决策)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“专家5” — 表示由国家重大海上溢油应急处置部际联席会议设立的专家组中的专家\"\n        ],\n        \"instance_logicexpression\": [\n            \"Expert(专家5) → AssistTechnicalGuidance(专家5, 中国海上溢油应急中心)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“交通部” — 表示国务院行业行政主管部门之一\"\n        ],\n        \"instance_logicexpression\": [\n            \"国务院行业行政主管部门(交通部) → ∃e (EstablishExpertGroup(交通部))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“海洋石油公司” — 表示相关企事业单位为海洋石油公司\",\n            \"g=“省级海事局” — 表示省级人民政府或行业行政主管部门为省级海事局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (相关企事业单位(o) → (EstablishMonitoringSystem(海洋石油公司) ∧ IncreaseMonitoringEffort(海洋石油公司) ∧ RegularRiskInspection(海洋石油公司) ∧ ConductRiskAssessment(海洋石油公司) ∧ ImproveRiskControlMeasures(海洋石油公司)))\",\n            \"∀o (可能导致国家重大海上溢油(海洋石油公司) → ReportSituation(海洋石油公司, 人民政府))\",\n            \"∀g (省级人民政府(g) ∨ 行业行政主管部门(g) → (StrengthenDailyMonitoring(省级海事局) ∧ EstablishConsultationAndSharingMechanism(省级海事局) ∧ EnhanceRiskInfoCollectionAnalysisJudgment(省级海事局)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“远洋运输集团” — 表示相关企事业单位为远洋运输集团\",\n            \"g=“省级环保厅” — 表示省级人民政府或行业行政主管部门为省级环保厅\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (相关企事业单位(o) → (EstablishMonitoringSystem(远洋运输集团) ∧ IncreaseMonitoringEffort(远洋运输集团) ∧ RegularRiskInspection(远洋运输集团) ∧ ConductRiskAssessment(远洋运输集团) ∧ ImproveRiskControlMeasures(远洋运输集团)))\",\n            \"∀o (可能导致国家重大海上溢油(远洋运输集团) → ReportSituation(远洋运输集团, 人民政府))\",\n            \"∀g (省级人民政府(g) ∨ 行业行政主管部门(g) → (StrengthenDailyMonitoring(省级环保厅) ∧ EstablishConsultationAndSharingMechanism(省级环保厅) ∧ EnhanceRiskInfoCollectionAnalysisJudgment(省级环保厅)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“沿海炼油厂” — 表示相关企事业单位为沿海炼油厂\",\n            \"g=“省级应急管理厅” — 表示省级人民政府或行业行政主管部门为省级应急管理厅\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (相关企事业单位(o) → (EstablishMonitoringSystem(沿海炼油厂) ∧ IncreaseMonitoringEffort(沿海炼油厂) ∧ RegularRiskInspection(沿海炼油厂) ∧ ConductRiskAssessment(沿海炼油厂) ∧ ImproveRiskControlMeasures(沿海炼油厂)))\",\n            \"∀o (可能导致国家重大海上溢油(沿海炼油厂) → ReportSituation(沿海炼油厂, 人民政府))\",\n            \"∀g (省级人民政府(g) ∨ 行业行政主管部门(g) → (StrengthenDailyMonitoring(省级应急管理厅) ∧ EstablishConsultationAndSharingMechanism(省级应急管理厅) ∧ EnhanceRiskInfoCollectionAnalysisJudgment(省级应急管理厅)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“海上钻井平台” — 表示相关企事业单位为海上钻井平台\",\n            \"g=“省级渔业局” — 表示省级人民政府或行业行政主管部门为省级渔业局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (相关企事业单位(o) → (EstablishMonitoringSystem(海上钻井平台) ∧ IncreaseMonitoringEffort(海上钻井平台) ∧ RegularRiskInspection(海上钻井平台) ∧ ConductRiskAssessment(海上钻井平台) ∧ ImproveRiskControlMeasures(海上钻井平台)))\",\n            \"∀o (可能导致国家重大海上溢油(海上钻井平台) → ReportSituation(海上钻井平台, 人民政府))\",\n            \"∀g (省级人民政府(g) ∨ 行业行政主管部门(g) → (StrengthenDailyMonitoring(省级渔业局) ∧ EstablishConsultationAndSharingMechanism(省级渔业局) ∧ EnhanceRiskInfoCollectionAnalysisJudgment(省级渔业局)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“广东省政府” — 表示广东省政府研判可能发生国家重大海上溢油\",\n            \"i=“国家重大海上溢油” — 表示研判的事件类型\",\n            \"AffectedRegions=“南海区域” — 表示海上溢油可能影响到的相关地区\",\n            \"Center=“中国海上溢油应急中心” — 表示报告的应急中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g ∀i (Assess(广东省政府, 国家重大海上溢油) → (PublishWarning(广东省政府, NationalWarningSystem) ∧ PublishWarning(广东省政府, TV) ∧ PublishWarning(广东省政府, Radio) ∧ PublishWarning(广东省政府, Newspaper) ∧ PublishWarning(广东省政府, Internet) ∧ PublishWarning(广东省政府, SMS) ∧ PublishWarning(广东省政府, FaceToFace) ∧ NotifyRegions(广东省政府, 南海区域) ∧ ReportEmergencyCenter(广东省政府, 中国海上溢油应急中心)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“浙江省海事局” — 表示浙江省海事局研判可能发生国家重大海上溢油\",\n            \"i=“国家重大海上溢油” — 表示研判的事件类型\",\n            \"AffectedRegions=“东海区域” — 表示海上溢油可能影响到的相关地区\",\n            \"Center=“中国海上溢油应急中心” — 表示报告的应急中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g ∀i (Assess(浙江省海事局, 国家重大海上溢油) → (PublishWarning(浙江省海事局, NationalWarningSystem) ∧ PublishWarning(浙江省海事局, TV) ∧ PublishWarning(浙江省海事局, Radio) ∧ PublishWarning(浙江省海事局, Newspaper) ∧ PublishWarning(浙江省海事局, Internet) ∧ PublishWarning(浙江省海事局, SMS) ∧ PublishWarning(浙江省海事局, FaceToFace) ∧ NotifyRegions(浙江省海事局, 东海区域) ∧ ReportEmergencyCenter(浙江省海事局, 中国海上溢油应急中心)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“山东省海洋与渔业厅” — 表示山东省海洋与渔业厅研判可能发生国家重大海上溢油\",\n            \"i=“国家重大海上溢油” — 表示研判的事件类型\",\n            \"AffectedRegions=“黄海区域” — 表示海上溢油可能影响到的相关地区\",\n            \"Center=“中国海上溢油应急中心” — 表示报告的应急中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g ∀i (Assess(山东省海洋与渔业厅, 国家重大海上溢油) → (PublishWarning(山东省海洋与渔业厅, NationalWarningSystem) ∧ PublishWarning(山东省海洋与渔业厅, TV) ∧ PublishWarning(山东省海洋与渔业厅, Radio) ∧ PublishWarning(山东省海洋与渔业厅, Newspaper) ∧ PublishWarning(山东省海洋与渔业厅, Internet) ∧ PublishWarning(山东省海洋与渔业厅, SMS) ∧ PublishWarning(山东省海洋与渔业厅, FaceToFace) ∧ NotifyRegions(山东省海洋与渔业厅, 黄海区域) ∧ ReportEmergencyCenter(山东省海洋与渔业厅, 中国海上溢油应急中心)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“辽宁省交通厅” — 表示辽宁省交通厅研判可能发生国家重大海上溢油\",\n            \"i=“国家重大海上溢油” — 表示研判的事件类型\",\n            \"AffectedRegions=“渤海区域” — 表示海上溢油可能影响到的相关地区\",\n            \"Center=“中国海上溢油应急中心” — 表示报告的应急中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g ∀i (Assess(辽宁省交通厅, 国家重大海上溢油) → (PublishWarning(辽宁省交通厅, NationalWarningSystem) ∧ PublishWarning(辽宁省交通厅, TV) ∧ PublishWarning(辽宁省交通厅, Radio) ∧ PublishWarning(辽宁省交通厅, Newspaper) ∧ PublishWarning(辽宁省交通厅, Internet) ∧ PublishWarning(辽宁省交通厅, SMS) ∧ PublishWarning(辽宁省交通厅, FaceToFace) ∧ NotifyRegions(辽宁省交通厅, 渤海区域) ∧ ReportEmergencyCenter(辽宁省交通厅, 中国海上溢油应急中心)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“广东省政府” — 表示广东省政府研判海上溢油可能性已经消除\",\n            \"EmergencyCenter=“中国海上溢油应急中心” — 表示报告的应急中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g (AssessElimination(广东省政府, Possibility) → (Report(广东省政府, 中国海上溢油应急中心) → (AnnounceLiftingAlert(广东省政府) ∧ TerminateMeasures(广东省政府))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“浙江省海事局” — 表示浙江省海事局研判海上溢油可能性已经消除\",\n            \"EmergencyCenter=“中国海上溢油应急中心” — 表示报告的应急中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g (AssessElimination(浙江省海事局, Possibility) → (Report(浙江省海事局, 中国海上溢油应急中心) → (AnnounceLiftingAlert(浙江省海事局) ∧ TerminateMeasures(浙江省海事局))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“山东省海洋与渔业厅” — 表示山东省海洋与渔业厅研判海上溢油可能性已经消除\",\n            \"EmergencyCenter=“中国海上溢油应急中心” — 表示报告的应急中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g (AssessElimination(山东省海洋与渔业厅, Possibility) → (Report(山东省海洋与渔业厅, 中国海上溢油应急中心) → (AnnounceLiftingAlert(山东省海洋与渔业厅) ∧ TerminateMeasures(山东省海洋与渔业厅))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“辽宁省交通厅” — 表示辽宁省交通厅研判海上溢油可能性已经消除\",\n            \"EmergencyCenter=“中国海上溢油应急中心” — 表示报告的应急中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g (AssessElimination(辽宁省交通厅, Possibility) → (Report(辽宁省交通厅, 中国海上溢油应急中心) → (AnnounceLiftingAlert(辽宁省交通厅) ∧ TerminateMeasures(辽宁省交通厅))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"u=“海洋监测站” — 海洋监测站发现海上溢油。\",\n            \"r=“海事局” — 海事局是接收报告的单位。\"\n        ],\n        \"instance_logicexpression\": [\n            \"DiscoverOilSpill(海洋监测站) → ∃r ReportSituation(海洋监测站, 海事局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“海事局” — 海事局接收到报告。\",\n            \"u=“海洋监测站” — 海洋监测站是报告的发出者。\"\n        ],\n        \"instance_logicexpression\": [\n            \"ReceiveReport(海事局, 海洋监测站) → (VerifySituation(海事局) ∧ ShareInformation(海事局))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“广东省” — 广东省可能发生国家重大海上溢油事件。\",\n            \"e=“海上溢油事件” — 事件为海上溢油。\",\n            \"Center=“中国海上溢油应急中心” — 中国海上溢油应急中心负责报告。\"\n        ],\n        \"instance_logicexpression\": [\n            \"MajorEvent(广东省, 海上溢油事件) → (ReportToStateCouncil(中国海上溢油应急中心, 广东省) ∧ ReportToStateCouncil(广东省, 广东省))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“中国海上溢油应急中心” — 中国海上溢油应急中心向国务院报告。\",\n            \"p=“广东省” — 广东省是报告的接收省份。\"\n        ],\n        \"instance_logicexpression\": [\n            \"ReportToStateCouncil(中国海上溢油应急中心, 广东省) → SupplementaryReport(广东省, 中国海上溢油应急中心)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“渔民老张” — 渔民老张发现海上溢油。\",\n            \"r=“环保局” — 环保局是接收报告的单位。\"\n        ],\n        \"instance_logicexpression\": [\n            \"DiscoverOilSpill(渔民老张) → ∃r ReportSituation(渔民老张, 环保局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“环保局” — 环保局接收到报告。\",\n            \"u=“渔民老张” — 渔民老张是报告的发出者。\"\n        ],\n        \"instance_logicexpression\": [\n            \"ReceiveReport(环保局, 渔民老张) → (VerifySituation(环保局) ∧ ShareInformation(环保局))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“山东省” — 山东省可能发生国家重大海上溢油事件。\",\n            \"e=“海上溢油事件” — 事件为海上溢油。\",\n            \"Center=“中国海上溢油应急中心” — 中国海上溢油应急中心负责报告。\"\n        ],\n        \"instance_logicexpression\": [\n            \"MajorEvent(山东省, 海上溢油事件) → (ReportToStateCouncil(中国海上溢油应急中心, 山东省) ∧ ReportToStateCouncil(山东省, 山东省))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“山东省人民政府” — 山东省人民政府向国务院报告。\",\n            \"p=“山东省” — 山东省是报告的接收省份。\"\n        ],\n        \"instance_logicexpression\": [\n            \"ReportToStateCouncil(山东省人民政府, 山东省) → SupplementaryReport(山东省, 山东省人民政府)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“报告1” — 表示信息报告编号为1\",\n            \"Spill=“溢油事件A” — 表示海上溢油事件编号为A\"\n        ],\n        \"instance_logicexpression\": [\n            \"Detailed(报告1) → (Include(报告1, OccurrenceTime(溢油事件A)) ∧ Include(报告1, Location(溢油事件A)) ∧ Include(报告1, Source(溢油事件A)) ∧ Include(报告1, CauseAndNature(溢油事件A)) ∧ Include(报告1, BasicProcess(溢油事件A)) ∧ Include(报告1, OilTypeAndQuantity(溢油事件A)) ∧ Include(报告1, PersonAffected(溢油事件A)) ∧ Include(报告1, EnvironmentalImpact(溢油事件A)) ∧ Include(报告1, Trend(溢油事件A)) ∧ Include(报告1, Disposal(溢油事件A)) ∧ Include(报告1, ProposedMeasures(溢油事件A)) ∧ Include(报告1, NextSteps(溢油事件A)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“报告2” — 表示信息报告编号为2\",\n            \"Spill=“溢油事件B” — 表示海上溢油事件编号为B\"\n        ],\n        \"instance_logicexpression\": [\n            \"Detailed(报告2) → (Include(报告2, OccurrenceTime(溢油事件B)) ∧ Include(报告2, Location(溢油事件B)) ∧ Include(报告2, Source(溢油事件B)) ∧ Include(报告2, CauseAndNature(溢油事件B)) ∧ Include(报告2, BasicProcess(溢油事件B)) ∧ Include(报告2, OilTypeAndQuantity(溢油事件B)) ∧ Include(报告2, PersonAffected(溢油事件B)) ∧ Include(报告2, EnvironmentalImpact(溢油事件B)) ∧ Include(报告2, Trend(溢油事件B)) ∧ Include(报告2, Disposal(溢油事件B)) ∧ Include(报告2, ProposedMeasures(溢油事件B)) ∧ Include(报告2, NextSteps(溢油事件B)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“报告3” — 表示信息报告编号为3\",\n            \"Spill=“溢油事件C” — 表示海上溢油事件编号为C\"\n        ],\n        \"instance_logicexpression\": [\n            \"Detailed(报告3) → (Include(报告3, OccurrenceTime(溢油事件C)) ∧ Include(报告3, Location(溢油事件C)) ∧ Include(报告3, Source(溢油事件C)) ∧ Include(报告3, CauseAndNature(溢油事件C)) ∧ Include(报告3, BasicProcess(溢油事件C)) ∧ Include(报告3, OilTypeAndQuantity(溢油事件C)) ∧ Include(报告3, PersonAffected(溢油事件C)) ∧ Include(报告3, EnvironmentalImpact(溢油事件C)) ∧ Include(报告3, Trend(溢油事件C)) ∧ Include(报告3, Disposal(溢油事件C)) ∧ Include(报告3, ProposedMeasures(溢油事件C)) ∧ Include(报告3, NextSteps(溢油事件C)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“海上溢油事件1” — 表示一个具体的海上溢油事件\",\n            \"方法=“传真” — 表示书面报告的方式为传真\",\n            \"u=“海洋监管局” — 表示报告单位为海洋监管局\",\n            \"i=“王监管” — 表示签发人为王监管\",\n            \"c=“李联系” — 表示联系人为李联系\",\n            \"联系方式=“1234567890” — 表示联系方式为1234567890\"\n        ],\n        \"instance_logicexpression\": [\n            \"海上溢油事件(海上溢油事件1) → (ReportInWriting(海上溢油事件1, 传真) ∨ ReportInWriting(海上溢油事件1, 网络))\",\n            \"ReportInWriting(海上溢油事件1, 传真) → IndicateInformation(海上溢油事件1, 海洋监管局, 王监管, 李联系, 1234567890)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“海上溢油事件2” — 表示另一个具体的海上溢油事件\",\n            \"方法=“网络” — 表示书面报告的方式为网络\",\n            \"u=“环保组织” — 表示报告单位为环保组织\",\n            \"i=“赵环保” — 表示签发人为赵环保\",\n            \"c=“钱联络” — 表示联系人为钱联络\",\n            \"联系方式=“0987654321” — 表示联系方式为0987654321\"\n        ],\n        \"instance_logicexpression\": [\n            \"海上溢油事件(海上溢油事件2) → (ReportInWriting(海上溢油事件2, 传真) ∨ ReportInWriting(海上溢油事件2, 网络))\",\n            \"ReportInWriting(海上溢油事件2, 网络) → IndicateInformation(海上溢油事件2, 环保组织, 赵环保, 钱联络, 0987654321)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“海上溢油事件3” — 表示一个需要电话报告的海上溢油事件\",\n            \"u=“应急响应中心” — 表示报告单位为应急响应中心\",\n            \"i=“孙应急” — 表示签发人为孙应急\",\n            \"c=“周协调” — 表示联系人为周协调\",\n            \"联系方式=“5678901234” — 表示联系方式为5678901234\"\n        ],\n        \"instance_logicexpression\": [\n            \"必要时(海上溢油事件3) → (ReportByPhone(海上溢油事件3) ∧ SupplementReport(海上溢油事件3))\",\n            \"ReportInWriting(海上溢油事件3, 方法) → IndicateInformation(海上溢油事件3, 应急响应中心, 孙应急, 周协调, 5678901234)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"w=“预警1” — 表示预警阶段的评估结果\",\n            \"c=“国家重大海上溢油” — 表示预警评估的级别\",\n            \"Body=“国家重大海上溢油应急处置部际联席会议” — 表示会商同意的机构\",\n            \"Decision=“启动应急响应” — 表示会商同意的决策\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w∀c (WarningAssessment(预警1, '国家重大海上溢油') ∧ Consensus('国家重大海上溢油应急处置部际联席会议', '启动应急响应') → EmergencyResponse('启动应急响应'))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=“预警2” — 表示预警阶段的评估结果\",\n            \"c=“国家重大海上溢油” — 表示预警评估的级别\",\n            \"Body=“国务院” — 表示直接决定的机构\",\n            \"Decision=“启动应急响应” — 表示直接决定的决策\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w∀c (WarningAssessment(预警2, '国家重大海上溢油') ∧ DirectDecision('国务院', '启动应急响应') → EmergencyResponse('启动应急响应'))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“请求1” — 表示请求的行动\",\n            \"Body=“国家重大海上溢油应急处置部际联席会议成员单位” — 表示请求的机构\",\n            \"Decision=“启动应急响应” — 表示会商同意的决策\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (Request('国家重大海上溢油应急处置部际联席会议成员单位', '启动应急响应') ∧ Consensus('国家重大海上溢油应急处置部际联席会议', '启动应急响应') → EmergencyResponse('启动应急响应'))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“请求2” — 表示请求的行动\",\n            \"Body=“省级人民政府” — 表示请求的机构\",\n            \"Decision=“启动应急响应” — 表示会商同意的决策\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (Request('省级人民政府', '启动应急响应') ∧ Consensus('国家重大海上溢油应急处置部际联席会议', '启动应急响应') → EmergencyResponse('启动应急响应'))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"EmergencyResponseActivated() — 表示应急响应已经被启动。\",\n            \"InterMinisterialMeeting=“国家重大海上溢油应急处置部际联席会议” — 表示国家重大海上溢油应急处置部际联席会议。\",\n            \"CommandCenter=“现场指挥部” — 表示现场指挥部。\",\n            \"Units=“各成员单位及其他有关力量” — 表示各成员单位及其他有关力量。\",\n            \"Resources=“车辆、船舶、飞机等交通运输工具” — 表示车辆、船舶、飞机等交通运输工具。\",\n            \"Facilities=“通信设备设施和通信渠道” — 表示通信设备设施和通信渠道。\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseActivated() → ImplementNationalResponse(国家重大海上溢油应急处置部际联席会议)\",\n            \"ImplementNationalResponse(国家重大海上溢油应急处置部际联席会议) → (GuidePlanFormulation(现场指挥部) ∧ DispatchWorkGroup(现场指挥部))\",\n            \"ImplementNationalResponse(国家重大海上溢油应急处置部际联席会议) → (CommandCenterRequest(现场指挥部) → (CoordinateMonitoring(各成员单位及其他有关力量, 现场指挥部) ∧ CoordinatePollutionCleanup(各成员单位及其他有关力量, 现场指挥部)))\",\n            \"ImplementNationalResponse(国家重大海上溢油应急处置部际联席会议) → (CommandCenterRequest(现场指挥部) → CoordinateTransportResources(车辆、船舶、飞机等交通运输工具, 现场指挥部))\",\n            \"ImplementNationalResponse(国家重大海上溢油应急处置部际联席会议) → (CommandCenterRequest(现场指挥部) → CoordinateCommunicationResources(通信设备设施和通信渠道, 现场指挥部))\",\n            \"ImplementNationalResponse(国家重大海上溢油应急处置部际联席会议) → ReleaseInformation(现场指挥部)\",\n            \"ImplementNationalResponse(国家重大海上溢油应急处置部际联席会议) → (CommandCenterRequest(现场指挥部) ∨ EmergencyDevelopment(国家重大海上溢油应急处置部际联席会议) → CoordinateInternationalAid(现场指挥部))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"EmergencyResponseActivated() — 表示应急响应已经被启动。\",\n            \"InterMinisterialMeeting=“国家重大海上溢油应急处置部际联席会议” — 表示国家重大海上溢油应急处置部际联席会议。\",\n            \"CommandCenter=“现场指挥部” — 表示现场指挥部。\",\n            \"Units=“各成员单位及其他有关力量” — 表示各成员单位及其他有关力量。\",\n            \"Resources=“场地、码头、油污储运等设施” — 表示场地、码头、油污储运等设施。\",\n            \"Facilities=“通信设备设施和通信渠道” — 表示通信设备设施和通信渠道。\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseActivated() → ImplementNationalResponse(国家重大海上溢油应急处置部际联席会议)\",\n            \"ImplementNationalResponse(国家重大海上溢油应急处置部际联席会议) → (GuidePlanFormulation(现场指挥部) ∧ DispatchWorkGroup(现场指挥部))\",\n            \"ImplementNationalResponse(国家重大海上溢油应急处置部际联席会议) → (CommandCenterRequest(现场指挥部) → (CoordinateMonitoring(各成员单位及其他有关力量, 现场指挥部) ∧ CoordinatePollutionCleanup(各成员单位及其他有关力量, 现场指挥部)))\",\n            \"ImplementNationalResponse(国家重大海上溢油应急处置部际联席会议) → (CommandCenterRequest(现场指挥部) → CoordinateTransportResources(场地、码头、油污储运等设施, 现场指挥部))\",\n            \"ImplementNationalResponse(国家重大海上溢油应急处置部际联席会议) → (CommandCenterRequest(现场指挥部) → CoordinateCommunicationResources(通信设备设施和通信渠道, 现场指挥部))\",\n            \"ImplementNationalResponse(国家重大海上溢油应急处置部际联席会议) → ReleaseInformation(现场指挥部)\",\n            \"ImplementNationalResponse(国家重大海上溢油应急处置部际联席会议) → (CommandCenterRequest(现场指挥部) ∨ EmergencyDevelopment(国家重大海上溢油应急处置部际联席会议) → CoordinateInternationalAid(现场指挥部))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"E=“溢油事件001” — 表示发生了海上溢油事件溢油事件001\",\n            \"A=“海事局” — 表示相关单位为海事局\",\n            \"预案=“海上溢油应急处置预案” — 表示相关单位依据的预案\",\n            \"I=“溢油事件信息001” — 表示需要报告的信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (OilSpill(溢油事件001) → (∃A FollowPlan(海事局, 海上溢油应急处置预案) ∧ Dispose(海事局,溢油事件001) ∧ ∀I Report(海事局,溢油事件信息001)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“溢油事件002” — 表示发生了海上溢油事件溢油事件002\",\n            \"CommandCenter=“海上应急响应中心” — 表示现场指挥部\",\n            \"Measures=“应急响应措施002” — 表示应急响应措施\",\n            \"Necessity(Support)=“是” — 表示需要外部支援\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (OilSpill(溢油事件002) → (ResponsibleForOrganization(海上应急响应中心, 应急响应措施002) ∧ OilSpillAssessment(海上应急响应中心) ∧ Monitoring(海上应急响应中心) ∧ ProtectTargets(海上应急响应中心) ∧ BlockAndControl(海上应急响应中心) ∧ ContainAndClean(海上应急响应中心) ∧ StorageAndDispose(海上应急响应中心)))\",\n            \"∀E (OilSpill(溢油事件002) ∧ Necessity(是) → RequestSupport(海上应急响应中心, 国家重大海上溢油应急处置部际联席会议))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“溢油事件003” — 表示发生了海上溢油事件溢油事件003\",\n            \"A=“环保局” — 表示相关单位为环保局\",\n            \"预案=“环保应急处置预案” — 表示相关单位依据的预案\",\n            \"I=“溢油事件信息003” — 表示需要报告的信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (OilSpill(溢油事件003) → (∃A FollowPlan(环保局, 环保应急处置预案) ∧ Dispose(环保局,溢油事件003) ∧ ∀I Report(环保局,溢油事件信息003)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“溢油事件004” — 表示发生了海上溢油事件溢油事件004\",\n            \"CommandCenter=“海上应急响应中心” — 表示现场指挥部\",\n            \"Measures=“应急响应措施004” — 表示应急响应措施\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (OilSpill(溢油事件004) → (ResponsibleForOrganization(海上应急响应中心, 应急响应措施004) ∧ OilSpillAssessment(海上应急响应中心) ∧ Monitoring(海上应急响应中心) ∧ ProtectTargets(海上应急响应中心) ∧ BlockAndControl(海上应急响应中心) ∧ ContainAndClean(海上应急响应中心) ∧ StorageAndDispose(海上应急响应中心)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“海上溢油评估” — 表示现场指挥部负责组织的评估工作为海上溢油评估\",\n            \"i=“溢油源” — 表示评估内容包括查明溢油源\",\n            \"p=“海上溢油扩散范围” — 表示评估工作包括对海上溢油扩散范围的预测\",\n            \"r=“应急物资、装备、人员” — 表示组织评估海上溢油应急所需物资、装备、人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀i ∀p ∀r (ResponsibleForOrganization(CommandCenter, “海上溢油评估”) → (AssessmentContent(“海上溢油评估”, 查明溢油源) ∧ AssessmentContent(“海上溢油评估”, 海上溢油量) ∧ Predict(“海上溢油评估”, “海上溢油扩散范围”) ∧ AssessDamage(“海上溢油评估”, Damage) ∧ ∃r (OrganizeAssessment(CommandCenter, “海上溢油评估”, r) ∧ Report(CommandCenter, Meeting))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“海上溢油评估” — 表示现场指挥部负责组织的评估工作为海上溢油评估\",\n            \"i=“溢油量” — 表示评估内容包括海上溢油量\",\n            \"p=“溢油损害” — 表示评估工作包括对海上溢油损害的评估\",\n            \"r=“应急物资、装备、人员” — 表示组织评估海上溢油应急所需物资、装备、人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀i ∀p ∀r (ResponsibleForOrganization(CommandCenter, “海上溢油评估”) → (AssessmentContent(“海上溢油评估”, 海上溢油量) ∧ AssessmentContent(“海上溢油评估”, 查明溢油源) ∧ Predict(“海上溢油评估”, Spread) ∧ AssessDamage(“海上溢油评估”, “溢油损害”) ∧ ∃r (OrganizeAssessment(CommandCenter, “海上溢油评估”, r) ∧ Report(CommandCenter, Meeting))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“海上溢油评估” — 表示现场指挥部负责组织的评估工作为海上溢油评估\",\n            \"i=“溢油源” — 表示评估内容包括查明溢油源\",\n            \"p=“溢油扩散范围” — 表示评估工作包括对海上溢油扩散范围的预测\",\n            \"r=“应急物资、装备、人员” — 表示组织评估海上溢油应急所需物资、装备、人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀i ∀p ∀r (ResponsibleForOrganization(CommandCenter, “海上溢油评估”) → (AssessmentContent(“海上溢油评估”, 查明溢油源) ∧ AssessmentContent(“海上溢油评估”, 海上溢油量) ∧ Predict(“海上溢油评估”, “溢油扩散范围”) ∧ AssessDamage(“海上溢油评估”, Damage) ∧ ∃r (OrganizeAssessment(CommandCenter, “海上溢油评估”, r) ∧ Report(CommandCenter, Meeting))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“现场指挥部” — 表示现场指挥部负责组织活动\",\n            \"a=“东海海域” — 表示监视监测的区域为东海海域\",\n            \"g=“东海地方政府” — 表示地方政府为东海地方政府\",\n            \"信息=“东海海域溢油污染情况” — 表示通报的信息为东海海域溢油污染情况\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀a (ResponsibleForOrganization(现场指挥部, Monitor(东海海域)) → Report(现场指挥部, OilSpill(东海海域)))\",\n            \"∀g ∀a (OilSpill(东海海域) ∨ PossiblePollution(东海海域) → Monitor(东海地方政府, 东海海域) ∧ Report(东海地方政府, OilSpill(东海海域)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“现场指挥部” — 表示现场指挥部负责组织活动\",\n            \"a=“南海海域” — 表示监视监测的区域为南海海域\",\n            \"g=“南海地方政府” — 表示地方政府为南海地方政府\",\n            \"信息=“南海海域溢油污染情况” — 表示通报的信息为南海海域溢油污染情况\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀a (ResponsibleForOrganization(现场指挥部, Monitor(南海海域)) → Report(现场指挥部, OilSpill(南海海域)))\",\n            \"∀g ∀a (OilSpill(南海海域) ∨ PossiblePollution(南海海域) → Monitor(南海地方政府, 南海海域) ∧ Report(南海地方政府, OilSpill(南海海域)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“现场指挥部” — 表示现场指挥部负责组织活动\",\n            \"a=“黄海海域” — 表示监视监测的区域为黄海海域\",\n            \"g=“黄海地方政府” — 表示地方政府为黄海地方政府\",\n            \"信息=“黄海海域溢油污染情况” — 表示通报的信息为黄海海域溢油污染情况\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀a (ResponsibleForOrganization(现场指挥部, Monitor(黄海海域)) → Report(现场指挥部, OilSpill(黄海海域)))\",\n            \"∀g ∀a (OilSpill(黄海海域) ∨ PossiblePollution(黄海海域) → Monitor(黄海地方政府, 黄海海域) ∧ Report(黄海地方政府, OilSpill(黄海海域)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“现场指挥部” — 表示现场指挥部负责组织活动\",\n            \"a=“渤海海域” — 表示监视监测的区域为渤海海域\",\n            \"g=“渤海地方政府” — 表示地方政府为渤海地方政府\",\n            \"信息=“渤海海域溢油污染情况” — 表示通报的信息为渤海海域溢油污染情况\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀a (ResponsibleForOrganization(现场指挥部, Monitor(渤海海域)) → Report(现场指挥部, OilSpill(渤海海域)))\",\n            \"∀g ∀a (OilSpill(渤海海域) ∨ PossiblePollution(渤海海域) → Monitor(渤海地方政府, 渤海海域) ∧ Report(渤海地方政府, OilSpill(渤海海域)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=“核设施A” — 核设施A可能受到海上溢油的影响\",\n            \"o=“海上溢油事件X” — 海上溢油事件X\",\n            \"i=“环境监管局” — 环境监管局作为可能受影响的敏感区域的管理单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"PotentiallyAffected(核设施A, 海上溢油事件X) → ResponsibleForProtection(CommandCenter, 核设施A)\",\n            \"PotentiallyAffected(核设施A, 海上溢油事件X) → (Rescue(核设施A) ∨ Cleanse(核设施A) ∨ Transfer(核设施A))\",\n            \"PotentiallyAffected(核设施A, 海上溢油事件X) ∧ (Rescue(核设施A) ∨ Cleanse(核设施A) ∨ Transfer(核设施A)) → Inform(环境监管局, Information)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“珊瑚礁B” — 珊瑚礁B可能受到海上溢油的影响\",\n            \"o=“海上溢油事件Y” — 海上溢油事件Y\",\n            \"i=“海洋公园管理处” — 海洋公园管理处作为可能受影响的敏感区域的管理单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"PotentiallyAffected(珊瑚礁B, 海上溢油事件Y) → ResponsibleForProtection(CommandCenter, 珊瑚礁B)\",\n            \"PotentiallyAffected(珊瑚礁B, 海上溢油事件Y) → (Rescue(珊瑚礁B) ∨ Cleanse(珊瑚礁B) ∨ Transfer(珊瑚礁B))\",\n            \"PotentiallyAffected(珊瑚礁B, 海上溢油事件Y) ∧ (Rescue(珊瑚礁B) ∨ Cleanse(珊瑚礁B) ∨ Transfer(珊瑚礁B)) → Inform(海洋公园管理处, Information)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“海鸟栖息地C” — 海鸟栖息地C可能受到海上溢油的影响\",\n            \"o=“海上溢油事件Z” — 海上溢油事件Z\",\n            \"i=“野生动物保护协会” — 野生动物保护协会作为可能受影响的敏感区域的管理单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"PotentiallyAffected(海鸟栖息地C, 海上溢油事件Z) → ResponsibleForProtection(CommandCenter, 海鸟栖息地C)\",\n            \"PotentiallyAffected(海鸟栖息地C, 海上溢油事件Z) → (Rescue(海鸟栖息地C) ∨ Cleanse(海鸟栖息地C) ∨ Transfer(海鸟栖息地C))\",\n            \"PotentiallyAffected(海鸟栖息地C, 海上溢油事件Z) ∧ (Rescue(海鸟栖息地C) ∨ Cleanse(海鸟栖息地C) ∨ Transfer(海鸟栖息地C)) → Inform(野生动物保护协会, Information)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“沿海湿地D” — 沿海湿地D可能受到海上溢油的影响\",\n            \"o=“海上溢油事件W” — 海上溢油事件W\",\n            \"i=“国家湿地公园” — 国家湿地公园作为可能受影响的敏感区域的管理单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"PotentiallyAffected(沿海湿地D, 海上溢油事件W) → ResponsibleForProtection(CommandCenter, 沿海湿地D)\",\n            \"PotentiallyAffected(沿海湿地D, 海上溢油事件W) → (Rescue(沿海湿地D) ∨ Cleanse(沿海湿地D) ∨ Transfer(沿海湿地D))\",\n            \"PotentiallyAffected(沿海湿地D, 海上溢油事件W) ∧ (Rescue(沿海湿地D) ∨ Cleanse(沿海湿地D) ∨ Transfer(沿海湿地D)) → Inform(国家湿地公园, Information)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“严重溢油” — 表示海上溢油的评估结果为严重\",\n            \"p=“紧急溢油清除计划” — 表示应急行动方案名称\",\n            \"Forces=“海上应急响应小组” — 表示组织的相关应急力量\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀p (AssessmentResult(“严重溢油”) → (DevelopPlan(CommandCenter, “紧急溢油清除计划”) ∧ OrganizeForces(CommandCenter, “海上应急响应小组”) ∧ ContainOilSpill(“海上应急响应小组”) ∧ RecycleOil(“海上应急响应小组”) ∧ CleanOilSpill(“海上应急响应小组”) ∧ BurnOil(“海上应急响应小组”) ∧ CleanShoreline(“海上应急响应小组”) ∧ CleanHull(“海上应急响应小组”) ∧ StoreAndTransportWaste(“海上应急响应小组”) ∧ OtherDisposal(“海上应急响应小组”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“中度溢油” — 表示海上溢油的评估结果为中度\",\n            \"p=“中度溢油应对方案” — 表示应急行动方案名称\",\n            \"Forces=“区域应急救援队” — 表示组织的相关应急力量\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀p (AssessmentResult(“中度溢油”) → (DevelopPlan(CommandCenter, “中度溢油应对方案”) ∧ OrganizeForces(CommandCenter, “区域应急救援队”) ∧ ContainOilSpill(“区域应急救援队”) ∧ RecycleOil(“区域应急救援队”) ∧ CleanOilSpill(“区域应急救援队”) ∧ BurnOil(“区域应急救援队”) ∧ CleanShoreline(“区域应急救援队”) ∧ CleanHull(“区域应急救援队”) ∧ StoreAndTransportWaste(“区域应急救援队”) ∧ OtherDisposal(“区域应急救援队”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“轻度溢油” — 表示海上溢油的评估结果为轻度\",\n            \"p=“轻度溢油处理计划” — 表示应急行动方案名称\",\n            \"Forces=“地方应急小分队” — 表示组织的相关应急力量\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀p (AssessmentResult(“轻度溢油”) → (DevelopPlan(CommandCenter, “轻度溢油处理计划”) ∧ OrganizeForces(CommandCenter, “地方应急小分队”) ∧ ContainOilSpill(“地方应急小分队”) ∧ RecycleOil(“地方应急小分队”) ∧ CleanOilSpill(“地方应急小分队”) ∧ BurnOil(“地方应急小分队”) ∧ CleanShoreline(“地方应急小分队”) ∧ CleanHull(“地方应急小分队”) ∧ StoreAndTransportWaste(“地方应急小分队”) ∧ OtherDisposal(“地方应急小分队”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“海上溢油应急处置行动” — 表示应急行动为海上溢油应急处置\",\n            \"现场指挥部=“国家海上溢油应急中心” — 表示现场指挥部为国家海上溢油应急中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (应急行动(a) → ManageAndControl(国家海上溢油应急中心, a))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“海上溢油应急处置方案” — 表示应急处置方案为海上溢油应急处置方案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (应急处置方案(p) → RecordInWriting(p))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“国家海上溢油应急中心” — 表示参与应急行动的单位为国家海上溢油应急中心\",\n            \"a=“海上溢油应急处置行动” — 表示应急行动为海上溢油应急处置\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀u ∀a (参与应急行动(u, a) → KeepRecords(u, a))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“海上溢油应急处置行动” — 表示应急行动为海上溢油应急处置\",\n            \"指挥人员=“张华” — 表示指挥人员为张华\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (应急行动(s) → DispatchCommander(国家海上溢油应急中心, s) ∧ SuperviseAndGuide(张华, s) ∧ KeepRecords(张华, s))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海上溢油应急信息” — 表示海上溢油应急相关信息\",\n            \"国家重大海上溢油应急处置部际联席会议=“国家应急部际联席会议” — 表示国家重大海上溢油应急处置部际联席会议为国家应急部际联席会议\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (海上溢油应急信息(i) → CollectInformation(国家海上溢油应急中心, i) ∧ AnalyzePublicOpinion(国家海上溢油应急中心, i) ∧ TimelyReport(国家海上溢油应急中心, 国家应急部际联席会议))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“受国家应急部际联席会议委托” — 表示受国家应急部际联席会议委托\",\n            \"媒体=“国家电视台” — 表示相关媒体为国家电视台\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀m (受委托(m) → CoordinateMedia(国家海上溢油应急中心, 国家电视台) ∧ ReleaseInformation(国家海上溢油应急中心, m))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“现场指挥部A” — 表示现场指挥部A对海上溢油控制和清除的评估。\",\n            \"e=“有效控制和清除” — 表示海上溢油已经得到有效控制和清除。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀e (Assess(c, e) ∧ e → RequestTermination(c))\",\n            \"Assess(现场指挥部A, 有效控制和清除) ∧ 有效控制和清除 → RequestTermination(现场指挥部A)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“有效控制和清除” — 表示海上溢油已经得到有效控制和清除。\"\n        ],\n        \"instance_logicexpression\": [\n            \"ExpertGroupAssessment(e) → TerminateResponse(InterMinisterialMeeting)\",\n            \"ExpertGroupAssessment(有效控制和清除) → TerminateResponse(InterMinisterialMeeting)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“有效控制和清除” — 表示海上溢油已经得到有效控制和清除。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (Assess(InterMinisterialMeeting, e) ∧ e → TerminateResponse(InterMinisterialMeeting))\",\n            \"Assess(InterMinisterialMeeting, 有效控制和清除) ∧ 有效控制和清除 → TerminateResponse(InterMinisterialMeeting)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"LocalGovernment=“地方政府B” — 表示地方政府B及相关单位继续组织开展后续工作。\",\n            \"RelatedUnits=“相关单位C” — 表示相关单位C。\"\n        ],\n        \"instance_logicexpression\": [\n            \"TerminateResponse(InterMinisterialMeeting) → ContinueWork(LocalGovernment, RelatedUnits)\",\n            \"TerminateResponse(InterMinisterialMeeting) → ContinueWork(地方政府B, 相关单位C)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"w=“海上溢油” — 表示在清污作业中回收的海上溢油\",\n            \"CommandCenter=“现场指挥部A” — 表示负责处置的现场指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (Recovered(海上溢油) → ProperDisposal(现场指挥部A, 海上溢油) ∧ Avoid(现场指挥部A, Pollution))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=“油污” — 表示在清污作业中回收的油污\",\n            \"CommandCenter=“现场指挥部B” — 表示负责处置的现场指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (Recovered(油污) → ProperDisposal(现场指挥部B, 油污) ∧ Avoid(现场指挥部B, Pollution))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=“固体废弃物” — 表示在清污作业中回收的固体废弃物\",\n            \"CommandCenter=“现场指挥部C” — 表示负责处置的现场指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (Recovered(固体废弃物) → ProperDisposal(现场指挥部C, 固体废弃物) ∧ Avoid(现场指挥部C, Pollution))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=“液体废弃物” — 表示在清污作业中回收的液体废弃物\",\n            \"CommandCenter=“现场指挥部D” — 表示负责处置的现场指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (Recovered(液体废弃物) → ProperDisposal(现场指挥部D, 液体废弃物) ∧ Avoid(现场指挥部D, Pollution))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"lg=“地方政府X” — 表示地方人民政府\",\n            \"hg=“上级人民政府Y” — 表示上级人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"¬Avoid(现场指挥部A, Pollution) → ApplyForSupport(地方政府X, 上级人民政府Y)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"EmergencyResponseEnded() — 表示海上溢油应急处置行动已经结束。\",\n            \"b=“部际联席会议” — 表示委托或组织的主体为部际联席会议\",\n            \"u=“环境监测中心” — 表示受委托或组织的单位为环境监测中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseEnded() → ∃b ∃u (CommissionedOrOrganized(部际联席会议, 环境监测中心) ∧ PostEvaluation(环境监测中心, [人员及财产损失, 环境污染损害, 应急资源投入和使用状况, 应急组织与命令执行情况, 综合保障情况, 应急效果]))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"EmergencyResponseEnded() — 表示海上溢油应急处置行动已经结束。\",\n            \"b=“部际联席会议” — 表示委托或组织的主体为部际联席会议\",\n            \"u=“海洋保护协会” — 表示受委托或组织的单位为海洋保护协会\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseEnded() → ∃b ∃u (CommissionedOrOrganized(部际联席会议, 海洋保护协会) ∧ PostEvaluation(海洋保护协会, [人员及财产损失, 环境污染损害, 应急资源投入和使用状况, 应急组织与命令执行情况, 综合保障情况, 应急效果]))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“环境监测中心” — 表示开展后评估的单位为环境监测中心\",\n            \"Aspects=[人员及财产损失, 环境污染损害, 应急资源投入和使用状况, 应急组织与命令执行情况, 综合保障情况, 应急效果] — 表示后评估涵盖的方面\",\n            \"Report=“环境监测中心评估报告” — 表示提交的评估报告名称\"\n        ],\n        \"instance_logicexpression\": [\n            \"PostEvaluation(环境监测中心, [人员及财产损失, 环境污染损害, 应急资源投入和使用状况, 应急组织与命令执行情况, 综合保障情况, 应急效果]) → SubmitEvaluationReport(环境监测中心, 环境监测中心评估报告)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“海洋保护协会” — 表示开展后评估的单位为海洋保护协会\",\n            \"Aspects=[人员及财产损失, 环境污染损害, 应急资源投入和使用状况, 应急组织与命令执行情况, 综合保障情况, 应急效果] — 表示后评估涵盖的方面\",\n            \"Report=“海洋保护协会评估报告” — 表示提交的评估报告名称\"\n        ],\n        \"instance_logicexpression\": [\n            \"PostEvaluation(海洋保护协会, [人员及财产损失, 环境污染损害, 应急资源投入和使用状况, 应急组织与命令执行情况, 综合保障情况, 应急效果]) → SubmitEvaluationReport(海洋保护协会, 海洋保护协会评估报告)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“渤海湾” — 表示应急处置工作在渤海湾结束\",\n            \"Government=“河北省人民政府” — 表示河北省人民政府负责渤海湾地区的相关工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (EmergencyResponseEnded(“渤海湾”) → (OrganizeAssessment(河北省人民政府, “渤海湾”) ∧ DevelopPlan(河北省人民政府, “渤海湾”) ∧ SettleCleanupCosts(河北省人民政府, “渤海湾”) ∧ CompensatePollutionDamage(河北省人民政府, “渤海湾”) ∧ RepairEnvironment(河北省人民政府, “渤海湾”) ∧ RestoreEcology(河北省人民政府, “渤海湾”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“东海” — 表示应急处置工作在东海结束\",\n            \"Government=“交通部” — 表示交通部负责东海地区的相关工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (EmergencyResponseEnded(“东海”) → (OrganizeAssessment(交通部, “东海”) ∧ DevelopPlan(交通部, “东海”) ∧ SettleCleanupCosts(交通部, “东海”) ∧ CompensatePollutionDamage(交通部, “东海”) ∧ RepairEnvironment(交通部, “东海”) ∧ RestoreEcology(交通部, “东海”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“山东省人民政府” — 表示山东省人民政府请求支援\",\n            \"c=“国家重大海上溢油应急处置部际联席会议” — 表示请求的国家部际联席会议\"\n        ],\n        \"instance_logicexpression\": [\n            \"RequestSupport(山东省人民政府, 国家重大海上溢油应急处置部际联席会议) → (山东省人民政府 = 省级人民政府 ∨ 山东省人民政府 = 国务院行业行政主管部门) ∧ 国家重大海上溢油应急处置部际联席会议 = 国家重大海上溢油应急处置部际联席会议\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“农业部” — 表示农业部请求支援\",\n            \"c=“国家重大海上溢油应急处置部际联席会议” — 表示请求的国家部际联席会议\"\n        ],\n        \"instance_logicexpression\": [\n            \"RequestSupport(农业部, 国家重大海上溢油应急处置部际联席会议) → (农业部 = 省级人民政府 ∨ 农业部 = 国务院行业行政主管部门) ∧ 国家重大海上溢油应急处置部际联席会议 = 国家重大海上溢油应急处置部际联席会议\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“海上救援队” — 表示海上溢油应急处置工作中贡献突出的集体\",\n            \"p=“李海” — 表示海上溢油应急处置工作中贡献突出的个人\"\n        ],\n        \"instance_logicexpression\": [\n            \"OutstandingContribution(海上救援队) ∨ OutstandingContribution(李海) → GiveRecognition(海上救援队) ∨ GiveRecognition(李海)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“王强” — 表示在海上溢油应急工作中玩忽职守的人员\",\n            \"u=“海洋监测站” — 表示在海上溢油应急工作中拒不执行应急指挥命令的单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"NeglectDuty(王强) ∨ RefuseExecution(海洋监测站) → HoldAccountable(王强) ∨ HoldAccountable(海洋监测站)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“赵敏” — 表示在海上溢油应急工作中虚报瞒报的人员\",\n            \"u=“海事局” — 表示在海上溢油应急工作中玩忽职守的单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"FalseReporting(赵敏) ∨ NeglectDuty(海事局) → HoldAccountable(赵敏) ∨ HoldAccountable(海事局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“孙涛” — 表示行为构成犯罪的人员\",\n            \"u=“非法排污公司” — 表示行为构成犯罪的单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"Crime(孙涛) ∨ Crime(非法排污公司) → PursueCriminalResponsibility(孙涛) ∨ PursueCriminalResponsibility(非法排污公司)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“刘洋” — 表示在海上溢油应急工作中负伤的人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"InjuredOrKilled(刘洋) → Compensate(刘洋) ∨ PosthumouslyAward(刘洋)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“陈静” — 表示在海上溢油应急工作中牺牲的人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"InjuredOrKilled(陈静) → Compensate(陈静) ∨ PosthumouslyAward(陈静)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=“海上溢油应急队伍” — 表示应急队伍为海上溢油应急队伍\",\n            \"Members=“政府应急队伍, 相关企业应急队伍, 军队, 武警部队, 民兵组织” — 表示队伍由这些成员组成\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t (ConsistsOf(海上溢油应急队伍, 政府应急队伍) ∨ ConsistsOf(海上溢油应急队伍, 企业应急队伍) ∨ ConsistsOf(海上溢油应急队伍, 军队) ∨ ConsistsOf(海上溢油应急队伍, 武警部队) ∨ ConsistsOf(海上溢油应急队伍, 民兵组织) → 应急队伍(海上溢油应急队伍))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国务院有关部门” — 表示部门为国务院有关部门\",\n            \"t=“政府所属的溢油应急专业队伍” — 表示需要加强建设的队伍\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀t (需要(海上溢油应急工作, 政府所属的溢油应急专业队伍) → StrengthenConstruction(国务院有关部门, 政府所属的溢油应急专业队伍))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“政府综合性溢油应急队伍” — 表示形成的队伍\",\n            \"e=“相关专家” — 表示专家是队伍的组成成员\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t (StrengthenConstruction(国务院有关部门, 政府综合性溢油应急队伍) ∧ ∃e (Expert(相关专家) ∧ ConsistsOf(政府综合性溢油应急队伍, 相关专家)) → Form(政府综合性溢油应急队伍))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“专业清污单位” — 表示骨干组织为专业清污单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (Backbone(专业清污单位) → 社会应急队伍(专业清污单位))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“岸线清污社会动员机制” — 表示建立的机制\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀m (Mechanism(岸线清污社会动员机制) → Establish(岸线清污社会动员机制))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“军队” — 表示请求参与的组织为军队\",\n            \"t=“国家重大海上溢油应急处置工作” — 表示任务为国家重大海上溢油应急处置工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o ∀t (必要时 ∧ 重大海上溢油应急处置工作(国家重大海上溢油应急处置工作) → RequestParticipation(军队, 国家重大海上溢油应急处置工作))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“海上溢油事件A” — 表示一个具体的海上溢油事件A\",\n            \"p=“责任公司X” — 表示承担海上溢油事件A应急资金的责任公司X\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyFundingNeeded(海上溢油事件A) → ResponsiblePartyBears(海上溢油事件A, 责任公司X)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海上溢油事件B” — 表示一个具体的海上溢油事件B\",\n            \"g=“中央政府” — 表示中央政府财政经费负担海上溢油事件B的应急资金\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyFundingNeeded(海上溢油事件B) ∧ ¬∃p ResponsiblePartyBears(海上溢油事件B, p) → FinancialBurden(海上溢油事件B, 中央政府)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海上溢油事件C” — 表示一个具体的海上溢油事件C\",\n            \"g=“省级政府” — 表示省级政府协调解决海上溢油事件C的应急资金需求\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyFundingNeeded(海上溢油事件C) → CoordinateSolve(省级政府, 海上溢油事件C, EmergencyFundingNeeded(海上溢油事件C))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海上溢油事件D” — 表示一个具体的海上溢油事件D\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyFundingNeeded(海上溢油事件D) → FundingInPlace(海上溢油事件D)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“国家海洋局” — 表示国家海洋局是国家重大海上溢油应急处置部际联席会议的成员单位\",\n            \"System=“应急物资储备制度” — 表示国家海洋局建立应急物资储备制度\",\n            \"System=“调拨及紧急配送体系” — 表示国家海洋局建立调拨及紧急配送体系\",\n            \"Resource=“物资” — 表示国家海洋局保障物资供应\",\n            \"Resource=“装备” — 表示国家海洋局保障装备供应\",\n            \"Resource=“材料” — 表示国家海洋局保障材料供应\"\n        ],\n        \"instance_logicexpression\": [\n            \"MemberOf(国家海洋局, 国家重大海上溢油应急处置部际联席会议) → (Establish(国家海洋局, 应急物资储备制度) ∧ Establish(国家海洋局, 调拨及紧急配送体系) ∧ EnsureSupply(国家海洋局, 物资) ∧ EnsureSupply(国家海洋局, 装备) ∧ EnsureSupply(国家海洋局, 材料))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“广东省政府” — 表示广东省政府是地方政府\",\n            \"e=“中海油公司” — 表示中海油公司是企事业单位\",\n            \"p=“中石化公司” — 表示中石化公司是生产经营企业\",\n            \"Resource=“应急物资” — 表示广东省政府和中海油公司保障应急物资供应\",\n            \"Resource=“生活必需品” — 表示广东省政府和中海油公司保障生活必需品供应\"\n        ],\n        \"instance_logicexpression\": [\n            \"地方政府(广东省政府) ∨ 企事业单位(中海油公司) → (LegalResponsibility(广东省政府, 储备工作) ∧ LegalResponsibility(中海油公司, 储备工作) ∧ SignAgreement(广东省政府, 中石化公司) ∨ SignAgreement(中海油公司, 中石化公司)) ∧ EnsureSupply(广东省政府, 应急物资) ∧ EnsureSupply(中海油公司, 应急物资) ∧ EnsureSupply(广东省政府, 生活必需品) ∧ EnsureSupply(中海油公司, 生活必需品)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家科技部” — 表示国家科技部是国家重大海上溢油应急处置部际联席会议的成员单位\",\n            \"r=“科研机构A” — 表示科研机构A是被扶持的科研机构\",\n            \"Enterprise=“企业B” — 表示企业B是在海上溢油应急技术领域拥有自主知识产权和核心技术的企业\",\n            \"Technology=“海上溢油应急技术C” — 表示海上溢油应急技术C是被研发的技术\",\n            \"a=“科研成果D” — 表示科研成果D是被推广的成果\"\n        ],\n        \"instance_logicexpression\": [\n            \"MemberOf(国家科技部, 国家重大海上溢油应急处置部际联席会议) → (DevelopTechnology(科研机构A, 海上溢油应急技术C) ∧ SupportEnterprise(国家科技部, 企业B)) ∧ PromoteAchievement(国家科技部, 科研成果D) ∧ 相关技术(科研成果D, 海上溢油应急)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d1=“交通运输部” — 表示交通运输部\",\n            \"d2=“工业和信息化部” — 表示工业和信息化部\",\n            \"v1=“船舶A” — 表示船舶A\",\n            \"v2=“船舶B” — 表示船舶B\",\n            \"s1=“船只C” — 表示船只C\",\n            \"s2=“岸基站D” — 表示岸基站D\",\n            \"a1=“飞机E” — 表示飞机E\",\n            \"a2=“船只F” — 表示船只F\",\n            \"p1=“海上平台G” — 表示海上平台G\",\n            \"p2=“陆地H” — 表示陆地H\",\n            \"s=“海上溢油应急” — 表示海上溢油应急情况\",\n            \"p=“海上溢油通信保障预案” — 表示海上溢油通信保障预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(交通运输部, 交通运输部) ∧ Department(工业和信息化部, 工业和信息化部) → (Establish(交通运输部, EmergencyCommunicationSystem) ∧ Establish(工业和信息化部, EmergencyCommunicationSystem) ∧ Utilize(交通运输部, 定位通信手段) ∧ Utilize(工业和信息化部, 定位通信手段) ∧ Utilize(交通运输部, 动态监管手段) ∧ Utilize(工业和信息化部, 动态监管手段))\",\n            \"Vessel(船舶A) ∧ Vessel(船舶B) → CommunicationUnobstructed(船舶A, 船舶B)\",\n            \"Ship(船只C) ∧ Shore(岸基站D) → CommunicationUnobstructed(船只C, 岸基站D)\",\n            \"Aircraft(飞机E) ∧ Ship(船只F) → CommunicationUnobstructed(飞机E, 船只F)\",\n            \"Platform(海上平台G) ∧ Land(陆地H) → CommunicationUnobstructed(海上平台G, 陆地H)\",\n            \"Necessary(海上溢油应急) → (∃p EmergencyPlan(海上溢油通信保障预案) ∧ Support(交通运输部, 海上溢油通信保障预案) ∧ Support(工业和信息化部, 海上溢油通信保障预案))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“卫生计生委” — 表示负责的委员会为卫生计生委\",\n            \"d=“应急救援部门” — 表示会同的有关部门为应急救援部门\",\n            \"i=“2023年东海溢油事件” — 表示海上溢油事件为2023年东海溢油事件\",\n            \"Personnel=“海上溢油作业人员” — 表示海上溢油作业人员\",\n            \"Suggestions=“防护措施和健康监测” — 表示提出的公共卫生危害和防护建议为防护措施和健康监测\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀d ∀i (MarineOilSpill(i) → (OrganizeMedicalTreatment(卫生计生委, 应急救援部门, 2023年东海溢油事件) ∧ OrganizePsychologicalIntervention(卫生计生委, 应急救援部门, 2023年东海溢油事件) ∧ ProvideMedicalSupport(卫生计生委, 海上溢油作业人员) ∧ ProposePublicHealthHazards(卫生计生委, 防护措施和健康监测) → ReduceDamage(卫生计生委, 海上溢油作业人员)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“卫生计生委” — 表示负责的委员会为卫生计生委\",\n            \"d=“环境保护部门” — 表示会同的有关部门为环境保护部门\",\n            \"i=“2023年南海溢油事件” — 表示海上溢油事件为2023年南海溢油事件\",\n            \"Personnel=“公众” — 表示公众\",\n            \"Suggestions=“环境清洁和健康教育” — 表示提出的公共卫生危害和防护建议为环境清洁和健康教育\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀d ∀i (MarineOilSpill(i) → (OrganizeMedicalTreatment(卫生计生委, 环境保护部门, 2023年南海溢油事件) ∧ OrganizePsychologicalIntervention(卫生计生委, 环境保护部门, 2023年南海溢油事件) ∧ ProvideMedicalSupport(卫生计生委, 公众) ∧ ProposePublicHealthHazards(卫生计生委, 环境清洁和健康教育) → ReduceDamage(卫生计生委, 公众)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Department=“交通运输部” — 表示负责建立平台的部门\",\n            \"OtherDepartments=“生态环境部” — 表示合作的有关部门\",\n            \"LocalGovernments=“沿海地方政府” — 表示合作的地方人民政府\",\n            \"Enterprises=“海洋石油企业” — 表示合作的相关企事业单位\",\n            \"Resources=“现有海洋监测资源” — 表示依托的现有资源\",\n            \"Forces=“海洋溢油应急响应力量” — 表示整合的各方力量\"\n        ],\n        \"instance_logicexpression\": [\n            \"Collaborate(交通运输部, 生态环境部, 沿海地方政府, 海洋石油企业) ∧ RelyOn(现有海洋监测资源) ∧ Integrate(海洋溢油应急响应力量) → Establish(国家海上溢油信息共享平台)\",\n            \"Establish(国家海上溢油信息共享平台) → (InformationCollectionAndTransmission(国家海上溢油信息共享平台) ∧ InformationStorageAndManagement(国家海上溢油信息共享平台) ∧ AnalysisForecastingAndDecisionSupport(国家海上溢油信息共享平台))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“交通运输部” — 表示负责建立平台的部门\",\n            \"OtherDepartments=“自然资源部” — 表示合作的有关部门\",\n            \"LocalGovernments=“沿海市政府” — 表示合作的地方人民政府\",\n            \"Enterprises=“海运公司” — 表示合作的相关企事业单位\",\n            \"Resources=“现有卫星遥感资源” — 表示依托的现有资源\",\n            \"Forces=“海上溢油监测队伍” — 表示整合的各方力量\"\n        ],\n        \"instance_logicexpression\": [\n            \"Collaborate(交通运输部, 自然资源部, 沿海市政府, 海运公司) ∧ RelyOn(现有卫星遥感资源) ∧ Integrate(海上溢油监测队伍) → Establish(国家海上溢油信息共享平台)\",\n            \"Establish(国家海上溢油信息共享平台) → (InformationCollectionAndTransmission(国家海上溢油信息共享平台) ∧ InformationStorageAndManagement(国家海上溢油信息共享平台) ∧ AnalysisForecastingAndDecisionSupport(国家海上溢油信息共享平台))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"EmergencyResponseActivated() — 表示应急响应已经被启动。\",\n            \"CommandCenter=“现场指挥部” — 表示现场指挥部负责协调。\",\n            \"Entity=“政府部门” — 表示政府部门是被协调的实体之一。\",\n            \"Entity=“企事业单位” — 表示企事业单位是被协调的实体之一。\",\n            \"People=“应急人员” — 表示需要保障运输的人员。\",\n            \"Equipment=“应急装备” — 表示需要保障运输的装备。\",\n            \"Materials=“应急物资” — 表示需要保障运输的物资。\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseActivated() → ResponsibleForCoordination(现场指挥部, 政府部门) ∧ ResponsibleForCoordination(现场指挥部, 企事业单位) ∧ EnsureTransport(应急人员, 应急装备, 应急物资)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"EmergencyResponseActivated() — 表示应急响应已经被启动。\",\n            \"CommandCenter=“现场指挥部” — 表示现场指挥部负责协调。\",\n            \"Department=“交通运输部门” — 表示交通运输部门是协调制定应急运输路线的部门之一。\",\n            \"Department=“公安部门” — 表示公安部门是协调制定应急运输路线的部门之一。\",\n            \"Materials=“应急物资” — 表示需要优先保障通过的物资。\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseActivated() → EstablishEmergencyRoute(现场指挥部, 交通运输部门) ∧ EstablishEmergencyRoute(现场指挥部, 公安部门) ∧ PriorityGuarantee(应急物资)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"EmergencyResponseActivated() — 表示应急响应已经被启动。\",\n            \"NationalMeeting=“国家重大海上溢油应急处置部际联席会议” — 表示国家重大海上溢油应急处置部际联席会议负责调动支援。\",\n            \"Units=“成员单位” — 表示需要调动的成员单位。\",\n            \"Personnel=“支援人员” — 表示需要调动的支援人员。\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseActivated() ∧ ¬SufficientSupport() → MobilizeSupport(国家重大海上溢油应急处置部际联席会议, 成员单位, 支援人员)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“海上溢油事故” — 表示国家重大海上溢油应急处置工作的需要\",\n            \"c=“现场指挥部” — 表示现场指挥部\",\n            \"e=“海洋清洁公司” — 表示被征用物资的企事业单位\",\n            \"r=“油污处理设备” — 表示应急救援所需物资\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s ∀c ∀e ∀r (EmergencyResponseNeed(海上溢油事故) ∧ LegalBasis(现场指挥部) → (TemporaryRequisition(现场指挥部, 海洋清洁公司, 油污处理设备) → (UseComplete(油污处理设备) ∨ EmergencyResponseEnd(海上溢油事故) → Return(油污处理设备, 海洋清洁公司))))\",\n            \"TemporaryRequisition(现场指挥部, 海洋清洁公司, 油污处理设备) → (DamagedOrLost(油污处理设备) → Compensate(现场指挥部, 海洋清洁公司, 油污处理设备))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“海上溢油事故” — 表示国家重大海上溢油应急处置工作的需要\",\n            \"c=“现场指挥部” — 表示现场指挥部\",\n            \"e=“李明” — 表示被征用物资的个人\",\n            \"r=“运输船” — 表示应急救援所需物资\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s ∀c ∀e ∀r (EmergencyResponseNeed(海上溢油事故) ∧ LegalBasis(现场指挥部) → (TemporaryRequisition(现场指挥部, 李明, 运输船) → (UseComplete(运输船) ∨ EmergencyResponseEnd(海上溢油事故) → Return(运输船, 李明))))\",\n            \"TemporaryRequisition(现场指挥部, 李明, 运输船) → (DamagedOrLost(运输船) → Compensate(现场指挥部, 李明, 运输船))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“海上溢油事故” — 表示国家重大海上溢油应急处置工作的需要\",\n            \"c=“现场指挥部” — 表示现场指挥部\",\n            \"e=“海岸警卫队” — 表示被征用物资的单位\",\n            \"r=“巡逻艇” — 表示应急救援所需物资\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s ∀c ∀e ∀r (EmergencyResponseNeed(海上溢油事故) ∧ LegalBasis(现场指挥部) → (TemporaryRequisition(现场指挥部, 海岸警卫队, 巡逻艇) → (UseComplete(巡逻艇) ∨ EmergencyResponseEnd(海上溢油事故) → Return(巡逻艇, 海岸警卫队))))\",\n            \"TemporaryRequisition(现场指挥部, 海岸警卫队, 巡逻艇) → (DamagedOrLost(巡逻艇) → Compensate(现场指挥部, 海岸警卫队, 巡逻艇))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“海上溢油事故” — 表示国家重大海上溢油应急处置工作的需要\",\n            \"c=“现场指挥部” — 表示现场指挥部\",\n            \"e=“环保科技公司” — 表示被征用物资的公司\",\n            \"r=“吸油材料” — 表示应急救援所需物资\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s ∀c ∀e ∀r (EmergencyResponseNeed(海上溢油事故) ∧ LegalBasis(现场指挥部) → (TemporaryRequisition(现场指挥部, 环保科技公司, 吸油材料) → (UseComplete(吸油材料) ∨ EmergencyResponseEnd(海上溢油事故) → Return(吸油材料, 环保科技公司))))\",\n            \"TemporaryRequisition(现场指挥部, 环保科技公司, 吸油材料) → (DamagedOrLost(吸油材料) → Compensate(现场指挥部, 环保科技公司, 吸油材料))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"CommandCenter=“现场指挥部A” — 表示负责指挥的现场指挥部为现场指挥部A\",\n            \"Object=“应急物资1” — 表示需要保护的应急物资为应急物资1\"\n        ],\n        \"instance_logicexpression\": [\n            \"DivideSecurityArea(现场指挥部A) ∧ ∀o (Protect(现场指挥部A, 应急物资1) → (应急人员(o) ∨ 物资(o))) ∧ ∀a (MaintainSecurity(现场指挥部A, a) → (应急现场(a) ∨ 相关区域(a))) ∧ ∀t (OrganizeSecurity(现场指挥部A, t) → (重点单位(t) ∨ 重要部位(t) ∨ 重要基础设施(t)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"CommandCenter=“现场指挥部B” — 表示负责指挥的现场指挥部为现场指挥部B\",\n            \"Parties=“运输企业X, 船东Y, 捕捞渔民Z” — 表示因海上溢油事件产生的矛盾或纠纷的各方\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (溢油事件(p) → Coordinate(Mediate, 运输企业X, 船东Y, 捕捞渔民Z)) ∧ ∀p (溢油事件(p) → MaintainSocialStability(现场指挥部B))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"CommandCenter=“现场指挥部C” — 表示负责指挥的现场指挥部为现场指挥部C\",\n            \"Force=“周边地区公安与武警” — 表示在必要时提供支援的力量\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (溢油事件(p) → Support(现场指挥部C, 周边地区公安与武警))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"CommandCenter=“现场指挥部D” — 表示负责指挥的现场指挥部为现场指挥部D\",\n            \"Target=“核电站” — 表示需要组织实施安全保卫的重要基础设施为核电站\"\n        ],\n        \"instance_logicexpression\": [\n            \"DivideSecurityArea(现场指挥部D) ∧ ∀o (Protect(现场指挥部D, o) → (应急人员(o) ∨ 物资(o))) ∧ ∀a (MaintainSecurity(现场指挥部D, a) → (应急现场(a) ∨ 相关区域(a))) ∧ ∀t (OrganizeSecurity(现场指挥部D, 核电站) → (重点单位(t) ∨ 重要部位(t) ∨ 重要基础设施(t)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“国务院应急管理部” — 国务院应急管理部作为国务院有关部门之一\",\n            \"o=“广东省人民政府” — 广东省人民政府作为相关地方人民政府之一\",\n            \"o=“中海油公司” — 中海油公司作为企事业单位之一\"\n        ],\n        \"instance_logicexpression\": [\n            \"国务院有关部门(国务院应急管理部) ∨ 相关地方人民政府(广东省人民政府) ∨ 企事业单位(中海油公司) → (Establish(国务院应急管理部, 海上溢油应急管理和培训制度) ∧ Strengthen(国务院应急管理部, 海上溢油应急宣教) ∧ Strengthen(国务院应急管理部, 专业人才培养)) ∧ (Establish(广东省人民政府, 海上溢油应急管理和培训制度) ∧ Strengthen(广东省人民政府, 海上溢油应急宣教) ∧ Strengthen(广东省人民政府, 专业人才培养)) ∧ (Establish(中海油公司, 海上溢油应急管理和培训制度) ∧ Strengthen(中海油公司, 海上溢油应急宣教) ∧ Strengthen(中海油公司, 专业人才培养))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“国家海洋局” — 国家海洋局作为国家重大海上溢油应急处置部际联席会议成员单位之一\",\n            \"p=“海上溢油应急响应队员” — 表示从事海上溢油应急管理和作业的人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"国家重大海上溢油应急处置部际联席会议成员单位(国家海洋局) → (ResponsibleForOrganization(国家海洋局, 预案宣传) ∧ EmergencyDrill(国家海洋局) ∧ ∀p (从事海上溢油应急管理和作业的人员(p) → TechnicalTraining(国家海洋局, p)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“交通部” — 交通部作为国家重大海上溢油应急处置部际联席会议成员单位之一\"\n        ],\n        \"instance_logicexpression\": [\n            \"国家重大海上溢油应急处置部际联席会议成员单位(交通部) → (ResponsibleForOrganization(交通部, 预案宣传) ∧ EmergencyDrill(交通部) ∧ ∀p (从事海上溢油应急管理和作业的人员(p) → TechnicalTraining(交通部, p)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“环保部” — 环保部作为国家重大海上溢油应急处置部际联席会议成员单位之一\"\n        ],\n        \"instance_logicexpression\": [\n            \"国家重大海上溢油应急处置部际联席会议成员单位(环保部) → (ResponsibleForOrganization(环保部, 预案宣传) ∧ EmergencyDrill(环保部) ∧ ∀p (从事海上溢油应急管理和作业的人员(p) → TechnicalTraining(环保部, p)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“现场指挥部A” — 表示现场指挥部为现场指挥部A\",\n            \"e=“政府部门B和企业C” — 表示相关政府部门和企事业单位为政府部门B和企业C\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀e (Coordinate(现场指挥部A, 政府部门B和企业C) → (ProvideBasicNeeds(现场指挥部A, People) ∧ SupplyMaterials(现场指挥部A, CleanupForces)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“现场指挥部D” — 表示现场指挥部为现场指挥部D\",\n            \"f=“应急行动力量E” — 表示各方力量为应急行动力量E\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀f (Coordinate(现场指挥部D, 应急行动力量E) → SuperviseEmergencyActions(现场指挥部D, 应急行动力量E) ∧ DocumentEvidence(现场指挥部D))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“现场指挥部F” — 表示现场指挥部为现场指挥部F\",\n            \"NationalSupport=“国家重大海上溢油应急处置部际联席会议” — 表示国家重大海上溢油应急处置部际联席会议\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (Coordinate(现场指挥部F, 国家重大海上溢油应急处置部际联席会议) → RequestSupport(现场指挥部F, 国家重大海上溢油应急处置部际联席会议))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“现场指挥部G” — 表示现场指挥部为现场指挥部G\",\n            \"e=“政府部门H和企业I” — 表示相关政府部门和企事业单位为政府部门H和企业I\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀e (Coordinate(现场指挥部G, 政府部门H和企业I) → (ProvideBasicNeeds(现场指挥部G, People) ∧ SupplyMaterials(现场指挥部G, CleanupForces)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“现场指挥部J” — 表示现场指挥部为现场指挥部J\",\n            \"f=“应急行动力量K” — 表示各方力量为应急行动力量K\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀f (Coordinate(现场指挥部J, 应急行动力量K) → SuperviseEmergencyActions(现场指挥部J, 应急行动力量K) ∧ DocumentEvidence(现场指挥部J))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“地震灾害” — 表示发生了地震灾害的情况\",\n            \"p=“国家通信保障应急预案” — 表示应急预案为国家通信保障应急预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p∀s (Applicable(国家通信保障应急预案, 地震灾害) → (CommunicationInterruption(地震灾害) ∨ Emergency(地震灾害) ∨ (Coordinate(国务院, 地震灾害) ∨ (Authorize(国务院, 部门) ∧ Coordinate(部门, 地震灾害))))\",\n            \"∀t (OtherTask(t) → Applicable(国家通信保障应急预案, t))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“网络攻击” — 表示发生了网络攻击的情况\",\n            \"p=“国家通信保障应急预案” — 表示应急预案为国家通信保障应急预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p∀s (Applicable(国家通信保障应急预案, 网络攻击) → (CommunicationInterruption(网络攻击) ∨ Emergency(网络攻击) ∨ (Coordinate(国务院, 网络攻击) ∨ (Authorize(国务院, 部门) ∧ Coordinate(部门, 网络攻击))))\",\n            \"∀t (OtherTask(t) → Applicable(国家通信保障应急预案, t))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“重大活动通信保障” — 表示党中央和国务院交办的其他重要通信保障任务\",\n            \"p=“国家通信保障应急预案” — 表示应急预案为国家通信保障应急预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p∀s (Applicable(国家通信保障应急预案, 重大活动通信保障) → (CommunicationInterruption(重大活动通信保障) ∨ Emergency(重大活动通信保障) ∨ (Coordinate(国务院, 重大活动通信保障) ∨ (Authorize(国务院, 部门) ∧ Coordinate(部门, 重大活动通信保障))))\",\n            \"∀t (OtherTask(重大活动通信保障) → Applicable(国家通信保障应急预案, 重大活动通信保障))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“台风灾害” — 表示发生了台风灾害的情况\",\n            \"p=“国家通信保障应急预案” — 表示应急预案为国家通信保障应急预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p∀s (Applicable(国家通信保障应急预案, 台风灾害) → (CommunicationInterruption(台风灾害) ∨ Emergency(台风灾害) ∨ (Coordinate(国务院, 台风灾害) ∨ (Authorize(国务院, 部门) ∧ Coordinate(部门, 台风灾害))))\",\n            \"∀t (OtherTask(t) → Applicable(国家通信保障应急预案, t))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“恐怖袭击” — 表示发生了恐怖袭击的情况\",\n            \"p=“国家通信保障应急预案” — 表示应急预案为国家通信保障应急预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p∀s (Applicable(国家通信保障应急预案, 恐怖袭击) → (CommunicationInterruption(恐怖袭击) ∨ Emergency(恐怖袭击) ∨ (Coordinate(国务院, 恐怖袭击) ∨ (Authorize(国务院, 部门) ∧ Coordinate(部门, 恐怖袭击))))\",\n            \"∀t (OtherTask(t) → Applicable(国家通信保障应急预案, t))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“国家通信保障应急领导小组” — 表示国务院设立的国家通信保障应急领导小组\",\n            \"Authority=“国务院” — 表示国务院\",\n            \"Organization=“工业和信息化部” — 表示工业和信息化部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃g (Establish(国务院, g) ∨ Authorize(国务院, 工业和信息化部) ∧ Establish(工业和信息化部, g)) ∧ CommandAndCoordinate(g, 通信保障应急处置工作)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“江苏省人民政府” — 表示江苏省人民政府\",\n            \"c=“江苏省通信管理局” — 表示江苏省通信管理局\",\n            \"省级通信保障应急指挥机构=“江苏省通信保障应急指挥机构” — 表示江苏省通信保障应急指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"省级人民政府(江苏省人民政府) → ∃c (Authorize(江苏省人民政府, 江苏省通信管理局) ∧ Establish(江苏省通信管理局, 江苏省通信保障应急指挥机构) ∧ Responsible(江苏省通信保障应急指挥机构, 通信保障应急工作))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“杭州市西湖区人民政府” — 表示杭州市西湖区人民政府\",\n            \"i=“杭州市西湖区通信保障应急指挥机构” — 表示杭州市西湖区通信保障应急指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"市县级人民政府(杭州市西湖区人民政府) → ∃i (Responsible(杭州市西湖区人民政府, i) ∧ Establish(杭州市西湖区人民政府, 杭州市西湖区通信保障应急指挥机构) ∧ Responsible(杭州市西湖区通信保障应急指挥机构, 通信保障应急工作))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“汶川地震现场通信保障应急指挥机构” — 表示汶川地震现场通信保障应急指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"必要时(∃s (Establish(s, 汶川地震现场通信保障应急指挥机构) ∧ Responsible(汶川地震现场通信保障应急指挥机构, 事发现场通信保障)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“国家通信保障应急领导小组” — 表示国家通信保障应急领导小组\",\n            \"Department=“工业和信息化部” — 表示工业和信息化部\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishOffice(g, 工业和信息化部) ∧ Responsible(工业和信息化部, 日常联络和事务处理)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“领导小组办公室” — 表示领导小组办公室\",\n            \"Person=“张伟” — 表示张伟\",\n            \"Position=“办公室主任” — 表示办公室主任\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃d (HoldPosition(张伟, 办公室主任) ∧ EstablishOffice(g, d))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Group=“专家组” — 表示专家组\",\n            \"Task1=“决策咨询任务” — 表示决策咨询任务\",\n            \"Task2=“提出处置措施建议” — 表示提出处置措施建议\",\n            \"Task3=“对有关处置方案进行综合评估” — 表示对有关处置方案进行综合评估\"\n        ],\n        \"instance_logicexpression\": [\n            \"Subordinate(g, 专家组) ∧ UndertakeTask(专家组, 决策咨询任务) ∧ UndertakeTask(专家组, 提出处置措施建议) ∧ UndertakeTask(专家组, 对有关处置方案进行综合评估)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“中国电信” — 表示中国电信为一家基础电信运营企业\",\n            \"Requirement=“网络安全要求” — 表示网络安全各项工作要求\",\n            \"SystemType1=“网络安全防护” — 表示网络安全防护体系\",\n            \"SystemType2=“监测预警” — 表示监测预警体系\",\n            \"SystemType3=“应急通信保障” — 表示应急通信保障体系\",\n            \"CapabilityType1=“自愈” — 表示网络的自愈能力\",\n            \"CapabilityType2=“抗毁” — 表示网络的抗毁能力\"\n        ],\n        \"instance_logicexpression\": [\n            \"基础电信运营企业(中国电信) → (Implement(中国电信, 网络安全要求) ∧ BuildSystem(中国电信, 网络安全防护) ∧ BuildSystem(中国电信, 监测预警) ∧ BuildSystem(中国电信, 应急通信保障) ∧ EnhanceCapability(中国电信, 自愈) ∧ EnhanceCapability(中国电信, 抗毁) ∧ MonitorSafety(中国电信) ∧ CheckRisks(中国电信) ∧ ImproveEmergencyMechanism(中国电信) ∧ RevisePlan(中国电信) ∧ OrganizeDrill(中国电信) ∧ StrengthenPromotion(中国电信) ∧ EnhanceResponseAbility(中国电信))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“中国移动” — 表示中国移动为一家基础电信运营企业\",\n            \"a=“工信部” — 表示工信部为通信主管部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"通信主管部门(工信部) ∧ 基础电信运营企业(中国移动) → InspectAndGuide(工信部, 中国移动)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“中国联通” — 表示中国联通为一家基础电信运营企业\"\n        ],\n        \"instance_logicexpression\": [\n            \"基础电信运营企业(中国联通) → (Implement(中国联通, 网络安全要求) ∧ BuildSystem(中国联通, 网络安全防护) ∧ BuildSystem(中国联通, 监测预警) ∧ BuildSystem(中国联通, 应急通信保障) ∧ EnhanceCapability(中国联通, 自愈) ∧ EnhanceCapability(中国联通, 抗毁) ∧ MonitorSafety(中国联通) ∧ CheckRisks(中国联通) ∧ ImproveEmergencyMechanism(中国联通) ∧ RevisePlan(中国联通) ∧ OrganizeDrill(中国联通) ∧ StrengthenPromotion(中国联通) ∧ EnhanceResponseAbility(中国联通))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“国家网信办” — 表示国家网信办为通信主管部门\",\n            \"c=“中国电信” — 表示中国电信为一家基础电信运营企业\"\n        ],\n        \"instance_logicexpression\": [\n            \"通信主管部门(国家网信办) ∧ 基础电信运营企业(中国电信) → InspectAndGuide(国家网信办, 中国电信)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“事故A” — 表示通信事故A\",\n            \"some_province=“广东省” — 表示省际骨干网络中断的省份之一\",\n            \"some_hub=“北京通信枢纽楼” — 表示全国重要通信枢纽楼之一\",\n            \"at_least_two_provinces=“广东省, 浙江省” — 表示2个以上省通信大面积中断\"\n        ],\n        \"instance_logicexpression\": [\n            \"CommunicationIncidentLevel(事故A, Ⅰ) ↔ (InterstateBackboneInterruption(广东省) ∧ CommunicationHubDestruction(北京通信枢纽楼) ∧ LargeAreaCommunicationInterruption(广东省, 浙江省))\",\n            \"CommunicationIncidentLevel(事故A, Ⅰ) ↔ (MajorEmergency(事故A) ∧ NeedCommunicationSupport(事故A) ∧ BeyondProvincialCapacity(事故A))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“事故B” — 表示通信事故B\",\n            \"some_province=“四川省” — 表示省际骨干网络中断的省份之一\",\n            \"some_hub=“上海通信枢纽楼” — 表示全国重要通信枢纽楼之一\",\n            \"at_least_two_provinces=“四川省, 重庆市” — 表示2个以上省通信大面积中断\"\n        ],\n        \"instance_logicexpression\": [\n            \"CommunicationIncidentLevel(事故B, Ⅰ) ↔ (InterstateBackboneInterruption(四川省) ∧ CommunicationHubDestruction(上海通信枢纽楼) ∧ LargeAreaCommunicationInterruption(四川省, 重庆市))\",\n            \"CommunicationIncidentLevel(事故B, Ⅰ) ↔ (MajorEmergency(事故B) ∧ NeedCommunicationSupport(事故B) ∧ BeyondProvincialCapacity(事故B))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“事故C” — 表示通信事故C\",\n            \"some_province=“湖北省” — 表示省际骨干网络中断的省份之一\",\n            \"some_hub=“广州通信枢纽楼” — 表示全国重要通信枢纽楼之一\",\n            \"at_least_two_provinces=“湖北省, 湖南省” — 表示2个以上省通信大面积中断\"\n        ],\n        \"instance_logicexpression\": [\n            \"CommunicationIncidentLevel(事故C, Ⅰ) ↔ (InterstateBackboneInterruption(湖北省) ∧ CommunicationHubDestruction(广州通信枢纽楼) ∧ LargeAreaCommunicationInterruption(湖北省, 湖南省))\",\n            \"CommunicationIncidentLevel(事故C, Ⅰ) ↔ (MajorEmergency(事故C) ∧ NeedCommunicationSupport(事故C) ∧ BeyondProvincialCapacity(事故C))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“事故D” — 表示通信事故D\",\n            \"some_province=“陕西省” — 表示省际骨干网络中断的省份之一\",\n            \"some_hub=“西安通信枢纽楼” — 表示全国重要通信枢纽楼之一\",\n            \"at_least_two_provinces=“陕西省, 甘肃省” — 表示2个以上省通信大面积中断\"\n        ],\n        \"instance_logicexpression\": [\n            \"CommunicationIncidentLevel(事故D, Ⅰ) ↔ (InterstateBackboneInterruption(陕西省) ∧ CommunicationHubDestruction(西安通信枢纽楼) ∧ LargeAreaCommunicationInterruption(陕西省, 甘肃省))\",\n            \"CommunicationIncidentLevel(事故D, Ⅰ) ↔ (MajorEmergency(事故D) ∧ NeedCommunicationSupport(事故D) ∧ BeyondProvincialCapacity(事故D))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Province=“广东省” — 表示广东省内干线网络中断\",\n            \"c1=“广州市” — 表示广州市通信大面积中断\",\n            \"c2=“深圳市” — 表示深圳市通信大面积中断\"\n        ],\n        \"instance_logicexpression\": [\n            \"(BackboneNetworkInterruption(广东省) ∨ CommunicationHubDestruction(广东省)) ∧ ∃c1 ∃c2 (MajorCommunicationInterruption(广州市) ∧ MajorCommunicationInterruption(深圳市) ∧ 广州市 ≠ 深圳市 ∧ SameProvince(广州市, 广东省) ∧ SameProvince(深圳市, 广东省))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Province=“江苏省” — 表示江苏省内通信枢纽楼遭到破坏\",\n            \"c1=“南京市” — 表示南京市通信大面积中断\",\n            \"c2=“苏州市” — 表示苏州市通信大面积中断\"\n        ],\n        \"instance_logicexpression\": [\n            \"(BackboneNetworkInterruption(江苏省) ∨ CommunicationHubDestruction(江苏省)) ∧ ∃c1 ∃c2 (MajorCommunicationInterruption(南京市) ∧ MajorCommunicationInterruption(苏州市) ∧ 南京市 ≠ 苏州市 ∧ SameProvince(南京市, 江苏省) ∧ SameProvince(苏州市, 江苏省))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Province=“浙江省” — 表示浙江省发生特别重大突发事件\",\n            \"NeedCommunicationSupport=“是” — 表示浙江省需要通信保障\",\n            \"BeyondCityLevelCapacity=“是” — 表示浙江省超出市（地）级处置能力\"\n        ],\n        \"instance_logicexpression\": [\n            \"SignificantEvent(浙江省) ∧ NeedCommunicationSupport(浙江省) ∧ BeyondCityLevelCapacity(浙江省)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Province=“四川省” — 表示四川省内干线网络中断\",\n            \"c1=“成都市” — 表示成都市通信大面积中断\",\n            \"c2=“绵阳市” — 表示绵阳市通信大面积中断\"\n        ],\n        \"instance_logicexpression\": [\n            \"(BackboneNetworkInterruption(四川省) ∨ CommunicationHubDestruction(四川省)) ∧ ∃c1 ∃c2 (MajorCommunicationInterruption(成都市) ∧ MajorCommunicationInterruption(绵阳市) ∧ 成都市 ≠ 绵阳市 ∧ SameProvince(成都市, 四川省) ∧ SameProvince(绵阳市, 四川省))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Province=“河南省” — 表示河南省内通信枢纽楼遭到破坏\",\n            \"c1=“郑州市” — 表示郑州市通信大面积中断\",\n            \"c2=“洛阳市” — 表示洛阳市通信大面积中断\"\n        ],\n        \"instance_logicexpression\": [\n            \"(BackboneNetworkInterruption(河南省) ∨ CommunicationHubDestruction(河南省)) ∧ ∃c1 ∃c2 (MajorCommunicationInterruption(郑州市) ∧ MajorCommunicationInterruption(洛阳市) ∧ 郑州市 ≠ 洛阳市 ∧ SameProvince(郑州市, 河南省) ∧ SameProvince(洛阳市, 河南省))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“北京市” — 表示北京市级网络中断\",\n            \"co1=“朝阳区” — 表示朝阳区通信大面积中断\",\n            \"co2=“海淀区” — 表示海淀区通信大面积中断\"\n        ],\n        \"instance_logicexpression\": [\n            \"(∃c (NetworkInterruption(北京市) ∨ HubDestruction(北京市)) ∧ ∃c ∃co1 ∃co2 (CityCounty(北京市, 朝阳区) ∧ CityCounty(北京市, 海淀区) ∧ MajorCommunicationInterruption(北京市, 朝阳区) ∧ MajorCommunicationInterruption(北京市, 海淀区) ∧ 朝阳区 ≠ 海淀区)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“上海市” — 表示上海市级重要通信枢纽楼遭到破坏\",\n            \"co1=“黄浦区” — 表示黄浦区通信大面积中断\",\n            \"co2=“徐汇区” — 表示徐汇区通信大面积中断\"\n        ],\n        \"instance_logicexpression\": [\n            \"(∃c (NetworkInterruption(上海市) ∨ HubDestruction(上海市)) ∧ ∃c ∃co1 ∃co2 (CityCounty(上海市, 黄浦区) ∧ CityCounty(上海市, 徐汇区) ∧ MajorCommunicationInterruption(上海市, 黄浦区) ∧ MajorCommunicationInterruption(上海市, 徐汇区) ∧ 黄浦区 ≠ 徐汇区)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“广州市” — 表示广州市发生其他较大及以上突发事件\",\n            \"co1=“天河区” — 表示天河区需要通信保障\"\n        ],\n        \"instance_logicexpression\": [\n            \"(EmergencyEvent(广州市) ∧ NeedCommunicationSupport(广州市) ∧ BeyondCountyCapacity(广州市))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“深圳市” — 表示深圳市需要市（地）范围提供通信保障\",\n            \"co1=“南山区” — 表示南山区超出县级处置能力\"\n        ],\n        \"instance_logicexpression\": [\n            \"(EmergencyEvent(深圳市) ∧ NeedCommunicationSupport(深圳市) ∧ BeyondCountyCapacity(深圳市))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“朝阳区” — 表示朝阳区的通信网络发生中断\",\n            \"c=“朝阳区” — 表示朝阳区的通信发生大面积中断\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃c (NetworkInterruption(朝阳区) ∧ LargeAreaInterruption(朝阳区))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“海淀区” — 表示海淀区的通信网络发生中断\",\n            \"c=“海淀区” — 表示海淀区的通信发生大面积中断\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃c (NetworkInterruption(海淀区) ∧ LargeAreaInterruption(海淀区))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“昌平区” — 表示昌平区的通信网络发生中断\",\n            \"c=“昌平区” — 表示昌平区的通信发生大面积中断\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃c (NetworkInterruption(昌平区) ∧ LargeAreaInterruption(昌平区))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“大兴区” — 表示大兴区的通信网络发生中断\",\n            \"c=“大兴区” — 表示大兴区的通信发生大面积中断\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃c (NetworkInterruption(大兴区) ∧ LargeAreaInterruption(大兴区))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“国家通信管理局” — 表示通信主管部门为国家通信管理局\",\n            \"e=“中国移动通信公司” — 表示基础电信运营企业为中国移动通信公司\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Department(d) ∧ CommunicationAuthority(d) → (EstablishSharedMechanism(d) ∧ StrengthenWarningFunction(d) ∧ CloselyMonitor(d)))\",\n            \"∀e (Enterprise(e) ∧ TelecommunicationOperator(e) → (EstablishWarningMechanism(e) ∧ EnhanceNetworkMonitoring(e)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“地方通信管理局” — 表示通信主管部门为地方通信管理局\",\n            \"e=“中国联合网络通信集团” — 表示基础电信运营企业为中国联合网络通信集团\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Department(d) ∧ CommunicationAuthority(d) → (EstablishSharedMechanism(d) ∧ StrengthenWarningFunction(d) ∧ CloselyMonitor(d)))\",\n            \"∀e (Enterprise(e) ∧ TelecommunicationOperator(e) → (EstablishWarningMechanism(e) ∧ EnhanceNetworkMonitoring(e)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“省级通信监管局” — 表示通信主管部门为省级通信监管局\",\n            \"e=“中国电信集团公司” — 表示基础电信运营企业为中国电信集团公司\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Department(d) ∧ CommunicationAuthority(d) → (EstablishSharedMechanism(d) ∧ StrengthenWarningFunction(d) ∧ CloselyMonitor(d)))\",\n            \"∀e (Enterprise(e) ∧ TelecommunicationOperator(e) → (EstablishWarningMechanism(e) ∧ EnhanceNetworkMonitoring(e)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“市级通信办公室” — 表示通信主管部门为市级通信办公室\",\n            \"e=“中国卫星通信公司” — 表示基础电信运营企业为中国卫星通信公司\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Department(d) ∧ CommunicationAuthority(d) → (EstablishSharedMechanism(d) ∧ StrengthenWarningFunction(d) ∧ CloselyMonitor(d)))\",\n            \"∀e (Enterprise(e) ∧ TelecommunicationOperator(e) → (EstablishWarningMechanism(e) ∧ EnhanceNetworkMonitoring(e)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"l=“Ⅰ级” — 表示预警级别为Ⅰ级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀l (Level(l, Ⅰ) → ResponsibleForAlert(领导小组, l))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=“Ⅱ级” — 表示预警级别为Ⅱ级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀l ((Level(l, Ⅱ) ∨ Level(l, Ⅲ) ∨ Level(l, Ⅳ)) → ResponsibleForAlert(省级通信保障应急指挥机构, l))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=“Ⅲ级” — 表示预警级别为Ⅲ级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀l ((Level(l, Ⅱ) ∨ Level(l, Ⅲ) ∨ Level(l, Ⅳ)) → ResponsibleForAlert(省级通信保障应急指挥机构, l))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=“Ⅳ级” — 表示预警级别为Ⅳ级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀l ((Level(l, Ⅱ) ∨ Level(l, Ⅲ) ∨ Level(l, Ⅳ)) → ResponsibleForAlert(省级通信保障应急指挥机构, l))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"L=“Ⅰ级” — 表示领导小组核定达到Ⅰ级预警\",\n            \"Organization=“通信管理局” — 表示需要通知的组织为通信管理局\",\n            \"Organization=“基础电信运营企业” — 表示需要通知的组织为基础电信运营企业\",\n            \"Measures=“通信保障应急准备措施” — 表示研究确定的应急准备措施\",\n            \"Plan=“工作方案” — 表示研究确定的工作方案\",\n            \"Resource=“资源调度” — 表示紧急部署的资源调度\",\n            \"Mobilization=“组织动员” — 表示紧急部署的组织动员\",\n            \"Coordination=“部门联动” — 表示紧急部署的部门联动\",\n            \"S=“事态进展情况” — 表示根据事态进展情况调整预警级别或解除预警\"\n        ],\n        \"instance_logicexpression\": [\n            \"LeadershipGroupApproval(Ⅰ) ∧ Ⅰ = Ⅰ → (ActivateWarningAction(Ⅰ) ∧ Notify(通信管理局) ∧ Notify(基础电信运营企业) ∧ Determine(通信保障应急准备措施, 工作方案) ∧ Deploy(资源调度, 组织动员, 部门联动) ∧ (∃S (Situation(事态进展情况) → (AdjustWarningLevel(Ⅰ) ∨ LiftWarning()))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"L=“Ⅲ级” — 表示领导小组核定未达到Ⅰ级预警\",\n            \"Organization=“省级通信保障应急指挥机构” — 表示需要通报情况的组织为省级通信保障应急指挥机构\",\n            \"Organization=“基础电信运营企业” — 表示需要通报情况的组织为基础电信运营企业\"\n        ],\n        \"instance_logicexpression\": [\n            \"LeadershipGroupApproval(Ⅲ) ∧ Ⅲ ≠ Ⅰ → ReportSituation(省级通信保障应急指挥机构) ∧ ReportSituation(基础电信运营企业)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"L=“Ⅱ级” — 表示预警级别为Ⅱ级\",\n            \"I=“地方通信保障应急指挥机构” — 表示负责采取相应级别预警行动的机构\",\n            \"Situation=“重要情况” — 表示需要及时上报的重要情况\"\n        ],\n        \"instance_logicexpression\": [\n            \"Ⅱ < Ⅱ → (∃I (LocalWarningAction(地方通信保障应急指挥机构, Ⅱ) ∧ ReportUp(重要情况)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"l=“Ⅰ” — 表示Ⅰ级应急响应等级\",\n            \"a=“领导小组” — 表示Ⅰ级响应由领导小组负责组织实施\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseLevel(Ⅰ, 领导小组) → (Ⅰ = Ⅰ → 领导小组 = 领导小组)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=“Ⅱ” — 表示Ⅱ级应急响应等级\",\n            \"a=“省级通信保障应急指挥机构” — 表示Ⅱ级响应由省级通信保障应急指挥机构负责组织实施\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseLevel(Ⅱ, 省级通信保障应急指挥机构) → (Ⅱ = Ⅱ → ∃p (Authority(p) ∧ 省级通信保障应急指挥机构 = p))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=“Ⅲ” — 表示Ⅲ级应急响应等级\",\n            \"a=“市（地）级通信保障应急指挥机构” — 表示Ⅲ级响应由市（地）级通信保障应急指挥机构负责组织实施\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseLevel(Ⅲ, 市（地）级通信保障应急指挥机构) → (Ⅲ = Ⅲ → ∃c (Authority(c) ∧ 市（地）级通信保障应急指挥机构 = c))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=“Ⅳ” — 表示Ⅳ级应急响应等级\",\n            \"a=“县级通信保障应急指挥机构” — 表示Ⅳ级响应由县级通信保障应急指挥机构负责组织实施\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseLevel(Ⅳ, 县级通信保障应急指挥机构) → (Ⅳ = Ⅳ → ∃d (Authority(d) ∧ 县级通信保障应急指挥机构 = d))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=“Ⅰ” — 表示启动Ⅰ级应急响应等级\"\n        ],\n        \"instance_logicexpression\": [\n            \"ActivateResponse(Ⅰ) → (WorkMechanism(指挥联动) ∧ WorkMechanism(信息报送) ∧ WorkMechanism(会商) ∧ WorkMechanism(通信联络) ∧ WorkMechanism(信息通报) ∧ WorkMechanism(发布))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“网络中断” — 表示发生了网络中断这一通信事故\",\n            \"Company=“电信公司A” — 表示电信公司A是相关基础电信运营企业\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (CommunicationAccident(“网络中断”) → (TakeMeasures(“电信公司A”, “网络中断”) ∧ ReportIncident(“电信公司A”, “网络中断”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“信号故障” — 表示发生了信号故障这一通信事故\",\n            \"Company=“电信公司B” — 表示电信公司B是相关基础电信运营企业\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (CommunicationAccident(“信号故障”) → (TakeMeasures(“电信公司B”, “信号故障”) ∧ ReportIncident(“电信公司B”, “信号故障”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“网络中断” — 表示发生了网络中断这一通信事故\",\n            \"CommandCenter=“地区通信保障应急指挥机构” — 表示地区通信保障应急指挥机构接到了通信事故的信息报告\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (ReceiveReport(“地区通信保障应急指挥机构”, “网络中断”) → (TakeResponse(“地区通信保障应急指挥机构”, “网络中断”) ∧ ReportToSuperior(“地区通信保障应急指挥机构”, “网络中断”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“服务中断” — 表示发生了服务中断这一通信事故\",\n            \"CommandCenter=“国家通信保障应急指挥机构” — 表示国家通信保障应急指挥机构接到了通信事故的信息报告\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (ReceiveReport(“国家通信保障应急指挥机构”, “服务中断”) → (TakeResponse(“国家通信保障应急指挥机构”, “服务中断”) ∧ ReportToSuperior(“国家通信保障应急指挥机构”, “服务中断”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“领导小组办公室” — 表示领导小组办公室\",\n            \"g=“领导小组” — 表示领导小组\",\n            \"s=“紧急情况” — 表示有关情况为紧急情况\",\n            \"u=“各成员单位” — 表示各成员单位\",\n            \"p=“北京市” — 表示事发省（区、市）为北京市\",\n            \"ForcesIn(p)=“北京市应急通信保障力量” — 表示北京市应急通信保障力量\",\n            \"EnterprisesIn(p)=“北京市基础电信运营企业” — 表示北京市基础电信运营企业\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀g∀s (ReportAndSuggest(“领导小组办公室”, “领导小组”, “紧急情况”) → Notify(“领导小组办公室”, “各成员单位”))\",\n            \"∀g (ConfirmAndActivate(“领导小组”) → Notify(“领导小组办公室”, “各成员单位”) ∧ Notify(“领导小组办公室”, “各省（区、市）通信管理局”))\",\n            \"∀p (IncidentIn(“北京市”) → ActivateEmergencyCommand(“北京市应急通信保障力量”, “北京市基础电信运营企业”))\",\n            \"∀u (ActivatePlanAndCoordinate(“各成员单位”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“领导小组办公室” — 表示领导小组办公室\",\n            \"g=“领导小组” — 表示领导小组\",\n            \"s=“重大事故” — 表示有关情况为重大事故\",\n            \"u=“各成员单位” — 表示各成员单位\",\n            \"p=“上海市” — 表示事发省（区、市）为上海市\",\n            \"ForcesIn(p)=“上海市应急通信保障力量” — 表示上海市应急通信保障力量\",\n            \"EnterprisesIn(p)=“上海市基础电信运营企业” — 表示上海市基础电信运营企业\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀g∀s (ReportAndSuggest(“领导小组办公室”, “领导小组”, “重大事故”) → Notify(“领导小组办公室”, “各成员单位”))\",\n            \"∀g (ConfirmAndActivate(“领导小组”) → Notify(“领导小组办公室”, “各成员单位”) ∧ Notify(“领导小组办公室”, “各省（区、市）通信管理局”))\",\n            \"∀p (IncidentIn(“上海市”) → ActivateEmergencyCommand(“上海市应急通信保障力量”, “上海市基础电信运营企业”))\",\n            \"∀u (ActivatePlanAndCoordinate(“各成员单位”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“领导小组办公室” — 表示领导小组办公室\",\n            \"g=“领导小组” — 表示领导小组\",\n            \"s=“自然灾害” — 表示有关情况为自然灾害\",\n            \"u=“各成员单位” — 表示各成员单位\",\n            \"p=“广东省” — 表示事发省（区、市）为广东省\",\n            \"ForcesIn(p)=“广东省应急通信保障力量” — 表示广东省应急通信保障力量\",\n            \"EnterprisesIn(p)=“广东省基础电信运营企业” — 表示广东省基础电信运营企业\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀g∀s (ReportAndSuggest(“领导小组办公室”, “领导小组”, “自然灾害”) → Notify(“领导小组办公室”, “各成员单位”))\",\n            \"∀g (ConfirmAndActivate(“领导小组”) → Notify(“领导小组办公室”, “各成员单位”) ∧ Notify(“领导小组办公室”, “各省（区、市）通信管理局”))\",\n            \"∀p (IncidentIn(“广东省”) → ActivateEmergencyCommand(“广东省应急通信保障力量”, “广东省基础电信运营企业”))\",\n            \"∀u (ActivatePlanAndCoordinate(“各成员单位”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“领导小组办公室” — 表示领导小组办公室实行24小时应急值班\",\n            \"c=“成员单位联络员” — 表示成员单位联络员之间保持24小时通信联络\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyDuty(“领导小组办公室”) ∧ ∀c Communication(c)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“应急指挥机构” — 表示事发地通信保障应急指挥机构\",\n            \"i=“事件信息” — 表示报送的信息内容\",\n            \"u=“每小时一次” — 表示报送信息的频次\"\n        ],\n        \"instance_logicexpression\": [\n            \"Report(“应急指挥机构”, “事件信息”, “每小时一次”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“领导小组办公室” — 表示领导小组办公室\",\n            \"i=“事件信息” — 表示报送的信息内容\"\n        ],\n        \"instance_logicexpression\": [\n            \"Analyze(“领导小组办公室”, “事件信息”) → DecisionReference(“事件信息”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“领导小组办公室” — 表示领导小组办公室\",\n            \"i=“事件信息” — 表示报送的信息内容\",\n            \"d=“公安部门” — 表示需要通报的部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"Analyze(“领导小组办公室”, “事件信息”) → Inform(“领导小组办公室”, “事件信息”, “公安部门”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“基础电信运营企业” — 表示基础电信运营企业\",\n            \"i=“通信状态报告” — 表示报送的信息内容\",\n            \"u=“每两小时一次” — 表示报送信息的频次\"\n        ],\n        \"instance_logicexpression\": [\n            \"Report(“基础电信运营企业”, “通信状态报告”, “每两小时一次”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“领导小组办公室” — 表示领导小组办公室\",\n            \"i=“通信状态报告” — 表示报送的信息内容\",\n            \"d=“交通部门” — 表示需要通报的部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"Analyze(“领导小组办公室”, “通信状态报告”) → Inform(“领导小组办公室”, “通信状态报告”, “交通部门”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“地震灾害信息” — 表示领导小组掌握的地震灾害信息\",\n            \"r=“紧急救援工作要求” — 表示国务院的紧急救援工作要求\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i ∀r (HaveInformation(LeaderGroup, “地震灾害信息”) ∧ WorkRequirement(NationalCouncil, “紧急救援工作要求”) → ConveneMeeting(LeaderGroup, MemberUnits) ∧ CoordinateOrganization(LeaderGroup, Teams, Equipment))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“洪水预警信息” — 表示领导小组掌握的洪水预警信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (AnalyzeAssess(ExpertGroup, “洪水预警信息”) → ProposeSuggestions(ExpertGroup, Countermeasures, Plans))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“江苏省通信管理局” — 表示领导小组向江苏省通信管理局下达任务\",\n            \"e=“中国电信集团公司” — 表示领导小组向中国电信集团公司下达任务\",\n            \"Tasks=“通信网络抢修任务” — 表示通信网络抢修任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p ∀e (ImplementDecision(LeaderGroup, “江苏省通信管理局”, “中国电信集团公司”, “通信网络抢修任务”) → SuperviseExecution(LeaderGroup, “通信网络抢修任务”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“浙江省基础电信运营企业” — 表示浙江省基础电信运营企业接收到任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀u (ReceiveTask(“浙江省基础电信运营企业”, LeaderGroup) → OrganizeSupport(“浙江省基础电信运营企业”, Teams, Resources) ∧ ReportStatus(“浙江省基础电信运营企业”, LeaderGroup, Status))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“北京市” — 表示事发省（区、市）为北京市\",\n            \"Institution=“北京市通信管理局应急指挥机构” — 表示在北京市成立的应急指挥机构\",\n            \"Task=“通信保障应急工作” — 表示通信保障的应急工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (LeaderGroupRequest(北京市) → (EstablishInstitution(北京市, 北京市通信管理局应急指挥机构) ∧ OrganizeCoordinate(北京市通信管理局应急指挥机构, 通信保障应急工作)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“上海市” — 表示事发省（区、市）为上海市\",\n            \"Institution=“上海市通信管理局应急指挥机构” — 表示在上海市成立的应急指挥机构\",\n            \"Task=“通信保障应急工作” — 表示通信保障的应急工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (LeaderGroupRequest(上海市) → (EstablishInstitution(上海市, 上海市通信管理局应急指挥机构) ∧ OrganizeCoordinate(上海市通信管理局应急指挥机构, 通信保障应急工作)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“广东省” — 表示事发省（区、市）为广东省\",\n            \"Institution=“广东省通信管理局应急指挥机构” — 表示在广东省成立的应急指挥机构\",\n            \"Task=“通信保障应急工作” — 表示通信保障的应急工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (LeaderGroupRequest(广东省) → (EstablishInstitution(广东省, 广东省通信管理局应急指挥机构) ∧ OrganizeCoordinate(广东省通信管理局应急指挥机构, 通信保障应急工作)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“四川省” — 表示事发省（区、市）为四川省\",\n            \"Institution=“四川省通信管理局应急指挥机构” — 表示在四川省成立的应急指挥机构\",\n            \"Task=“通信保障应急工作” — 表示通信保障的应急工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (LeaderGroupRequest(四川省) → (EstablishInstitution(四川省, 四川省通信管理局应急指挥机构) ∧ OrganizeCoordinate(四川省通信管理局应急指挥机构, 通信保障应急工作)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“领导小组办公室” — 表示领导小组办公室\",\n            \"t=“领导小组” — 表示领导小组\",\n            \"s=“Ⅰ级响应结束” — 表示Ⅰ级响应结束的建议\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀t∀s (Propose(“领导小组办公室”, t, “Ⅰ级响应结束”) → (AnnounceEnd(t) ∧ TerminateResponse(“领导小组办公室”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“应急指挥中心” — 表示应急指挥中心\",\n            \"t=“领导小组” — 表示领导小组\",\n            \"s=“Ⅰ级响应结束” — 表示Ⅰ级响应结束的建议\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀t∀s (Propose(“应急指挥中心”, t, “Ⅰ级响应结束”) → (AnnounceEnd(t) ∧ TerminateResponse(“应急指挥中心”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“消防局” — 表示消防局\",\n            \"t=“领导小组” — 表示领导小组\",\n            \"s=“Ⅰ级响应结束” — 表示Ⅰ级响应结束的建议\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀t∀s (Propose(“消防局”, t, “Ⅰ级响应结束”) → (AnnounceEnd(t) ∧ TerminateResponse(“消防局”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“公安局” — 表示公安局\",\n            \"t=“领导小组” — 表示领导小组\",\n            \"s=“Ⅰ级响应结束” — 表示Ⅰ级响应结束的建议\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀t∀s (Propose(“公安局”, t, “Ⅰ级响应结束”) → (AnnounceEnd(t) ∧ TerminateResponse(“公安局”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Institution=“国家通信管理局” — 表示相关通信保障应急管理机构为国家通信管理局\",\n            \"Loss=“地震导致的电信设施损失” — 表示公众电信网络设施损失情况为地震导致的损失\",\n            \"Task=“地震通信保障任务” — 表示任务为地震通信保障任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyWorkEnded() → (StatisticsSummary(国家通信管理局, 地震导致的电信设施损失) ∧ TaskCompletionSummaryAssessment(国家通信管理局, 地震通信保障任务))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Institution=“地方通信管理局” — 表示相关通信保障应急管理机构为地方通信管理局\",\n            \"Loss=“台风导致的电信设施损失” — 表示公众电信网络设施损失情况为台风导致的损失\",\n            \"Task=“台风通信保障任务” — 表示任务为台风通信保障任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyWorkEnded() → (StatisticsSummary(地方通信管理局, 台风导致的电信设施损失) ∧ TaskCompletionSummaryAssessment(地方通信管理局, 台风通信保障任务))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“国家重大活动通信保障任务” — 表示特别重大通信保障任务为国家重大活动通信保障任务\",\n            \"LeaderGroup=“国家通信领导小组” — 表示领导小组为国家通信领导小组\"\n        ],\n        \"instance_logicexpression\": [\n            \"特别重大通信保障任务(国家重大活动通信保障任务) → (AnalysisAssessment(国家通信领导小组, 国家重大活动通信保障任务) ∧ ProposeImprovement(国家通信领导小组))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“国际会议通信保障任务” — 表示特别重大通信保障任务为国际会议通信保障任务\",\n            \"LeaderGroup=“国际会议通信保障领导小组” — 表示领导小组为国际会议通信保障领导小组\"\n        ],\n        \"instance_logicexpression\": [\n            \"特别重大通信保障任务(国际会议通信保障任务) → (AnalysisAssessment(国际会议通信保障领导小组, 国际会议通信保障任务) ∧ ProposeImprovement(国际会议通信保障领导小组))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“县级人民政府” — 表示县级以上人民政府\",\n            \"e=“通信基站” — 表示征用的通信物资和装备为通信基站\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀e (EmergencyWorkEnded(县级人民政府) → (ReturnMaterials(县级人民政府, 通信基站) ∨ (CauseDamage(通信基站) ∨ UnableToReturn(通信基站)) → AccordingToRegulation(县级人民政府, ProperCompensation(县级人民政府, 通信基站))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“市级人民政府” — 表示市级人民政府\",\n            \"e=“光纤电缆” — 表示征用的通信物资和装备为光纤电缆\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀e (EmergencyWorkEnded(市级人民政府) → (ReturnMaterials(市级人民政府, 光纤电缆) ∨ (CauseDamage(光纤电缆) ∨ UnableToReturn(光纤电缆)) → AccordingToRegulation(市级人民政府, ProperCompensation(市级人民政府, 光纤电缆))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“省级人民政府” — 表示省级人民政府\",\n            \"e=“卫星通信设备” — 表示征用的通信物资和装备为卫星通信设备\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀e (EmergencyWorkEnded(省级人民政府) → (ReturnMaterials(省级人民政府, 卫星通信设备) ∨ (CauseDamage(卫星通信设备) ∨ UnableToReturn(卫星通信设备)) → AccordingToRegulation(省级人民政府, ProperCompensation(省级人民政府, 卫星通信设备))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“县级人民政府” — 表示县级以上人民政府\",\n            \"e=“无线电发射器” — 表示征用的通信物资和装备为无线电发射器\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀e (EmergencyWorkEnded(县级人民政府) → (ReturnMaterials(县级人民政府, 无线电发射器) ∨ (CauseDamage(无线电发射器) ∨ UnableToReturn(无线电发射器)) → AccordingToRegulation(县级人民政府, ProperCompensation(县级人民政府, 无线电发射器))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"EmergencyResponseEnded() — 表示突发事件应急处置工作已经结束。\",\n            \"m=“江苏省通信管理局” — 表示江苏省通信管理局负责组织制定计划。\",\n            \"p=“灾后恢复重建计划” — 表示计划为灾后恢复重建计划。\",\n            \"d=“工业和信息化部” — 表示计划上报给工业和信息化部。\",\n            \"e=“中国电信集团公司” — 表示中国电信集团公司负责实施计划。\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseEnded() → (Requirement(领导小组, 灾后恢复重建计划) ∧ Requirement(江苏省人民政府, 灾后恢复重建计划) ∧ OrganizePlan(江苏省通信管理局, 灾后恢复重建计划) ∧ Report(江苏省通信管理局, 工业和信息化部, 灾后恢复重建计划) ∧ Implement(中国电信集团公司, 灾后恢复重建计划) ∧ 基础电信运营企业(中国电信集团公司))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"EmergencyResponseEnded() — 表示突发事件应急处置工作已经结束。\",\n            \"m=“广东省通信管理局” — 表示广东省通信管理局负责组织制定计划。\",\n            \"p=“灾后恢复重建计划” — 表示计划为灾后恢复重建计划。\",\n            \"d=“工业和信息化部” — 表示计划上报给工业和信息化部。\",\n            \"e=“中国移动通信集团公司” — 表示中国移动通信集团公司负责实施计划。\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseEnded() → (Requirement(领导小组, 灾后恢复重建计划) ∧ Requirement(广东省人民政府, 灾后恢复重建计划) ∧ OrganizePlan(广东省通信管理局, 灾后恢复重建计划) ∧ Report(广东省通信管理局, 工业和信息化部, 灾后恢复重建计划) ∧ Implement(中国移动通信集团公司, 灾后恢复重建计划) ∧ 基础电信运营企业(中国移动通信集团公司))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"EmergencyResponseEnded() — 表示突发事件应急处置工作已经结束。\",\n            \"m=“四川省通信管理局” — 表示四川省通信管理局负责组织制定计划。\",\n            \"p=“灾后恢复重建计划” — 表示计划为灾后恢复重建计划。\",\n            \"d=“工业和信息化部” — 表示计划上报给工业和信息化部。\",\n            \"e=“中国联合网络通信集团有限公司” — 表示中国联合网络通信集团有限公司负责实施计划。\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseEnded() → (Requirement(领导小组, 灾后恢复重建计划) ∧ Requirement(四川省人民政府, 灾后恢复重建计划) ∧ OrganizePlan(四川省通信管理局, 灾后恢复重建计划) ∧ Report(四川省通信管理局, 工业和信息化部, 灾后恢复重建计划) ∧ Implement(中国联合网络通信集团有限公司, 灾后恢复重建计划) ∧ 基础电信运营企业(中国联合网络通信集团有限公司))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"u=“通信公司A” — 表示单位为通信公司A\",\n            \"p=“工程师李工” — 表示个人为工程师李工\"\n        ],\n        \"instance_logicexpression\": [\n            \"OutstandingContribution(通信公司A, 工程师李工) → RewardAccordingToRegulation(通信公司A, 工程师李工)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“通信公司B” — 表示单位为通信公司B\",\n            \"p=“技术员小张” — 表示个人为技术员小张\",\n            \"Negligence(通信公司B, 技术员小张) — 表示通信公司B和个人小张玩忽职守\",\n            \"CauseLoss(通信公司B, 技术员小张) — 表示通信公司B和个人小张玩忽职守造成损失\"\n        ],\n        \"instance_logicexpression\": [\n            \"Negligence(通信公司B, 技术员小张) ∧ CauseLoss(通信公司B, 技术员小张) → HoldAccountable(通信公司B, 技术员小张)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“通信公司C” — 表示单位为通信公司C\",\n            \"p=“项目经理王经理” — 表示个人为项目经理王经理\",\n            \"Crime(通信公司C, 项目经理王经理) — 表示通信公司C和个人王经理的行为构成犯罪\"\n        ],\n        \"instance_logicexpression\": [\n            \"Crime(通信公司C, 项目经理王经理) → PursueCriminalLiability(通信公司C, 项目经理王经理)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“应急响应小组” — 表示单位为应急响应小组\",\n            \"p=“技术专家赵博士” — 表示个人为技术专家赵博士\"\n        ],\n        \"instance_logicexpression\": [\n            \"OutstandingContribution(应急响应小组, 技术专家赵博士) → RewardAccordingToRegulation(应急响应小组, 技术专家赵博士)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“通信维护团队” — 表示单位为通信维护团队\",\n            \"p=“维护人员小刘” — 表示个人为维护人员小刘\",\n            \"Negligence(通信维护团队, 维护人员小刘) — 表示通信维护团队和个人小刘玩忽职守\",\n            \"CauseLoss(通信维护团队, 维护人员小刘) — 表示通信维护团队和个人小刘玩忽职守造成损失\"\n        ],\n        \"instance_logicexpression\": [\n            \"Negligence(通信维护团队, 维护人员小刘) ∧ CauseLoss(通信维护团队, 维护人员小刘) → HoldAccountable(通信维护团队, 维护人员小刘)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“通信调度中心” — 表示单位为通信调度中心\",\n            \"p=“调度员小陈” — 表示个人为调度员小陈\",\n            \"Crime(通信调度中心, 调度员小陈) — 表示通信调度中心和个人小陈的行为构成犯罪\"\n        ],\n        \"instance_logicexpression\": [\n            \"Crime(通信调度中心, 调度员小陈) → PursueCriminalLiability(通信调度中心, 调度员小陈)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“工业和信息化部” — 表示工业和信息化部加强应急通信专业保障队伍建设\",\n            \"DisasterDistribution=“灾害分布” — 表示针对灾害分布进行合理配置\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Department(d) ∧ (d = 工业和信息化部) → (StrengthenTeam(d) ∧ ReasonableAllocation(d, 灾害分布) ∧ ConductTraining(d) ∧ EnhanceCapability(d)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“中国移动通信集团公司” — 表示中国移动通信集团公司不断完善专业应急机动通信保障队伍\",\n            \"e=“中国联合网络通信集团有限公司” — 表示中国联合网络通信集团有限公司加强应急通信装备的配备\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (Enterprise(e) ∧ (e = 中国移动通信集团公司) → (ImproveEmergencyTeam(e) ∧ StrengthenEquipment(e) ∧ MeetRequirements(e)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“中国电信集团公司” — 表示中国电信集团公司满足国家应急通信保障等工作的要求\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (Enterprise(e) ∧ (e = 中国电信集团公司) → (ImproveEmergencyTeam(e) ∧ StrengthenEquipment(e) ∧ MeetRequirements(e)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“电信公司A” — 表示电信公司A是基础电信运营企业\",\n            \"Equipment=“卫星通信车” — 表示应急装备为卫星通信车\"\n        ],\n        \"instance_logicexpression\": [\n            \"基础电信运营企业(电信公司A) → (Equip(电信公司A, 卫星通信车) ∧ Strengthen(电信公司A, 小型便携应急通信装备) ∧ Manage(电信公司A, 应急装备))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“电信公司B” — 表示电信公司B是基础电信运营企业\",\n            \"Equipment=“移动基站” — 表示应急装备为移动基站\"\n        ],\n        \"instance_logicexpression\": [\n            \"基础电信运营企业(电信公司B) → (Equip(电信公司B, 移动基站) ∧ Strengthen(电信公司B, 小型便携应急通信装备) ∧ Manage(电信公司B, 应急装备))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“应急管理部” — 表示应急管理部具有专用通信网\",\n            \"Mechanism=“灾害应急通信保障机制” — 表示通信保障机制为灾害应急通信保障机制\"\n        ],\n        \"instance_logicexpression\": [\n            \"专用通信网(应急管理部) → EstablishMechanism(应急管理部, 灾害应急通信保障机制)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“公安部” — 表示公安部具有专用通信网\",\n            \"Mechanism=“公共安全应急通信保障机制” — 表示通信保障机制为公共安全应急通信保障机制\"\n        ],\n        \"instance_logicexpression\": [\n            \"专用通信网(公安部) → EstablishMechanism(公安部, 公共安全应急通信保障机制)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“交通管理局” — 表示交通管理局负责组织协调\",\n            \"v=“应急通信车1号” — 表示应急通信专用车辆为1号车\",\n            \"Scene=“市中心抢修现场” — 表示抢修现场位于市中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀v (EmergencyVehicle(v) → (OrganizeCoordination(交通管理局, 应急通信车1号) ∧ IssueSpecialPass(应急通信车1号) → QuickArrival(应急通信车1号, 市中心抢修现场))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“城市运输局” — 表示城市运输局负责组织协调\",\n            \"v=“应急物资运输车2号” — 表示应急物资运输车辆为2号车\",\n            \"Scene=“郊区抢修现场” — 表示抢修现场位于郊区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀v (EmergencyVehicle(v) → (OrganizeCoordination(城市运输局, 应急物资运输车2号) ∧ IssueSpecialPass(应急物资运输车2号) → QuickArrival(应急物资运输车2号, 郊区抢修现场))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“物流协调中心” — 表示物流协调中心负责组织协调\",\n            \"v=“应急通信车3号” — 表示应急通信专用车辆为3号车\",\n            \"Scene=“工业园区抢修现场” — 表示抢修现场位于工业园区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀v (EmergencyVehicle(v) → (OrganizeCoordination(物流协调中心, 应急通信车3号) ∧ IssueSpecialPass(应急通信车3号) → QuickArrival(应急通信车3号, 工业园区抢修现场))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“交通调度中心” — 表示交通调度中心负责组织协调\",\n            \"v=“应急物资运输车4号” — 表示应急物资运输车辆为4号车\",\n            \"Scene=“商业区抢修现场” — 表示抢修现场位于商业区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀v (EmergencyVehicle(v) → (OrganizeCoordination(交通调度中心, 应急物资运输车4号) ∧ IssueSpecialPass(应急物资运输车4号) → QuickArrival(应急物资运输车4号, 商业区抢修现场))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“中国电信” — 表示中国电信是基础电信运营企业\",\n            \"d=“能源局” — 表示能源局是事发地煤电油气运相关部门\",\n            \"f=“通信基站A” — 表示通信基站A是通信设施或现场应急通信装备\"\n        ],\n        \"instance_logicexpression\": [\n            \"基础电信运营企业(中国电信) → EquipWithEmergencyGenerators(中国电信)\",\n            \"事发地煤电油气运相关部门(能源局) ∧ 通信设施或现场应急通信装备(通信基站A) → EnsurePowerAndFuel(能源局, 通信基站A)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"n=“数据中心B” — 表示数据中心B是关键通信节点\"\n        ],\n        \"instance_logicexpression\": [\n            \"关键通信节点(数据中心B) → ∃d (事发地煤电油气运相关部门(d) ∧ EnsurePowerAndFuel(d, 数据中心B))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“中国移动” — 表示中国移动是基础电信运营企业\",\n            \"d=“经济委员会” — 表示经济委员会是发展改革委会同煤电油气运保障工作部际协调机制\"\n        ],\n        \"instance_logicexpression\": [\n            \"¬∃c (基础电信运营企业(c) ∧ EquipWithEmergencyGenerators(c)) → ∃c (发展改革委会同煤电油气运保障工作部际协调机制(经济委员会) ∧ OrganizeCoordination(经济委员会, d))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“中国联通” — 表示中国联通是基础电信运营企业\",\n            \"d=“能源部” — 表示能源部是事发地煤电油气运相关部门\",\n            \"f=“应急通信车C” — 表示应急通信车C是通信设施或现场应急通信装备\"\n        ],\n        \"instance_logicexpression\": [\n            \"基础电信运营企业(中国联通) → EquipWithEmergencyGenerators(中国联通)\",\n            \"事发地煤电油气运相关部门(能源部) ∧ 通信设施或现场应急通信装备(应急通信车C) → EnsurePowerAndFuel(能源部, 应急通信车C)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"n=“交换中心D” — 表示交换中心D是关键通信节点\"\n        ],\n        \"instance_logicexpression\": [\n            \"关键通信节点(交换中心D) → ∃d (事发地煤电油气运相关部门(d) ∧ EnsurePowerAndFuel(d, 交换中心D))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“北京市海淀区人民政府” — 表示事发地人民政府为北京市海淀区人民政府\",\n            \"d=“北京市海淀区交通管理局” — 表示相关行政主管部门为北京市海淀区交通管理局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g ∀d ∀s (事发地人民政府(“北京市海淀区人民政府”) ∧ 相关行政主管部门(“北京市海淀区交通管理局”) → ResponsibleForCoordination(“北京市海淀区人民政府”, “北京市海淀区交通管理局”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“上海市浦东新区人民政府” — 表示事发地人民政府为上海市浦东新区人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g (事发地人民政府(“上海市浦东新区人民政府”) → EnsureSupplies(“上海市浦东新区人民政府”, Supplies))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“广州市天河区人民政府” — 表示事发地人民政府为广州市天河区人民政府\",\n            \"s=“天河区应急通信系统” — 表示应急通信系统为天河区应急通信系统\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g ∀s (事发地人民政府(“广州市天河区人民政府”) ∧ 应急通信系统(“天河区应急通信系统”) → EnsurePowerSupply(“广州市天河区人民政府”, “天河区应急通信系统”) ∧ EnsureFuelSupply(“广州市天河区人民政府”, “天河区应急通信系统”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“深圳市南山区人民政府” — 表示事发地人民政府为深圳市南山区人民政府\",\n            \"p=“应急现场处置人员张华” — 表示应急现场处置人员为张华\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g ∀p (事发地人民政府(“深圳市南山区人民政府”) ∧ 应急现场处置人员(“张华”) ∧ 自备物资不足(“张华”) → ProvideLogisticsSupport(“深圳市南山区人民政府”, “张华”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“杭州市西湖区人民政府” — 表示事发地人民政府为杭州市西湖区人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g (事发地人民政府(“杭州市西湖区人民政府”) → CoordinateSocialSupport(“杭州市西湖区人民政府”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“地震灾害” — 表示突发事件为地震灾害\",\n            \"d=“财政部门” — 表示承担通信保障费用的部门为财政部门\",\n            \"Plan=《财政应急保障预案》 — 表示财政部门参照的预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"突发事件(地震灾害) ∨ 重要通信保障任务(地震灾害) → CommunicationCost(地震灾害, 财政部门) ∧ FollowPlan(财政部门, 《财政应急保障预案》)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“重大节日通信保障” — 表示重要通信保障任务为重大节日通信保障\",\n            \"d=“财政部门” — 表示承担通信保障费用的部门为财政部门\",\n            \"Plan=《财政应急保障预案》 — 表示财政部门参照的预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"突发事件(重大节日通信保障) ∨ 重要通信保障任务(重大节日通信保障) → CommunicationCost(重大节日通信保障, 财政部门) ∧ FollowPlan(财政部门, 《财政应急保障预案》)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“电信网络服务中断” — 表示电信网络安全事故为电信网络服务中断\",\n            \"e=“基础电信运营企业A” — 表示承担费用的企业为电信运营企业A\"\n        ],\n        \"instance_logicexpression\": [\n            \"TelecomSecurityIncident(电信网络服务中断) → CommunicationCost(电信网络服务中断, 基础电信运营企业A) ∧ BearCost(基础电信运营企业A, 电信网络服务中断)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“数据泄露事件” — 表示电信网络安全事故为数据泄露事件\",\n            \"e=“基础电信运营企业B” — 表示承担费用的企业为电信运营企业B\"\n        ],\n        \"instance_logicexpression\": [\n            \"TelecomSecurityIncident(数据泄露事件) → CommunicationCost(数据泄露事件, 基础电信运营企业B) ∧ BearCost(基础电信运营企业B, 数据泄露事件)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“中央人民政府” — 表示中央人民政府\",\n            \"e=“国家经济促进部门” — 表示国家经济促进部门\",\n            \"t=“中国移动通信” — 表示中国移动通信运营企业\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀e∀t (Government(中央人民政府) ∨ EconomicPromotionDepartment(国家经济促进部门) ∨ BasicTelecomOperator(中国移动通信) → ProvideCommunicationSafetyEducation(中央人民政府) ∧ ProvideCommunicationSafetyEducation(国家经济促进部门) ∧ ProvideCommunicationSafetyEducation(中国移动通信) ∧ EnhanceLawfulAwareness(中央人民政府) ∧ EnhanceLawfulAwareness(国家经济促进部门) ∧ EnhanceLawfulAwareness(中国移动通信) ∧ JointlyMaintainNetworkSecurity(中央人民政府) ∧ JointlyMaintainNetworkSecurity(国家经济促进部门) ∧ JointlyMaintainNetworkSecurity(中国移动通信))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“省级人民政府” — 表示省级人民政府\",\n            \"e=“省经济促进部门” — 表示省经济促进部门\",\n            \"t=“中国联通通信” — 表示中国联通通信运营企业\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀e∀t (Government(省级人民政府) ∨ EconomicPromotionDepartment(省经济促进部门) ∨ BasicTelecomOperator(中国联通通信) → ProvideCommunicationSafetyEducation(省级人民政府) ∧ ProvideCommunicationSafetyEducation(省经济促进部门) ∧ ProvideCommunicationSafetyEducation(中国联通通信) ∧ EnhanceLawfulAwareness(省级人民政府) ∧ EnhanceLawfulAwareness(省经济促进部门) ∧ EnhanceLawfulAwareness(中国联通通信) ∧ JointlyMaintainNetworkSecurity(省级人民政府) ∧ JointlyMaintainNetworkSecurity(省经济促进部门) ∧ JointlyMaintainNetworkSecurity(中国联通通信))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“市级人民政府” — 表示市级人民政府\",\n            \"e=“市经济促进部门” — 表示市经济促进部门\",\n            \"t=“中国电信通信” — 表示中国电信通信运营企业\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀e∀t (Government(市级人民政府) ∨ EconomicPromotionDepartment(市经济促进部门) ∨ BasicTelecomOperator(中国电信通信) → ProvideCommunicationSafetyEducation(市级人民政府) ∧ ProvideCommunicationSafetyEducation(市经济促进部门) ∧ ProvideCommunicationSafetyEducation(中国电信通信) ∧ EnhanceLawfulAwareness(市级人民政府) ∧ EnhanceLawfulAwareness(市经济促进部门) ∧ EnhanceLawfulAwareness(中国电信通信) ∧ JointlyMaintainNetworkSecurity(市级人民政府) ∧ JointlyMaintainNetworkSecurity(市经济促进部门) ∧ JointlyMaintainNetworkSecurity(中国电信通信))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“县级人民政府” — 表示县级人民政府\",\n            \"e=“县经济促进部门” — 表示县经济促进部门\",\n            \"t=“中国铁塔通信” — 表示中国铁塔通信运营企业\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀e∀t (Government(县级人民政府) ∨ EconomicPromotionDepartment(县经济促进部门) ∨ BasicTelecomOperator(中国铁塔通信) → ProvideCommunicationSafetyEducation(县级人民政府) ∧ ProvideCommunicationSafetyEducation(县经济促进部门) ∧ ProvideCommunicationSafetyEducation(中国铁塔通信) ∧ EnhanceLawfulAwareness(县级人民政府) ∧ EnhanceLawfulAwareness(县经济促进部门) ∧ EnhanceLawfulAwareness(中国铁塔通信) ∧ JointlyMaintainNetworkSecurity(县级人民政府) ∧ JointlyMaintainNetworkSecurity(县经济促进部门) ∧ JointlyMaintainNetworkSecurity(中国铁塔通信))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“工业和信息化部” — 表示工业和信息化部\",\n            \"p=“通信保障人员” — 表示相关通信保障人员\",\n            \"Technology=“5G技术” — 表示通信保障人员参加的新技术培训为5G技术\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀p (DevelopTrainingPlan(工业和信息化部, p) ∧ OrganizeTraining(工业和信息化部, p) → (ParticipateInTraining(p, 5G技术) ∨ ParticipateInTraining(p, 新产品)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“工业和信息化部” — 表示工业和信息化部\",\n            \"p=“通信保障人员” — 表示相关通信保障人员\",\n            \"Technology=“卫星通信” — 表示通信保障人员参加的新技术培训为卫星通信\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀p (DevelopTrainingPlan(工业和信息化部, p) ∧ OrganizeTraining(工业和信息化部, p) → (ParticipateInTraining(p, 卫星通信) ∨ ParticipateInTraining(p, 新产品)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“工业和信息化部” — 表示工业和信息化部\",\n            \"p=“通信保障人员” — 表示相关通信保障人员\",\n            \"Technology=“量子通信” — 表示通信保障人员参加的新技术培训为量子通信\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀p (DevelopTrainingPlan(工业和信息化部, p) ∧ OrganizeTraining(工业和信息化部, p) → (ParticipateInTraining(p, 量子通信) ∨ ParticipateInTraining(p, 新产品)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“工业和信息化部” — 表示工业和信息化部\"\n        ],\n        \"instance_logicexpression\": [\n            \"TrackTechnologicalDevelopment(工业和信息化部) → UpdateFacilitiesAndTechnologyLevel(工业和信息化部)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“工业和信息化部” — 表示工业和信息化部\",\n            \"p=“通信保障应急预案” — 表示通信保障应急预案\",\n            \"t=“2024年” — 表示时间是2024年\"\n        ],\n        \"instance_logicexpression\": [\n            \"DevelopExercise(工业和信息化部, 通信保障应急预案) ∧ HostExercise(工业和信息化部, 综合演练) → ∃t (每年(2024年) ∧ 至少一次(2024年, 综合演练))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“中国移动” — 表示基础电信运营企业为中国移动\",\n            \"t=“2024年第一季度” — 表示时间是2024年第一季度\",\n            \"l=“应急通信保障水平” — 表示提高的应急通信保障水平\"\n        ],\n        \"instance_logicexpression\": [\n            \"基础电信运营企业(中国移动) → (∃t (举办演练(中国移动, 专项演练) ∧ ∃l (ImproveLevel(中国移动, 应急通信保障水平))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“中国联通” — 表示基础电信运营企业为中国联通\",\n            \"t=“2024年第二季度” — 表示时间是2024年第二季度\",\n            \"l=“应急通信保障水平” — 表示提高的应急通信保障水平\"\n        ],\n        \"instance_logicexpression\": [\n            \"基础电信运营企业(中国联通) → (∃t (举办演练(中国联通, 专项演练) ∧ ∃l (ImproveLevel(中国联通, 应急通信保障水平))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“中国电信” — 表示基础电信运营企业为中国电信\",\n            \"t=“2024年第三季度” — 表示时间是2024年第三季度\",\n            \"l=“应急通信保障水平” — 表示提高的应急通信保障水平\"\n        ],\n        \"instance_logicexpression\": [\n            \"基础电信运营企业(中国电信) → (∃t (举办演练(中国电信, 专项演练) ∧ ∃l (ImproveLevel(中国电信, 应急通信保障水平))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“中国铁塔” — 表示基础电信运营企业为中国铁塔\",\n            \"t=“2024年第四季度” — 表示时间是2024年第四季度\",\n            \"l=“应急通信保障水平” — 表示提高的应急通信保障水平\"\n        ],\n        \"instance_logicexpression\": [\n            \"基础电信运营企业(中国铁塔) → (∃t (举办演练(中国铁塔, 专项演练) ∧ ∃l (ImproveLevel(中国铁塔, 应急通信保障水平))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“国家海洋局办公室” — 表示局办公室负责应急响应\",\n            \"e=“国务院应急管理部” — 表示相关部门为国务院应急管理部\",\n            \"g=“国务院” — 表示上报信息的对象为国务院\",\n            \"Disaster=“海啸” — 表示发生社会影响巨大的海洋灾害为海啸\"\n        ],\n        \"instance_logicexpression\": [\n            \"应急响应启动(国家海洋局办公室) → (EmergencyDuty(国家海洋局办公室) ∧ 相关部门(国务院应急管理部) ∨ 局属单位(国务院应急管理部) → MessageExchange(国家海洋局办公室, 国务院应急管理部))\",\n            \"应急响应启动(国家海洋局办公室) → 国务院(国务院) → ReportInformation(国家海洋局办公室, 国务院, 海洋局值班信息)\",\n            \"MarineDisaster(海啸) → ContactMedia(国家海洋局办公室, 中央媒体)\",\n            \"MarineDisaster(海啸) → GuidePublicOpinion(国家海洋局办公室, 中央媒体, 公众)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家海洋局办公室” — 表示局办公室负责应急响应\",\n            \"e=“国家海洋预报中心” — 表示局属单位为国家海洋预报中心\",\n            \"g=“国务院” — 表示上报信息的对象为国务院\",\n            \"Disaster=“赤潮” — 表示发生社会影响巨大的海洋灾害为赤潮\"\n        ],\n        \"instance_logicexpression\": [\n            \"应急响应启动(国家海洋局办公室) → (EmergencyDuty(国家海洋局办公室) ∧ 相关部门(国家海洋预报中心) ∨ 局属单位(国家海洋预报中心) → MessageExchange(国家海洋局办公室, 国家海洋预报中心))\",\n            \"应急响应启动(国家海洋局办公室) → 国务院(国务院) → ReportInformation(国家海洋局办公室, 国务院, 海洋局值班信息)\",\n            \"MarineDisaster(赤潮) → ContactMedia(国家海洋局办公室, 中央媒体)\",\n            \"MarineDisaster(赤潮) → GuidePublicOpinion(国家海洋局办公室, 中央媒体, 公众)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家海洋局办公室” — 表示局办公室负责应急响应\",\n            \"e=“国家海洋环境预报中心” — 表示相关部门为国家海洋环境预报中心\",\n            \"g=“国务院” — 表示上报信息的对象为国务院\",\n            \"Disaster=“油污泄漏” — 表示发生社会影响巨大的海洋灾害为油污泄漏\"\n        ],\n        \"instance_logicexpression\": [\n            \"应急响应启动(国家海洋局办公室) → (EmergencyDuty(国家海洋局办公室) ∧ 相关部门(国家海洋环境预报中心) ∨ 局属单位(国家海洋环境预报中心) → MessageExchange(国家海洋局办公室, 国家海洋环境预报中心))\",\n            \"应急响应启动(国家海洋局办公室) → 国务院(国务院) → ReportInformation(国家海洋局办公室, 国务院, 海洋局值班信息)\",\n            \"MarineDisaster(油污泄漏) → ContactMedia(国家海洋局办公室, 中央媒体)\",\n            \"MarineDisaster(油污泄漏) → GuidePublicOpinion(国家海洋局办公室, 中央媒体, 公众)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Department=“局减灾司” — 表示国家海洋局预报减灾司\",\n            \"Type=“风暴潮” — 表示风暴潮灾害应急预案\",\n            \"Type=“海浪” — 表示海浪灾害应急预案\",\n            \"Type=“海啸” — 表示海啸灾害应急预案\",\n            \"Type=“海冰” — 表示海冰灾害应急预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"ResponsibleForEmergencyPlan(“局减灾司”, 风暴潮) ∧ ResponsibleForEmergencyPlan(“局减灾司”, 海浪) ∧ ResponsibleForEmergencyPlan(“局减灾司”, 海啸) ∧ ResponsibleForEmergencyPlan(“局减灾司”, 海冰)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“局减灾司” — 表示国家海洋局预报减灾司\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishWarningSystem(“局减灾司”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“局减灾司” — 表示国家海洋局预报减灾司\"\n        ],\n        \"instance_logicexpression\": [\n            \"AssessEmergencyLevel(“局减灾司”) ∧ CarryOutAdministrativeDeployment(“局减灾司”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“局减灾司” — 表示国家海洋局预报减灾司\",\n            \"Activity=“海洋观测” — 表示海洋观测活动\",\n            \"Activity=“预警” — 表示预警活动\",\n            \"Activity=“灾害调查评估” — 表示灾害调查评估活动\"\n        ],\n        \"instance_logicexpression\": [\n            \"SuperviseManagement(“局减灾司”, 海洋观测) ∧ SuperviseManagement(“局减灾司”, 预警) ∧ SuperviseManagement(“局减灾司”, 灾害调查评估)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“局减灾司” — 表示国家海洋局预报减灾司\",\n            \"Level=“I级” — 表示Ⅰ级应急响应\"\n        ],\n        \"instance_logicexpression\": [\n            \"ConductInvestigationAssessment(“局减灾司”, I级)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“局国际司” — 表示国家海洋局国际合作司\",\n            \"r=“香港” — 表示香港地区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀r (TsunamiEmergencyResponse(香港) → (ResponsibleForCoordination(局国际司, 香港) ∧ InformationCommunication(局国际司, 香港)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“局国际司” — 表示国家海洋局国际合作司\",\n            \"r=“澳门” — 表示澳门地区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀r (TsunamiEmergencyResponse(澳门) → (ResponsibleForCoordination(局国际司, 澳门) ∧ InformationCommunication(局国际司, 澳门)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“局国际司” — 表示国家海洋局国际合作司\",\n            \"r=“台湾” — 表示台湾地区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀r (TsunamiEmergencyResponse(台湾) → (ResponsibleForCoordination(局国际司, 台湾) ∧ InformationCommunication(局国际司, 台湾)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“国家海洋局东海分局” — 表示国家海洋局东海分局\",\n            \"a=“东海区应急期间海洋观测预警和灾害调查” — 表示东海区应急期间的海洋观测、预警和灾害调查工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"分局(国家海洋局东海分局) → Supervise(国家海洋局东海分局, 东海区应急期间海洋观测预警和灾害调查)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家海洋局南海分局” — 表示国家海洋局南海分局\",\n            \"s=“国家海洋局南海分局中心站” — 表示国家海洋局南海分局中心站\",\n            \"a=“南海区应急观测” — 表示南海区的应急观测活动\"\n        ],\n        \"instance_logicexpression\": [\n            \"分局(国家海洋局南海分局) → EmergencyObservation(国家海洋局南海分局中心站, 南海区应急观测)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家海洋局北海分局” — 表示国家海洋局北海分局\",\n            \"i=“国家海洋局北海分局预报中心” — 表示国家海洋局北海分局预报中心\",\n            \"a=“北海区海洋灾害警报” — 表示北海区的海洋灾害警报\"\n        ],\n        \"instance_logicexpression\": [\n            \"分局(国家海洋局北海分局) ∧ 预报机构(国家海洋局北海分局预报中心) → IssueAlert(国家海洋局北海分局预报中心, 北海区海洋灾害警报)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家海洋局黄海分局” — 表示国家海洋局黄海分局\",\n            \"i=“国家海洋局黄海分局预报中心” — 表示国家海洋局黄海分局预报中心\",\n            \"s=“黄海区海洋灾害应急决策服务和业务咨询” — 表示黄海区的海洋灾害应急决策服务和业务咨询\",\n            \"r=“黄海区相关政府和企事业单位” — 表示黄海区内的相关政府和企事业单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"分局(国家海洋局黄海分局) ∧ 预报机构(国家海洋局黄海分局预报中心) → ProvideService(国家海洋局黄海分局预报中心, 黄海区海洋灾害应急决策服务和业务咨询, 黄海区相关政府和企事业单位)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家海洋局东海分局” — 表示国家海洋局东海分局\"\n        ],\n        \"instance_logicexpression\": [\n            \"分局(国家海洋局东海分局) → DisasterInvestigation(海洋灾害调查评估(国家海洋局东海分局))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Center=“国家海洋局海洋减灾中心” — 表示减灾中心为国家海洋局海洋减灾中心\",\n            \"Level=“一级应急响应” — 表示应急响应级别为一级\"\n        ],\n        \"instance_logicexpression\": [\n            \"ParticipateInAssessment(国家海洋局海洋减灾中心, 一级应急响应)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Center=“国家海洋局海洋减灾中心” — 表示减灾中心为国家海洋局海洋减灾中心\",\n            \"Business=“海洋灾情调查评估” — 表示业务为海洋灾情调查评估\"\n        ],\n        \"instance_logicexpression\": [\n            \"ConductBusiness(国家海洋局海洋减灾中心, 海洋灾情调查评估)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Center=“国家海洋局海洋减灾中心” — 表示减灾中心为国家海洋局海洋减灾中心\",\n            \"Statistics=“海洋灾情统计” — 表示统计数据为海洋灾情统计\",\n            \"Product=“灾情分析产品” — 表示产品为灾情分析产品\"\n        ],\n        \"instance_logicexpression\": [\n            \"ResponsibleForStatistics(国家海洋局海洋减灾中心, 海洋灾情统计) ∧ ProduceProduct(国家海洋局海洋减灾中心, 灾情分析产品)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Center=“国家海洋局海洋减灾中心” — 表示减灾中心为国家海洋局海洋减灾中心\",\n            \"Service=“海洋减灾决策服务” — 表示服务为海洋减灾决策服务\"\n        ],\n        \"instance_logicexpression\": [\n            \"ProvideService(国家海洋局海洋减灾中心, 海洋减灾决策服务)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Center=“国家海洋局海洋减灾中心” — 表示减灾中心为国家海洋局海洋减灾中心\",\n            \"Service=“业务咨询” — 表示服务为业务咨询\"\n        ],\n        \"instance_logicexpression\": [\n            \"ProvideService(国家海洋局海洋减灾中心, 业务咨询)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Organization=“国家海洋环境监测中心” — 表示监测中心负责运行管理\",\n            \"Station=“鲅鱼圈岸基测冰雷达站” — 表示站点为鲅鱼圈岸基测冰雷达站\"\n        ],\n        \"instance_logicexpression\": [\n            \"Manage(“国家海洋环境监测中心”, “鲅鱼圈岸基测冰雷达站”) ∧ ConductObservation(“国家海洋环境监测中心”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“国家海洋环境监测中心” — 表示监测中心负责提供资料\",\n            \"Data=“雷达观测分析处理资料” — 表示数据为雷达观测分析处理资料\",\n            \"Period=“2023年冬季” — 表示海冰灾害发生的时间段为2023年冬季\"\n        ],\n        \"instance_logicexpression\": [\n            \"IceDisaster(“2023年冬季”) → ProvideData(“国家海洋环境监测中心”, “雷达观测分析处理资料”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“国家海洋环境监测中心” — 表示监测中心负责运行管理\",\n            \"Station=“鲅鱼圈岸基测冰雷达站” — 表示站点为鲅鱼圈岸基测冰雷达站\"\n        ],\n        \"instance_logicexpression\": [\n            \"Manage(“国家海洋环境监测中心”, “鲅鱼圈岸基测冰雷达站”) ∧ ConductObservation(“国家海洋环境监测中心”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“国家海洋环境监测中心” — 表示监测中心负责提供资料\",\n            \"Data=“雷达观测分析处理资料” — 表示数据为雷达观测分析处理资料\",\n            \"Period=“2024年春季” — 表示海冰灾害发生的时间段为2024年春季\"\n        ],\n        \"instance_logicexpression\": [\n            \"IceDisaster(“2024年春季”) → ProvideData(“国家海洋环境监测中心”, “雷达观测分析处理资料”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“国家卫星海洋应用中心” — 表示中心为国家卫星海洋应用中心\",\n            \"i=“国家海洋预报中心” — 表示机构为国家海洋预报中心\",\n            \"d=“台风卫星图像” — 表示资料为台风卫星图像\",\n            \"Period=“2023-04-01至2023-04-30” — 表示海洋灾害发生期间为2023年4月\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀i ∀d (Center(“国家卫星海洋应用中心”, 卫星中心) ∧ Institution(“国家海洋预报中心”, 海洋预报机构) ∧ MarineDisaster(“2023-04-01至2023-04-30”) ∧ SatelliteRemoteSensingAnalysis(“台风卫星图像”) ∧ RealTimeData(“台风卫星图像”) → ProvideData(“国家卫星海洋应用中心”, “国家海洋预报中心”, “台风卫星图像”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“国家卫星海洋应用中心” — 表示中心为国家卫星海洋应用中心\",\n            \"i=“东海区海洋预报中心” — 表示机构为东海区海洋预报中心\",\n            \"d=“赤潮监测数据” — 表示资料为赤潮监测数据\",\n            \"Period=“2023-07-15至2023-08-15” — 表示海洋灾害发生期间为2023年7月中旬至8月中旬\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀i ∀d (Center(“国家卫星海洋应用中心”, 卫星中心) ∧ Institution(“东海区海洋预报中心”, 海洋预报机构) ∧ MarineDisaster(“2023-07-15至2023-08-15”) ∧ SatelliteRemoteSensingAnalysis(“赤潮监测数据”) ∧ RealTimeData(“赤潮监测数据”) → ProvideData(“国家卫星海洋应用中心”, “东海区海洋预报中心”, “赤潮监测数据”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“国家卫星海洋应用中心” — 表示中心为国家卫星海洋应用中心\",\n            \"i=“广东省海洋预报中心” — 表示机构为广东省海洋预报中心\",\n            \"d=“海浪预警信息” — 表示资料为海浪预警信息\",\n            \"Period=“2023-09-01至2023-09-30” — 表示海洋灾害发生期间为2023年9月\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀i ∀d (Center(“国家卫星海洋应用中心”, 卫星中心) ∧ Institution(“广东省海洋预报中心”, 海洋预报机构) ∧ MarineDisaster(“2023-09-01至2023-09-30”) ∧ SatelliteRemoteSensingAnalysis(“海浪预警信息”) ∧ RealTimeData(“海浪预警信息”) → ProvideData(“国家卫星海洋应用中心”, “广东省海洋预报中心”, “海浪预警信息”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“国家卫星海洋应用中心” — 表示中心为国家卫星海洋应用中心\",\n            \"i=“北海区海洋预报中心” — 表示机构为北海区海洋预报中心\",\n            \"d=“海冰覆盖图” — 表示资料为海冰覆盖图\",\n            \"Period=“2023-12-01至2023-12-31” — 表示海洋灾害发生期间为2023年12月\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀i ∀d (Center(“国家卫星海洋应用中心”, 卫星中心) ∧ Institution(“北海区海洋预报中心”, 海洋预报机构) ∧ MarineDisaster(“2023-12-01至2023-12-31”) ∧ SatelliteRemoteSensingAnalysis(“海冰覆盖图”) ∧ RealTimeData(“海冰覆盖图”) → ProvideData(“国家卫星海洋应用中心”, “北海区海洋预报中心”, “海冰覆盖图”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“热带气旋” — 表示灾害性天气为热带气旋\",\n            \"e=“局部海面异常升高” — 表示局部海面振荡或非周期性异常升高现象\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterWeather(“热带气旋”) → StormSurge(“热带气旋”, “局部海面异常升高”)\",\n            \"∀s1 ∀s2 ∀n (StormSurge(s1) ∧ AstronomicalTide(s2) ∧ NearshoreWave(n) → StormSurgeDisaster(s1, s2, n))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“温带气旋” — 表示灾害性天气为温带气旋\",\n            \"e=“局部海面异常降低” — 表示局部海面振荡或非周期性异常降低现象\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterWeather(“温带气旋”) → StormSurge(“温带气旋”, “局部海面异常降低”)\",\n            \"∀s1 ∀s2 ∀n (StormSurge(s1) ∧ AstronomicalTide(s2) ∧ NearshoreWave(n) → StormSurgeDisaster(s1, s2, n))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“海上飑线” — 表示灾害性天气为海上飑线\",\n            \"e=“局部海面振荡” — 表示局部海面振荡现象\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterWeather(“海上飑线”) → StormSurge(“海上飑线”, “局部海面振荡”)\",\n            \"∀s1 ∀s2 ∀n (StormSurge(s1) ∧ AstronomicalTide(s2) ∧ NearshoreWave(n) → StormSurgeDisaster(s1, s2, n))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s1=“热带气旋引起的风暴潮” — 表示由热带气旋引起的风暴潮\",\n            \"s2=“天文潮” — 表示天文潮\",\n            \"n=“近岸海浪” — 表示近岸海浪\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀e (DisasterWeather(c) → StormSurge(c, e))\",\n            \"StormSurge(“热带气旋引起的风暴潮”) ∧ AstronomicalTide(“天文潮”) ∧ NearshoreWave(“近岸海浪”) → StormSurgeDisaster(“热带气旋引起的风暴潮”, “天文潮”, “近岸海浪”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“海底地震” — 表示海啸由海底地震产生\",\n            \"w=“特大海洋长波1” — 表示由海底地震产生的特大海洋长波\",\n            \"a=“海岸地带A” — 表示特大海洋长波袭击的海岸地带\"\n        ],\n        \"instance_logicexpression\": [\n            \"海底地震(海底地震) ∨ 海底火山爆发(海底地震) ∨ 海岸山体滑坡(海底地震) ∨ 海底滑坡(海底地震) → TsunamiCaused(海底地震)\",\n            \"TsunamiCaused(特大海洋长波1) → OceanWave(特大海洋长波1)\",\n            \"OceanWave(特大海洋长波1) ∧ 海上或海岸地带(海岸地带A) → Attack(特大海洋长波1, 海岸地带A)\",\n            \"Attack(特大海洋长波1, 海岸地带A) → TsunamiDisaster(海岸地带A)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“海底火山爆发” — 表示海啸由海底火山爆发产生\",\n            \"w=“特大海洋长波2” — 表示由海底火山爆发产生的特大海洋长波\",\n            \"a=“海上区域B” — 表示特大海洋长波袭击的海上区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"海底地震(海底火山爆发) ∨ 海底火山爆发(海底火山爆发) ∨ 海岸山体滑坡(海底火山爆发) ∨ 海底滑坡(海底火山爆发) → TsunamiCaused(海底火山爆发)\",\n            \"TsunamiCaused(特大海洋长波2) → OceanWave(特大海洋长波2)\",\n            \"OceanWave(特大海洋长波2) ∧ 海上或海岸地带(海上区域B) → Attack(特大海洋长波2, 海上区域B)\",\n            \"Attack(特大海洋长波2, 海上区域B) → TsunamiDisaster(海上区域B)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“海岸山体滑坡” — 表示海啸由海岸山体滑坡产生\",\n            \"w=“特大海洋长波3” — 表示由海岸山体滑坡产生的特大海洋长波\",\n            \"a=“岛屿区域C” — 表示特大海洋长波袭击的岛屿区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"海底地震(海岸山体滑坡) ∨ 海底火山爆发(海岸山体滑坡) ∨ 海岸山体滑坡(海岸山体滑坡) ∨ 海底滑坡(海岸山体滑坡) → TsunamiCaused(海岸山体滑坡)\",\n            \"TsunamiCaused(特大海洋长波3) → OceanWave(特大海洋长波3)\",\n            \"OceanWave(特大海洋长波3) ∧ 海上或海岸地带(岛屿区域C) → Attack(特大海洋长波3, 岛屿区域C)\",\n            \"Attack(特大海洋长波3, 岛屿区域C) → TsunamiDisaster(岛屿区域C)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“海底滑坡” — 表示海啸由海底滑坡产生\",\n            \"w=“特大海洋长波4” — 表示由海底滑坡产生的特大海洋长波\",\n            \"a=“沿海城市D” — 表示特大海洋长波袭击的沿海城市\"\n        ],\n        \"instance_logicexpression\": [\n            \"海底地震(海底滑坡) ∨ 海底火山爆发(海底滑坡) ∨ 海岸山体滑坡(海底滑坡) ∨ 海底滑坡(海底滑坡) → TsunamiCaused(海底滑坡)\",\n            \"TsunamiCaused(特大海洋长波4) → OceanWave(特大海洋长波4)\",\n            \"OceanWave(特大海洋长波4) ∧ 海上或海岸地带(沿海城市D) → Attack(特大海洋长波4, 沿海城市D)\",\n            \"Attack(特大海洋长波4, 沿海城市D) → TsunamiDisaster(沿海城市D)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“咸水冰” — 表示由海水冻结而成的冰\",\n            \"IceType=“咸水冰”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (IceFormation(咸水冰) ∧ (咸水冰 = 咸水冰 ∨ Includes(咸水冰, 河冰) ∨ Includes(咸水冰, 冰山)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“河冰” — 表示流入海洋的河冰\",\n            \"IncludedType=“河冰”\",\n            \"IceType=“海冰”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (IceFormation(海冰) ∧ (海冰 = 咸水冰 ∨ Includes(海冰, 河冰) ∨ Includes(海冰, 冰山)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“冰山” — 表示流入海洋的冰山\",\n            \"IncludedType=“冰山”\",\n            \"IceType=“海冰”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (IceFormation(海冰) ∧ (海冰 = 咸水冰 ∨ Includes(海冰, 河冰) ∨ Includes(海冰, 冰山)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“咸水冰” — 表示由海水冻结而成的冰\",\n            \"t=“海上交通运输” — 表示海冰对海上交通运输的影响\",\n            \"ImpactType=“海上交通运输”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i ∀t (IceFormation(咸水冰) → (CausesImpact(咸水冰, 海上交通运输) → IceDisaster(咸水冰, 海上交通运输)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“河冰” — 表示流入海洋的河冰\",\n            \"t=“生产作业” — 表示海冰对生产作业的影响\",\n            \"ImpactType=“生产作业”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i ∀t (IceFormation(河冰) → (CausesImpact(河冰, 生产作业) → IceDisaster(河冰, 生产作业)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“冰山” — 表示流入海洋的冰山\",\n            \"t=“海上设施” — 表示海冰对海上设施的影响\",\n            \"ImpactType=“海上设施”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i ∀t (IceFormation(冰山) → (CausesImpact(冰山, 海上设施) → IceDisaster(冰山, 海上设施)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“咸水冰” — 表示由海水冻结而成的冰\",\n            \"t=“海岸工程” — 表示海冰对海岸工程的影响\",\n            \"ImpactType=“海岸工程”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i ∀t (IceFormation(咸水冰) → (CausesImpact(咸水冰, 海岸工程) → IceDisaster(咸水冰, 海岸工程)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“沿海区域A” — 表示受影响的区域为沿海区域A\",\n            \"s=“热带气旋2018” — 表示影响沿海区域A的天气系统为热带气旋2018\",\n            \"t=“验潮站X” — 表示有代表性的验潮站为验潮站X\",\n            \"HighTideReachesAlert(验潮站X, BlueAlertTideLevel) — 表示验潮站X的高潮位达到蓝色警戒潮位\"\n        ],\n        \"instance_logicexpression\": [\n            \"AffectedBy(沿海区域A, 热带气旋2018) ∧ TideStation(验潮站X) ∧ HighTideReachesAlert(验潮站X, BlueAlertTideLevel) → StormSurgeAlert(沿海区域A)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“沿海区域B” — 表示受影响的区域为沿海区域B\",\n            \"TropicalCycloneLanding(沿海区域B) — 表示热带气旋预计在未来24小时内登陆沿海区域B\"\n        ],\n        \"instance_logicexpression\": [\n            \"TropicalCycloneLanding(沿海区域B) → StormSurgeAlert(沿海区域B)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“沿海区域C” — 表示受影响的区域为沿海区域C\",\n            \"TropicalCycloneDistance(50) — 表示热带气旋中心位置离岸的距离为50公里\",\n            \"t=“验潮站Y” — 表示有代表性的验潮站为验潮站Y\",\n            \"¬HighTideReachesAlert(验潮站Y, BlueAlertTideLevel) — 表示验潮站Y的高潮位未达到蓝色警戒潮位\"\n        ],\n        \"instance_logicexpression\": [\n            \"TropicalCycloneDistance(50) ∧ TideStation(验潮站Y) ∧ ¬HighTideReachesAlert(验潮站Y, BlueAlertTideLevel) → StormSurgeAlert(沿海区域C)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“沿海城市A” — 表示沿海城市A受到热带气旋的影响\",\n            \"s=“验站1” — 表示沿海城市A内有代表性的验站1\",\n            \"st=“验站1”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∃s (AffectedBy(沿海城市A, TropicalCyclone) ∨ AffectedBy(沿海城市A, TemperateSystem) → (∃st Station(沿海城市A) ∧ HighTideReachesWarningLevel(验站1) → IssueStormSurgeYellowAlert()))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“沿海城市B” — 表示沿海城市B受到温带天气系统的影响\",\n            \"s=“验站2” — 表示沿海城市B内有代表性的验站2\",\n            \"st=“验站2”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∃s (AffectedBy(沿海城市B, TropicalCyclone) ∨ AffectedBy(沿海城市B, TemperateSystem) → (∃st Station(沿海城市B) ∧ HighTideReachesWarningLevel(验站2) → IssueStormSurgeYellowAlert()))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“沿海城市C” — 表示沿海城市C同时受到热带气旋和温带天气系统的影响\",\n            \"s=“验站3” — 表示沿海城市C内有代表性的验站3\",\n            \"st=“验站3”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∃s (AffectedBy(沿海城市C, TropicalCyclone) ∨ AffectedBy(沿海城市C, TemperateSystem) → (∃st Station(沿海城市C) ∧ HighTideReachesWarningLevel(验站3) → IssueStormSurgeYellowAlert()))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“沿海城市D” — 表示沿海城市D受到温带天气系统的影响\",\n            \"s=“验站4” — 表示沿海城市D内有代表性的验站4\",\n            \"st=“验站4”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∃s (AffectedBy(沿海城市D, TropicalCyclone) ∨ AffectedBy(沿海城市D, TemperateSystem) → (∃st Station(沿海城市D) ∧ HighTideReachesWarningLevel(验站4) → IssueStormSurgeYellowAlert()))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“沿海城市A” — 表示受影响的区域为沿海城市A\",\n            \"s=“热带气旋X” — 表示影响沿海城市A的天气系统为热带气旋X\",\n            \"t1=“验潮站1” — 表示沿海城市A内的一个验潮站\",\n            \"t2=“验潮站2” — 表示沿海城市A内的另一个验潮站\",\n            \"TideLevel=“1.5米” — 表示橙色警戒潮位的高度\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∃s (AffectedBy(沿海城市A, 热带气旋X) ∨ AffectedBy(沿海城市A, TemperateSystem) → (∃t1 TideGaugeStation(验潮站1) ∧ HighTideReached(验潮站1, 1.5米) ∧ ∀t2 (TideGaugeStation(验潮站2) → (HighTideReached(验潮站1, 1.5米) → HighTideReached(验潮站2, 1.5米))) → IssueAlert(沿海城市A, OrangeAlert))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“沿海城市B” — 表示受影响的区域为沿海城市B\",\n            \"s=“温带天气系统Y” — 表示影响沿海城市B的天气系统为温带天气系统Y\",\n            \"t1=“验潮站3” — 表示沿海城市B内的一个验潮站\",\n            \"t2=“验潮站4” — 表示沿海城市B内的另一个验潮站\",\n            \"TideLevel=“1.8米” — 表示橙色警戒潮位的高度\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∃s (AffectedBy(沿海城市B, 热带气旋X) ∨ AffectedBy(沿海城市B, 温带天气系统Y) → (∃t1 TideGaugeStation(验潮站3) ∧ HighTideReached(验潮站3, 1.8米) ∧ ∀t2 (TideGaugeStation(验潮站4) → (HighTideReached(验潮站3, 1.8米) → HighTideReached(验潮站4, 1.8米))) → IssueAlert(沿海城市B, OrangeAlert))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“沿海城市A” — 表示受影响的区域为沿海城市A\",\n            \"s=“热带气旋X” — 表示受影响的系统为热带气旋X\",\n            \"t=“验潮站1” — 表示有代表性的验潮站为验潮站1\",\n            \"TideLevel=“4.5米” — 表示达到红色警戒的潮位为4.5米\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∃s (AffectedBy(沿海城市A, 热带气旋X) ∨ AffectedBy(沿海城市A, TemperateSystem) → (∃t (TideStation(验潮站1) ∧ HighTideReached(验潮站1, 4.5米) ∧ ∀o (TideStation(o) → (HighTideReached(o, 4.5米) → o = 验潮站1 ∨ ¬TideStation(o))) → IssueRedAlert(沿海城市A)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“沿海城市B” — 表示受影响的区域为沿海城市B\",\n            \"s=“温带天气系统Y” — 表示受影响的系统为温带天气系统Y\",\n            \"t=“验潮站2” — 表示有代表性的验潮站为验潮站2\",\n            \"TideLevel=“5.0米” — 表示达到红色警戒的潮位为5.0米\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∃s (AffectedBy(沿海城市B, TropicalCyclone) ∨ AffectedBy(沿海城市B, 温带天气系统Y) → (∃t (TideStation(验潮站2) ∧ HighTideReached(验潮站2, 5.0米) ∧ ∀o (TideStation(o) → (HighTideReached(o, 5.0米) → o = 验潮站2 ∨ ¬TideStation(o))) → IssueRedAlert(沿海城市B)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“沿海城市C” — 表示受影响的区域为沿海城市C\",\n            \"s=“热带气旋Z” — 表示受影响的系统为热带气旋Z\",\n            \"t=“验潮站3” — 表示有代表性的验潮站为验潮站3\",\n            \"TideLevel=“4.8米” — 表示达到红色警戒的潮位为4.8米\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∃s (AffectedBy(沿海城市C, 热带气旋Z) ∨ AffectedBy(沿海城市C, TemperateSystem) → (∃t (TideStation(验潮站3) ∧ HighTideReached(验潮站3, 4.8米) ∧ ∀o (TideStation(o) → (HighTideReached(o, 4.8米) → o = 验潮站3 ∨ ¬TideStation(o))) → IssueRedAlert(沿海城市C)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“东海海域” — 表示东海海域受到天气系统的影响\",\n            \"s=“热带气旋” — 表示影响天气系统为热带气旋\",\n            \"t=“未来24小时” — 表示预计的时间范围为未来24小时\",\n            \"h=3.0m — 表示预计的有效波高为3.0米\"\n        ],\n        \"instance_logicexpression\": [\n            \"AffectedBy(东海海域, 热带气旋) ∧ Forecast(东海海域, 未来24小时, 3.0m) ∧ 2.5 < 3.0 ∧ 3.0 < 3.5 → IssueAlert(东海海域, 'BlueWaveAlert')\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“南海海域” — 表示南海海域受到天气系统的影响\",\n            \"s=“温带天气系统” — 表示影响天气系统为温带天气系统\",\n            \"t=“未来24小时” — 表示预计的时间范围为未来24小时\",\n            \"h=2.8m — 表示预计的有效波高为2.8米\"\n        ],\n        \"instance_logicexpression\": [\n            \"AffectedBy(南海海域, 温带天气系统) ∧ Forecast(南海海域, 未来24小时, 2.8m) ∧ 2.5 < 2.8 ∧ 2.8 < 3.5 → IssueAlert(南海海域, 'BlueWaveAlert')\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“黄海海域” — 表示黄海海域受到天气系统的影响\",\n            \"s=“热带气旋” — 表示影响天气系统为热带气旋\",\n            \"t=“未来24小时” — 表示预计的时间范围为未来24小时\",\n            \"h=3.2m — 表示预计的有效波高为3.2米\"\n        ],\n        \"instance_logicexpression\": [\n            \"AffectedBy(黄海海域, 热带气旋) ∧ Forecast(黄海海域, 未来24小时, 3.2m) ∧ 2.5 < 3.2 ∧ 3.2 < 3.5 → IssueAlert(黄海海域, 'BlueWaveAlert')\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“渤海海域” — 表示渤海海域受到天气系统的影响\",\n            \"s=“温带天气系统” — 表示影响天气系统为温带天气系统\",\n            \"t=“未来24小时” — 表示预计的时间范围为未来24小时\",\n            \"h=2.7m — 表示预计的有效波高为2.7米\"\n        ],\n        \"instance_logicexpression\": [\n            \"AffectedBy(渤海海域, 温带天气系统) ∧ Forecast(渤海海域, 未来24小时, 2.7m) ∧ 2.5 < 2.7 ∧ 2.7 < 3.5 → IssueAlert(渤海海域, 'BlueWaveAlert')\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“东海海域” — 表示东海海域受到热带气旋的影响\",\n            \"s=“热带气旋” — 表示影响系统为热带气旋\",\n            \"h=4.0 — 表示有效波高为4.0米\"\n        ],\n        \"instance_logicexpression\": [\n            \"Affected(“东海海域”, “热带气旋”) ∧ (CoastalArea(“东海海域”) ∧ (WaveHeight(“东海海域”, 4.0) ∧ 3.5 < 4.0 ∧ 4.0 < 4.5)) → IssueWarning(“东海海域”, '黄色警报')\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“南海近海” — 表示南海近海受到温带天气系统的影响\",\n            \"s=“温带天气系统” — 表示影响系统为温带天气系统\",\n            \"h=7.0 — 表示有效波高为7.0米\"\n        ],\n        \"instance_logicexpression\": [\n            \"Affected(“南海近海”, “温带天气系统”) ∧ (OffshoreArea(“南海近海”) ∧ (WaveHeight(“南海近海”, 7.0) ∧ 6.0 < 7.0 ∧ 7.0 < 9.0)) → IssueWarning(“南海近海”, '黄色警报')\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“黄海近岸” — 表示黄海近岸受到热带气旋的影响\",\n            \"s=“热带气旋” — 表示影响系统为热带气旋\",\n            \"h=3.8 — 表示有效波高为3.8米\"\n        ],\n        \"instance_logicexpression\": [\n            \"Affected(“黄海近岸”, “热带气旋”) ∧ (CoastalArea(“黄海近岸”) ∧ (WaveHeight(“黄海近岸”, 3.8) ∧ 3.5 < 3.8 ∧ 3.8 < 4.5)) → IssueWarning(“黄海近岸”, '黄色警报')\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“渤海预报区” — 表示渤海预报区受到温带天气系统的影响\",\n            \"s=“温带天气系统” — 表示影响系统为温带天气系统\",\n            \"h=8.0 — 表示有效波高为8.0米\"\n        ],\n        \"instance_logicexpression\": [\n            \"Affected(“渤海预报区”, “温带天气系统”) ∧ (OffshoreArea(“渤海预报区”) ∧ (WaveHeight(“渤海预报区”, 8.0) ∧ 6.0 < 8.0 ∧ 8.0 < 9.0)) → IssueWarning(“渤海预报区”, '黄色警报')\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“东海海域” — 表示东海海域受到热带气旋的影响\",\n            \"s=“热带气旋” — 表示影响系统为热带气旋\",\n            \"h=5.0 — 表示有效波高为5.0米\"\n        ],\n        \"instance_logicexpression\": [\n            \"Affected(“东海海域”, “热带气旋”) ∧ (CoastalArea(“东海海域”) ∧ (WaveHeight(“东海海域”, 5.0) ∧ 4.5 ≤ 5.0 ∧ 5.0 < 6.0)) → IssueAlert(橙色警报)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“南海近海区域” — 表示南海近海区域受到温带天气系统的影响\",\n            \"s=“温带天气系统” — 表示影响系统为温带天气系统\",\n            \"h=10.5 — 表示有效波高为10.5米\"\n        ],\n        \"instance_logicexpression\": [\n            \"Affected(“南海近海区域”, “温带天气系统”) ∧ (OffshoreArea(“南海近海区域”) ∧ (WaveHeight(“南海近海区域”, 10.5) ∧ 9.0 ≤ 10.5 ∧ 10.5 < 14.0)) → IssueAlert(橙色警报)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“黄海近岸海域” — 表示黄海近岸海域受到热带气旋的影响\",\n            \"s=“热带气旋” — 表示影响系统为热带气旋\",\n            \"h=4.8 — 表示有效波高为4.8米\"\n        ],\n        \"instance_logicexpression\": [\n            \"Affected(“黄海近岸海域”, “热带气旋”) ∧ (CoastalArea(“黄海近岸海域”) ∧ (WaveHeight(“黄海近岸海域”, 4.8) ∧ 4.5 ≤ 4.8 ∧ 4.8 < 6.0)) → IssueAlert(橙色警报)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“渤海预报海域” — 表示渤海预报海域受到温带天气系统的影响\",\n            \"s=“温带天气系统” — 表示影响系统为温带天气系统\",\n            \"h=12.5 — 表示有效波高为12.5米\"\n        ],\n        \"instance_logicexpression\": [\n            \"Affected(“渤海预报海域”, “温带天气系统”) ∧ (OffshoreArea(“渤海预报海域”) ∧ (WaveHeight(“渤海预报海域”, 12.5) ∧ 9.0 ≤ 12.5 ∧ 12.5 < 14.0)) → IssueAlert(橙色警报)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“东海海域” — 表示东海海域受到热带气旋的影响\",\n            \"s=“热带气旋” — 表示影响的系统是热带气旋\",\n            \"Height=6.5 — 表示有效波高达到6.5米\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀s (Affected(“东海海域”, s) ∧ (CoastalArea(“东海海域”) ∧ WaveHeight(“东海海域”, 6.5) ∧ 6.5 ≥ 6.0)) → IssueAlert(“东海海域”, RedAlert)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“南海近海区域” — 表示南海近海区域受到温带天气系统的影响\",\n            \"s=“温带天气系统” — 表示影响的系统是温带天气系统\",\n            \"Height=14.5 — 表示有效波高达到14.5米\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀s (Affected(“南海近海区域”, s) ∧ (OffshoreArea(“南海近海区域”) ∧ WaveHeight(“南海近海区域”, 14.5) ∧ 14.5 ≥ 14.0)) → IssueAlert(“南海近海区域”, RedAlert)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“黄海近岸海域” — 表示黄海近岸海域受到热带气旋的影响\",\n            \"s=“热带气旋” — 表示影响的系统是热带气旋\",\n            \"Height=5.9 — 表示有效波高为5.9米，未达到6.0米\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀s (Affected(“黄海近岸海域”, s) ∧ (CoastalArea(“黄海近岸海域”) ∧ WaveHeight(“黄海近岸海域”, 5.9) ∧ 5.9 < 6.0)) → ¬IssueAlert(“黄海近岸海域”, RedAlert)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“渤海预报海域” — 表示渤海预报海域受到温带天气系统的影响\",\n            \"s=“温带天气系统” — 表示影响的系统是温带天气系统\",\n            \"Height=13.9 — 表示有效波高为13.9米，未达到14.0米\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀s (Affected(“渤海预报海域”, s) ∧ (OffshoreArea(“渤海预报海域”) ∧ WaveHeight(“渤海预报海域”, 13.9) ∧ 13.9 < 14.0)) → ¬IssueAlert(“渤海预报海域”, RedAlert)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"b=“辽东湾” — 表示辽东湾的浮冰范围\",\n            \"Distance=60海里 — 表示浮冰范围达到60海里\",\n            \"Percentage=80% — 表示冰量达到80%\"\n        ],\n        \"instance_logicexpression\": [\n            \"IceRange(辽东湾, 60) ∧ IceVolume(辽东湾, 80) ∧ ExpectedDevelopment(辽东湾) → IssueAlert(辽东湾, '蓝色警报')\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"b=“渤海湾” — 表示渤海湾的浮冰范围\",\n            \"Distance=25海里 — 表示浮冰范围达到25海里\",\n            \"Percentage=80% — 表示冰量达到80%\"\n        ],\n        \"instance_logicexpression\": [\n            \"IceRange(渤海湾, 25) ∧ IceVolume(渤海湾, 80) ∧ ExpectedDevelopment(渤海湾) → IssueAlert(渤海湾, '蓝色警报')\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"b=“莱州湾” — 表示莱州湾的浮冰范围\",\n            \"Distance=25海里 — 表示浮冰范围达到25海里\",\n            \"Percentage=80% — 表示冰量达到80%\"\n        ],\n        \"instance_logicexpression\": [\n            \"IceRange(莱州湾, 25) ∧ IceVolume(莱州湾, 80) ∧ ExpectedDevelopment(莱州湾) → IssueAlert(莱州湾, '蓝色警报')\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"b=“黄海北部” — 表示黄海北部的浮冰范围\",\n            \"Distance=25海里 — 表示浮冰范围达到25海里\",\n            \"Percentage=80% — 表示冰量达到80%\"\n        ],\n        \"instance_logicexpression\": [\n            \"IceRange(黄海北部, 25) ∧ IceVolume(黄海北部, 80) ∧ ExpectedDevelopment(黄海北部) → IssueAlert(黄海北部, '蓝色警报')\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"b=“辽东湾” — 表示特定海湾为辽东湾\",\n            \"IceRange(辽东湾, 75) — 表示辽东湾的浮冰范围达到75海里\",\n            \"IceVolume(辽东湾, 80) — 表示辽东湾的冰量百分比达到80%\",\n            \"ExpectedDevelopment(辽东湾) — 表示预计海冰冰情在辽东湾持续发展\"\n        ],\n        \"instance_logicexpression\": [\n            \"IceRange(辽东湾, 75) ∧ IceVolume(辽东湾, 80) ∧ ExpectedDevelopment(辽东湾) → IssueIceWarning(辽东湾, 辽东湾)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"b=“渤海湾” — 表示特定海湾为渤海湾\",\n            \"IceRange(渤海湾, 35) — 表示渤海湾的浮冰范围达到35海里\",\n            \"IceVolume(渤海湾, 80) — 表示渤海湾的冰量百分比达到80%\",\n            \"ExpectedDevelopment(渤海湾) — 表示预计海冰冰情在渤海湾持续发展\"\n        ],\n        \"instance_logicexpression\": [\n            \"IceRange(渤海湾, 35) ∧ IceVolume(渤海湾, 80) ∧ ExpectedDevelopment(渤海湾) → IssueIceWarning(渤海湾, 渤海湾)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"b=“莱州湾” — 表示特定海湾为莱州湾\",\n            \"IceRange(莱州湾, 35) — 表示莱州湾的浮冰范围达到35海里\",\n            \"IceVolume(莱州湾, 80) — 表示莱州湾的冰量百分比达到80%\",\n            \"ExpectedDevelopment(莱州湾) — 表示预计海冰冰情在莱州湾持续发展\"\n        ],\n        \"instance_logicexpression\": [\n            \"IceRange(莱州湾, 35) ∧ IceVolume(莱州湾, 80) ∧ ExpectedDevelopment(莱州湾) → IssueIceWarning(莱州湾, 莱州湾)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"b=“黄海北部” — 表示特定海湾为黄海北部\",\n            \"IceRange(黄海北部, 35) — 表示黄海北部的浮冰范围达到35海里\",\n            \"IceVolume(黄海北部, 80) — 表示黄海北部的冰量百分比达到80%\",\n            \"ExpectedDevelopment(黄海北部) — 表示预计海冰冰情在黄海北部持续发展\"\n        ],\n        \"instance_logicexpression\": [\n            \"IceRange(黄海北部, 35) ∧ IceVolume(黄海北部, 80) ∧ ExpectedDevelopment(黄海北部) → IssueIceWarning(黄海北部, 黄海北部)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"b=“辽东湾” — 表示海湾为辽东湾\",\n            \"Range=90 — 表示浮冰范围达到90海里\",\n            \"Percentage=80 — 表示冰量达到8成上\"\n        ],\n        \"instance_logicexpression\": [\n            \"IceRange(辽东湾, 90) ∧ IceVolume(辽东湾, 80) ∧ ExpectedDevelopment(辽东湾) → IssueIceAlert(辽东湾, 90)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"b=“渤海湾” — 表示海湾为渤海湾\",\n            \"Range=40 — 表示浮冰范围达到40海里\",\n            \"Percentage=80 — 表示冰量达到8成上\"\n        ],\n        \"instance_logicexpression\": [\n            \"IceRange(渤海湾, 40) ∧ IceVolume(渤海湾, 80) ∧ ExpectedDevelopment(渤海湾) → IssueIceAlert(渤海湾, 40)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"b=“莱州湾” — 表示海湾为莱州湾\",\n            \"Range=40 — 表示浮冰范围达到40海里\",\n            \"Percentage=80 — 表示冰量达到8成上\"\n        ],\n        \"instance_logicexpression\": [\n            \"IceRange(莱州湾, 40) ∧ IceVolume(莱州湾, 80) ∧ ExpectedDevelopment(莱州湾) → IssueIceAlert(莱州湾, 40)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"b=“黄海北部” — 表示海湾为黄海北部\",\n            \"Range=40 — 表示浮冰范围达到40海里\",\n            \"Percentage=80 — 表示冰量达到8成上\"\n        ],\n        \"instance_logicexpression\": [\n            \"IceRange(黄海北部, 40) ∧ IceVolume(黄海北部, 80) ∧ ExpectedDevelopment(黄海北部) → IssueIceAlert(黄海北部, 40)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"b=“辽东湾” — 表示海湾为辽东湾\",\n            \"Distance=105 — 表示浮冰范围达到105海里\",\n            \"Volume=8 — 表示冰量达到8以上\",\n            \"Situation=“持续” — 表示预计海冰冰情持续发展\"\n        ],\n        \"instance_logicexpression\": [\n            \"IceRange(辽东湾, 105) ∧ IceVolume(8) ∧ ExpectedDuration(持续) → IssueAlert(辽东湾)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"b=“渤海湾” — 表示海湾为渤海湾\",\n            \"Distance=45 — 表示浮冰范围达到45海里\",\n            \"Volume=8 — 表示冰量达到8以上\",\n            \"Situation=“持续” — 表示预计海冰冰情持续发展\"\n        ],\n        \"instance_logicexpression\": [\n            \"IceRange(渤海湾, 45) ∧ IceVolume(8) ∧ ExpectedDuration(持续) → IssueAlert(渤海湾)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"b=“莱州湾” — 表示海湾为莱州湾\",\n            \"Distance=45 — 表示浮冰范围达到45海里\",\n            \"Volume=8 — 表示冰量达到8以上\",\n            \"Situation=“持续” — 表示预计海冰冰情持续发展\"\n        ],\n        \"instance_logicexpression\": [\n            \"IceRange(莱州湾, 45) ∧ IceVolume(8) ∧ ExpectedDuration(持续) → IssueAlert(莱州湾)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"b=“黄海北部” — 表示海湾为黄海北部\",\n            \"Distance=45 — 表示浮冰范围达到45海里\",\n            \"Volume=8 — 表示冰量达到8以上\",\n            \"Situation=“持续” — 表示预计海冰冰情持续发展\"\n        ],\n        \"instance_logicexpression\": [\n            \"IceRange(黄海北部, 45) ∧ IceVolume(8) ∧ ExpectedDuration(持续) → IssueAlert(黄海北部)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“地震” — 表示受地震影响\",\n            \"Height=0.2 — 预计海啸波幅为0.2米\"\n        ],\n        \"instance_logicexpression\": [\n            \"Affected(地震) → (ExpectedTsunamiWave(0.2) ∨ ¬ExpectedTsunamiWave(Height)) → PublishTsunamiInfo()\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“海底火山爆发” — 表示受海底火山爆发影响\",\n            \"Height=0.0 — 表示没有海啸\"\n        ],\n        \"instance_logicexpression\": [\n            \"Affected(海底火山爆发) → (ExpectedTsunamiWave(<0.3) ∨ ¬ExpectedTsunamiWave(Height)) → PublishTsunamiInfo()\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“气象变化” — 表示受气象变化影响\",\n            \"Height=0.1 — 预计海啸波幅为0.1米\"\n        ],\n        \"instance_logicexpression\": [\n            \"Affected(气象变化) → (ExpectedTsunamiWave(0.1) ∨ ¬ExpectedTsunamiWave(Height)) → PublishTsunamiInfo()\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“地壳运动” — 表示受地壳运动影响\",\n            \"Height=0.25 — 预计海啸波幅为0.25米\"\n        ],\n        \"instance_logicexpression\": [\n            \"Affected(地壳运动) → (ExpectedTsunamiWave(0.25) ∨ ¬ExpectedTsunamiWave(Height)) → PublishTsunamiInfo()\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“海洋活动” — 表示受海洋活动影响\",\n            \"Height=0.0 — 表示没有海啸\"\n        ],\n        \"instance_logicexpression\": [\n            \"Affected(海洋活动) → (ExpectedTsunamiWave(<0.3) ∨ ¬ExpectedTsunamiWave(Height)) → PublishTsunamiInfo()\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“地震” — 表示受地震影响\",\n            \"Amplitude=“0.5米” — 表示预计海啸波幅为0.5米\"\n        ],\n        \"instance_logicexpression\": [\n            \"Affected(地震) → (ForecastTsunamiWave(0.3) ∧ ForecastTsunamiWave(1) → IssueAlert(YellowTsunamiAlert))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“海底火山爆发” — 表示受海底火山爆发影响\",\n            \"Amplitude=“0.8米” — 表示预计海啸波幅为0.8米\"\n        ],\n        \"instance_logicexpression\": [\n            \"Affected(海底火山爆发) → (ForecastTsunamiWave(0.3) ∧ ForecastTsunamiWave(1) → IssueAlert(YellowTsunamiAlert))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“地壳运动” — 表示受地壳运动影响\",\n            \"Amplitude=“0.3米” — 表示预计海啸波幅为0.3米\"\n        ],\n        \"instance_logicexpression\": [\n            \"Affected(地壳运动) → (ForecastTsunamiWave(0.3) ∧ ForecastTsunamiWave(1) → IssueAlert(YellowTsunamiAlert))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“气象变化” — 表示受气象变化影响\",\n            \"Amplitude=“1米” — 表示预计海啸波幅为1米\"\n        ],\n        \"instance_logicexpression\": [\n            \"Affected(气象变化) → (ForecastTsunamiWave(0.3) ∧ ForecastTsunamiWave(1) → IssueAlert(YellowTsunamiAlert))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“地震” — 表示受地震影响\",\n            \"w=“2米” — 表示预计海啸波幅为2米\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀w (Affected(地震) ∧ (1 ≤ 2 ∧ 2 ≤ 3) → (ForecastTsunami(2米) ∧ IssueAlert(橙色警报)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“海底火山爆发” — 表示受海底火山爆发影响\",\n            \"w=“1.5米” — 表示预计海啸波幅为1.5米\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀w (Affected(海底火山爆发) ∧ (1 ≤ 1.5 ∧ 1.5 ≤ 3) → (ForecastTsunami(1.5米) ∧ IssueAlert(橙色警报)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“气候异常” — 表示受气候异常影响\",\n            \"w=“3米” — 表示预计海啸波幅为3米\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀w (Affected(气候异常) ∧ (1 ≤ 3 ∧ 3 ≤ 3) → (ForecastTsunami(3米) ∧ IssueAlert(橙色警报)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“地壳运动” — 表示受地壳运动影响\",\n            \"w=“2.5米” — 表示预计海啸波幅为2.5米\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀w (Affected(地壳运动) ∧ (1 ≤ 2.5 ∧ 2.5 ≤ 3) → (ForecastTsunami(2.5米) ∧ IssueAlert(橙色警报)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"f=“地震” — 表示影响因素为地震\",\n            \"a=“东海沿岸” — 表示受影响的区域为东海沿岸\",\n            \"Height=3.5 — 表示预计的海啸波幅为3.5米\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀f (Influence(“地震”, “东海沿岸”) → (Forecast(TsunamiWaveHeight(“东海沿岸”, 3.5), “东海沿岸”) ∧ 3.5 ≥ 3) → IssueAlert(RedAlert))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“海底火山爆发” — 表示影响因素为海底火山爆发\",\n            \"a=“南海沿岸” — 表示受影响的区域为南海沿岸\",\n            \"Height=4.2 — 表示预计的海啸波幅为4.2米\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀f (Influence(“海底火山爆发”, “南海沿岸”) → (Forecast(TsunamiWaveHeight(“南海沿岸”, 4.2), “南海沿岸”) ∧ 4.2 ≥ 3) → IssueAlert(RedAlert))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“地壳运动” — 表示影响因素为地壳运动\",\n            \"a=“黄海沿岸” — 表示受影响的区域为黄海沿岸\",\n            \"Height=3.1 — 表示预计的海啸波幅为3.1米\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀f (Influence(“地壳运动”, “黄海沿岸”) → (Forecast(TsunamiWaveHeight(“黄海沿岸”, 3.1), “黄海沿岸”) ∧ 3.1 ≥ 3) → IssueAlert(RedAlert))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“气象变化” — 表示影响因素为气象变化\",\n            \"a=“渤海沿岸” — 表示受影响的区域为渤海沿岸\",\n            \"Height=3.8 — 表示预计的海啸波幅为3.8米\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀f (Influence(“气象变化”, “渤海沿岸”) → (Forecast(TsunamiWaveHeight(“渤海沿岸”, 3.8), “渤海沿岸”) ∧ 3.8 ≥ 3) → IssueAlert(RedAlert))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“国家海洋局预报中心” — 表示预报中心为国家海洋局预报中心\",\n            \"t1=“风暴潮灾害” — 表示灾害类型为风暴潮灾害\",\n            \"l1=“红色” — 表示警报级别为红色\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃c ∃t1 ∃l1 (IssueAlert(c, t1, l1) ∧ l1='红色' ∧ t1='风暴潮灾害' → Ⅰ级应急响应)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“国家海洋局预报中心” — 表示预报中心为国家海洋局预报中心\",\n            \"t2=“海浪灾害” — 表示灾害类型为海浪灾害\",\n            \"l2=“红色” — 表示警报级别为红色\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃c ∃t2 ∃l2 (IssueAlert(c, t2, l2) ∧ l2='红色' ∧ t2='海浪灾害' → Ⅰ级应急响应)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“国家海洋局预报中心” — 表示预报中心为国家海洋局预报中心\",\n            \"t3=“海啸灾害” — 表示灾害类型为海啸灾害\",\n            \"l3=“橙色” — 表示警报级别为橙色\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃c ∃t3 ∃l3 (IssueAlert(c, t3, l3) ∧ (l3='橙色' ∨ l3='红色') ∧ t3='海啸灾害' → Ⅰ级应急响应)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“国家海洋局预报中心” — 表示预报中心为国家海洋局预报中心\",\n            \"a=“渤黄海海域” — 表示预警海域为渤黄海海域\",\n            \"d1=2 — 表示连续发布警报的天数为2天\",\n            \"d2=3 — 表示预计冰情持续的天数为3天\",\n            \"l4=“红色” — 表示警报级别为红色\",\n            \"Impact1=“海上油气生产作业” — 表示灾害影响领域之一为海上油气生产作业\",\n            \"Impact2=“海上航运” — 表示灾害影响领域之一为海上航运\",\n            \"Impact3=“水产养殖” — 表示灾害影响领域之一为水产养殖\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃c ∃a ∃d1 ∃d2 ∃l4 (IssueAlert(c, '海冰灾害', l4) ∧ l4='红色' ∧ a='渤黄海海域' ∧ d1=2 ∧ ContinueDevelopment(a, d2) ∧ d2=3 ∧ MaintainAlertLevel(l4, d2) ∧ (DisasterImpact('海冰灾害', '海上油气生产作业') ∨ DisasterImpact('海冰灾害', '海上航运') ∨ DisasterImpact('海冰灾害', '水产养殖')) → Ⅰ级应急响应)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“国家海洋局预报中心” — 表示预报中心为国家海洋局预报中心\",\n            \"l=“黄色” — 表示警报级别为黄色\",\n            \"Type=“风暴潮灾害” — 表示警报类型为风暴潮灾害\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃c ∃l (StormSurgeAlert(c, l) ∧ l = '黄色' → 应急响应('Ⅲ级'))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“国家海洋局预报中心” — 表示预报中心为国家海洋局预报中心\",\n            \"l=“黄色” — 表示警报级别为黄色\",\n            \"Area=“近岸海域” — 表示警报区域为近岸海域\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃c ∃l ∃a ((WaveAlert(c, l, a) ∧ l = '黄色' ∧ a = '近岸海域') → 应急响应('Ⅲ级'))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“国家海洋局预报中心” — 表示预报中心为国家海洋局预报中心\",\n            \"l=“橙色” — 表示警报级别为橙色\",\n            \"Area=“近海海域” — 表示警报区域为近海海域\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃c ∃l ∃a ((WaveAlert(c, l, a) ∧ l = '橙色' ∧ a = '近海海域') → 应急响应('Ⅲ级'))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“国家海洋局预报中心” — 表示预报中心为国家海洋局预报中心\",\n            \"l=“黄色” — 表示警报级别为黄色\",\n            \"Area=“渤黄海海域” — 表示警报区域为渤黄海海域\",\n            \"Duration=2 — 表示连续发布警报的天数为2天\",\n            \"Future=“维持” — 表示未来预警海域内冰情将维持\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃c ∃l ∃a ∃d ∃f ((IceAlert(c, l, a, d, f) ∧ l = '黄色' ∧ a = '渤黄海海域' ∧ d = 2 ∧ (f = '维持')) ∧ (∃a1 (Impact(a1, '较大')) → 应急响应('Ⅲ级')))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“国家海洋局预报中心” — 表示预报中心为国家海洋局预报中心\",\n            \"l=“黄色” — 表示警报级别为黄色\",\n            \"Area=“渤黄海海域” — 表示警报区域为渤黄海海域\",\n            \"Duration=2 — 表示连续发布警报的天数为2天\",\n            \"Future=“升级” — 表示未来预警海域内冰情将升级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃c ∃l ∃a ∃d ∃f ((IceAlert(c, l, a, d, f) ∧ l = '黄色' ∧ a = '渤黄海海域' ∧ d = 2 ∧ (f = '升级')) ∧ (∃a1 (Impact(a1, '较大')) → 应急响应('Ⅲ级')))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“国家海洋局预报中心” — 表示预报中心为国家海洋局预报中心\",\n            \"l=“蓝色” — 表示风暴潮灾害警报级别为蓝色\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃c ∃l (StormSurgeAlert(c, l) ∧ l = '蓝色' → 应急响应('Ⅳ级'))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“国家海洋局预报中心” — 表示预报中心为国家海洋局预报中心\",\n            \"a1=“我国近岸海域” — 表示近岸海域\",\n            \"l1=“蓝色” — 表示海浪警报级别为蓝色\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃c ∃a1 ∃l1 (WaveAlert(c, a1, l1) ∧ l1 = '蓝色' → 应急响应('Ⅳ级'))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“国家海洋局预报中心” — 表示预报中心为国家海洋局预报中心\",\n            \"a2=“我国近海海域” — 表示近海海域\",\n            \"l2=“黄色” — 表示海浪灾害警报级别为黄色\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃c ∃a2 ∃l2 (WaveAlert(c, a2, l2) ∧ l2 = '黄色' → 应急响应('Ⅳ级'))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“国家海洋局预报中心” — 表示预报中心为国家海洋局预报中心\",\n            \"a=“渤黄海海域” — 表示渤黄海海域\",\n            \"l=“蓝色” — 表示海冰警报级别为蓝色\",\n            \"d=2 — 表示连续2天发布海冰蓝色警报\",\n            \"f=“持续发展” — 表示预计未来3天预警海域内冰情会持续发展\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃c ∃a ∃l ∃d ∃f (IceAlert(c, a, l, d, f) ∧ l = '蓝色' ∧ d = 2 ∧ f = '持续发展' → 应急响应('Ⅳ级'))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Disaster=“海冰灾害” — 表示海冰灾害\",\n            \"Activity=“海上油气生产作业” — 表示海上油气生产作业活动\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃d ∃a (Impact(d, a) → 应急响应('Ⅳ级'))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“东海区域” — 表示东海区域受到海浪灾害的影响\",\n            \"t=“全天24小时” — 表示海浪自动观测点全天24小时加密观测\"\n        ],\n        \"instance_logicexpression\": [\n            \"WaveDisasterImpact(东海区域) → ∀t (IntensiveObservation(AutoPoint, t))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“黄海区域” — 表示黄海区域受到海冰灾害的影响\",\n            \"c=“北海分局” — 表示北海分局组织相关中心站和海洋站\",\n            \"s=“中心站1” — 表示中心站1参与重点岸段现场巡视与观测\",\n            \"d=“观测数据” — 表示北海分局将观测数据发送给预报中心和受影响的省海洋预报机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"IceDisasterImpact(黄海区域) → ∃c (北海分局(c) ∧ ∀s (中心站(s) ∨ 海洋站(s) → IntensiveObservation(s, 14)) ∧ ∀d (SendData(c, 预报中心, d) ∧ SendData(c, 受影响省海洋预报机构, d)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“南海区域” — 表示南海区域受到海啸灾害的影响\",\n            \"e=“地震事件” — 表示预报中心密切监视地震事件的发展动态\",\n            \"s1=“中国地震台网中心” — 表示预报中心从中国地震台网中心获取海啸预警信息\",\n            \"s2=“太平洋海啸警报中心” — 表示预报中心从太平洋海啸警报中心获取海啸预警信息\",\n            \"s3=“西北太平洋海啸预警中心” — 表示预报中心从西北太平洋海啸预警中心获取海啸预警信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"TsunamiDisasterImpact(南海区域) → ∀e (MonitorDynamics(预报中心, e) ∧ ∀s (ObtainWarningInfo(预报中心, 中国地震台网中心, s) ∨ ObtainWarningInfo(预报中心, 太平洋海啸警报中心, s) ∨ ObtainWarningInfo(预报中心, 西北太平洋海啸预警中心, s)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“渤海区域” — 表示渤海区域受到海冰灾害的影响\",\n            \"p=“飞机1” — 表示飞机1每周开展2次航空遥感观测\",\n            \"t=“观测时间” — 表示飞机1在特定时间进行加密观测\",\n            \"d=“遥感观测数据” — 表示北海航空支队将遥感观测数据传输至北海预报中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"IceDisasterImpact(渤海区域) → ∃p (飞机(p) ∧ ∀t (IntensiveObservation(p, t) ∧ ∀d (SendData(北海航空支队, 北海预报中心, d) ∧ ∀r (SendData(北海预报中心, 预报中心, r) ∧ SendData(北海预报中心, 受影响省海洋预报机构, r)))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“国家海洋预报中心” — 表示预报中心为国家海洋预报中心\",\n            \"t=“风暴潮” — 表示灾害类型为风暴潮\",\n            \"l=“红色预警” — 表示预警级别为红色预警\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀t ∀l (ForecastDisaster(国家海洋预报中心, 风暴潮, 红色预警) ∧ 红色预警 ≥预警发布标准 → (OrganizeConsultation(国家海洋预报中心, Institutions) ∧ WriteForecastReport(国家海洋预报中心, Report) ∧ SubmitReport(国家海洋预报中心, NationalDefense) ∧ ParticipateVideoConsultation(国家海洋预报中心, NationalDefense)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“地方海洋预报站” — 表示预报中心为地方海洋预报站\",\n            \"t=“海浪” — 表示灾害类型为海浪\",\n            \"l=“橙色预警” — 表示预警级别为橙色预警\",\n            \"i=“地方海洋预报站预判会商意见” — 表示地方海洋预报站的预判会商意见\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀t ∀l (ForecastDisaster(地方海洋预报站, 海浪, 橙色预警) ∧ 橙色预警 ≥预警发布标准 → (OrganizeConsultation(地方海洋预报站, Institutions) ∧ WriteForecastReport(地方海洋预报站, Report) ∧ SubmitReport(地方海洋预报站, NationalDefense) ∧ ParticipateVideoConsultation(地方海洋预报站, NationalDefense)))\",\n            \"Disagreement(地方海洋预报站, 地方海洋预报站预判会商意见) → (PublishDisasterMessage(Institutions, Public) ∧ IncludeDisagreementInReport(地方海洋预报站, 地方海洋预报站预判会商意见))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“国家海洋预报中心” — 表示预报中心为国家海洋预报中心\",\n            \"t=“海啸” — 表示灾害类型为海啸\",\n            \"l=“任何级别” — 表示预警级别为任何级别\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (ForecastDisaster(国家海洋预报中心, 海啸, 任何级别) → IssueTsunamiAlert(国家海洋预报中心))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“沿海城市海洋预报局” — 表示预报中心为沿海城市海洋预报局\",\n            \"t=“海冰” — 表示灾害类型为海冰\",\n            \"l=“黄色预警” — 表示预警级别为黄色预警\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀t ∀l (ForecastDisaster(沿海城市海洋预报局, 海冰, 黄色预警) ∧ 黄色预警 ≥预警发布标准 → (OrganizeConsultation(沿海城市海洋预报局, Institutions) ∧ WriteForecastReport(沿海城市海洋预报局, Report) ∧ SubmitReport(沿海城市海洋预报局, NationalDefense) ∧ ParticipateVideoConsultation(沿海城市海洋预报局, NationalDefense)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“局减灾司” — 表示局减灾司部门\",\n            \"l=“Ⅰ级” — 表示预计启动的应急响应级别为Ⅰ级\",\n            \"m=“相关省海洋部门、分局、预报中心、减灾中心” — 表示召集的单位包括相关省海洋部门、分局、预报中心、减灾中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterForecast(局减灾司, Ⅰ级) ∧ AlertResult(局减灾司, Ⅰ级) ∧ (Ⅰ级 = Ⅰ ∨ Ⅰ级 = Ⅱ) → ∃m (ConveneAdministrativeMeeting(减灾司, m) ∧ DeployWork(m, 灾害应急观测预警灾害调查))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“局减灾司” — 表示局减灾司部门\",\n            \"l=“Ⅱ级” — 表示预计启动的应急响应级别为Ⅱ级\",\n            \"m=“局减灾司领导” — 表示组织者为局减灾司领导\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterForecast(局减灾司, Ⅱ级) ∧ AlertResult(局减灾司, Ⅱ级) ∧ Ⅱ级 = Ⅱ → ∃m (ConveneAdministrativeMeeting(减灾司领导, m) ∧ ParticipantsInclude(m, 省海洋部门) ∧ ParticipantsInclude(m, 分局) ∧ ParticipantsInclude(m, 预报中心) ∧ ParticipantsInclude(m, 减灾中心))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“局减灾司” — 表示局减灾司部门\",\n            \"l=“I级” — 表示预计启动的应急响应级别为I级\",\n            \"m=“国家海洋局领导” — 表示组织者为国家海洋局领导\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterForecast(局减灾司, I级) ∧ AlertResult(局减灾司, I级) ∧ I级 = I → ∃m (ConveneAdministrativeMeeting(国家海洋局领导, m) ∧ ParticipantsInclude(m, 省海洋部门) ∧ ParticipantsInclude(m, 分局) ∧ ParticipantsInclude(m, 预报中心) ∧ ParticipantsInclude(m, 减灾中心))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“某次海洋灾害过程” — 表示具体的海洋灾害过程\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterProcess(某次海洋灾害过程) → AtMostOne(部署会)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“局减灾司” — 表示局减灾司部门\",\n            \"t=“补充部署的工作” — 表示需要补充部署的工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"RemainingWork(局减灾司, 补充部署的工作) → WrittenNotification(减灾司, 补充部署的工作)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"b=“东海分局” — 表示分局为东海分局\",\n            \"m=“海啸预警” — 表示收到的消息为海啸预警\",\n            \"a=“东海区域” — 表示预计受影响的海区为东海区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀b∀m (ReceiveMessage(“东海分局”, “海啸预警”) ∧ ExpectedImpact(“东海分局”, “东海区域”) → (OrganizeInspection(“东海分局”) ∧ EliminateRisks(“东海分局”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"b=“南海分局” — 表示分局为南海分局\",\n            \"m=“台风预警” — 表示收到的消息为台风预警\",\n            \"a=“南海区域” — 表示预计受影响的海区为南海区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀b∀m (ReceiveMessage(“南海分局”, “台风预警”) ∧ ExpectedImpact(“南海分局”, “南海区域”) → (OrganizeInspection(“南海分局”) ∧ EliminateRisks(“南海分局”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"b=“北海分局” — 表示分局为北海分局\",\n            \"m=“风暴潮预警” — 表示收到的消息为风暴潮预警\",\n            \"a=“北海区域” — 表示预计受影响的海区为北海区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀b∀m (ReceiveMessage(“北海分局”, “风暴潮预警”) ∧ ExpectedImpact(“北海分局”, “北海区域”) → (OrganizeInspection(“北海分局”) ∧ EliminateRisks(“北海分局”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"b=“黄海分局” — 表示分局为黄海分局\",\n            \"m=“赤潮预警” — 表示收到的消息为赤潮预警\",\n            \"a=“黄海区域” — 表示预计受影响的海区为黄海区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀b∀m (ReceiveMessage(“黄海分局”, “赤潮预警”) ∧ ExpectedImpact(“黄海分局”, “黄海区域”) → (OrganizeInspection(“黄海分局”) ∧ EliminateRisks(“黄海分局”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“局减灾司” — 表示局减灾司部门\",\n            \"c1=“预报中心” — 表示预报中心\",\n            \"c2=“减灾中心” — 表示减灾中心\",\n            \"s=“台风逼近” — 表示灾害发展形势为台风逼近\",\n            \"l=“国家海洋局领导” — 表示国家海洋局的领导\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀c∀s (DisasterSituation(台风逼近) ∧ Organize(局减灾司, 预报中心) ∧ Organize(局减灾司, 减灾中心) ∧ Assess(局减灾司, 台风逼近) → Determine(局减灾司, LevelOneResponse))\",\n            \"Determine(局减灾司, LevelOneResponse) → ∃l (Issue(Command, 国家海洋局领导) ∧ LevelOneResponse(Command))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“局减灾司” — 表示局减灾司部门\",\n            \"c1=“预报中心” — 表示预报中心\",\n            \"c2=“减灾中心” — 表示减灾中心\",\n            \"s=“地震发生” — 表示灾害发展形势为地震发生\",\n            \"l=“国家海洋局领导” — 表示国家海洋局的领导\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀c∀s (DisasterSituation(地震发生) ∧ Organize(局减灾司, 预报中心) ∧ Organize(局减灾司, 减灾中心) ∧ Assess(局减灾司, 地震发生) → Determine(局减灾司, LevelOneResponse))\",\n            \"Determine(局减灾司, LevelOneResponse) → ∃l (Issue(Command, 国家海洋局领导) ∧ LevelOneResponse(Command))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“局减灾司” — 表示局减灾司部门\",\n            \"c1=“预报中心” — 表示预报中心\",\n            \"c2=“减灾中心” — 表示减灾中心\",\n            \"s=“海啸预警” — 表示灾害发展形势为海啸预警\",\n            \"l=“国家海洋局领导” — 表示国家海洋局的领导\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀c∀s (DisasterSituation(海啸预警) ∧ Organize(局减灾司, 预报中心) ∧ Organize(局减灾司, 减灾中心) ∧ Assess(局减灾司, 海啸预警) → Determine(局减灾司, LevelOneResponse))\",\n            \"Determine(局减灾司, LevelOneResponse) → ∃l (Issue(Command, 国家海洋局领导) ∧ LevelOneResponse(Command))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“国家海洋局” — 表示国家海洋局作为组织保持24小时通讯畅通。\",\n            \"o=“受影响海区分局” — 表示受影响海区的分局作为组织保持24小时通讯畅通。\"\n        ],\n        \"instance_logicexpression\": [\n            \"AffectedOrganization(国家海洋局) → (CommunicationOpen(国家海洋局) ∧ MonitorDynamics(国家海洋局) ∧ CoordinateResponse(国家海洋局))\",\n            \"AffectedOrganization(受影响海区分局) → (CommunicationOpen(受影响海区分局) ∧ MonitorDynamics(受影响海区分局) ∧ CoordinateResponse(受影响海区分局))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=“国家海洋局分管领导” — 表示国家海洋局分管领导参加灾害预警应急视频会商。\",\n            \"l=“相关分局分管领导” — 表示相关分局的分管领导参加灾害预警应急视频会商。\"\n        ],\n        \"instance_logicexpression\": [\n            \"LeaderInCharge(国家海洋局分管领导) → AttendMeeting(国家海洋局分管领导, Daily)\",\n            \"LeaderInCharge(相关分局分管领导) → AttendMeeting(相关分局分管领导, Daily)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“观测业务机构” — 表示观测业务机构实行领导带班和人员24小时值班。\",\n            \"i=“预报业务机构” — 表示预报业务机构实行领导带班和人员24小时值班。\",\n            \"i=“减灾业务机构” — 表示减灾业务机构实行领导带班和人员24小时值班。\"\n        ],\n        \"instance_logicexpression\": [\n            \"ObservationInstitute(观测业务机构) ∨ ForecastInstitute(预报业务机构) ∨ MitigationInstitute(减灾业务机构) → DutySystem(观测业务机构)\",\n            \"ObservationInstitute(观测业务机构) ∨ ForecastInstitute(预报业务机构) ∨ MitigationInstitute(减灾业务机构) → DutySystem(预报业务机构)\",\n            \"ObservationInstitute(观测业务机构) ∨ ForecastInstitute(预报业务机构) ∨ MitigationInstitute(减灾业务机构) → DutySystem(减灾业务机构)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家海洋局国际司” — 表示国家海洋局国际司联络国务院港澳办和国务院台办。\",\n            \"d=“国务院港澳办” — 表示国家海洋局国际司联络国务院港澳办。\",\n            \"d=“国务院台办” — 表示国家海洋局国际司联络国务院台办。\"\n        ],\n        \"instance_logicexpression\": [\n            \"ExpectedImpact(Tsunami, 港澳台) → Notify(InternationalAffairsDept, 国务院港澳办) ∧ Notify(InternationalAffairsDept, 国务院台办)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“海洋观测站A” — 表示海洋观测站A随时监控海洋观测仪器设备运行情况\",\n            \"Authority=“国家海洋局” — 表示向国家海洋局报送故障情况\",\n            \"Node=“数据接收中心X” — 表示向数据接收中心X报送故障情况\",\n            \"Device=“温盐深测量仪1号” — 表示温盐深测量仪1号出现故障\",\n            \"Personnel=“维修工程师甲” — 表示维修工程师甲负责修复或更换\"\n        ],\n        \"instance_logicexpression\": [\n            \"Monitor(海洋观测站A) → (Malfunction(温盐深测量仪1号) → (ReportMalfunction(海洋观测站A, 国家海洋局, 数据接收中心X) ∧ RepairOrReplace(温盐深测量仪1号, 维修工程师甲)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“海洋观测站B” — 表示海洋观测站B立刻开展人工补测\",\n            \"Time=“每日8时至17时” — 表示时段为每日8时至17时\"\n        ],\n        \"instance_logicexpression\": [\n            \"ManualMeasurement(海洋观测站B, 每日8时至17时) → (每日8时至17时 ∧ InputAndReport(海洋观测站B, 每日8时至17时))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“海洋观测站C” — 表示海洋观测站C具备条件进行人工补测\",\n            \"Time=“每日8时至17时” — 表示时段为每日8时至17时\"\n        ],\n        \"instance_logicexpression\": [\n            \"ManualMeasurement(海洋观测站C, 每日8时至17时) → ¬Malfunction(海洋观测站C)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海洋观测站D” — 表示海洋观测站D随时监控海洋观测仪器设备运行情况\",\n            \"Authority=“地方海洋局” — 表示向地方海洋局报送故障情况\",\n            \"Node=“数据接收中心Y” — 表示向数据接收中心Y报送故障情况\",\n            \"Device=“波浪测量仪2号” — 表示波浪测量仪2号出现故障\",\n            \"Personnel=“维修工程师乙” — 表示维修工程师乙负责修复或更换\"\n        ],\n        \"instance_logicexpression\": [\n            \"Monitor(海洋观测站D) → (Malfunction(波浪测量仪2号) → (ReportMalfunction(海洋观测站D, 地方海洋局, 数据接收中心Y) ∧ RepairOrReplace(波浪测量仪2号, 维修工程师乙)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“海洋观测站E” — 表示海洋观测站E立刻开展人工补测\",\n            \"Time=“每日8时至17时” — 表示时段为每日8时至17时\"\n        ],\n        \"instance_logicexpression\": [\n            \"ManualMeasurement(海洋观测站E, 每日8时至17时) → (每日8时至17时 ∧ InputAndReport(海洋观测站E, 每日8时至17时))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“预报中心” — 表示预报中心作为数据传输节点\",\n            \"t=“8时至20时” — 表示每日8时至20时期间\",\n            \"i=“3小时” — 表示每3小时人工监控1次\"\n        ],\n        \"instance_logicexpression\": [\n            \"DataNode(预报中心) → (Monitor(预报中心) ∧ (∀t (Time(t, 8, 20) → (∀i (Hour(i, 3) → Report(Fault, Supervisor) ∧ Restore(Fault)))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“海洋站” — 表示海洋站作为发送节点\",\n            \"r=“预报中心” — 表示预报中心作为接收节点\",\n            \"Data=“风” — 表示风作为主要观测要素之一\"\n        ],\n        \"instance_logicexpression\": [\n            \"Sender(海洋站) ∧ Receiver(预报中心) → (SendData(海洋站, 预报中心, 风))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“卫星中心” — 表示卫星中心作为提供资料的节点\",\n            \"r=“预报中心” — 表示预报中心作为接收节点\",\n            \"Data=“卫星遥感分析处理实时资料” — 表示卫星遥感分析处理实时资料\"\n        ],\n        \"instance_logicexpression\": [\n            \"SatelliteCenter(卫星中心) ∧ Receiver(预报中心) → ProvideData(卫星中心, 预报中心, 卫星遥感分析处理实时资料)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“监测中心” — 表示监测中心作为发送观测资料的节点\",\n            \"r=“预报中心” — 表示预报中心作为接收节点\",\n            \"Data=“鲅鱼圈岸基测冰雷达站观测资料” — 表示鲅鱼圈岸基测冰雷达站观测资料\"\n        ],\n        \"instance_logicexpression\": [\n            \"MonitorCenter(监测中心) ∧ Receiver(预报中心) → SendObservationData(监测中心, 预报中心, 鲅鱼圈岸基测冰雷达站观测资料)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“中心站” — 表示中心站作为发送节点\",\n            \"r=“海区预报中心” — 表示海区预报中心作为接收节点\",\n            \"Data=“浪” — 表示浪作为主要观测要素之一\"\n        ],\n        \"instance_logicexpression\": [\n            \"Sender(中心站) ∧ Receiver(海区预报中心) → (SendData(中心站, 海区预报中心, 浪))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“海区预报中心” — 表示海区预报中心作为发送节点\",\n            \"r=“预报中心” — 表示预报中心作为接收节点\",\n            \"Data=“潮” — 表示潮作为主要观测要素之一\"\n        ],\n        \"instance_logicexpression\": [\n            \"Sender(海区预报中心) ∧ Receiver(预报中心) → (SendData(海区预报中心, 预报中心, 潮))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“风暴潮” — 表示灾害类型为风暴潮\",\n            \"预计灾害趋势加重(d) — 表示预计风暴潮灾害趋势加重\",\n            \"重大变化(d) — 表示风暴潮有重大变化\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterType(d, 风暴潮) ∨ DisasterType(d, 海浪) → (IssueAlert(d, 至少2次) ∧ EmergencyConsultation(d, 视频, 至少2次))\",\n            \"DisasterType(d, 风暴潮) ∨ DisasterType(d, 海浪) → (预计灾害趋势加重(d) ∨ 重大变化(d) → IncreaseFrequency(d))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“海浪” — 表示灾害类型为海浪\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterType(d, 风暴潮) ∨ DisasterType(d, 海浪) → (IssueAlert(d, 至少2次) ∧ EmergencyConsultation(d, 视频, 至少2次))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“海冰” — 表示灾害类型为海冰\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterType(d, 海冰) → IssueAlert(d, 1次) ∧ VideoConsultation(d, 1次)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“海啸” — 表示灾害类型为海啸\",\n            \"预计发生海啸灾害(d) — 表示预计发生海啸灾害\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterType(d, 海啸) → (IssueWarning(d) ∨ EmergencyConsultation(d, 电话, 随时))\",\n            \"DisasterType(d, 海啸) → (预计发生海啸灾害(d) → IssueWarning(d))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“预报中心” — 表示预报中心\",\n            \"t1=“警报初发” — 表示警报初发的时间\",\n            \"i1=《海洋局值班信息》 — 表示编写的信息类型\",\n            \"Recipient=国务院应急办 — 表示报送信息的接收方\"\n        ],\n        \"instance_logicexpression\": [\n            \"AlertInitial(预报中心) ∧ Time(警报初发) → (WriteInfo(预报中心, 警报初发, 《海洋局值班信息》) ∧ ReportInfo(预报中心, 《海洋局值班信息》, 国务院应急办) ∧ WriteInfo(预报中心, 警报初发+1, 《海洋局值班信息》) ∧ ReportInfo(预报中心, 《海洋局值班信息》, 国务院应急办))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“预报中心” — 表示预报中心\",\n            \"e=“国家防总” — 表示特定实体为国家防总\",\n            \"r=“会商支持要求” — 表示会商支持的具体要求\"\n        ],\n        \"instance_logicexpression\": [\n            \"ConsultationRequirement(国家防总, 会商支持要求) → ProvideConsultationSupport(预报中心, 国家防总, 会商支持要求)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“预报中心” — 表示预报中心\",\n            \"e=“沿海省政府” — 表示特定实体为沿海省政府\",\n            \"r=“海洋灾害警报服务要求” — 表示海洋灾害警报服务的具体要求\"\n        ],\n        \"instance_logicexpression\": [\n            \"AlertRequirement(沿海省政府, 海洋灾害警报服务要求) → ProvideAlertService(预报中心, 沿海省政府, 海洋灾害警报服务要求)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“预报中心A” — 表示预报中心A\",\n            \"c1=“预报中心B” — 表示预报中心B\",\n            \"o=“整体会商意见” — 表示整体会商意见\"\n        ],\n        \"instance_logicexpression\": [\n            \"Disagreement(预报中心A, 预报中心B, 整体会商意见) → IncludeDisagreement(预报中心A, 整体会商意见)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“预报中心” — 表示预报中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"DailyReport(预报中心, 15) → WriteInfo(预报中心, 15, 《海洋局值班信息》) ∧ ReportInfo(预报中心, 《海洋局值班信息》, 国务院应急办)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"国家海洋局开通了关于应急响应工作的专题网页\",\n            \"中国海洋报报道了应急响应工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"OpenSpecialPage(国家海洋局, 应急响应工作) ∧ Report(中国海洋报, 应急响应工作)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"国家海洋预报台通过网站发布了灾害预警信息\",\n            \"国家海洋预报台通过微博公开了应急响应工作情况\"\n        ],\n        \"instance_logicexpression\": [\n            \"PublishWarning(国家海洋预报台, 网站, 灾害预警信息) ∧ PublicizeWork(国家海洋预报台, 微博, 应急响应工作)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"国家减灾中心通过微信发布了灾害预警信息\",\n            \"国家减灾中心通过网站公开了应急响应工作情况\"\n        ],\n        \"instance_logicexpression\": [\n            \"PublishWarning(国家减灾中心, 微信, 灾害预警信息) ∧ PublicizeWork(国家减灾中心, 网站, 应急响应工作)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"中国海洋报进行了采访报道\"\n        ],\n        \"instance_logicexpression\": [\n            \"InterviewReport(中国海洋报)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"国家海洋信息中心通过微博发布了灾害预警信息\",\n            \"国家海洋信息中心通过微信公开了应急响应工作情况\"\n        ],\n        \"instance_logicexpression\": [\n            \"PublishWarning(国家海洋信息中心, 微博, 灾害预警信息) ∧ PublicizeWork(国家海洋信息中心, 微信, 应急响应工作)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“局减灾司” — 表示局减灾司部门\",\n            \"c=“预报中心” — 表示预报中心\",\n            \"s=“台风逼近” — 表示灾害发展形势为台风逼近\",\n            \"a=“Ⅱ级应急响应” — 表示Ⅱ级应急响应\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀c∀s∀a (DisasterSituation(台风逼近) ∧ Organize(局减灾司, 预报中心) ∧ Assess(局减灾司, 台风逼近) → Determine(局减灾司, Ⅱ级应急响应))\",\n            \"∀d∀l (Determine(局减灾司, Ⅱ级应急响应) → Issue(局减灾司领导, Command(Ⅱ级应急响应)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“局减灾司” — 表示局减灾司部门\",\n            \"c=“减灾中心” — 表示减灾中心\",\n            \"s=“地震发生” — 表示灾害发展形势为地震发生\",\n            \"a=“Ⅱ级应急响应” — 表示Ⅱ级应急响应\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀c∀s∀a (DisasterSituation(地震发生) ∧ Organize(局减灾司, 减灾中心) ∧ Assess(局减灾司, 地震发生) → Determine(局减灾司, Ⅱ级应急响应))\",\n            \"∀d∀l (Determine(局减灾司, Ⅱ级应急响应) → Issue(局减灾司领导, Command(Ⅱ级应急响应)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“局减灾司” — 表示局减灾司部门\",\n            \"c=“预报中心” — 表示预报中心\",\n            \"s=“洪水泛滥” — 表示灾害发展形势为洪水泛滥\",\n            \"a=“Ⅱ级应急响应” — 表示Ⅱ级应急响应\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀c∀s∀a (DisasterSituation(洪水泛滥) ∧ Organize(局减灾司, 预报中心) ∧ Assess(局减灾司, 洪水泛滥) → Determine(局减灾司, Ⅱ级应急响应))\",\n            \"∀d∀l (Determine(局减灾司, Ⅱ级应急响应) → Issue(局减灾司领导, Command(Ⅱ级应急响应)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“局减灾司” — 表示局减灾司部门\",\n            \"c=“减灾中心” — 表示减灾中心\",\n            \"s=“森林火灾” — 表示灾害发展形势为森林火灾\",\n            \"a=“Ⅱ级应急响应” — 表示Ⅱ级应急响应\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀c∀s∀a (DisasterSituation(森林火灾) ∧ Organize(局减灾司, 减灾中心) ∧ Assess(局减灾司, 森林火灾) → Determine(局减灾司, Ⅱ级应急响应))\",\n            \"∀d∀l (Determine(局减灾司, Ⅱ级应急响应) → Issue(局减灾司领导, Command(Ⅱ级应急响应)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“国家海洋局” — 表示国家海洋局作为受影响的组织\",\n            \"o=“受影响海区的分局” — 表示受影响海区的分局作为受影响的组织\"\n        ],\n        \"instance_logicexpression\": [\n            \"AffectedOrganization(国家海洋局) → (CommunicationOpen(国家海洋局) ∧ MonitorDynamics(国家海洋局) ∧ CoordinateResponse(国家海洋局))\",\n            \"AffectedOrganization(受影响海区的分局) → (CommunicationOpen(受影响海区的分局) ∧ MonitorDynamics(受影响海区的分局) ∧ CoordinateResponse(受影响海区的分局))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=“局减灾司领导” — 表示局减灾司的领导\",\n            \"l=“分局分管领导” — 表示分局的分管领导\"\n        ],\n        \"instance_logicexpression\": [\n            \"Leader(局减灾司领导) → AttendMeeting(局减灾司领导, Daily)\",\n            \"Leader(分局分管领导) → AttendMeeting(分局分管领导, Daily)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“相关观测、预报和减灾业务机构” — 表示相关观测、预报和减灾业务机构作为实行值班的组织\"\n        ],\n        \"instance_logicexpression\": [\n            \"Institution(相关观测、预报和减灾业务机构) → ImplementDuty(相关观测、预报和减灾业务机构)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“局国际司”\",\n            \"OtherDepartment=“国务院港澳办”\",\n            \"OtherDepartment=“台办”\"\n        ],\n        \"instance_logicexpression\": [\n            \"ExpectedImpact(Tsunami, 港澳台) → ContactNotify(局国际司, 国务院港澳办) ∧ ContactNotify(局国际司, 台办)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“海洋观测站A” — 表示海洋观测站A随时监控海洋观测仪器设备运行情况\",\n            \"Authority=“国家海洋局” — 表示向国家海洋局报送故障情况\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (Monitor(海洋观测站A) → (Malfunction(海洋观测站A) → (ReportMalfunction(海洋观测站A, 国家海洋局) ∧ RepairOrReplace(海洋观测站A))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“海洋观测站B” — 表示海洋观测站B立即开展人工补测\",\n            \"Time=“每日8时至7时” — 表示时段为每日8时至7时\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (ManualMeasurement(海洋观测站B, 每日8时至7时) → (每日8时至7时 ∧ InputReport(海洋观测站B)))\",\n            \"∀s (ManualMeasurement(海洋观测站B, 每日8时至7时) → AvoidDataMissing(海洋观测站B))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海洋观测站C” — 表示海洋观测站C随时监控海洋观测仪器设备运行情况\",\n            \"Authority=“地方海洋局” — 表示向地方海洋局报送故障情况\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (Monitor(海洋观测站C) → (Malfunction(海洋观测站C) → (ReportMalfunction(海洋观测站C, 地方海洋局) ∧ RepairOrReplace(海洋观测站C))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“海洋观测站D” — 表示海洋观测站D立即开展人工补测\",\n            \"Time=“每日8时至7时” — 表示时段为每日8时至7时\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (ManualMeasurement(海洋观测站D, 每日8时至7时) → (每日8时至7时 ∧ InputReport(海洋观测站D)))\",\n            \"∀s (ManualMeasurement(海洋观测站D, 每日8时至7时) → AvoidDataMissing(海洋观测站D))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“东海区域” — 表示东海区域受到海浪灾害的影响\",\n            \"p=“东海自动观测点1” — 表示东海区域的自动观测点\",\n            \"p=“东海人工观测点1” — 表示东海区域的人工观测点\"\n        ],\n        \"instance_logicexpression\": [\n            \"WaveDisasterImpact(东海区域) → ∀p (AutomaticObservationPoint(p) → IntensiveObservation(p, AllDay)) ∧ ∀p (ManualObservationPoint(p) → IntensiveObservation(p, 8AM-5PM))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“黄海区域” — 表示黄海区域受到海冰灾害的影响\",\n            \"From=“北海分局” — 表示数据发送的机构为北海分局\",\n            \"To=“预报中心” — 表示数据发送到预报中心\",\n            \"To=“受影响省” — 表示数据发送到受影响的省\",\n            \"Plane=“遥感飞机1” — 表示进行遥感观测的飞机\",\n            \"Times=2 — 表示飞机每周进行2次遥感观测\"\n        ],\n        \"instance_logicexpression\": [\n            \"IceDisasterImpact(黄海区域) → (SendData(北海分局, 预报中心, Data) ∧ SendData(北海分局, 受影响省, Data)) ∧ (AerialRemoteSensing(遥感飞机1, 2) ∧ MonitorEarthquakeTsunami(预报中心))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“南海区域” — 表示南海区域因海啸灾害启动Ⅱ级应急响应\",\n            \"Center=“预报中心” — 表示负责监视和获取预警信息的预报中心\",\n            \"Source=“中国地震台网中心” — 表示预警信息来源之一为中国地震台网中心\",\n            \"Source=“太平洋海啸警报中心” — 表示预警信息来源之一为太平洋海啸警报中心\",\n            \"Source=“西北太平洋海啸预警中心” — 表示预警信息来源之一为西北太平洋海啸预警中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"TsunamiDisaster(南海区域) → ObtainWarningInfo(预报中心, 中国地震台网中心) ∧ ObtainWarningInfo(预报中心, 太平洋海啸警报中心) ∧ ObtainWarningInfo(预报中心, 西北太平洋海啸预警中心)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“预报中心” — 表示预报中心作为数据传输节点\",\n            \"t=“8时” — 表示每日8时至20时期间\",\n            \"i=“3” — 表示每3小时人工监控1次\"\n        ],\n        \"instance_logicexpression\": [\n            \"DataNode(预报中心) → (Monitor(预报中心) ∧ (Time(8, 8, 20) → (3 mod 3 = 0 → Report(Fault, Supervisor) ∧ Restore(Fault))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“海洋站” — 表示海洋站作为发送节点\",\n            \"r=“预报中心” — 表示预报中心作为接收节点\",\n            \"t=“9时” — 表示每1小时发送1次\"\n        ],\n        \"instance_logicexpression\": [\n            \"Sender(海洋站) ∧ Receiver(预报中心) → (SendData(海洋站, 预报中心, Wind) ∧ SendData(海洋站, 预报中心, Wave) ∧ SendData(海洋站, 预报中心, Tide) ∧ (9 mod 1 = 0 → SendData(海洋站, 预报中心, Data)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“卫星中心” — 表示卫星中心作为提供资料的节点\",\n            \"r=“预报中心” — 表示预报中心作为接收节点\",\n            \"Data=“卫星遥感分析处理实时资料” — 表示提供的资料类型\"\n        ],\n        \"instance_logicexpression\": [\n            \"SatelliteCenter(卫星中心) ∧ Receiver(预报中心) → ProvideData(卫星中心, 预报中心, 卫星遥感分析处理实时资料)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“监测中心” — 表示监测中心作为发送观测资料的节点\",\n            \"r=“预报中心” — 表示预报中心作为接收节点\",\n            \"Data=“鲅鱼圈岸基测冰雷达站观测资料” — 表示发送的观测资料类型\"\n        ],\n        \"instance_logicexpression\": [\n            \"MonitorCenter(监测中心) ∧ Receiver(预报中心) → SendObservationData(监测中心, 预报中心, 鲅鱼圈岸基测冰雷达站观测资料)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“风暴潮” — 表示灾害类型为风暴潮\",\n            \"Frequency=“至少2次” — 表示发布频率至少2次\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterType(d, 风暴潮) ∨ DisasterType(d, 海浪害) → (IssueAlert(d, 至少2次) ∧ EmergencyConsultation(d, 视频, 至少2次))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“海浪害” — 表示灾害类型为海浪害\",\n            \"Frequency=“至少2次” — 表示发布频率至少2次\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterType(d, 风暴潮) ∨ DisasterType(d, 海浪害) → (IssueAlert(d, 至少2次) ∧ EmergencyConsultation(d, 视频, 至少2次))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“风暴潮” — 表示灾害类型为风暴潮\",\n            \"DisasterTrend=“加重” — 表示预计灾害趋势加重\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterTrend(d, 加重) ∨ DisasterTrend(d, 重大变化) → IncreaseFrequency(d)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“海冰” — 表示灾害类型为海冰\",\n            \"Frequency=“1次” — 表示发布频率为1次\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterType(d, 海冰) → IssueAlert(d, 1次) ∧ VideoConsultation(d, 1次)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“海啸” — 表示灾害类型为海啸\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterType(d, 海啸) → (IssueWarning(d) ∨ EmergencyConsultation(d, 电话, 随时))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“预报中心” — 表示预报中心\",\n            \"d=《海洋局值班信息》 — 表示编写的文件\",\n            \"t=“灾害预测意见” — 表示简要介绍的内容\",\n            \"i=“国务院应急办” — 表示报送信息的接收单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"AlertInitial(预报中心) ∨ AlertUpgrade(预报中心) → WriteInfo(预报中心, 《海洋局值班信息》, 灾害预测意见) ∧ ReportInfo(预报中心, 国务院应急办, 《海洋局值班信息》)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“预报中心” — 表示预报中心\",\n            \"d=《海洋局值班信息》 — 表示编写的文件\",\n            \"t=“灾害实况和预测意见” — 表示简要介绍的内容\",\n            \"i=“国务院应急办” — 表示报送信息的接收单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"DayAfter(预报中心) → WriteInfo(预报中心, 《海洋局值班信息》, 灾害实况和预测意见) ∧ ReportInfo(预报中心, 国务院应急办, 《海洋局值班信息》) ∧ TimeBefore(预报中心, 15)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“预报中心” — 表示预报中心\",\n            \"e=“国家防总” — 表示请求会商支持的单位\",\n            \"r=“会商支持的具体要求” — 表示会商支持的具体要求\"\n        ],\n        \"instance_logicexpression\": [\n            \"ConsultationRequest(国家防总, 会商支持的具体要求) → ProvideConsultationSupport(预报中心, 国家防总, 会商支持的具体要求)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“海区预报中心” — 表示海区预报中心\",\n            \"e=“沿海省人民政府” — 表示请求警报服务的单位\",\n            \"r=“海洋灾害警报服务的具体需求” — 表示海洋灾害警报服务的具体需求\"\n        ],\n        \"instance_logicexpression\": [\n            \"AlertRequest(沿海省人民政府, 海洋灾害警报服务的具体需求) → ProvideAlertService(海区预报中心, 沿海省人民政府, 海洋灾害警报服务的具体需求)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“预报机构” — 表示预报机构\",\n            \"o=“整体会商意见” — 表示整体会商意见\"\n        ],\n        \"instance_logicexpression\": [\n            \"Disagreement(预报机构, 整体会商意见) → IncludeDisagreement(预报机构, 整体会商意见) ∨ IncludeOverallOpinion(预报机构, 整体会商意见)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"国家海洋局开通了关于应急响应工作的专题网页\",\n            \"国家海洋局网站报道了应急响应工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"OpenSpecialPage(国家海洋局, 应急响应工作) ∧ Report(国家海洋局网站, 应急响应工作)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"中国海洋报进行了采访报道\"\n        ],\n        \"instance_logicexpression\": [\n            \"InterviewReport(中国海洋报)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"市级预报机构通过网站发布了灾害预警信息\",\n            \"市级预报机构通过微博公开了应急响应工作情况\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o ∀c ∀i ∀w (预报机构(市级预报机构) → (PublishWarning(市级预报机构, 网站, 灾害预警信息) ∧ PublicizeWork(市级预报机构, 微博, 应急响应工作情况)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"省级预报机构通过微信发布了灾害预警信息\",\n            \"省级预报机构通过网站公开了服务工作情况\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o ∀c ∀i ∀w (预报机构(省级预报机构) → (PublishWarning(省级预报机构, 微信, 灾害预警信息) ∧ PublicizeWork(省级预报机构, 网站, 服务工作情况)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"国家预报机构通过电视发布了灾害预警信息\",\n            \"国家预报机构通过广播公开了应急响应工作情况\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o ∀c ∀i ∀w (预报机构(国家预报机构) → (PublishWarning(国家预报机构, 电视, 灾害预警信息) ∧ PublicizeWork(国家预报机构, 广播, 应急响应工作情况)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“局减灾司” — 表示局减灾司部门\",\n            \"c=“预报中心” — 表示预报中心\",\n            \"s=“灾害发展形势” — 表示灾害发展形势\",\n            \"l=“Ⅲ级应急响应启动命令” — 表示Ⅲ级应急响应启动命令\",\n            \"Leader=“局减灾司领导” — 表示局减灾司领导\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀c ∀s ∀l (Organize(“局减灾司”, “预报中心”) ∧ Assess(“局减灾司”, “灾害发展形势”) → (Determine(“局减灾司”, Ⅲ) ∧ Activate(Ⅲ, “Ⅲ级应急响应启动命令”) ∧ Issue(“Ⅲ级应急响应启动命令”, “局减灾司领导”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“局减灾司” — 表示局减灾司部门\",\n            \"c=“减灾中心” — 表示减灾中心\",\n            \"s=“灾害发展形势” — 表示灾害发展形势\",\n            \"l=“Ⅲ级应急响应启动命令” — 表示Ⅲ级应急响应启动命令\",\n            \"Leader=“局减灾司领导” — 表示局减灾司领导\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀c ∀s ∀l (Organize(“局减灾司”, “减灾中心”) ∧ Assess(“局减灾司”, “灾害发展形势”) → (Determine(“局减灾司”, Ⅲ) ∧ Activate(Ⅲ, “Ⅲ级应急响应启动命令”) ∧ Issue(“Ⅲ级应急响应启动命令”, “局减灾司领导”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“国家海洋局” — 表示国家海洋局作为受影响的组织\",\n            \"o=“东海分局” — 表示东海分局作为受影响的组织\"\n        ],\n        \"instance_logicexpression\": [\n            \"AffectedOrganization(国家海洋局) → (CommunicationOpen(国家海洋局) ∧ MonitorDynamics(国家海洋局) ∧ CoordinateResponse(国家海洋局))\",\n            \"AffectedOrganization(东海分局) → (CommunicationOpen(东海分局) ∧ MonitorDynamics(东海分局) ∧ CoordinateResponse(东海分局))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“张华” — 表示张华作为工作人员\",\n            \"p=“李娜” — 表示李娜作为工作人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"Staff(张华) → AttendMeeting(张华)\",\n            \"Staff(李娜) → AttendMeeting(李娜)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家海洋预报中心” — 表示国家海洋预报中心作为观测、预报或减灾业务机构\",\n            \"p=“王强” — 表示王强作为该机构的工作人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"ObservationOrganization(国家海洋预报中心) ∨ ForecastOrganization(国家海洋预报中心) ∨ MitigationOrganization(国家海洋预报中心) → (LeaderOnDuty(国家海洋预报中心) ∧ Staff(王强, 国家海洋预报中心) → OnDuty24Hours(王强))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“南海减灾中心” — 表示南海减灾中心作为观测、预报或减灾业务机构\",\n            \"p=“赵敏” — 表示赵敏作为该机构的工作人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"ObservationOrganization(南海减灾中心) ∨ ForecastOrganization(南海减灾中心) ∨ MitigationOrganization(南海减灾中心) → (LeaderOnDuty(南海减灾中心) ∧ Staff(赵敏, 南海减灾中心) → OnDuty24Hours(赵敏))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“海洋观测站A” — 表示海洋观测站A随时监控海洋观测仪器设备运行情况\",\n            \"Device=“波浪测量仪” — 表示波浪测量仪出现故障\",\n            \"Authority=“国家海洋局” — 表示向国家海洋局报送故障情况\",\n            \"Person=“观测员小李” — 表示观测人员为小李\",\n            \"Station=“海洋观测站A” — 表示具备条件的海洋观测站A\",\n            \"Time=“每日8时至17时” — 表示人工补测的时段为每日8时至17时\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (Monitor(海洋观测站A) → (Malfunction(波浪测量仪) → (ReportMalfunction(海洋观测站A, 国家海洋局) ∧ (Safety(观测员小李) → RepairOrReplace(波浪测量仪)) ∧ (Condition(海洋观测站A) → ManualMeasurement(海洋观测站A, 每日8时至17时) ∧ InputAndReport(海洋观测站A))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海洋观测站B” — 表示海洋观测站B随时监控海洋观测仪器设备运行情况\",\n            \"Device=“温度计” — 表示温度计出现故障\",\n            \"Authority=“地方海洋局” — 表示向地方海洋局报送故障情况\",\n            \"Person=“观测员小王” — 表示观测人员为小王\",\n            \"Station=“海洋观测站B” — 表示具备条件的海洋观测站B\",\n            \"Time=“每日8时至17时” — 表示人工补测的时段为每日8时至17时\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (Monitor(海洋观测站B) → (Malfunction(温度计) → (ReportMalfunction(海洋观测站B, 地方海洋局) ∧ (Safety(观测员小王) → RepairOrReplace(温度计)) ∧ (Condition(海洋观测站B) → ManualMeasurement(海洋观测站B, 每日8时至17时) ∧ InputAndReport(海洋观测站B))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海洋观测站C” — 表示海洋观测站C随时监控海洋观测仪器设备运行情况\",\n            \"Device=“盐度计” — 表示盐度计出现故障\",\n            \"Authority=“海洋观测数据中心” — 表示向海洋观测数据中心报送故障情况\",\n            \"Person=“观测员小赵” — 表示观测人员为小赵\",\n            \"Station=“海洋观测站C” — 表示具备条件的海洋观测站C\",\n            \"Time=“每日8时至17时” — 表示人工补测的时段为每日8时至17时\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (Monitor(海洋观测站C) → (Malfunction(盐度计) → (ReportMalfunction(海洋观测站C, 海洋观测数据中心) ∧ (Safety(观测员小赵) → RepairOrReplace(盐度计)) ∧ (Condition(海洋观测站C) → ManualMeasurement(海洋观测站C, 每日8时至17时) ∧ InputAndReport(海洋观测站C))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“东海海区” — 表示东海海区受到海浪灾害的影响\",\n            \"b=“东海分局” — 表示由东海分局负责下达观测指令\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (AffectedArea(“东海海区”) ∧ 海浪灾害(“东海海区”) → (OrganizeObservation(“东海分局”, “东海海区”) ∧ FullDayObservation(Point)))\",\n            \"∀a (AffectedArea(“东海海区”) ∧ 海浪灾害(“东海海区”) → (OrganizeObservation(“东海分局”, “东海海区”) ∧ DaytimeObservation(Point)))\",\n            \"∀b (AffectedArea(“东海海区”) → IssueObservationOrder(“东海分局”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“黄海海区” — 表示黄海海区受到海冰灾害的影响\",\n            \"b=“北海分局” — 表示由北海分局负责下达观测指令\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (AffectedArea(“黄海海区”) ∧ 海冰灾害(“黄海海区”) → (ConductOnsiteInspection(“北海分局”, “黄海海区”, 2) ∧ ∀d (观测结束(d) → SendObservationData(d, 预报中心) ∧ SendObservationData(d, 受影响省机构))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“南海海区” — 表示南海海区受到海浪灾害的影响\",\n            \"b=“南海分局” — 表示由南海分局负责下达观测指令\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (AffectedArea(“南海海区”) ∧ 海浪灾害(“南海海区”) → (OrganizeObservation(“南海分局”, “南海海区”) ∧ FullDayObservation(Point)))\",\n            \"∀a (AffectedArea(“南海海区”) ∧ 海浪灾害(“南海海区”) → (OrganizeObservation(“南海分局”, “南海海区”) ∧ DaytimeObservation(Point)))\",\n            \"∀b (AffectedArea(“南海海区”) → IssueObservationOrder(“南海分局”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“渤海海区” — 表示渤海海区受到海冰灾害的影响\",\n            \"b=“北海分局” — 表示由北海分局负责下达观测指令\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (AffectedArea(“渤海海区”) ∧ 海冰灾害(“渤海海区”) → (ConductOnsiteInspection(“北海分局”, “渤海海区”, 2) ∧ ∀d (观测结束(d) → SendObservationData(d, 预报中心) ∧ SendObservationData(d, 受影响省机构))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“预报中心” — 表示预报中心作为数据传输节点\",\n            \"t=“8时” — 表示在8时进行监控\"\n        ],\n        \"instance_logicexpression\": [\n            \"DataNode(预报中心) → ∀t (Time(8时) ∧ 8时至20时(8时) → (Monitor(预报中心) ∧ ∃m (ManualMonitor(预报中心, m) ∧ 3小时间隔(m))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“海区预报中心” — 表示海区预报中心作为数据传输节点\",\n            \"s=“海区预报中心” — 表示海区预报中心作为上一级主管部门\",\n            \"d=“中心站” — 表示中心站作为下属数据传输节点\",\n            \"Fault(d) — 表示中心站发生数据传输故障\"\n        ],\n        \"instance_logicexpression\": [\n            \"DataNode(海区预报中心) ∧ Superior(海区预报中心) ∧ Fault(中心站) → ReportFault(海区预报中心, 中心站) ∧ RestoreTransmission(中心站)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“中心站” — 表示中心站作为发送节点\",\n            \"r=“预报中心” — 表示预报中心作为接收者\",\n            \"e=“风” — 表示风作为观测要素\",\n            \"t=“10时” — 表示在10时发送数据\"\n        ],\n        \"instance_logicexpression\": [\n            \"Fault线路(中心站) ∧ 发送节点(中心站) ∧ 接收者(预报中心) ∧ 要素(风) ∧ Time(10时) → SendData(中心站, 预报中心, 风, 10时) ∧ 3小时间隔(10时)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“卫星中心” — 表示卫星中心作为提供资料的节点\",\n            \"r=“预报中心” — 表示预报中心作为接收者\",\n            \"灾害影响资料(r) — 表示灾害影响期间的卫星遥感分析处理实时资料\"\n        ],\n        \"instance_logicexpression\": [\n            \"SatelliteCenter(卫星中心) ∧ 接收者(预报中心) ∧ 灾害影响资料(预报中心) → ProvideData(卫星中心, 预报中心, 灾害影响资料(预报中心))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“监测中心” — 表示监测中心作为发送观测资料的节点\",\n            \"r=“预报中心” — 表示预报中心作为接收者\",\n            \"d=“鲅鱼圈岸基测冰雷达站观测资料” — 表示观测资料\"\n        ],\n        \"instance_logicexpression\": [\n            \"MonitoringCenter(监测中心) ∧ 接收者(预报中心) ∧ 观测资料(鲅鱼圈岸基测冰雷达站观测资料) → SendObservationData(监测中心, 预报中心, 鲅鱼圈岸基测冰雷达站观测资料)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“风暴潮” — 表示灾害类型为风暴潮\",\n            \"Frequency=2 — 表示发布频率为每日2次\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterType(d, 风暴潮) ∨ DisasterType(d, 海浪) → IssueAlert(d, 2)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“海浪” — 表示灾害类型为海浪\",\n            \"Frequency=2 — 表示发布频率为每日2次\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterType(d, 风暴潮) ∨ DisasterType(d, 海浪) → IssueAlert(d, 2)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“海冰” — 表示灾害类型为海冰\",\n            \"Frequency=1 — 表示发布频率为每日1次\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterType(d, 海冰) → IssueAlert(d, 1)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“风暴潮” — 表示灾害类型为风暴潮\",\n            \"DisasterTrend=“加重” — 表示灾害趋势加重\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterTrend(d, 加重) ∨ DisasterTrend(d, 重大变化) → IncreaseFrequency(d)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“视频” — 表示应急会商方式为视频\"\n        ],\n        \"instance_logicexpression\": [\n            \"m = 视频 ∨ m = 电话) → EmergencyConsultation(m)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Times=1 — 表示每日视频会商的次数不少于1次\"\n        ],\n        \"instance_logicexpression\": [\n            \"VideoConsultation(Times) ∧ Times ≥ 1\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"预报中心=“国家海洋预报中心” — 表示预报中心为国家海洋预报中心\",\n            \"Time=“2023-12-05 10:00” — 表示预报中心提前确定并通知的具体时间\"\n        ],\n        \"instance_logicexpression\": [\n            \"DetermineTime(预报中心, Time) → ∃t (Time = t ∧ Notify(t))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“预报中心” — 表示预报中心\",\n            \"t1=“警报初发和升级时” — 表示警报初发和升级的时间\",\n            \"i1=《海洋局值班信息》 — 表示编写的信息类型\",\n            \"AlertInitial(预报中心) — 表示预报中心在警报初发时\",\n            \"AlertUpgrade(预报中心) — 表示预报中心在警报升级时\"\n        ],\n        \"instance_logicexpression\": [\n            \"AlertInitial(预报中心) ∨ AlertUpgrade(预报中心) → WriteInfo(预报中心, 警报初发和升级时, 海洋局值班信息) ∧ ReportInfo(预报中心, 海洋局值班信息, 国务院应急办)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“预报中心” — 表示预报中心\",\n            \"t2=“次日起每日15时前” — 表示次日起每日15时前的时间\",\n            \"i1=《海洋局值班信息》 — 表示编写的信息类型\"\n        ],\n        \"instance_logicexpression\": [\n            \"t2 > t1 → (WriteInfo(预报中心, 次日起每日15时前, 海洋局值班信息) ∧ ReportInfo(预报中心, 海洋局值班信息, 国务院应急办))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“预报中心” — 表示预报中心\",\n            \"d=“国务院相关部委” — 表示服务对象为国务院相关部委\",\n            \"s=“海洋灾害警报服务” — 表示服务内容为海洋灾害警报服务\",\n            \"f=“具体沟通确定” — 表示服务形式为具体沟通确定\"\n        ],\n        \"instance_logicexpression\": [\n            \"SpecificRequirement(国务院相关部委, 海洋灾害警报服务, 具体沟通确定) → ProvideService(预报中心, 国务院相关部委, 海洋灾害警报服务, 具体沟通确定)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“预报中心” — 表示预报中心\",\n            \"a=“整体会商意见” — 表示整体会商意见\",\n            \"r=“分歧论据” — 表示分歧论据\"\n        ],\n        \"instance_logicexpression\": [\n            \"Disagreement(预报中心, 整体会商意见, 分歧论据) → (ProvideService(预报中心, 决策服务单位, 服务内容, 服务形式) ∧ Introduce(整体会商意见, 分歧论据))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“气象局” — 表示预报减灾机构为气象局\",\n            \"m=“中央新闻社” — 表示联系的新闻媒体为中央新闻社\",\n            \"c=“网站” — 表示发布信息的渠道为网站\",\n            \"I=“台风预警” — 表示发布的信息是台风预警\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀m∀c∀I (UnifiedOrganization(Office) ∧ ContactMedia(“气象局”, “中央新闻社”) → (PublishInformation(“气象局”, “网站”, “台风预警”) ∧ (DisasterWarning(“台风预警”) ∨ EmergencyResponseService(“台风预警”))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“地震局” — 表示预报减灾机构为地震局\",\n            \"m=“国家电视台” — 表示联系的新闻媒体为国家电视台\",\n            \"c=“微博” — 表示发布信息的渠道为微博\",\n            \"I=“地震应急响应” — 表示发布的信息是关于地震应急响应的信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀m∀c∀I (UnifiedOrganization(Office) ∧ ContactMedia(“地震局”, “国家电视台”) → (PublishInformation(“地震局”, “微博”, “地震应急响应”) ∧ (DisasterWarning(“地震应急响应”) ∨ EmergencyResponseService(“地震应急响应”))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“水文站” — 表示预报减灾机构为水文站\",\n            \"m=“地方日报” — 表示联系的新闻媒体为地方日报\",\n            \"c=“微信” — 表示发布信息的渠道为微信\",\n            \"I=“洪水预警” — 表示发布的信息是洪水预警\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀m∀c∀I (UnifiedOrganization(Office) ∧ ContactMedia(“水文站”, “地方日报”) → (PublishInformation(“水文站”, “微信”, “洪水预警”) ∧ (DisasterWarning(“洪水预警”) ∨ EmergencyResponseService(“洪水预警”))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“消防局” — 表示预报减灾机构为消防局\",\n            \"m=“网络新闻平台” — 表示联系的新闻媒体为网络新闻平台\",\n            \"c=“官方网站” — 表示发布信息的渠道为官方网站\",\n            \"I=“火灾服务工作情况” — 表示发布的信息是关于火灾服务工作情况的信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀m∀c∀I (UnifiedOrganization(Office) ∧ ContactMedia(“消防局”, “网络新闻平台”) → (PublishInformation(“消防局”, “官方网站”, “火灾服务工作情况”) ∧ (DisasterWarning(“火灾服务工作情况”) ∨ EmergencyResponseService(“火灾服务工作情况”))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“局减灾司” — 表示局减灾司部门\",\n            \"c=“预报中心” — 表示预报中心\",\n            \"s=“当前灾害发展形势” — 表示当前的灾害发展形势\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀c∀s (Organize(局减灾司, 预报中心) ∧ Organize(局减灾司, 减灾中心) ∧ Assess(局减灾司, 当前灾害发展形势) → Activate(Ⅳ级应急响应))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“局减灾司” — 表示局减灾司部门\",\n            \"c=“减灾中心” — 表示减灾中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀c∀s (Organize(局减灾司, 预报中心) ∧ Organize(局减灾司, 减灾中心) ∧ Assess(局减灾司, s) → Activate(Ⅳ级应急响应))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“局减灾司” — 表示局减灾司部门\",\n            \"c=“预报中心” — 表示预报中心\",\n            \"s=“台风即将登陆” — 表示台风即将登陆的灾害发展形势\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀c∀s (Organize(局减灾司, 预报中心) ∧ Organize(局减灾司, 减灾中心) ∧ Assess(局减灾司, 台风即将登陆) → Activate(Ⅳ级应急响应))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“局减灾司” — 表示局减灾司部门\",\n            \"c=“减灾中心” — 表示减灾中心\",\n            \"s=“地震发生” — 表示地震发生的灾害发展形势\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀c∀s (Organize(局减灾司, 预报中心) ∧ Organize(局减灾司, 减灾中心) ∧ Assess(局减灾司, 地震发生) → Activate(Ⅳ级应急响应))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“局减灾司” — 表示局减灾司部门\",\n            \"c=“预报中心” — 表示预报中心\",\n            \"s=“洪水预警” — 表示洪水预警的灾害发展形势\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀c∀s (Organize(局减灾司, 预报中心) ∧ Organize(局减灾司, 减灾中心) ∧ Assess(局减灾司, 洪水预警) → Activate(Ⅳ级应急响应))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“局减灾司” — 表示局减灾司部门\",\n            \"c=“减灾中心” — 表示减灾中心\",\n            \"s=“森林火灾” — 表示森林火灾的灾害发展形势\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀c∀s (Organize(局减灾司, 预报中心) ∧ Organize(局减灾司, 减灾中心) ∧ Assess(局减灾司, 森林火灾) → Activate(Ⅳ级应急响应))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“局减灾司” — 表示局减灾司部门\",\n            \"c=“预报中心” — 表示预报中心\",\n            \"s=“当前灾害发展形势” — 表示当前的灾害发展形势\",\n            \"Leader=“局减灾司领导” — 表示局减灾司的领导\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Activate(Ⅳ级应急响应) → Issue(Ⅳ级应急响应启动命令, 局减灾司领导))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“张局长” — 张局长是国家海洋局的领导\",\n            \"o=“国家海洋局” — 国家海洋局是观测、预报和减灾业务机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"相关领导(张局长) ∨ 工作人员(张局长) → (CommunicationOpen(张局长) ∧ MonitorDisaster(张局长) ∧ CoordinateEmergencyResponse(张局长))\",\n            \"观测机构(国家海洋局) ∨ 预报机构(国家海洋局) ∨ 减灾机构(国家海洋局) → (LeaderOnDuty(国家海洋局) ∧ StaffOnDuty(国家海洋局))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“李处长” — 李处长是受影响海区分局局长\",\n            \"o=“东海分局” — 东海分局是观测、预报和减灾业务机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"相关领导(李处长) ∨ 工作人员(李处长) → (CommunicationOpen(李处长) ∧ MonitorDisaster(李处长) ∧ CoordinateEmergencyResponse(李处长))\",\n            \"观测机构(东海分局) ∨ 预报机构(东海分局) ∨ 减灾机构(东海分局) → (LeaderOnDuty(东海分局) ∧ StaffOnDuty(东海分局))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“王工程师” — 王工程师是国家海洋局的工作人员\",\n            \"o=“南海分局” — 南海分局是观测、预报和减灾业务机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"相关领导(王工程师) ∨ 工作人员(王工程师) → (CommunicationOpen(王工程师) ∧ MonitorDisaster(王工程师) ∧ CoordinateEmergencyResponse(王工程师))\",\n            \"观测机构(南海分局) ∨ 预报机构(南海分局) ∨ 减灾机构(南海分局) → (LeaderOnDuty(南海分局) ∧ StaffOnDuty(南海分局))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“赵研究员” — 赵研究员是受影响海区分局的工作人员\",\n            \"o=“北海分局” — 北海分局是观测、预报和减灾业务机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"相关领导(赵研究员) ∨ 工作人员(赵研究员) → (CommunicationOpen(赵研究员) ∧ MonitorDisaster(赵研究员) ∧ CoordinateEmergencyResponse(赵研究员))\",\n            \"观测机构(北海分局) ∨ 预报机构(北海分局) ∨ 减灾机构(北海分局) → (LeaderOnDuty(北海分局) ∧ StaffOnDuty(北海分局))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“海洋观测站A” — 表示海洋观测站A随时监控海观测仪器设备运行情况\",\n            \"Device=“波浪测量仪” — 表示波浪测量仪出现故障\",\n            \"Authority=“国家海洋局” — 表示向国家海洋局报送故障情况\",\n            \"Inspector=“观测员张伟” — 表示观测人员张伟\",\n            \"Station=“海洋观测站A” — 表示海洋观测站A具备条件\",\n            \"Time=“每日8时至17时” — 表示人工补测的时段\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (Monitor(海洋观测站A) → (Malfunction(波浪测量仪) → (ReportMalfunction(海洋观测站A, 国家海洋局) ∧ (Safety(观测员张伟) → RepairOrReplace(波浪测量仪)) ∧ (Condition(海洋观测站A) → ManualMeasurement(海洋观测站A, 每日8时至17时) ∧ InputAndReport(海洋观测站A))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海洋观测站B” — 表示海洋观测站B随时监控海观测仪器设备运行情况\",\n            \"Device=“温度计” — 表示温度计出现故障\",\n            \"Authority=“地方海洋局” — 表示向地方海洋局报送故障情况\",\n            \"Inspector=“观测员李娜” — 表示观测人员李娜\",\n            \"Station=“海洋观测站B” — 表示海洋观测站B具备条件\",\n            \"Time=“每日8时至17时” — 表示人工补测的时段\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (Monitor(海洋观测站B) → (Malfunction(温度计) → (ReportMalfunction(海洋观测站B, 地方海洋局) ∧ (Safety(观测员李娜) → RepairOrReplace(温度计)) ∧ (Condition(海洋观测站B) → ManualMeasurement(海洋观测站B, 每日8时至17时) ∧ InputAndReport(海洋观测站B))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“海洋观测站C” — 表示海洋观测站C随时监控海观测仪器设备运行情况\",\n            \"Device=“盐度计” — 表示盐度计出现故障\",\n            \"Authority=“区域海洋监测中心” — 表示向区域海洋监测中心报送故障情况\",\n            \"Inspector=“观测员王强” — 表示观测人员王强\",\n            \"Station=“海洋观测站C” — 表示海洋观测站C具备条件\",\n            \"Time=“每日8时至17时” — 表示人工补测的时段\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (Monitor(海洋观测站C) → (Malfunction(盐度计) → (ReportMalfunction(海洋观测站C, 区域海洋监测中心) ∧ (Safety(观测员王强) → RepairOrReplace(盐度计)) ∧ (Condition(海洋观测站C) → ManualMeasurement(海洋观测站C, 每日8时至17时) ∧ InputAndReport(海洋观测站C))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"b=“山东省” — 山东省受到海冰灾害影响\",\n            \"s=“青岛海洋站” — 北海分局组织青岛海洋站进行观测\",\n            \"p=“山东省海洋预报机构” — 受影响的山东省海洋预报机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀b∀s∀p (Affected(山东省) ∧ OrganizeObservation(北海分局, 青岛海洋站) → (ConductPatrol(青岛海洋站) ∧ ∀d (观测结束(d) → SendData(青岛海洋站, 预报中心, d) ∧ SendData(青岛海洋站, 北海预报中心, d) ∧ SendData(青岛海洋站, 山东省海洋预报机构, d))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"b=“辽宁省” — 辽宁省受到海冰灾害影响\",\n            \"s=“大连海洋站” — 北海分局组织大连海洋站进行观测\",\n            \"p=“辽宁省海洋预报机构” — 受影响的辽宁省海洋预报机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀b∀s∀p (Affected(辽宁省) ∧ OrganizeObservation(北海分局, 大连海洋站) → (ConductPatrol(大连海洋站) ∧ ∀d (观测结束(d) → SendData(大连海洋站, 预报中心, d) ∧ SendData(大连海洋站, 北海预报中心, d) ∧ SendData(大连海洋站, 辽宁省海洋预报机构, d))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"b=“河北省” — 河北省受到海冰灾害影响\",\n            \"s=“秦皇岛海洋站” — 北海分局组织秦皇岛海洋站进行观测\",\n            \"p=“河北省海洋预报机构” — 受影响的河北省海洋预报机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀b∀s∀p (Affected(河北省) ∧ OrganizeObservation(北海分局, 秦皇岛海洋站) → (ConductPatrol(秦皇岛海洋站) ∧ ∀d (观测结束(d) → SendData(秦皇岛海洋站, 预报中心, d) ∧ SendData(秦皇岛海洋站, 北海预报中心, d) ∧ SendData(秦皇岛海洋站, 河北省海洋预报机构, d))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"b=“天津市” — 天津市受到海冰灾害影响\",\n            \"s=“天津海洋站” — 北海分局组织天津海洋站进行观测\",\n            \"p=“天津市海洋预报机构” — 受影响的天津市海洋预报机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀b∀s∀p (Affected(天津市) ∧ OrganizeObservation(北海分局, 天津海洋站) → (ConductPatrol(天津海洋站) ∧ ∀d (观测结束(d) → SendData(天津海洋站, 预报中心, d) ∧ SendData(天津海洋站, 北海预报中心, d) ∧ SendData(天津海洋站, 天津市海洋预报机构, d))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“预报中心” — 表示数据传输节点为预报中心\",\n            \"t=“8时” — 表示特定时间为8时\",\n            \"Superior(d)=“上级主管部门” — 表示预报中心的上一级主管部门\",\n            \"r=“海区预报中心” — 表示接收节点为海区预报中心\",\n            \"MainObservationData=“风、浪、潮观测数据” — 表示主要观测要素的数据\"\n        ],\n        \"instance_logicexpression\": [\n            \"DataNode(预报中心) → ∀t (Time(8时) ∧ 8时≤8时≤20时 → (8时 mod 3 = 0 → ManualMonitor(预报中心, 8时) ∧ (¬DataTransmission(预报中心, 8时) → (ReportFault(上级主管部门, 预报中心) ∧ RestoreTransmission(预报中心) ∧ SendData(预报中心, 海区预报中心, 风、浪、潮观测数据, 8时))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“中心站” — 表示数据传输节点为中心站\",\n            \"t=“11时” — 表示特定时间为11时\",\n            \"Superior(d)=“上级主管部门” — 表示中心站的上一级主管部门\",\n            \"r=“海洋站” — 表示接收节点为海洋站\"\n        ],\n        \"instance_logicexpression\": [\n            \"DataNode(中心站) → ∀t (Time(11时) ∧ 8时≤11时≤20时 → (11时 mod 3 = 0 → ManualMonitor(中心站, 11时) ∧ (¬DataTransmission(中心站, 11时) → (ReportFault(上级主管部门, 中心站) ∧ RestoreTransmission(中心站) ∧ ∀r (Receiver(海洋站) → SendData(中心站, 海洋站, 主观测要素数据, 11时)))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“海洋站” — 表示数据传输节点为海洋站\",\n            \"TransmissionRestored(d)=“true” — 表示海洋站的数据传输已恢复\"\n        ],\n        \"instance_logicexpression\": [\n            \"TransmissionRestored(海洋站) → CompleteRetransmission(海洋站)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“卫星中心” — 表示卫星中心\",\n            \"r=“预报中心” — 表示接收节点为预报中心\",\n            \"RealTimeRemoteSensingData=“卫星遥感分析处理实时资料” — 表示卫星遥感分析处理的实时资料\"\n        ],\n        \"instance_logicexpression\": [\n            \"SatelliteCenter(卫星中心) → ∀r (Receiver(预报中心) → ProvideData(卫星中心, 预报中心, 卫星遥感分析处理实时资料))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“监测中心” — 表示监测中心\",\n            \"r=“预报中心” — 表示接收节点为预报中心\",\n            \"ObservationData=“鲅鱼圈岸基测冰雷达站观测资料” — 表示观测资料\n        ],\n        \"instance_logicexpression\": [\n            \"MonitoringCenter(监测中心) → ∀r (Receiver(预报中心) → SendObservationData(监测中心, 预报中心, 鲅鱼圈岸基测冰雷达站观测资料))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“风暴潮” — 表示灾害类型为风暴潮\",\n            \"m=“视频” — 表示应急会商方式为视频\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterType(d, 风暴潮) ∨ DisasterType(d, 海浪) → IssueAlert(d, 2)\",\n            \"EmergencyConsultation(m) → (Method(m, 视频) ∨ Method(m, 电话))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“海浪” — 表示灾害类型为海浪\",\n            \"m=“电话” — 表示应急会商方式为电话\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterType(d, 风暴潮) ∨ DisasterType(d, 海浪) → IssueAlert(d, 2)\",\n            \"EmergencyConsultation(m) → (Method(m, 视频) ∨ Method(m, 电话))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“海冰” — 表示灾害类型为海冰\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterType(d, 海冰) → IssueAlert(d, 1)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“风暴潮” — 表示灾害类型为风暴潮\",\n            \"DisasterTrend(d, 重) — 表示预计灾害趋势重\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterTrend(d, 重) ∨ DisasterChange(d, 重大) → IncreaseFrequency(d)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“海浪” — 表示灾害类型为海浪\",\n            \"DisasterChange(d, 重大) — 表示有重大变化\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterTrend(d, 重) ∨ DisasterChange(d, 重大) → IncreaseFrequency(d)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“应急会商” — 表示咨询类型为应急会商\"\n        ],\n        \"instance_logicexpression\": [\n            \"VideoConsultation(1) → ∀c (Consultation(c) → Frequency(c, 视频) ≥ 1)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“预报中心” — 表示预报中心\",\n            \"d=《海洋局值班信息》 — 表示编写的文件\",\n            \"r=国务院应急办 — 表示报送信息的接收单位\",\n            \"Content=“灾害预测意见” — 表示简要介绍的内容\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀d ∀r (Alert(c) → WriteInfo(c, '海洋局值班信息', '灾害预测意见') ∧ ReportInfo(c, 国务院应急办, d))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“预报中心” — 表示预报中心\",\n            \"d=《海洋局值班信息》 — 表示编写的文件\",\n            \"r=国务院应急办 — 表示报送信息的接收单位\",\n            \"Content=“灾害实况和预测意见” — 表示简要介绍的内容\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀d (NextDay(c) → WriteInfo(c, '海洋局值班信息', '灾害实况和预测意见') ∧ ReportInfo(c, 国务院应急办, d))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“预报中心” — 表示预报中心\",\n            \"r=“国务院相关部委” — 表示请求服务的单位\",\n            \"s=“海洋灾害警报服务” — 表示提供的服务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀r ∀s (Request(r, s) → ProvideService(c, r, s))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“海区预报中心” — 表示海区预报中心\",\n            \"r=“沿海省人民政府” — 表示请求服务的单位\",\n            \"s=“海洋灾害警报服务” — 表示提供的服务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀r ∀s (Request(r, s) → ProvideService(c, r, s))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“预报中心” — 表示预报中心\",\n            \"o=“整体会商意见” — 表示与预报中心结论存在分歧的意见\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀o (Disagreement(c, o) → IncludeOpinion(c, o) ∨ IncludeReason(c, o))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“气象局” — 表示预报减灾机构为气象局\",\n            \"m=“中央新闻台” — 表示联系的新闻媒体为中央新闻台\",\n            \"c=“网站” — 表示发布信息的渠道为网站\",\n            \"Information=“台风预警” — 表示发布的信息是台风预警\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀m∀c (预报减灾机构(气象局) ∧ 局办公室组织(气象局) → (ContactMedia(气象局, 中央新闻台) ∧ (PublishInformation(气象局, 网站, 台风预警) ∨ PublishInformation(气象局, 网站, 应急响应服务情况))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“地震局” — 表示预报减灾机构为地震局\",\n            \"m=“地方日报” — 表示联系的新闻媒体为地方日报\",\n            \"c=“微博” — 表示发布信息的渠道为微博\",\n            \"Information=“地震预警” — 表示发布的信息是地震预警\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀m∀c (预报减灾机构(地震局) ∧ 局办公室组织(地震局) → (ContactMedia(地震局, 地方日报) ∧ (PublishInformation(地震局, 微博, 地震预警) ∨ PublishInformation(地震局, 微博, 应急响应服务情况))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“水文站” — 表示预报减灾机构为水文站\",\n            \"m=“网络新闻平台” — 表示联系的新闻媒体为网络新闻平台\",\n            \"c=“微信” — 表示发布信息的渠道为微信\",\n            \"Information=“洪水预警” — 表示发布的信息是洪水预警\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀m∀c (预报减灾机构(水文站) ∧ 局办公室组织(水文站) → (ContactMedia(水文站, 网络新闻平台) ∧ (PublishInformation(水文站, 微信, 洪水预警) ∨ PublishInformation(水文站, 微信, 应急响应服务情况))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“消防局” — 表示预报减灾机构为消防局\",\n            \"m=“电视新闻频道” — 表示联系的新闻媒体为电视新闻频道\",\n            \"c=“广播” — 表示发布信息的渠道为广播\",\n            \"Information=“火灾预警” — 表示发布的信息是火灾预警\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀m∀c (预报减灾机构(消防局) ∧ 局办公室组织(消防局) → (ContactMedia(消防局, 电视新闻频道) ∧ (PublishInformation(消防局, 广播, 火灾预警) ∨ PublishInformation(消防局, 广播, 应急响应服务情况))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“海啸” — 表示海洋灾害为海啸\",\n            \"Impact=“影响已减轻” — 表示灾害影响已减轻\",\n            \"LevelChange=“预警级别降低” — 表示预警级别降低\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (EffectiveDisposal(海啸) ∧ Assessment(海啸, 影响已减轻) → (¬扩大(影响已减轻) ∨ 减轻(影响已减轻))\",\n            \"∀d (EffectiveDisposal(海啸) ∧ (¬扩大(影响已减轻) ∨ 减轻(影响已减轻)) → (WarningLevel(海啸, Lower) ∨ WarningLevel(海啸, Lift))\",\n            \"∀d (WarningLevel(海啸, Lower) ∨ WarningLevel(海啸, Lift) → ∃l (LeaderLevel(l) ∧ IssueNotice(l, 预警级别降低)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“台风” — 表示海洋灾害为台风\",\n            \"Impact=“影响不再扩大” — 表示灾害影响不再扩大\",\n            \"LevelChange=“预警级别解除” — 表示预警级别解除\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (EffectiveDisposal(台风) ∧ Assessment(台风, 影响不再扩大) → (¬扩大(影响不再扩大) ∨ 减轻(影响不再扩大))\",\n            \"∀d (EffectiveDisposal(台风) ∧ (¬扩大(影响不再扩大) ∨ 减轻(影响不再扩大)) → (WarningLevel(台风, Lower) ∨ WarningLevel(台风, Lift))\",\n            \"∀d (WarningLevel(台风, Lower) ∨ WarningLevel(台风, Lift) → ∃l (LeaderLevel(l) ∧ IssueNotice(l, 预警级别解除)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“赤潮” — 表示海洋灾害为赤潮\",\n            \"Impact=“影响已减轻” — 表示灾害影响已减轻\",\n            \"LevelChange=“预警级别降低” — 表示预警级别降低\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (EffectiveDisposal(赤潮) ∧ Assessment(赤潮, 影响已减轻) → (¬扩大(影响已减轻) ∨ 减轻(影响已减轻))\",\n            \"∀d (EffectiveDisposal(赤潮) ∧ (¬扩大(影响已减轻) ∨ 减轻(影响已减轻)) → (WarningLevel(赤潮, Lower) ∨ WarningLevel(赤潮, Lift))\",\n            \"∀d (WarningLevel(赤潮, Lower) ∨ WarningLevel(赤潮, Lift) → ∃l (LeaderLevel(l) ∧ IssueNotice(l, 预警级别降低)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“海冰” — 表示海洋灾害为海冰\",\n            \"Impact=“影响不再扩大” — 表示灾害影响不再扩大\",\n            \"LevelChange=“预警级别解除” — 表示预警级别解除\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (EffectiveDisposal(海冰) ∧ Assessment(海冰, 影响不再扩大) → (¬扩大(影响不再扩大) ∨ 减轻(影响不再扩大))\",\n            \"∀d (EffectiveDisposal(海冰) ∧ (¬扩大(影响不再扩大) ∨ 减轻(影响不再扩大)) → (WarningLevel(海冰, Lower) ∨ WarningLevel(海冰, Lift))\",\n            \"∀d (WarningLevel(海冰, Lower) ∨ WarningLevel(海冰, Lift) → ∃l (LeaderLevel(l) ∧ IssueNotice(l, 预警级别解除)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"L='Ⅰ级' — 表示启动了Ⅰ级应急响应\",\n            \"Department=“局减灾司” — 表示局减灾司组织灾害现场调查工作\",\n            \"Center=“减灾中心” — 表示减灾中心具体牵头灾害现场调查工作\",\n            \"Entity1=“预报中心” — 表示预报中心参与灾害现场调查工作\",\n            \"Entity2=“相关分局” — 表示相关分局参与灾害现场调查工作\",\n            \"Entity3=“省海洋主管部门” — 表示省海洋主管部门参与灾害现场调查工作\",\n            \"TimeLimit=“20个工作日” — 表示在应急响应终止后20个工作日内形成调查评估报告\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀L (ActivateEmergencyResponse(L) ∧ L='Ⅰ级' → (OrganizeInvestigation(局减灾司) ∧ LeadInvestigation(减灾中心) ∧ ParticipateInvestigation(预报中心) ∧ ParticipateInvestigation(相关分局) ∧ ParticipateInvestigation(省海洋主管部门) ∧ FormulateReport(20个工作日)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"L='Ⅱ级' — 表示启动了Ⅱ级应急响应\",\n            \"Regulation=“《海洋灾情调查评估与报送规定（暂行）》” — 表示按照《海洋灾情调查评估与报送规定（暂行）》开展工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀L (ActivateEmergencyResponse(L) ∧ L≠'Ⅰ级' → ConductAccordingToRegulation(《海洋灾情调查评估与报送规定（暂行）》))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"L='Ⅲ级' — 表示启动了Ⅲ级应急响应\",\n            \"Regulation=“《海洋灾情调查评估与报送规定（暂行）》” — 表示按照《海洋灾情调查评估与报送规定（暂行）》开展工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀L (ActivateEmergencyResponse(L) ∧ L≠'Ⅰ级' → ConductAccordingToRegulation(《海洋灾情调查评估与报送规定（暂行）》))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"L='Ⅳ级' — 表示启动了Ⅳ级应急响应\",\n            \"Regulation=“《海洋灾情调查评估与报送规定（暂行）》” — 表示按照《海洋灾情调查评估与报送规定（暂行）》开展工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀L (ActivateEmergencyResponse(L) ∧ L≠'Ⅰ级' → ConductAccordingToRegulation(《海洋灾情调查评估与报送规定（暂行）》))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“广东省海洋局” — 表示广东省海洋局参与灾害应急响应\",\n            \"DisasterType=“风暴潮” — 表示风暴潮灾害Ⅰ级、Ⅱ级应急响应终止\"\n        ],\n        \"instance_logicexpression\": [\n            \"ParticipateInEmergencyResponse(广东省海洋局) → (EmergencyResponseTerminated(风暴潮) → (ConductWorkSummary(广东省海洋局) ∧ ReviewWorkSituation(广东省海洋局) ∧ SubmitWorkSummary(广东省海洋局, 2个工作日)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“浙江省海洋局” — 表示浙江省海洋局参与灾害应急响应\",\n            \"DisasterType=“海啸” — 表示海啸灾害Ⅰ级、Ⅱ级应急响应终止\"\n        ],\n        \"instance_logicexpression\": [\n            \"ParticipateInEmergencyResponse(浙江省海洋局) → (EmergencyResponseTerminated(海啸) → (ConductWorkSummary(浙江省海洋局) ∧ ReviewWorkSituation(浙江省海洋局) ∧ SubmitWorkSummary(浙江省海洋局, 2个工作日)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家海洋局东海分局” — 表示国家海洋局东海分局参与灾害应急响应\",\n            \"DisasterType=“海冰” — 表示海冰灾害Ⅰ级、Ⅱ级应急响应终止\"\n        ],\n        \"instance_logicexpression\": [\n            \"ParticipateInEmergencyResponse(国家海洋局东海分局) → (EmergencyResponseTerminated(海冰) → (ConductWorkSummary(国家海洋局东海分局) ∧ ReviewWorkSituation(国家海洋局东海分局) ∧ SubmitWorkSummary(国家海洋局东海分局, 2个工作日)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家海洋局南海分局” — 表示国家海洋局南海分局参与灾害应急响应\",\n            \"DisasterType=“海浪” — 表示海浪灾害Ⅰ级、Ⅱ级应急响应终止\"\n        ],\n        \"instance_logicexpression\": [\n            \"ParticipateInEmergencyResponse(国家海洋局南海分局) → (EmergencyResponseTerminated(海浪) → (ConductWorkSummary(国家海洋局南海分局) ∧ ReviewWorkSituation(国家海洋局南海分局) ∧ SubmitWorkSummary(国家海洋局南海分局, 2个工作日)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"DisasterType=“海啸” — 表示海啸灾害警报解除\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterAlertLifted(海啸) → SubmitWorkSummary(Department, 2个工作日)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“国务院” — 表示国务院领导制定预案、实施预案和指导应急处置任务。\",\n            \"预案：重大沙尘暴灾害应急预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"国务院(Lead(国务院, 制定重大沙尘暴灾害应急预案) ∧ Lead(国务院, 实施重大沙尘暴灾害应急预案) ∧ Lead(国务院, 指导应急处置))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“国家林业局” — 表示国家林业局制定预案、实施预案和指导应急处置任务。\",\n            \"预案：重大沙尘暴灾害应急预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"国家林业局(Formulate(国家林业局, 重大沙尘暴灾害应急预案) ∧ Implement(国家林业局, 重大沙尘暴灾害应急预案) ∧ Guide(国家林业局, 应急处置))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“华北区域” — 表示华北区域发生沙尘暴灾害。\",\n            \"g=“华北地方政府” — 表示华北地方政府负责应急处置任务。\"\n        ],\n        \"instance_logicexpression\": [\n            \"DustStormDisaster(华北区域) → ∃g (地方政府(g) ∧ Responsible(g, 应急处置))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“西北区域” — 表示西北区域发生沙尘暴灾害。\",\n            \"g=“西北地方政府” — 表示西北地方政府负责应急处置任务。\"\n        ],\n        \"instance_logicexpression\": [\n            \"DustStormDisaster(西北区域) → ∃g (地方政府(g) ∧ Responsible(g, 应急处置))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“东北区域” — 表示东北区域发生沙尘暴灾害。\",\n            \"g=“东北地方政府” — 表示东北地方政府负责应急处置任务。\"\n        ],\n        \"instance_logicexpression\": [\n            \"DustStormDisaster(东北区域) → ∃g (地方政府(g) ∧ Responsible(g, 应急处置))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴A” — 表示特大沙尘暴灾害A\",\n            \"Area=“首都地区” — 表示沙尘暴影响的区域为首都地区\",\n            \"NumberOfPeople=15 — 表示沙尘暴造成的人员死亡数量为15人\",\n            \"Amount=60000000 — 表示沙尘暴造成的经济损失为6000万元\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (DustStormDisaster(沙尘暴A, I) → (Affect(沙尘暴A, 首都地区) ∧ (Death(沙尘暴A, 15) ∧ 15 ≥ 10) ∨ EconomicLoss(沙尘暴A, 60000000) ∧ 60000000 ≥ 50000000))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴B” — 表示特大沙尘暴灾害B\",\n            \"Area=“西北地区” — 表示沙尘暴影响的区域为西北地区\",\n            \"NumberOfPeople=8 — 表示沙尘暴造成的人员死亡数量为8人\",\n            \"Amount=55000000 — 表示沙尘暴造成的经济损失为5500万元\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (DustStormDisaster(沙尘暴B, I) → (Affect(沙尘暴B, 西北地区) ∧ (Death(沙尘暴B, 8) ∧ 8 < 10) ∨ EconomicLoss(沙尘暴B, 55000000) ∧ 55000000 ≥ 50000000))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴C” — 表示特大沙尘暴灾害C\",\n            \"Area=“东北地区” — 表示沙尘暴影响的区域为东北地区\",\n            \"NumberOfPeople=12 — 表示沙尘暴造成的人员死亡数量为12人\",\n            \"Amount=45000000 — 表示沙尘暴造成的经济损失为4500万元\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (DustStormDisaster(沙尘暴C, I) → (Affect(沙尘暴C, 东北地区) ∧ (Death(沙尘暴C, 12) ∧ 12 ≥ 10) ∨ EconomicLoss(沙尘暴C, 45000000) ∧ 45000000 < 50000000))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴D” — 表示特大沙尘暴灾害D\",\n            \"Area=“东南沿海” — 表示沙尘暴影响的区域为东南沿海\",\n            \"NumberOfPeople=9 — 表示沙尘暴造成的人员死亡数量为9人\",\n            \"Amount=58000000 — 表示沙尘暴造成的经济损失为5800万元\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (DustStormDisaster(沙尘暴D, I) → (Affect(沙尘暴D, 东南沿海) ∧ (Death(沙尘暴D, 9) ∧ 9 < 10) ∨ EconomicLoss(沙尘暴D, 58000000) ∧ 58000000 ≥ 50000000))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“重大沙尘暴” — 表示灾害类型为重大沙尘暴\",\n            \"c=“首都” — 表示受影响的城市为首都\",\n            \"p=6 — 表示因灾害造成的人员死亡人数为6人\",\n            \"a=3000万元 — 表示因灾害造成的经济损失为3000万元\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃d (Disaster(d) ∧ (∃c Affect(c, d) ∧ (c = '首都')) ∧ (∃p Death(p, d) ∧ 5 ≤ 6 ≤ 10) ∨ (∃a EconomicLoss(a, d) ∧ 1000万元 ≤ 3000万元 ≤ 5000万元) ∨ (∃f ∃t Closed(f, t) ∧ (f = '机场' ∨ f = '国家高速公路路网线路') ∧ t > 12小时))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“重大沙尘暴” — 表示灾害类型为重大沙尘暴\",\n            \"c=“华北区域” — 表示受影响的区域为华北区域\",\n            \"f=“机场” — 表示设施为机场\",\n            \"t=15小时 — 表示封闭时长为15小时\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃d (Disaster(d) ∧ (∃c Affect(c, d) ∧ (c = '华北区域')) ∧ (∃p Death(p, d) ∧ 5 ≤ p ≤ 10) ∨ (∃a EconomicLoss(a, d) ∧ 1000万元 ≤ a ≤ 5000万元) ∨ (∃f ∃t Closed(f, t) ∧ (f = '机场') ∧ 15小时 > 12小时))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“重大沙尘暴” — 表示灾害类型为重大沙尘暴\",\n            \"c=“长江三角洲” — 表示受影响的区域为长江三角洲\",\n            \"f=“国家高速公路路网线路” — 表示设施为国家高速公路路网线路\",\n            \"t=18小时 — 表示封闭时长为18小时\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃d (Disaster(d) ∧ (∃c Affect(c, d) ∧ (c = '长江三角洲')) ∧ (∃p Death(p, d) ∧ 5 ≤ p ≤ 10) ∨ (∃a EconomicLoss(a, d) ∧ 1000万元 ≤ a ≤ 5000万元) ∨ (∃f ∃t Closed(f, t) ∧ (f = '国家高速公路路网线路') ∧ 18小时 > 12小时))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“重大沙尘暴” — 表示灾害类型为重大沙尘暴\",\n            \"c=“西部城市” — 表示受影响的城市为西部城市\",\n            \"p=8 — 表示因灾害造成的人员死亡人数为8人\",\n            \"f=“机场” — 表示设施为机场\",\n            \"t=14小时 — 表示封闭时长为14小时\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃d (Disaster(d) ∧ (∃c Affect(c, d) ∧ (c = '西部城市')) ∧ (∃p Death(p, d) ∧ 5 ≤ 8 ≤ 10) ∨ (∃a EconomicLoss(a, d) ∧ 1000万元 ≤ a ≤ 5000万元) ∨ (∃f ∃t Closed(f, t) ∧ (f = '机场') ∧ 14小时 > 12小时))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=3 — 表示沙尘暴造成的人员死亡数量为3人\",\n            \"e=7000000 — 表示沙尘暴造成的经济损失金额为700万元\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃d ∃e ∃a ∃h (Death(3) ∧ 3 ≤ 5) ∨ (EconomicLoss(7000000) ∧ 7000000 ≥ 5000000 ∧ 7000000 ≤ 10000000) ∨ (AirportClosed(a) ∨ HighwayClosed(h))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“首都国际机场” — 表示首都国际机场因沙尘暴而封闭\",\n            \"h=“京沪高速” — 表示京沪高速因沙尘暴而封闭\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃d ∃e ∃a ∃h (Death(d) ∧ d ≤ 5) ∨ (EconomicLoss(e) ∧ e ≥ 5000000 ∧ e ≤ 10000000) ∨ (AirportClosed(首都国际机场) ∨ HighwayClosed(京沪高速))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=4 — 表示沙尘暴造成的人员死亡数量为4人\",\n            \"h=“沪蓉高速” — 表示沪蓉高速因沙尘暴而封闭\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃d ∃e ∃a ∃h (Death(4) ∧ 4 ≤ 5) ∨ (EconomicLoss(e) ∧ e ≥ 5000000 ∧ e ≤ 10000000) ∨ (AirportClosed(a) ∨ HighwayClosed(沪蓉高速))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=6500000 — 表示沙尘暴造成的经济损失金额为650万元\",\n            \"a=“浦东国际机场” — 表示浦东国际机场因沙尘暴而封闭\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃d ∃e ∃a ∃h (Death(d) ∧ d ≤ 5) ∨ (EconomicLoss(6500000) ∧ 6500000 ≥ 5000000 ∧ 6500000 ≤ 10000000) ∨ (AirportClosed(浦东国际机场) ∨ HighwayClosed(h))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴2024” — 表示2024年发生的沙尘暴灾害\",\n            \"Amount=“300万” — 表示经济损失为300万元\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterType(沙尘暴2024, '沙尘暴IV级') → (MinorImpact(沙尘暴2024, '人畜') ∧ MinorImpact(沙尘暴2024, '农作物') ∧ MinorImpact(沙尘暴2024, '经济林木') ∧ EconomicLoss(沙尘暴2024, 300万) ∧ 300万 < 5000000)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴2023” — 表示2023年发生的沙尘暴灾害\",\n            \"Amount=“400万” — 表示经济损失为400万元\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterType(沙尘暴2023, '沙尘暴IV级') → (MinorImpact(沙尘暴2023, '人畜') ∧ MinorImpact(沙尘暴2023, '农作物') ∧ MinorImpact(沙尘暴2023, '经济林木') ∧ EconomicLoss(沙尘暴2023, 400万) ∧ 400万 < 5000000)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴2022” — 表示2022年发生的沙尘暴灾害\",\n            \"Amount=“450万” — 表示经济损失为450万元\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterType(沙尘暴2022, '沙尘暴IV级') → (MinorImpact(沙尘暴2022, '人畜') ∧ MinorImpact(沙尘暴2022, '农作物') ∧ MinorImpact(沙尘暴2022, '经济林木') ∧ EconomicLoss(沙尘暴2022, 450万) ∧ 450万 < 5000000)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴2021” — 表示2021年发生的沙尘暴灾害\",\n            \"Amount=“480万” — 表示经济损失为480万元\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterType(沙尘暴2021, '沙尘暴IV级') → (MinorImpact(沙尘暴2021, '人畜') ∧ MinorImpact(沙尘暴2021, '农作物') ∧ MinorImpact(沙尘暴2021, '经济林木') ∧ EconomicLoss(沙尘暴2021, 480万) ∧ 480万 < 5000000)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“特大沙尘暴灾害” — 表示发生了特大沙尘暴灾害\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Occur(特大沙尘暴灾害) ∧ (d = 特大沙尘暴灾害 ∨ (d = 重大沙尘暴灾害 ∧ (Instruction(国务院, 需要国家林业局协助) ∨ RequestAssistance(省级人民政府, 国家林业局)))) → ActivatePlan(《国家重大沙尘暴灾害应急预案》)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“重大沙尘暴灾害” — 表示发生了重大沙尘暴灾害\",\n            \"Instruction(国务院, 需要国家林业局协助) — 表示国务院指示需要国家林业局协助\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Occur(重大沙尘暴灾害) ∧ (d = 特大沙尘暴灾害 ∨ (d = 重大沙尘暴灾害 ∧ (Instruction(国务院, 需要国家林业局协助) ∨ RequestAssistance(省级人民政府, 国家林业局)))) → ActivatePlan(《国家重大沙尘暴灾害应急预案》)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“重大沙尘暴灾害” — 表示发生了重大沙尘暴灾害\",\n            \"RequestAssistance(省级人民政府, 国家林业局) — 表示省级人民政府向国家林业局提出请求\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Occur(重大沙尘暴灾害) ∧ (d = 特大沙尘暴灾害 ∨ (d = 重大沙尘暴灾害 ∧ (Instruction(国务院, 需要国家林业局协助) ∨ RequestAssistance(省级人民政府, 国家林业局)))) → ActivatePlan(《国家重大沙尘暴灾害应急预案》)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Person=“张局长” — 张局长为国家林业局主要负责人\",\n            \"Person=“李副局长” — 李副局长为国家林业局分管副局长\",\n            \"Group=“国家林业局重大沙尘暴灾害应急领导小组”\"\n        ],\n        \"instance_logicexpression\": [\n            \"Leader(国家林业局重大沙尘暴灾害应急领导小组, 张局长) ∧ Leader(国家林业局重大沙尘暴灾害应急领导小组, 李副局长)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Person=“王主任” — 王主任为国家林业局办公室负责人\",\n            \"Person=“赵主任” — 赵主任为治沙负责人\",\n            \"Person=“钱主任” — 钱主任为计资负责人\",\n            \"Person=“孙主任” — 孙主任为机关服务负责人\",\n            \"Person=“李主任” — 李主任为宣传负责人\",\n            \"Group=“国家林业局重大沙尘暴灾害应急领导小组”\"\n        ],\n        \"instance_logicexpression\": [\n            \"GroupMember(王主任, 国家林业局重大沙尘暴灾害应急领导小组) ∧ GroupMember(赵主任, 国家林业局重大沙尘暴灾害应急领导小组) ∧ GroupMember(钱主任, 国家林业局重大沙尘暴灾害应急领导小组) ∧ GroupMember(孙主任, 国家林业局重大沙尘暴灾害应急领导小组) ∧ GroupMember(李主任, 国家林业局重大沙尘暴灾害应急领导小组)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Group=“国家林业局重大沙尘暴灾害应急领导小组”\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyCommandCenter(国家林业局重大沙尘暴灾害应急领导小组)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Group=“国家林业局重大沙尘暴灾害应急领导小组”\",\n            \"Task=“贯彻落实党中央国务院方针政策”\",\n            \"Task=“建立和完善应急机制”\",\n            \"Task=“组织制定和完善应急预案”\",\n            \"Task=“沙尘暴灾害应急重大问题研究决策指挥协调”\",\n            \"Task=“完成国务院交办任务”\"\n        ],\n        \"instance_logicexpression\": [\n            \"Responsible(国家林业局重大沙尘暴灾害应急领导小组, 贯彻落实党中央国务院方针政策) ∧ Responsible(国家林业局重大沙尘暴灾害应急领导小组, 建立和完善应急机制) ∧ Responsible(国家林业局重大沙尘暴灾害应急领导小组, 组织制定和完善应急预案) ∧ Responsible(国家林业局重大沙尘暴灾害应急领导小组, 沙尘暴灾害应急重大问题研究决策指挥协调) ∧ Responsible(国家林业局重大沙尘暴灾害应急领导小组, 完成国务院交办任务)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Group=“国家林业局重大沙尘暴灾害应急领导小组”\",\n            \"Policy=“党中央国务院方针政策”\",\n            \"Mechanism=“应急机制”\",\n            \"Plan=“应急预案”\"\n        ],\n        \"instance_logicexpression\": [\n            \"Implement(国家林业局重大沙尘暴灾害应急领导小组, 党中央国务院方针政策) ∧ EstablishAndImprove(国家林业局重大沙尘暴灾害应急领导小组, 应急机制) ∧ OrganizeDevelop(国家林业局重大沙尘暴灾害应急领导小组, 应急预案)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“国家林业局重大沙尘暴灾害应急领导小组办公室” — 表示应急领导小组下设有办公室\",\n            \"Organization=“国家林业局重大沙尘暴灾害应急领导小组” — 表示组织为应急领导小组\",\n            \"Office=“国家林业局重大沙尘暴灾害应急领导小组办公室” — 表示办公室为应急领导小组办公室\",\n            \"Department=“国家林业局防治荒漠化管理中心” — 表示办公室挂靠在防治荒漠化管理中心\",\n            \"Director=“荒漠化管理中心主任” — 表示主任为荒漠化管理中心主任\",\n            \"m1=“张副司长” — 表示张副司长是办公室成员\",\n            \"m2=“李副院长” — 表示李副院长是办公室成员\"\n        ],\n        \"instance_logicexpression\": [\n            \"SubordinateOffice(国家林业局重大沙尘暴灾害应急领导小组, 国家林业局重大沙尘暴灾害应急领导小组办公室) → (AffiliatedWith(国家林业局重大沙尘暴灾害应急领导小组办公室, 国家林业局防治荒漠化管理中心) ∧ AppointedAsDirector(荒漠化管理中心主任, 国家林业局重大沙尘暴灾害应急领导小组办公室) ∧ ((MemberOf(国家林业局重大沙尘暴灾害应急领导小组办公室, 张副司长) ∧ 副司长(张副司长)) → (张副司长 ∈ 国家林业局各相关司局 ∨ 张副司长 ∈ 局调查规划院 ∨ 张副司长 ∈ 局西北调查规划院)) ∧ ((MemberOf(国家林业局重大沙尘暴灾害应急领导小组办公室, 李副院长) ∧ 副院长(李副院长)) → (李副院长 ∈ 国家林业局各相关司局 ∨ 李副院长 ∈ 局调查规划院 ∨ 李副院长 ∈ 局西北调查规划院))\",\n            \"SubordinateOffice(国家林业局重大沙尘暴灾害应急领导小组, 国家林业局重大沙尘暴灾害应急领导小组办公室) → UndertakeWork(国家林业局重大沙尘暴灾害应急领导小组办公室, 日常工作)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“2023年北京特大沙尘暴” — 表示2023年北京发生了特大沙尘暴灾害\",\n            \"t=“北京沙尘暴应急工作组” — 表示派出的工作组名称为北京沙尘暴应急工作组\",\n            \"m1=“国家林业局森林资源管理司人员” — 表示工作组成员之一是国家林业局森林资源管理司的人员\",\n            \"m2=“国家林业局自然保护区管理司人员” — 表示工作组成员之一是国家林业局自然保护区管理司的人员\",\n            \"m3=“国家林业局直属单位人员” — 表示工作组成员之一是国家林业局直属单位的人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"DustStormDisaster(“2023年北京特大沙尘暴”) → (SendTeam(国家林业局重大沙尘暴应急领导小组, “2023年北京特大沙尘暴”) ∨ SendTeam(其办公室, “2023年北京特大沙尘暴”))\",\n            \"SendTeam(国家林业局重大沙尘暴应急领导小组, “北京沙尘暴应急工作组”) ∨ SendTeam(其办公室, “北京沙尘暴应急工作组”) → ConsistOf(“北京沙尘暴应急工作组”, 国家林业局森林资源管理司人员) ∧ ConsistOf(“北京沙尘暴应急工作组”, 国家林业局自然保护区管理司人员) ∧ ConsistOf(“北京沙尘暴应急工作组”, 直属单位人员)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“2023年新疆特大沙尘暴” — 表示2023年新疆发生了特大沙尘暴灾害\",\n            \"t=“新疆沙尘暴应急工作组” — 表示派出的工作组名称为新疆沙尘暴应急工作组\",\n            \"m1=“国家林业局森林病虫害防治司人员” — 表示工作组成员之一是国家林业局森林病虫害防治司的人员\",\n            \"m2=“国家林业局野生动植物保护司人员” — 表示工作组成员之一是国家林业局野生动植物保护司的人员\",\n            \"m3=“国家林业局直属单位人员” — 表示工作组成员之一是国家林业局直属单位的人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"DustStormDisaster(“2023年新疆特大沙尘暴”) → (SendTeam(国家林业局重大沙尘暴应急领导小组, “2023年新疆特大沙尘暴”) ∨ SendTeam(其办公室, “2023年新疆特大沙尘暴”))\",\n            \"SendTeam(国家林业局重大沙尘暴应急领导小组, “新疆沙尘暴应急工作组”) ∨ SendTeam(其办公室, “新疆沙尘暴应急工作组”) → ConsistOf(“新疆沙尘暴应急工作组”, 国家林业局森林病虫害防治司人员) ∧ ConsistOf(“新疆沙尘暴应急工作组”, 国家林业局野生动植物保护司人员) ∧ ConsistOf(“新疆沙尘暴应急工作组”, 直属单位人员)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Organization=“国家林业局防治荒漠化高级专家顾问组” — 表示该组织已经成立\",\n            \"Task=“咨询” — 表示组织负责的任务之一是咨询\",\n            \"Task=“技术指导” — 表示组织负责的任务之一是技术指导\",\n            \"Task=“决策论证” — 表示组织负责的任务之一是决策论证\"\n        ],\n        \"instance_logicexpression\": [\n            \"Established(国家林业局防治荒漠化高级专家顾问组)\",\n            \"ResponsibleFor(国家林业局防治荒漠化高级专家顾问组, 咨询)\",\n            \"ResponsibleFor(国家林业局防治荒漠化高级专家顾问组, 技术指导)\",\n            \"ResponsibleFor(国家林业局防治荒漠化高级专家顾问组, 决策论证)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Disaster=“沙尘暴灾害” — 表示灾害类型为沙尘暴\",\n            \"Role=“国家林业局防治荒漠化高级专家顾问组” — 表示在沙尘暴灾害中更加重视的角色\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (DustStorm(d) ∧ Handle(d) → Emphasize(d, 国家林业局防治荒漠化高级专家顾问组))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Disaster=“特大沙尘暴灾害” — 表示灾害类型为特大沙尘暴\",\n            \"Role=“国家林业局防治荒漠化高级专家顾问组” — 表示在特大沙尘暴灾害中更加重视的角色\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (DustStorm(d) ∧ Handle(d) → Emphasize(d, 国家林业局防治荒漠化高级专家顾问组))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“沙尘暴” — 表示沙尘暴天气\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (Sign(沙尘暴) → (Forecast(MeteorologicalBureau, 沙尘暴) ∧ ProvideInformation(MeteorologicalBureau, StateCouncil)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“沙尘暴” — 表示沙尘暴天气\"\n        ],\n        \"instance_logicexpression\": [\n            \"Monitor(MeteorologicalBureau, 沙尘暴) ∧ Forecast(MeteorologicalBureau, 沙尘暴) → (DisasterPrevention(MeteorologicalBureau) ∧ DisasterResponse(MeteorologicalBureau))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“强沙尘暴” — 表示强沙尘暴天气\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (Sign(强沙尘暴) → (Forecast(MeteorologicalBureau, 强沙尘暴) ∧ ProvideInformation(MeteorologicalBureau, StateCouncil)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“强沙尘暴” — 表示强沙尘暴天气\"\n        ],\n        \"instance_logicexpression\": [\n            \"Monitor(MeteorologicalBureau, 强沙尘暴) ∧ Forecast(MeteorologicalBureau, 强沙尘暴) → (DisasterPrevention(MeteorologicalBureau) ∧ DisasterResponse(MeteorologicalBureau))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“中度沙尘暴” — 表示中度沙尘暴天气\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (Sign(中度沙尘暴) → (Forecast(MeteorologicalBureau, 中度沙尘暴) ∧ ProvideInformation(MeteorologicalBureau, StateCouncil)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“中度沙尘暴” — 表示中度沙尘暴天气\"\n        ],\n        \"instance_logicexpression\": [\n            \"Monitor(MeteorologicalBureau, 中度沙尘暴) ∧ Forecast(MeteorologicalBureau, 中度沙尘暴) → (DisasterPrevention(MeteorologicalBureau) ∧ DisasterResponse(MeteorologicalBureau))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“农业部” — 表示农业部\",\n            \"a=“春季播种” — 表示农牧业生产活动为春季播种\",\n            \"Area=“华北平原” — 表示受灾区域为华北平原\"\n        ],\n        \"instance_logicexpression\": [\n            \"AgriculturalProduction(春季播种) → (Guide(农业部, 春季播种) ∧ Prevention(农业部, 春季播种) ∧ SelfRescue(农业部, 春季播种))\",\n            \"DisasterArea(华北平原) → RestoreProduction(农业部, 华北平原)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“农业部” — 表示农业部\",\n            \"a=“秋季收割” — 表示农牧业生产活动为秋季收割\",\n            \"Area=“长江流域” — 表示受灾区域为长江流域\"\n        ],\n        \"instance_logicexpression\": [\n            \"AgriculturalProduction(秋季收割) → (Guide(农业部, 秋季收割) ∧ Prevention(农业部, 秋季收割) ∧ SelfRescue(农业部, 秋季收割))\",\n            \"DisasterArea(长江流域) → RestoreProduction(农业部, 长江流域)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“农业部” — 表示农业部\",\n            \"a=“畜牧业管理” — 表示农牧业生产活动为畜牧业管理\",\n            \"Area=“内蒙古草原” — 表示受灾区域为内蒙古草原\"\n        ],\n        \"instance_logicexpression\": [\n            \"AgriculturalProduction(畜牧业管理) → (Guide(农业部, 畜牧业管理) ∧ Prevention(农业部, 畜牧业管理) ∧ SelfRescue(农业部, 畜牧业管理))\",\n            \"DisasterArea(内蒙古草原) → RestoreProduction(农业部, 内蒙古草原)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“农业部” — 表示农业部\",\n            \"a=“灌溉系统建设” — 表示农牧业生产活动为灌溉系统建设\",\n            \"Area=“黄河流域” — 表示受灾区域为黄河流域\"\n        ],\n        \"instance_logicexpression\": [\n            \"AgriculturalProduction(灌溉系统建设) → (Guide(农业部, 灌溉系统建设) ∧ Prevention(农业部, 灌溉系统建设) ∧ SelfRescue(农业部, 灌溉系统建设))\",\n            \"DisasterArea(黄河流域) → RestoreProduction(农业部, 黄河流域)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“沙尘暴发生” — 表示沙尘暴发生时的条件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (DustStorm(“沙尘暴发生”) → (Monitor(EnvironmentQuality, “沙尘暴发生”) ∧ ProvideInformation(环保局, EnvironmentQuality) ∧ EmergencyService(环保局)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“重度污染” — 表示重度污染时的条件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (DustStorm(“重度污染”) → (Monitor(EnvironmentQuality, “重度污染”) ∧ ProvideInformation(环保局, EnvironmentQuality) ∧ EmergencyService(环保局)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“中度污染” — 表示中度污染时的条件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (DustStorm(“中度污染”) → (Monitor(EnvironmentQuality, “中度污染”) ∧ ProvideInformation(环保局, EnvironmentQuality) ∧ EmergencyService(环保局)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“轻度污染” — 表示轻度污染时的条件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (DustStorm(“轻度污染”) → (Monitor(EnvironmentQuality, “轻度污染”) ∧ ProvideInformation(环保局, EnvironmentQuality) ∧ EmergencyService(环保局)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“民政部” — 表示民政部负责相关职责\",\n            \"Activity=“抗灾救灾” — 表示负责组织的活动为抗灾救灾\",\n            \"Investigation=“灾情调查” — 表示参与的调查为灾情调查\",\n            \"Resource=“救灾款物” — 表示组织、管理和发放的资源为救灾款物\",\n            \"Office=“中国国际减灾委员会办公室” — 表示承担的办公室工作为中国国际减灾委员会办公室\",\n            \"Office=“全国抗灾救灾综合协调办公室” — 表示承担的办公室工作为全国抗灾救灾综合协调办公室\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Department(民政部) → (ResponsibleForOrganization(民政部, 抗灾救灾) ∧ Participate(民政部, 灾情调查) ∧ OrganizeManageDistribute(民政部, 救灾款物) ∧ SuperviseUsage(民政部, 救灾款物) ∧ OrganizeGuideDonation(民政部) ∧ BearOfficeWork(民政部, 中国国际减灾委员会办公室) ∧ BearOfficeWork(民政部, 全国抗灾救灾综合协调办公室)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“北京” — 表示北京区域发生了沙尘暴灾害\",\n            \"Department=“卫生部” — 表示卫生部负责相关任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (DustStormDisaster(北京) ∧ Casualties(北京) → (CoordinateImplementation(卫生部, 救灾医疗物品) ∧ SolveMedicalResources(卫生部) ∧ PreventDiseaseSpread(卫生部, 北京)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“上海” — 表示上海区域发生了沙尘暴灾害\",\n            \"Department=“卫生部” — 表示卫生部负责相关任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (DustStormDisaster(上海) ∧ Casualties(上海) → (CoordinateImplementation(卫生部, 救灾医疗物品) ∧ SolveMedicalResources(卫生部) ∧ PreventDiseaseSpread(卫生部, 上海)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“广州” — 表示广州区域发生了沙尘暴灾害\",\n            \"Department=“卫生部” — 表示卫生部负责相关任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (DustStormDisaster(广州) ∧ Casualties(广州) → (CoordinateImplementation(卫生部, 救灾医疗物品) ∧ SolveMedicalResources(卫生部) ∧ PreventDiseaseSpread(卫生部, 广州)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“成都” — 表示成都区域发生了沙尘暴灾害\",\n            \"Department=“卫生部” — 表示卫生部负责相关任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (DustStormDisaster(成都) ∧ Casualties(成都) → (CoordinateImplementation(卫生部, 救灾医疗物品) ∧ SolveMedicalResources(卫生部) ∧ PreventDiseaseSpread(卫生部, 成都)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“交通部” — 表示交通部\",\n            \"Disaster=“沙尘暴” — 表示沙尘暴灾害类型\",\n            \"Resource=“救灾交通车辆” — 表示用于救灾的交通车辆\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Responsible(交通部, DisasterPreventionPlan(沙尘暴)) ∧ CoordinateImplementation(交通部, 救灾交通车辆, 沙尘暴))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“交通部” — 表示交通部\",\n            \"Disaster=“沙尘暴” — 表示沙尘暴灾害类型\",\n            \"Resource=“应急物资运输车” — 表示用于运输应急物资的车辆\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Responsible(交通部, DisasterPreventionPlan(沙尘暴)) ∧ CoordinateImplementation(交通部, 应急物资运输车, 沙尘暴))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“交通部” — 表示交通部\",\n            \"Disaster=“沙尘暴” — 表示沙尘暴灾害类型\",\n            \"Resource=“医疗救护车” — 表示用于医疗救护的救护车\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Responsible(交通部, DisasterPreventionPlan(沙尘暴)) ∧ CoordinateImplementation(交通部, 医疗救护车, 沙尘暴))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“交通部” — 表示交通部\",\n            \"Disaster=“沙尘暴” — 表示沙尘暴灾害类型\",\n            \"Resource=“工程抢险车” — 表示用于工程抢险的车辆\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Responsible(交通部, DisasterPreventionPlan(沙尘暴)) ∧ CoordinateImplementation(交通部, 工程抢险车, 沙尘暴))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“沙尘暴应急预案” — 表示民航局制订的防灾减灾应急预案为沙尘暴应急预案\",\n            \"Organization=“民航局” — 表示组织为民航局\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterResponsePlan(“沙尘暴应急预案”) → OrganizePlan(民航局, “沙尘暴应急预案”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“沙尘暴天气” — 表示沙尘暴灾害天气状况\",\n            \"t=“民航运输” — 表示运输类型为民航运输\"\n        ],\n        \"instance_logicexpression\": [\n            \"DustStormWeather(“沙尘暴天气”) → EnsureSafety(“沙尘暴天气”, “民航运输”) ∧ TransportType(“民航运输”, 民航运输)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“极端天气应急预案” — 表示民航局制订的防灾减灾应急预案为极端天气应急预案\",\n            \"Organization=“民航局” — 表示组织为民航局\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterResponsePlan(“极端天气应急预案”) → OrganizePlan(民航局, “极端天气应急预案”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“强对流天气” — 表示强对流天气状况\",\n            \"t=“民航运输” — 表示运输类型为民航运输\"\n        ],\n        \"instance_logicexpression\": [\n            \"DustStormWeather(“强对流天气”) → EnsureSafety(“强对流天气”, “民航运输”) ∧ TransportType(“民航运输”, 民航运输)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“铁道部” — 表示铁道部组织制订预案\",\n            \"PlanType=“沙尘暴灾害应急预案” — 表示预案类型为沙尘暴灾害应急预案\",\n            \"Weather=“沙尘暴天气” — 表示沙尘暴灾害天气\",\n            \"Transport=“铁路运输” — 表示铁路运输\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (OrganizePlan(铁道部, 沙尘暴灾害应急预案) → EnsureSafety(铁道部, DustStormDisaster(沙尘暴天气)) ∧ RailwayTransport(铁路运输))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“铁道部” — 表示铁道部组织制订预案\",\n            \"PlanType=“沙尘暴灾害应急预案” — 表示预案类型为沙尘暴灾害应急预案\",\n            \"Weather=“强沙尘暴天气” — 表示强沙尘暴灾害天气\",\n            \"Transport=“高速铁路运输” — 表示高速铁路运输\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (OrganizePlan(铁道部, 沙尘暴灾害应急预案) → EnsureSafety(铁道部, DustStormDisaster(强沙尘暴天气)) ∧ RailwayTransport(高速铁路运输))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“铁道部” — 表示铁道部组织制订预案\",\n            \"PlanType=“沙尘暴灾害应急预案” — 表示预案类型为沙尘暴灾害应急预案\",\n            \"Weather=“中度沙尘暴天气” — 表示中度沙尘暴灾害天气\",\n            \"Transport=“货运铁路运输” — 表示货运铁路运输\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (OrganizePlan(铁道部, 沙尘暴灾害应急预案) → EnsureSafety(铁道部, DustStormDisaster(中度沙尘暴天气)) ∧ RailwayTransport(货运铁路运输))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“铁道部” — 表示铁道部组织制订预案\",\n            \"PlanType=“沙尘暴灾害应急预案” — 表示预案类型为沙尘暴灾害应急预案\",\n            \"Weather=“轻度沙尘暴天气” — 表示轻度沙尘暴灾害天气\",\n            \"Transport=“城际铁路运输” — 表示城际铁路运输\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (OrganizePlan(铁道部, 沙尘暴灾害应急预案) → EnsureSafety(铁道部, DustStormDisaster(轻度沙尘暴天气)) ∧ RailwayTransport(城际铁路运输))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“省级” — 表示省级人民政府\",\n            \"DepartmentList=[林业, 气象, 环保, 民政, 农业, 卫生, 交通] — 表示组成沙尘暴灾害应急领导小组的部门列表\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g (GovernmentLevel(g) → (EstablishEmergencyTeam(省级, [林业, 气象, 环保, 民政, 农业, 卫生, 交通]) ∧ DevelopEmergencyPlan(省级)))\",\n            \"∀g (GovernmentLevel(g) → (DustStormDisaster(省级) → (OrganizeImplementation(省级, 灾前预防) ∧ OrganizeImplementation(省级, 灾后救援) ∧ OrganizeImplementation(省级, 生产恢复))))\",\n            \"∀g (GovernmentLevel(g) → (DustStormDisaster(省级) → ReportSituation(省级, [发生时间, 持续时间, 影响范围, 造成危害, 灾后救援, 生产恢复])))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“地级” — 表示地级人民政府\",\n            \"DepartmentList=[林业, 气象, 环保, 民政, 农业, 卫生, 交通] — 表示组成沙尘暴灾害应急领导小组的部门列表\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g (GovernmentLevel(g) → (EstablishEmergencyTeam(地级, [林业, 气象, 环保, 民政, 农业, 卫生, 交通]) ∧ DevelopEmergencyPlan(地级)))\",\n            \"∀g (GovernmentLevel(g) → (DustStormDisaster(地级) → (OrganizeImplementation(地级, 灾前预防) ∧ OrganizeImplementation(地级, 灾后救援) ∧ OrganizeImplementation(地级, 生产恢复))))\",\n            \"∀g (GovernmentLevel(g) → (DustStormDisaster(地级) → ReportSituation(地级, [发生时间, 持续时间, 影响范围, 造成危害, 灾后救援, 生产恢复])))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“县级” — 表示县级人民政府\",\n            \"DepartmentList=[林业, 气象, 环保, 民政, 农业, 卫生, 交通] — 表示组成沙尘暴灾害应急领导小组的部门列表\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g (GovernmentLevel(g) → (EstablishEmergencyTeam(县级, [林业, 气象, 环保, 民政, 农业, 卫生, 交通]) ∧ DevelopEmergencyPlan(县级)))\",\n            \"∀g (GovernmentLevel(g) → (DustStormDisaster(县级) → (OrganizeImplementation(县级, 灾前预防) ∧ OrganizeImplementation(县级, 灾后救援) ∧ OrganizeImplementation(县级, 生产恢复))))\",\n            \"∀g (GovernmentLevel(g) → (DustStormDisaster(县级) → ReportSituation(县级, [发生时间, 持续时间, 影响范围, 造成危害, 灾后救援, 生产恢复])))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“张教授” — 张教授为被邀请的专家\",\n            \"s=“国家林业局” — 表示国家林业局邀请专家\",\n            \"s=“中国气象局” — 表示中国气象局邀请专家\"\n        ],\n        \"instance_logicexpression\": [\n            \"年初(张教授) → (InviteExpert(国家林业局, 张教授) ∧ InviteExpert(中国气象局, 张教授) → ForecastAnalysis(张教授, 春季, 沙尘暴趋势))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“中国气象局” — 表示中国气象局协调预测\",\n            \"Analysis=“中短期沙尘暴分析” — 表示中短期沙尘暴的分析\",\n            \"Forecast=“沙尘暴预测” — 表示沙尘暴的预测\"\n        ],\n        \"instance_logicexpression\": [\n            \"早发现原则(中国气象局) ∧ 早报告原则(中国气象局) ∧ 早预防原则(中国气象局) → (CoordinateForecast(中国气象局, 中短期沙尘暴分析, 沙尘暴预测) → IssueWarning(中国气象局, 时间, 地点, 强度, 路径, 影响区域))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家气象局” — 表示国家气象局监测沙尘暴\",\n            \"Source=“蒙古高原” — 表示沙尘暴的发生源地为蒙古高原\",\n            \"Intensity=“强” — 表示沙尘暴的强度为强\",\n            \"Path=“西北向东南” — 表示沙尘暴的路径为西北向东南\",\n            \"Area=“华北” — 表示沙尘暴的影响范围为华北\"\n        ],\n        \"instance_logicexpression\": [\n            \"国家气象局(国家气象局) → (MonitorDustStorm(国家气象局, 蒙古高原, 强, 西北向东南, 华北) → ProvideInformation(国家气象局, 国务院相关部门, 沙尘暴情况及相关资料))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"n=“全国” — 表示在全国范围内开展监测工作\",\n            \"Area=“全国” — 表示提高全国范围内的监测手段和水平\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀n (ConductMonitoring(全国) ∧ ImproveMonitoring(全国) → (MasterInformation(全国, 沙化土地消长动态变化) ∧ MasterInformation(全国, 植被状况)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"System=“全国沙化土地信息管理系统” — 表示建立全国沙化土地信息管理系统\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishSystem(全国沙化土地信息管理系统)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Database=“沙区社会经济状况数据库” — 表示收集并建立沙区社会经济状况数据库\",\n            \"Service=“沙尘暴灾害评估” — 表示为沙尘暴灾害评估提供服务\"\n        ],\n        \"instance_logicexpression\": [\n            \"CollectData(沙区社会经济状况数据库) ∧ ProvideService(沙尘暴灾害评估)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Technology=“卫星遥感” — 表示利用卫星遥感技术\",\n            \"Technology=“地面监测站点调查” — 表示利用地面监测站点调查\",\n            \"Technology=“观察资料” — 表示利用观察资料\",\n            \"System=“沙尘暴灾害监测预警系统” — 表示建立沙尘暴灾害监测预警系统\"\n        ],\n        \"instance_logicexpression\": [\n            \"UseTechnology(卫星遥感) ∧ UseTechnology(地面监测站点调查) ∧ UseTechnology(观察资料) → EstablishWarningSystem(沙尘暴灾害监测预警系统)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Platform=“沙尘暴灾害信息共享平台” — 表示加强沙尘暴灾害信息共享平台的建设\"\n        ],\n        \"instance_logicexpression\": [\n            \"StrengthenConstruction(沙尘暴灾害信息共享平台)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴A” — 表示沙尘暴灾害A的发生\",\n            \"Level=“I” — 表示沙尘暴灾害A的级别为I级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Occur(沙尘暴A) ∧ DustStorm(沙尘暴A, I) → (ActivatePlan(National, 沙尘暴A) ∧ ActivatePlan(Provincial, 沙尘暴A) ∧ ActivatePlan(Municipal, 沙尘暴A) ∧ ActivatePlan(County, 沙尘暴A)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴B” — 表示沙尘暴灾害B的发生\",\n            \"Level=“I” — 表示沙尘暴灾害B的级别为I级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Occur(沙尘暴B) ∧ DustStorm(沙尘暴B, I) → (ActivatePlan(National, 沙尘暴B) ∧ ActivatePlan(Provincial, 沙尘暴B) ∧ ActivatePlan(Municipal, 沙尘暴B) ∧ ActivatePlan(County, 沙尘暴B)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴C” — 表示沙尘暴灾害C的发生\",\n            \"Level=“I” — 表示沙尘暴灾害C的级别为I级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Occur(沙尘暴C) ∧ DustStorm(沙尘暴C, I) → (ActivatePlan(National, 沙尘暴C) ∧ ActivatePlan(Provincial, 沙尘暴C) ∧ ActivatePlan(Municipal, 沙尘暴C) ∧ ActivatePlan(County, 沙尘暴C)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴D” — 表示沙尘暴灾害D的发生\",\n            \"Level=“I” — 表示沙尘暴灾害D的级别为I级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Occur(沙尘暴D) ∧ DustStorm(沙尘暴D, I) → (ActivatePlan(National, 沙尘暴D) ∧ ActivatePlan(Provincial, 沙尘暴D) ∧ ActivatePlan(Municipal, 沙尘暴D) ∧ ActivatePlan(County, 沙尘暴D)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴A” — 表示发生了名为沙尘暴A的灾害\",\n            \"Level(沙尘暴A, II) — 表示沙尘暴A的级别为II级\"\n        ],\n        \"instance_logicexpression\": [\n            \"DustStormDisaster(沙尘暴A) ∧ Level(沙尘暴A, II) → (ActivateEmergencyPlan(省级) ∧ ActivateEmergencyPlan(市级) ∧ ActivateEmergencyPlan(县级))\",\n            \"DustStormDisaster(沙尘暴A) ∧ Level(沙尘暴A, II) → 必要时(ActivateEmergencyPlan(国家级))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴B” — 表示发生了名为沙尘暴B的灾害\",\n            \"Level(沙尘暴B, II) — 表示沙尘暴B的级别为II级\"\n        ],\n        \"instance_logicexpression\": [\n            \"DustStormDisaster(沙尘暴B) ∧ Level(沙尘暴B, II) → (ActivateEmergencyPlan(省级) ∧ ActivateEmergencyPlan(市级) ∧ ActivateEmergencyPlan(县级))\",\n            \"DustStormDisaster(沙尘暴B) ∧ Level(沙尘暴B, II) → 必要时(ActivateEmergencyPlan(国家级))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴C” — 表示发生了名为沙尘暴C的灾害\",\n            \"Level(沙尘暴C, II) — 表示沙尘暴C的级别为II级\"\n        ],\n        \"instance_logicexpression\": [\n            \"DustStormDisaster(沙尘暴C) ∧ Level(沙尘暴C, II) → (ActivateEmergencyPlan(省级) ∧ ActivateEmergencyPlan(市级) ∧ ActivateEmergencyPlan(县级))\",\n            \"DustStormDisaster(沙尘暴C) ∧ Level(沙尘暴C, II) → 必要时(ActivateEmergencyPlan(国家级))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴” — 表示发生了沙尘暴灾害\",\n            \"g=“北京市” — 表示北京市政府\",\n            \"Level=III — 表示沙尘暴灾害级别为III级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀g (Occur(沙尘暴, III) ∨ Occur(沙尘暴, IV) → Decide(北京市, EmergencyPlan(北京市)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴” — 表示发生了沙尘暴灾害\",\n            \"g=“内蒙古自治区” — 表示内蒙古自治区政府\",\n            \"Level=IV — 表示沙尘暴灾害级别为IV级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀g (Occur(沙尘暴, III) ∨ Occur(沙尘暴, IV) → Decide(内蒙古自治区, EmergencyPlan(内蒙古自治区)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴” — 表示发生了沙尘暴灾害\",\n            \"g=“新疆维吾尔自治区” — 表示新疆维吾尔自治区政府\",\n            \"Level=III — 表示沙尘暴灾害级别为III级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀g (Occur(沙尘暴, III) ∨ Occur(沙尘暴, IV) → Decide(新疆维吾尔自治区, EmergencyPlan(新疆维吾尔自治区)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴” — 表示发生了沙尘暴灾害\",\n            \"g=“甘肃省” — 表示甘肃省政府\",\n            \"Level=IV — 表示沙尘暴灾害级别为IV级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀g (Occur(沙尘暴, III) ∨ Occur(沙尘暴, IV) → Decide(甘肃省, EmergencyPlan(甘肃省)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“省级人民政府” — 表示省级人民政府\",\n            \"Type=“强沙尘暴” — 表示预警类型为强沙尘暴\",\n            \"m=“气象部门” — 表示气象部门\",\n            \"l=“城市A” — 表示沙尘暴发生地点为城市A\",\n            \"r=“影响范围B” — 表示沙尘暴影响范围为B\",\n            \"i=“强度C” — 表示沙尘暴强度为C\",\n            \"p=“移动路径D” — 表示沙尘暴移动路径为D\",\n            \"d=“交通部门” — 表示需要组织防范工作的部门之一为交通部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g (ReceiveWarning(省级人民政府, 强沙尘暴) → (StrengthenLeadership(省级人民政府) ∧ PrepareEmergency(省级人民政府) ∧ ∀m (EnhanceMonitoring(气象部门) ∧ ∀l ∀r ∀i ∀p (TimelyForecast(气象部门, 城市A, 影响范围B, 强度C, 移动路径D))))\",\n            \"∀g (ReceiveWarning(省级人民政府, 强沙尘暴) → (∀d (OrganizePrevention(省级人民政府, 交通部门)) ∧ ImplementPrevention(省级人民政府) ∧ PrepareAndAllocate(省级人民政府)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“省级人民政府” — 表示省级人民政府\",\n            \"Type=“特强沙尘暴” — 表示预警类型为特强沙尘暴\",\n            \"m=“气象部门” — 表示气象部门\",\n            \"l=“城市E” — 表示沙尘暴发生地点为城市E\",\n            \"r=“影响范围F” — 表示沙尘暴影响范围为F\",\n            \"i=“强度G” — 表示沙尘暴强度为G\",\n            \"p=“移动路径H” — 表示沙尘暴移动路径为H\",\n            \"d=“民航部门” — 表示需要组织防范工作的部门之一为民航部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g (ReceiveWarning(省级人民政府, 特强沙尘暴) → (StrengthenLeadership(省级人民政府) ∧ PrepareEmergency(省级人民政府) ∧ ∀m (EnhanceMonitoring(气象部门) ∧ ∀l ∀r ∀i ∀p (TimelyForecast(气象部门, 城市E, 影响范围F, 强度G, 移动路径H))))\",\n            \"∀g (ReceiveWarning(省级人民政府, 特强沙尘暴) → (∀d (OrganizePrevention(省级人民政府, 民航部门)) ∧ ImplementPrevention(省级人民政府) ∧ PrepareAndAllocate(省级人民政府)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴” — 表示灾害类型为沙尘暴\",\n            \"g=“省级以下人民政府” — 表示省级以下人民政府\",\n            \"Plan=“沙尘暴应急预案” — 表示应急预案为沙尘暴应急预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g ∀d (DisasterOccurrence(d) → (EmergencyPlan(g, '沙尘暴应急预案') ∧ ImplementMeasures(g, d) ∧ DisasterRelief(g) ∧ Reconstruction(g) ∧ ReportToSuperior(g, d) ∧ NotifyDownstream(g, d)))\",\n            \"∀g (NotifyDownstream(g, DownstreamInfo) → TakePreventiveMeasures(g))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“洪水” — 表示灾害类型为洪水\",\n            \"g=“市级人民政府” — 表示市级人民政府\",\n            \"Plan=“洪水灾害应急预案” — 表示应急预案为洪水灾害应急预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g ∀d (DisasterOccurrence(d) → (EmergencyPlan(g, '洪水灾害应急预案') ∧ ImplementMeasures(g, d) ∧ DisasterRelief(g) ∧ Reconstruction(g) ∧ ReportToSuperior(g, d) ∧ NotifyDownstream(g, d)))\",\n            \"∀g (NotifyDownstream(g, DownstreamInfo) → TakePreventiveMeasures(g))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“地震” — 表示灾害类型为地震\",\n            \"g=“县级人民政府” — 表示县级人民政府\",\n            \"Plan=“地震灾害应急预案” — 表示应急预案为地震灾害应急预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g ∀d (DisasterOccurrence(d) → (EmergencyPlan(g, '地震灾害应急预案') ∧ ImplementMeasures(g, d) ∧ DisasterRelief(g) ∧ Reconstruction(g) ∧ ReportToSuperior(g, d) ∧ NotifyDownstream(g, d)))\",\n            \"∀g (NotifyDownstream(g, DownstreamInfo) → TakePreventiveMeasures(g))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“台风” — 表示灾害类型为台风\",\n            \"g=“乡镇级人民政府” — 表示乡镇级人民政府\",\n            \"Plan=“台风灾害应急预案” — 表示应急预案为台风灾害应急预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g ∀d (DisasterOccurrence(d) → (EmergencyPlan(g, '台风灾害应急预案') ∧ ImplementMeasures(g, d) ∧ DisasterRelief(g) ∧ Reconstruction(g) ∧ ReportToSuperior(g, d) ∧ NotifyDownstream(g, d)))\",\n            \"∀g (NotifyDownstream(g, DownstreamInfo) → TakePreventiveMeasures(g))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴” — 表示发生了沙尘暴灾害\",\n            \"p=“下游省区市A” — 表示沙尘暴移动的下游省区市A\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (DisasterOccurrence(沙尘暴) ∧ d = 沙尘暴 → (FormCommand(沙尘暴) ∧ OrganizeRescue(沙尘暴) ∧ ReduceLoss(沙尘暴) ∧ MaintainStability(沙尘暴) ∧ ReportSituation(沙尘暴, 国家林业局沙尘暴灾害应急领导小组办公室) ∧ NotifyDownstream(沙尘暴, 下游省区市A)))\",\n            \"∀p (NotifyDownstream(沙尘暴, 下游省区市A) → OrganizePrevention(下游省区市A))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴” — 表示发生了沙尘暴灾害\",\n            \"p=“下游省区市B” — 表示沙尘暴移动的下游省区市B\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (DisasterOccurrence(沙尘暴) ∧ d = 沙尘暴 → (FormCommand(沙尘暴) ∧ OrganizeRescue(沙尘暴) ∧ ReduceLoss(沙尘暴) ∧ MaintainStability(沙尘暴) ∧ ReportSituation(沙尘暴, 国家林业局沙尘暴灾害应急领导小组办公室) ∧ NotifyDownstream(沙尘暴, 下游省区市B)))\",\n            \"∀p (NotifyDownstream(沙尘暴, 下游省区市B) → OrganizePrevention(下游省区市B))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴” — 表示发生了沙尘暴灾害\",\n            \"p=“下游省区市C” — 表示沙尘暴移动的下游省区市C\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (DisasterOccurrence(沙尘暴) ∧ d = 沙尘暴 → (FormCommand(沙尘暴) ∧ OrganizeRescue(沙尘暴) ∧ ReduceLoss(沙尘暴) ∧ MaintainStability(沙尘暴) ∧ ReportSituation(沙尘暴, 国家林业局沙尘暴灾害应急领导小组办公室) ∧ NotifyDownstream(沙尘暴, 下游省区市C)))\",\n            \"∀p (NotifyDownstream(沙尘暴, 下游省区市C) → OrganizePrevention(下游省区市C))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"国家林业局应急领导小组办公室接到了关于特大沙尘暴灾害的信息。\",\n            \"国家林业局负责人批准了启动重大沙尘暴应急预案。\"\n        ],\n        \"instance_logicexpression\": [\n            \"ReceiveInformation(国家林业局应急领导小组办公室, 特大沙尘暴灾害信息) ∧ Approve(国家林业局负责人, 重大沙尘暴应急预案) → ActivatePlan(重大沙尘暴应急预案) ∧ TurnIntoCommand(应急领导小组)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"国务院相关部门详细了解了特大沙尘暴灾害的发生地点、范围、强度、灾害损失状况等情况。\",\n            \"应急指挥部召开了全体成员会议，对应急预案启动进行部署。\",\n            \"应急指挥部组成了赴现场工作组。\"\n        ],\n        \"instance_logicexpression\": [\n            \"ActivatePlan(重大沙尘暴应急预案) → (UnderstandDetails(国务院相关部门, 灾害情况) ∧ HoldMeeting(应急指挥部, 全体成员) ∧ FormWorkGroup(应急指挥部))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"赴现场工作组在12小时内出发赶赴灾区。\",\n            \"赴现场工作组协助当地政府指导抢险救灾工作。\",\n            \"赴现场工作组检查督促突发灾害应急措施的落实。\",\n            \"赴现场工作组慰问受灾群众。\",\n            \"赴现场工作组对当地沙尘暴灾害情况进行调研。\"\n        ],\n        \"instance_logicexpression\": [\n            \"FormWorkGroup(应急指挥部) → DepartForDisaster(赴现场工作组, 12小时) ∧ AssistGuide(赴现场工作组, 当地政府) ∧ InspectSupervise(赴现场工作组, 应急措施) ∧ ComfortVictims(赴现场工作组) ∧ ResearchDisaster(赴现场工作组, 沙尘暴灾害情况)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"应急指挥部按照统一领导、处置果断等要求进行现场处置。\"\n        ],\n        \"instance_logicexpression\": [\n            \"OnsiteDisposal(应急指挥部, 统一领导、处置果断等要求)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“国家应急办公室” — 表示国家级别的应急办公室\",\n            \"p=“李雷” — 表示指定专人为李雷\",\n            \"i=“沙尘暴灾害信息报告制度” — 表示建立的制度为沙尘暴灾害信息报告制度\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀p∀i (EstablishSystem(“国家应急办公室”, “沙尘暴灾害信息报告制度”) → (DesignatePersonnel(“国家应急办公室”, “李雷”) ∧ ResponsibleFor(“国家应急办公室”, “李雷”, CollectInformation) ∧ ResponsibleFor(“国家应急办公室”, “李雷”, ReportInformation)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“省级应急办公室” — 表示省级的应急办公室\",\n            \"p=“韩梅梅” — 表示指定专人为韩梅梅\",\n            \"i=“沙尘暴灾害信息报告制度” — 表示建立的制度为沙尘暴灾害信息报告制度\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀p∀i (EstablishSystem(“省级应急办公室”, “沙尘暴灾害信息报告制度”) → (DesignatePersonnel(“省级应急办公室”, “韩梅梅”) ∧ ResponsibleFor(“省级应急办公室”, “韩梅梅”, CollectInformation) ∧ ResponsibleFor(“省级应急办公室”, “韩梅梅”, ReportInformation)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“市级应急办公室” — 表示市级的应急办公室\",\n            \"p=“张伟” — 表示指定专人为张伟\",\n            \"i=“沙尘暴灾害信息报告制度” — 表示建立的制度为沙尘暴灾害信息报告制度\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀p∀i (EstablishSystem(“市级应急办公室”, “沙尘暴灾害信息报告制度”) → (DesignatePersonnel(“市级应急办公室”, “张伟”) ∧ ResponsibleFor(“市级应急办公室”, “张伟”, CollectInformation) ∧ ResponsibleFor(“市级应急办公室”, “张伟”, ReportInformation)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“区级应急办公室” — 表示区级的应急办公室\",\n            \"p=“赵敏” — 表示指定专人为赵敏\",\n            \"i=“沙尘暴灾害信息报告制度” — 表示建立的制度为沙尘暴灾害信息报告制度\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀p∀i (EstablishSystem(“区级应急办公室”, “沙尘暴灾害信息报告制度”) → (DesignatePersonnel(“区级应急办公室”, “赵敏”) ∧ ResponsibleFor(“区级应急办公室”, “赵敏”, CollectInformation) ∧ ResponsibleFor(“区级应急办公室”, “赵敏”, ReportInformation)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“气象局” — 表示气象局涉及的沙尘暴灾害发生。\",\n            \"o=“沙尘暴灾害应急日常管理办公室” — 表示气象局报告信息的办公室。\",\n            \"信息=“沙尘暴灾害发生情况及损失” — 表示报告的具体内容。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀o (DustStormDisaster(气象局) → Report(气象局, 沙尘暴灾害应急日常管理办公室, 沙尘暴灾害发生情况及损失))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o1=“县级沙尘暴灾害应急日常管理办公室” — 表示县级办公室。\",\n            \"o2=“市级沙尘暴灾害应急日常管理办公室” — 表示市级办公室，是县级办公室的上级。\",\n            \"信息=“沙尘暴灾害汇总信息” — 表示县级办公室汇总后的信息。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o1∀o2 (SuperiorOffice(市级沙尘暴灾害应急日常管理办公室, 县级沙尘暴灾害应急日常管理办公室) ∧ AggregateReport(县级沙尘暴灾害应急日常管理办公室, 沙尘暴灾害汇总信息) → Report(县级沙尘暴灾害应急日常管理办公室, 市级沙尘暴灾害应急日常管理办公室, 沙尘暴灾害汇总信息))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“环保局” — 表示环保局涉及的沙尘暴灾害发生。\",\n            \"o=“沙尘暴灾害应急日常管理办公室” — 表示环保局报告信息的办公室。\",\n            \"信息=“沙尘暴灾害对环境的影响” — 表示报告的具体内容。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀o (DustStormDisaster(环保局) → Report(环保局, 沙尘暴灾害应急日常管理办公室, 沙尘暴灾害对环境的影响))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o1=“市级沙尘暴灾害应急日常管理办公室” — 表示市级办公室。\",\n            \"o2=“省级沙尘暴灾害应急日常管理办公室” — 表示省级办公室，是市级办公室的上级。\",\n            \"信息=“沙尘暴灾害市级汇总信息” — 表示市级办公室汇总后的信息。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o1∀o2 (SuperiorOffice(省级沙尘暴灾害应急日常管理办公室, 市级沙尘暴灾害应急日常管理办公室) ∧ AggregateReport(市级沙尘暴灾害应急日常管理办公室, 沙尘暴灾害市级汇总信息) → Report(市级沙尘暴灾害应急日常管理办公室, 省级沙尘暴灾害应急日常管理办公室, 沙尘暴灾害市级汇总信息))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"l=“北京” — 表示沙尘暴发生在北京\",\n            \"o=“北京市应急日常管理办公室” — 表示北京市应急日常管理办公室\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀l (DustStormOccurrence(北京) → ReportIntensityAndScope(北京市应急日常管理办公室,林业局) ∧ ReportDisasterStatus(北京市应急日常管理办公室,林业局))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=“内蒙古” — 表示沙尘暴发生在内蒙古\",\n            \"o=“内蒙古自治区应急日常管理办公室” — 表示内蒙古自治区应急日常管理办公室\",\n            \"d=“内蒙古沙尘暴” — 表示内蒙古发生的沙尘暴\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀d (SevereDustStorm(内蒙古沙尘暴) → ReportDisasterStatus(内蒙古自治区应急日常管理办公室,林业局))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=“新疆” — 表示沙尘暴发生在新疆\",\n            \"o=“新疆自治区应急日常管理办公室” — 表示新疆自治区应急日常管理办公室\",\n            \"d=“新疆沙尘暴” — 表示新疆发生的沙尘暴\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀d (DustStormOccurrence(新疆沙尘暴) → ReportDisasterLoss(新疆自治区应急日常管理办公室,林业局))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=“甘肃” — 表示沙尘暴发生在甘肃\",\n            \"o=“甘肃省应急日常管理办公室” — 表示甘肃省应急日常管理办公室\",\n            \"d=“甘肃沙尘暴” — 表示甘肃发生的沙尘暴\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀d (DustStormOccurrence(甘肃沙尘暴) → ReportDisasterLoss(甘肃省应急日常管理办公室,林业局))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“国家林业局应急领导小组办公室” — 表示国家林业局应急领导小组办公室\",\n            \"l=“北方某省” — 表示报告来自北方某省\",\n            \"r=“特大沙尘暴灾害初步信息报告” — 表示特大沙尘暴灾害的初步信息报告\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀l∀r (ReceiveReport(“国家林业局应急领导小组办公室”, “北方某省”, “特大沙尘暴灾害初步信息报告”) ∧ AggregateProcess(“国家林业局应急领导小组办公室”, “特大沙尘暴灾害初步信息报告”) → (ReportToStateCouncil(“国家林业局应急领导小组办公室”) ∧ ∀d (NotifyDepartments(“国家林业局应急领导小组办公室”, d))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家林业局应急领导小组办公室” — 表示国家林业局应急领导小组办公室\",\n            \"l=“西部某自治区” — 表示报告来自西部某自治区\",\n            \"r=“特大沙尘暴灾害初步信息报告” — 表示特大沙尘暴灾害的初步信息报告\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀l∀r (ReceiveReport(“国家林业局应急领导小组办公室”, “西部某自治区”, “特大沙尘暴灾害初步信息报告”) ∧ AggregateProcess(“国家林业局应急领导小组办公室”, “特大沙尘暴灾害初步信息报告”) → (ReportToStateCouncil(“国家林业局应急领导小组办公室”) ∧ ∀d (NotifyDepartments(“国家林业局应急领导小组办公室”, d))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家林业局应急领导小组办公室” — 表示国家林业局应急领导小组办公室\",\n            \"l=“东部沿海地区” — 表示报告来自东部沿海地区\",\n            \"r=“特大沙尘暴灾害初步信息报告” — 表示特大沙尘暴灾害的初步信息报告\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀l∀r (ReceiveReport(“国家林业局应急领导小组办公室”, “东部沿海地区”, “特大沙尘暴灾害初步信息报告”) ∧ AggregateProcess(“国家林业局应急领导小组办公室”, “特大沙尘暴灾害初步信息报告”) → (ReportToStateCouncil(“国家林业局应急领导小组办公室”) ∧ ∀d (NotifyDepartments(“国家林业局应急领导小组办公室”, d))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家林业局应急领导小组办公室” — 表示国家林业局应急领导小组办公室\",\n            \"l=“南部某市” — 表示报告来自南部某市\",\n            \"r=“特大沙尘暴灾害初步信息报告” — 表示特大沙尘暴灾害的初步信息报告\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀l∀r (ReceiveReport(“国家林业局应急领导小组办公室”, “南部某市”, “特大沙尘暴灾害初步信息报告”) ∧ AggregateProcess(“国家林业局应急领导小组办公室”, “特大沙尘暴灾害初步信息报告”) → (ReportToStateCouncil(“国家林业局应急领导小组办公室”) ∧ ∀d (NotifyDepartments(“国家林业局应急领导小组办公室”, d))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“国务院” — 表示国务院\",\n            \"g=“地方各级人民政府” — 表示地方各级人民政府\",\n            \"l=“赴地方工作组” — 表示赴地方工作组\",\n            \"e=“专家咨询组” — 表示专家咨询组\",\n            \"Situation=“特大沙尘暴灾害处置” — 表示处于特大沙尘暴灾害处置的情况\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀g ∀l ∀e (DustStormDisasterResponse(特大沙尘暴灾害处置) → (EstablishChannel(国务院, 地方各级人民政府) ∧ EstablishChannel(国务院, 赴地方工作组) ∧ EstablishChannel(国务院, 专家咨询组) ∧ EstablishChannel(地方各级人民政府, 赴地方工作组) ∧ EstablishChannel(地方各级人民政府, 专家咨询组) ∧ EstablishChannel(赴地方工作组, 专家咨询组) ∧ MaintainCommunication(国务院, 地方各级人民政府) ∧ MaintainCommunication(国务院, 赴地方工作组) ∧ MaintainCommunication(国务院, 专家咨询组) ∧ MaintainCommunication(地方各级人民政府, 赴地方工作组) ∧ MaintainCommunication(地方各级人民政府, 专家咨询组) ∧ MaintainCommunication(赴地方工作组, 专家咨询组)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“沙尘暴灾害预防控制” — 表示沙尘暴灾害的预防和控制任务\",\n            \"Government=“市级人民政府” — 表示市级人民政府\",\n            \"lg=“沙尘暴灾害领导小组” — 表示沙尘暴灾害领导小组\",\n            \"Departments=【林、农（牧）、气象、交通、民政、财政、卫生】 — 表示参加领导小组的部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"沙尘暴灾害预防控制(沙尘暴灾害预防控制) → Responsible(市级人民政府, 沙尘暴灾害预防控制)\",\n            \"沙尘暴灾害预防控制(沙尘暴灾害预防控制) → TerritorialManagement(市级人民政府)\",\n            \"沙尘暴灾害预防控制(沙尘暴灾害预防控制) → EstablishLeadershipGroup(市级人民政府, 沙尘暴灾害领导小组)\",\n            \"林(沙尘暴灾害领导小组) ∧ 农(沙尘暴灾害领导小组) ∧ 牧(沙尘暴灾害领导小组) ∧ 气象(沙尘暴灾害领导小组) ∧ 交通(沙尘暴灾害领导小组) ∧ 民政(沙尘暴灾害领导小组) ∧ 财政(沙尘暴灾害领导小组) ∧ 卫生(沙尘暴灾害领导小组)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“沙尘暴灾害预防控制” — 表示沙尘暴灾害的预防和控制任务\",\n            \"Government=“省级人民政府” — 表示省级人民政府\",\n            \"lg=“沙尘暴灾害领导小组” — 表示沙尘暴灾害领导小组\",\n            \"Departments=【林、农（牧）、气象、交通、民政、财政、卫生】 — 表示参加领导小组的部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"沙尘暴灾害预防控制(沙尘暴灾害预防控制) → Responsible(省级人民政府, 沙尘暴灾害预防控制)\",\n            \"沙尘暴灾害预防控制(沙尘暴灾害预防控制) → TerritorialManagement(省级人民政府)\",\n            \"沙尘暴灾害预防控制(沙尘暴灾害预防控制) → EstablishLeadershipGroup(省级人民政府, 沙尘暴灾害领导小组)\",\n            \"林(沙尘暴灾害领导小组) ∧ 农(沙尘暴灾害领导小组) ∧ 牧(沙尘暴灾害领导小组) ∧ 气象(沙尘暴灾害领导小组) ∧ 交通(沙尘暴灾害领导小组) ∧ 民政(沙尘暴灾害领导小组) ∧ 财政(沙尘暴灾害领导小组) ∧ 卫生(沙尘暴灾害领导小组)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“沙尘暴灾害预防控制” — 表示沙尘暴灾害的预防和控制任务\",\n            \"Government=“县级人民政府” — 表示县级人民政府\",\n            \"lg=“沙尘暴灾害领导小组” — 表示沙尘暴灾害领导小组\",\n            \"Departments=【林、农（牧）、气象、交通、民政、财政、卫生】 — 表示参加领导小组的部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"沙尘暴灾害预防控制(沙尘暴灾害预防控制) → Responsible(县级人民政府, 沙尘暴灾害预防控制)\",\n            \"沙尘暴灾害预防控制(沙尘暴灾害预防控制) → TerritorialManagement(县级人民政府)\",\n            \"沙尘暴灾害预防控制(沙尘暴灾害预防控制) → EstablishLeadershipGroup(县级人民政府, 沙尘暴灾害领导小组)\",\n            \"林(沙尘暴灾害领导小组) ∧ 农(沙尘暴灾害领导小组) ∧ 牧(沙尘暴灾害领导小组) ∧ 气象(沙尘暴灾害领导小组) ∧ 交通(沙尘暴灾害领导小组) ∧ 民政(沙尘暴灾害领导小组) ∧ 财政(沙尘暴灾害领导小组) ∧ 卫生(沙尘暴灾害领导小组)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“特大沙尘暴灾害” — 表示特大沙尘暴灾害\",\n            \"e=“专家团队” — 表示国家林业局组织的专家团队\",\n            \"l=“相关部门人员” — 表示国家林业局组织的相关部门人员\",\n            \"r=“救灾情况” — 表示救灾情况\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀e ∀l ∀r (DustStormDisaster(“特大沙尘暴灾害”) ∧ Organize(国家林业局, “专家团队”, “相关部门人员”) → (Investigate(“专家团队”, “特大沙尘暴灾害”, “相关部门人员”) ∧ Assess(“专家团队”, “特大沙尘暴灾害”, “救灾情况”) ∧ Propose(“专家团队”, Countermeasures)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“严重沙尘暴灾害” — 表示严重沙尘暴灾害\",\n            \"e=“环境专家” — 表示国家林业局组织的环境专家\",\n            \"l=“林业部门人员” — 表示国家林业局组织的林业部门人员\",\n            \"r=“紧急救援行动” — 表示紧急救援行动\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀e ∀l ∀r (DustStormDisaster(“严重沙尘暴灾害”) ∧ Organize(国家林业局, “环境专家”, “林业部门人员”) → (Investigate(“环境专家”, “严重沙尘暴灾害”, “林业部门人员”) ∧ Assess(“环境专家”, “严重沙尘暴灾害”, “紧急救援行动”) ∧ Propose(“环境专家”, Countermeasures)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“区域性沙尘暴灾害” — 表示区域性沙尘暴灾害\",\n            \"e=“气象专家” — 表示国家林业局组织的气象专家\",\n            \"l=“环保部门人员” — 表示国家林业局组织的环保部门人员\",\n            \"r=“灾害救助” — 表示灾害救助\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀e ∀l ∀r (DustStormDisaster(“区域性沙尘暴灾害”) ∧ Organize(国家林业局, “气象专家”, “环保部门人员”) → (Investigate(“气象专家”, “区域性沙尘暴灾害”, “环保部门人员”) ∧ Assess(“气象专家”, “区域性沙尘暴灾害”, “灾害救助”) ∧ Propose(“气象专家”, Countermeasures)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“局部沙尘暴灾害” — 表示局部沙尘暴灾害\",\n            \"e=“地质专家” — 表示国家林业局组织的地质专家\",\n            \"l=“地质部门人员” — 表示国家林业局组织的地质部门人员\",\n            \"r=“灾后援助” — 表示灾后援助\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀e ∀l ∀r (DustStormDisaster(“局部沙尘暴灾害”) ∧ Organize(国家林业局, “地质专家”, “地质部门人员”) → (Investigate(“地质专家”, “局部沙尘暴灾害”, “地质部门人员”) ∧ Assess(“地质专家”, “局部沙尘暴灾害”, “灾后援助”) ∧ Propose(“地质专家”, Countermeasures)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“特大沙尘暴灾害新闻发布工作方案” — 表示国家林业局制定的特大沙尘暴灾害新闻发布工作方案\",\n            \"c=“沙尘暴强度、影响范围、危害情况和处理结果” — 表示国家林业局确定的发布内容\",\n            \"r=“张华” — 表示国家林业局确定的负责人为张华\",\n            \"i=“沙尘暴强度8级” — 表示沙尘暴的强度为8级\",\n            \"s=“华北区域” — 表示沙尘暴的影响范围为华北区域\",\n            \"f=“经济损失严重，已采取紧急措施” — 表示沙尘暴的危害情况和处理结果\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p ∀c ∀r ∀i ∀s ∀f (FormulatePlan(国家林业局, “特大沙尘暴灾害新闻发布工作方案”) ∧ DetermineContent(国家林业局, “沙尘暴强度、影响范围、危害情况和处理结果”) ∧ DetermineResponsible(国家林业局, “张华”) → ReleaseNews(国家林业局, s))\",\n            \"∀s (ReleaseNews(国家林业局, s) → (DustStormIntensity(s, “沙尘暴强度8级”) ∧ InfluenceScope(s, “华北区域”) ∧ HazardSituation(s, “经济损失严重，已采取紧急措施”) ∧ HandlingResult(s, “经济损失严重，已采取紧急措施”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“特大沙尘暴灾害应急响应方案” — 表示国家林业局制定的特大沙尘暴灾害应急响应方案\",\n            \"c=“沙尘暴预警信息、预防措施和紧急疏散指南” — 表示国家林业局确定的发布内容\",\n            \"r=“李明” — 表示国家林业局确定的负责人为李明\",\n            \"i=“沙尘暴强度10级” — 表示沙尘暴的强度为10级\",\n            \"s=“西北区域” — 表示沙尘暴的影响范围为西北区域\",\n            \"f=“房屋损毁，正在组织救援” — 表示沙尘暴的危害情况和处理结果\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p ∀c ∀r ∀i ∀s ∀f (FormulatePlan(国家林业局, “特大沙尘暴灾害应急响应方案”) ∧ DetermineContent(国家林业局, “沙尘暴预警信息、预防措施和紧急疏散指南”) ∧ DetermineResponsible(国家林业局, “李明”) → ReleaseNews(国家林业局, s))\",\n            \"∀s (ReleaseNews(国家林业局, s) → (DustStormIntensity(s, “沙尘暴强度10级”) ∧ InfluenceScope(s, “西北区域”) ∧ HazardSituation(s, “房屋损毁，正在组织救援”) ∧ HandlingResult(s, “房屋损毁，正在组织救援”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“2024年3月特大沙尘暴” — 表示2024年3月发生的特大沙尘暴灾害已经结束\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (特大沙尘暴灾害结束(2024年3月特大沙尘暴) → Announce(国家林业局, 新闻媒体))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“2024年5月特大沙尘暴” — 表示2024年5月发生的特大沙尘暴灾害已经结束\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (特大沙尘暴灾害结束(2024年5月特大沙尘暴) → Announce(国家林业局, 新闻媒体))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“2024年7月特大沙尘暴” — 表示2024年7月发生的特大沙尘暴灾害已经结束\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (特大沙尘暴灾害结束(2024年7月特大沙尘暴) → Announce(国家林业局, 新闻媒体))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“2024年9月特大沙尘暴” — 表示2024年9月发生的特大沙尘暴灾害已经结束\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (特大沙尘暴灾害结束(2024年9月特大沙尘暴) → Announce(国家林业局, 新闻媒体))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“北京” — 表示北京地区\",\n            \"Facility=“5G网络” — 表示北京地区利用5G网络\",\n            \"System=“应急信息通信保障体系” — 表示北京地区建立应急信息通信保障体系\",\n            \"Channel=“移动通信” — 表示北京地区保证移动通信渠道的通畅\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (Utilize(北京, 5G网络) ∧ EstablishSystem(北京, 应急信息通信保障体系) → (EnsureUnobstructed(北京, 移动通信) ∧ TimelyCommunication(北京)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“上海” — 表示上海地区\",\n            \"Facility=“光纤网络” — 表示上海地区利用光纤网络\",\n            \"System=“应急信息通信保障体系” — 表示上海地区建立应急信息通信保障体系\",\n            \"Channel=“互联网” — 表示上海地区保证互联网渠道的通畅\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (Utilize(上海, 光纤网络) ∧ EstablishSystem(上海, 应急信息通信保障体系) → (EnsureUnobstructed(上海, 互联网) ∧ TimelyCommunication(上海)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“广州” — 表示广州地区\",\n            \"Facility=“卫星通信” — 表示广州地区利用卫星通信\",\n            \"System=“应急信息通信保障体系” — 表示广州地区建立应急信息通信保障体系\",\n            \"Channel=“卫星网络” — 表示广州地区保证卫星网络渠道的通畅\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (Utilize(广州, 卫星通信) ∧ EstablishSystem(广州, 应急信息通信保障体系) → (EnsureUnobstructed(广州, 卫星网络) ∧ TimelyCommunication(广州)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“深圳” — 表示深圳地区\",\n            \"Facility=“无线局域网” — 表示深圳地区利用无线局域网\",\n            \"System=“应急信息通信保障体系” — 表示深圳地区建立应急信息通信保障体系\",\n            \"Channel=“无线网络” — 表示深圳地区保证无线网络渠道的通畅\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (Utilize(深圳, 无线局域网) ∧ EstablishSystem(深圳, 应急信息通信保障体系) → (EnsureUnobstructed(深圳, 无线网络) ∧ TimelyCommunication(深圳)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Area=“全国” — 表示对全国区域进行沙化土地监测\",\n            \"Level=“国家” — 表示完善国家级沙化土地信息管理系统\",\n            \"Region=“华北沙区” — 表示掌握华北沙区的社会经济状况\"\n        ],\n        \"instance_logicexpression\": [\n            \"Monitor(全国) ∧ ∀l (ImproveSystem(l) ∧ l ∈ {国家, 省, 市, 县}) ∧ UnderstandSocioEconomic(华北沙区)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Area=“全国” — 表示对全国区域进行沙化土地监测\",\n            \"Level=“省” — 表示完善省级沙化土地信息管理系统\",\n            \"Region=“西北沙区” — 表示掌握西北沙区的社会经济状况\"\n        ],\n        \"instance_logicexpression\": [\n            \"Monitor(全国) ∧ ∀l (ImproveSystem(l) ∧ l ∈ {国家, 省, 市, 县}) ∧ UnderstandSocioEconomic(西北沙区)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Area=“全国” — 表示对全国区域进行沙化土地监测\",\n            \"Level=“市” — 表示完善市级沙化土地信息管理系统\",\n            \"Region=“东北沙区” — 表示掌握东北沙区的社会经济状况\"\n        ],\n        \"instance_logicexpression\": [\n            \"Monitor(全国) ∧ ∀l (ImproveSystem(l) ∧ l ∈ {国家, 省, 市, 县}) ∧ UnderstandSocioEconomic(东北沙区)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Area=“全国” — 表示对全国区域进行沙化土地监测\",\n            \"Level=“县” — 表示完善县级沙化土地信息管理系统\",\n            \"Region=“西南沙区” — 表示掌握西南沙区的社会经济状况\"\n        ],\n        \"instance_logicexpression\": [\n            \"Monitor(全国) ∧ ∀l (ImproveSystem(l) ∧ l ∈ {国家, 省, 市, 县}) ∧ UnderstandSocioEconomic(西南沙区)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“全国” — 表示荒漠化监测体系完善的区域是全国\",\n            \"Institution=“县级监测机构” — 表示县级监测机构的建设\",\n            \"Station=“监测站点” — 表示监测站点的建设\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (ImproveMonitoringSystem(全国) → (CountyLevelConstruction(县级监测机构) ∧ StationConstruction(监测站点) ∧ ImproveEquipmentLevel(全国)))\",\n            \"∀a (ImproveMonitoringSystem(全国) → (LayoutRational(全国) ∧ EquipmentAdvanced(全国) ∧ ResponseSensitive(全国)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“华北区域” — 表示荒漠化监测体系完善的区域是华北区域\",\n            \"Institution=“华北县级监测机构” — 表示华北县级监测机构的建设\",\n            \"Station=“华北监测站点” — 表示华北监测站点的建设\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (ImproveMonitoringSystem(华北区域) → (CountyLevelConstruction(华北县级监测机构) ∧ StationConstruction(华北监测站点) ∧ ImproveEquipmentLevel(华北区域)))\",\n            \"∀a (ImproveMonitoringSystem(华北区域) → (LayoutRational(华北区域) ∧ EquipmentAdvanced(华北区域) ∧ ResponseSensitive(华北区域)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“西北地区” — 表示荒漠化监测体系完善的区域是西北地区\",\n            \"Institution=“西北县级监测机构” — 表示西北县级监测机构的建设\",\n            \"Station=“西北监测站点” — 表示西北监测站点的建设\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (ImproveMonitoringSystem(西北地区) → (CountyLevelConstruction(西北县级监测机构) ∧ StationConstruction(西北监测站点) ∧ ImproveEquipmentLevel(西北地区)))\",\n            \"∀a (ImproveMonitoringSystem(西北地区) → (LayoutRational(西北地区) ∧ EquipmentAdvanced(西北地区) ∧ ResponseSensitive(西北地区)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“内蒙古自治区” — 表示荒漠化监测体系完善的区域是内蒙古自治区\",\n            \"Institution=“内蒙古县级监测机构” — 表示内蒙古县级监测机构的建设\",\n            \"Station=“内蒙古监测站点” — 表示内蒙古监测站点的建设\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (ImproveMonitoringSystem(内蒙古自治区) → (CountyLevelConstruction(内蒙古县级监测机构) ∧ StationConstruction(内蒙古监测站点) ∧ ImproveEquipmentLevel(内蒙古自治区)))\",\n            \"∀a (ImproveMonitoringSystem(内蒙古自治区) → (LayoutRational(内蒙古自治区) ∧ EquipmentAdvanced(内蒙古自治区) ∧ ResponseSensitive(内蒙古自治区)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴灾害2024” — 表示2024年发生的沙尘暴灾害\"\n        ],\n        \"instance_logicexpression\": [\n            \"沙尘暴灾害(沙尘暴灾害2024) → RequiresFunds(沙尘暴灾害2024)\",\n            \"RequiresFunds(沙尘暴灾害2024) → ExecutePlan(财政应急保障预案)\",\n            \"ExecutePlan(财政应急保障预案) → EnsureSmoothOperation(应急处置工作)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴灾害2023” — 表示2023年发生的沙尘暴灾害\"\n        ],\n        \"instance_logicexpression\": [\n            \"沙尘暴灾害(沙尘暴灾害2023) → RequiresFunds(沙尘暴灾害2023)\",\n            \"RequiresFunds(沙尘暴灾害2023) → ExecutePlan(财政应急保障预案)\",\n            \"ExecutePlan(财政应急保障预案) → EnsureSmoothOperation(应急处置工作)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“沙尘暴灾害2025” — 表示2025年发生的沙尘暴灾害\"\n        ],\n        \"instance_logicexpression\": [\n            \"沙尘暴灾害(沙尘暴灾害2025) → RequiresFunds(沙尘暴灾害2025)\",\n            \"RequiresFunds(沙尘暴灾害2025) → ExecutePlan(财政应急保障预案)\",\n            \"ExecutePlan(财政应急保障预案) → EnsureSmoothOperation(应急处置工作)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“荒漠化高级专家顾问组” — 表示现有的防治荒漠化高级专家顾问组\",\n            \"c=“沙尘暴灾害专家咨询组” — 表示组成的沙尘暴灾害专家咨询组\"\n        ],\n        \"instance_logicexpression\": [\n            \"ExpertGroup(“荒漠化高级专家顾问组”) → ∃c (RelyingOn(“荒漠化高级专家顾问组”, c) ∧ ConsultationGroup(c))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“沙尘暴灾害专家咨询组” — 表示沙尘暴灾害专家咨询组\"\n        ],\n        \"instance_logicexpression\": [\n            \"ConsultationGroup(“沙尘暴灾害专家咨询组”) → Provide(“沙尘暴灾害专家咨询组”, TechnicalGuidance) ∧ Provide(“沙尘暴灾害专家咨询组”, TechnicalConsultation) ∧ Provide(“沙尘暴灾害专家咨询组”, TechnicalService)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家林业局” — 表示国家级的林业部门\",\n            \"PreventionEquipment=“沙尘暴预防装备” — 表示沙尘暴灾害的预防装备\",\n            \"EarlyWarningEquipment=“沙尘暴预警装备” — 表示沙尘暴灾害的预警装备\",\n            \"EmergencyEquipment=“沙尘暴应急装备” — 表示沙尘暴灾害的应急装备\",\n            \"DisposalEquipment=“沙尘暴处置装备” — 表示沙尘暴灾害的处置装备\"\n        ],\n        \"instance_logicexpression\": [\n            \"ForestryDepartment(“国家林业局”) → Equip(“国家林业局”, “沙尘暴预防装备”) ∧ Equip(“国家林业局”, “沙尘暴预警装备”) ∧ Equip(“国家林业局”, “沙尘暴应急装备”) ∧ Equip(“国家林业局”, “沙尘暴处置装备”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“省级林业部门” — 表示省级的林业部门\",\n            \"s=“特大沙尘暴灾害” — 表示特大沙尘暴灾害\"\n        ],\n        \"instance_logicexpression\": [\n            \"ForestryDepartment(“省级林业部门”) ∧ Disaster(“特大沙尘暴灾害”, Severe) → React(“省级林业部门”, “特大沙尘暴灾害”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"m=“电视” — 表示利用电视作为宣传媒体\",\n            \"a=“广大人民群众” — 表示教育活动的受众是广大人民群众\"\n        ],\n        \"instance_logicexpression\": [\n            \"Utilize(电视) → (CarryOut(Education, 防沙治沙法) ∧ CarryOut(Education, 沙尘暴灾害知识))\",\n            \"Audience(广大人民群众) → (Enhance(广大人民群众, Prevention) ∧ Enhance(广大人民群众, Avoidance) ∧ Enhance(广大人民群众, DisasterAvoidance) ∧ Enhance(广大人民群众, SelfRescue) ∧ Enhance(广大人民群众, MutualRescue))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“互联网” — 表示利用互联网作为宣传媒体\",\n            \"a=“学生” — 表示教育活动的受众是学生\"\n        ],\n        \"instance_logicexpression\": [\n            \"Utilize(互联网) → (CarryOut(Education, 防沙治沙法) ∧ CarryOut(Education, 沙尘暴灾害知识))\",\n            \"Audience(学生) → (Enhance(学生, Prevention) ∧ Enhance(学生, Avoidance) ∧ Enhance(学生, DisasterAvoidance) ∧ Enhance(学生, SelfRescue) ∧ Enhance(学生, MutualRescue))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“广播” — 表示利用广播作为宣传媒体\",\n            \"a=“农民” — 表示教育活动的受众是农民\"\n        ],\n        \"instance_logicexpression\": [\n            \"Utilize(广播) → (CarryOut(Education, 防沙治沙法) ∧ CarryOut(Education, 沙尘暴灾害知识))\",\n            \"Audience(农民) → (Enhance(农民, Prevention) ∧ Enhance(农民, Avoidance) ∧ Enhance(农民, DisasterAvoidance) ∧ Enhance(农民, SelfRescue) ∧ Enhance(农民, MutualRescue))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“报纸” — 表示利用报纸作为宣传媒体\",\n            \"a=“城市居民” — 表示教育活动的受众是城市居民\"\n        ],\n        \"instance_logicexpression\": [\n            \"Utilize(报纸) → (CarryOut(Education, 防沙治沙法) ∧ CarryOut(Education, 沙尘暴灾害知识))\",\n            \"Audience(城市居民) → (Enhance(城市居民, Prevention) ∧ Enhance(城市居民, Avoidance) ∧ Enhance(城市居民, DisasterAvoidance) ∧ Enhance(城市居民, SelfRescue) ∧ Enhance(城市居民, MutualRescue))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“社交媒体” — 表示利用社交媒体作为宣传媒体\",\n            \"a=“旅游者” — 表示教育活动的受众是旅游者\"\n        ],\n        \"instance_logicexpression\": [\n            \"Utilize(社交媒体) → (CarryOut(Education, 防沙治沙法) ∧ CarryOut(Education, 沙尘暴灾害知识))\",\n            \"Audience(旅游者) → (Enhance(旅游者, Prevention) ∧ Enhance(旅游者, Avoidance) ∧ Enhance(旅游者, DisasterAvoidance) ∧ Enhance(旅游者, SelfRescue) ∧ Enhance(旅游者, MutualRescue))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=“地方政府主管领导” — 表示培训对象为地方政府主管领导\",\n            \"Trainee=“李市长” — 表示具体的培训对象为李市长\"\n        ],\n        \"instance_logicexpression\": [\n            \"OrganizeTraining(地方政府主管领导) → (MasterKnowledge(李市长, 防沙治沙) ∧ MasterKnowledge(李市长, 沙尘暴灾害) ∧ ImproveEfficiency(地方政府主管领导))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“沙尘暴灾害应急管理人员” — 表示培训对象为沙尘暴灾害应急管理人员\",\n            \"Trainee=“王主任” — 表示具体的培训对象为王主任\"\n        ],\n        \"instance_logicexpression\": [\n            \"OrganizeTraining(沙尘暴灾害应急管理人员) → (MasterKnowledge(王主任, 防沙治沙) ∧ MasterKnowledge(王主任, 沙尘暴灾害) ∧ ImproveEfficiency(沙尘暴灾害应急管理人员))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“沙尘暴灾害监测和信息管理人员” — 表示培训对象为沙尘暴灾害监测和信息管理人员\",\n            \"Trainee=“赵科长” — 表示具体的培训对象为赵科长\"\n        ],\n        \"instance_logicexpression\": [\n            \"OrganizeTraining(沙尘暴灾害监测和信息管理人员) → (MasterKnowledge(赵科长, 防沙治沙) ∧ MasterKnowledge(赵科长, 沙尘暴灾害) ∧ ImproveEfficiency(沙尘暴灾害监测和信息管理人员))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“绿化工程公司” — 表示绿化工程公司在防御突发沙尘暴灾害中贡献突出\",\n            \"Casualties=“50人” — 表示因工作不力造成的重大人员伤亡数量\",\n            \"Property=“1000万元” — 表示因工作不力造成的人民财产损失金额\"\n        ],\n        \"instance_logicexpression\": [\n            \"OutstandingContribution(绿化工程公司) → RecognizeAndReward(绿化工程公司)\",\n            \"Incompetence(绿化工程公司) ∧ CauseLoss(绿化工程公司, 50人, 1000万元) → HoldAccountable(绿化工程公司)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“防沙治沙研究所” — 表示防沙治沙研究所在防御突发沙尘暴灾害中贡献突出\"\n        ],\n        \"instance_logicexpression\": [\n            \"OutstandingContribution(防沙治沙研究所) → RecognizeAndReward(防沙治沙研究所)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“张三” — 表示张三在防御突发沙尘暴灾害中贡献突出\"\n        ],\n        \"instance_logicexpression\": [\n            \"OutstandingContribution(张三) → RecognizeAndReward(张三)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“应急响应小组” — 表示应急响应小组在突发沙尘暴灾害中工作不力\",\n            \"Casualties=“30人” — 表示因工作不力造成的重大人员伤亡数量\",\n            \"Property=“500万元” — 表示因工作不力造成的人民财产损失金额\"\n        ],\n        \"instance_logicexpression\": [\n            \"Incompetence(应急响应小组) ∧ CauseLoss(应急响应小组, 30人, 500万元) → HoldAccountable(应急响应小组)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“李四” — 表示李四在突发沙尘暴灾害中工作不力\",\n            \"Casualties=“20人” — 表示因工作不力造成的重大人员伤亡数量\",\n            \"Property=“300万元” — 表示因工作不力造成的人民财产损失金额\"\n        ],\n        \"instance_logicexpression\": [\n            \"Incompetence(李四) ∧ CauseLoss(李四, 20人, 300万元) → HoldAccountable(李四)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“流感” — 表示流感是一种传染病\",\n            \"ShortTimeOccurrence(流感) — 表示流感在短时间内发生\",\n            \"WideSpread(流感) — 表示流感波及范围广泛\",\n            \"ManyPatients(流感) — 表示流感出现大量的病人\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (InfectiousDisease(流感) ∧ ShortTimeOccurrence(流感) ∧ WideSpread(流感) ∧ (ManyPatients(流感) ∨ DeathCases(流感)) → ExceedsNormalRate(流感))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“埃博拉” — 表示埃博拉是一种传染病\",\n            \"ShortTimeOccurrence(埃博拉) — 表示埃博拉在短时间内发生\",\n            \"WideSpread(埃博拉) — 表示埃博拉波及范围广泛\",\n            \"DeathCases(埃博拉) — 表示埃博拉出现死亡病例\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (InfectiousDisease(埃博拉) ∧ ShortTimeOccurrence(埃博拉) ∧ WideSpread(埃博拉) ∧ (ManyPatients(埃博拉) ∨ DeathCases(埃博拉)) → ExceedsNormalRate(埃博拉))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“新冠肺炎” — 表示新冠肺炎是一种传染病\",\n            \"ShortTimeOccurrence(新冠肺炎) — 表示新冠肺炎在短时间内发生\",\n            \"WideSpread(新冠肺炎) — 表示新冠肺炎波及范围广泛\",\n            \"ManyPatients(新冠肺炎) — 表示新冠肺炎出现大量的病人\",\n            \"DeathCases(新冠肺炎) — 表示新冠肺炎出现死亡病例\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (InfectiousDisease(新冠肺炎) ∧ ShortTimeOccurrence(新冠肺炎) ∧ WideSpread(新冠肺炎) ∧ (ManyPatients(新冠肺炎) ∨ DeathCases(新冠肺炎)) → ExceedsNormalRate(新冠肺炎))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“登革热” — 表示登革热是一种传染病\",\n            \"ShortTimeOccurrence(登革热) — 表示登革热在短时间内发生\",\n            \"WideSpread(登革热) — 表示登革热波及范围广泛\",\n            \"DeathCases(登革热) — 表示登革热出现死亡病例\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (InfectiousDisease(登革热) ∧ ShortTimeOccurrence(登革热) ∧ WideSpread(登革热) ∧ (ManyPatients(登革热) ∨ DeathCases(登革热)) → ExceedsNormalRate(登革热))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“城市A” — 表示疾病发生的区域为城市A\",\n            \"t=“2023年3月” — 表示疾病发生的时间是2023年3月\",\n            \"s=“发热、咳嗽” — 表示病人的共同临床表现为发热和咳嗽\",\n            \"Patient=“多名居民” — 表示多名居民为病人\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀t ∀s (Epidemic(城市A, 2023年3月, 发热、咳嗽) ↔ (Appear(多名居民, 城市A, 2023年3月, 发热、咳嗽) ∧ Increase(城市A, 2023年3月) ∧ Expand(城市A, 2023年3月) ∧ UncertainDiagnosis(Disease)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“乡村B” — 表示疾病发生的区域为乡村B\",\n            \"t=“2023年4月” — 表示疾病发生的时间是2023年4月\",\n            \"s=“皮疹、关节痛” — 表示病人的共同临床表现为皮疹和关节痛\",\n            \"Patient=“村民” — 表示村民为病人\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀t ∀s (Epidemic(乡村B, 2023年4月, 皮疹、关节痛) ↔ (Appear(村民, 乡村B, 2023年4月, 皮疹、关节痛) ∧ Increase(乡村B, 2023年4月) ∧ Expand(乡村B, 2023年4月) ∧ UncertainDiagnosis(Disease)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“学校C” — 表示疾病发生的区域为学校C\",\n            \"t=“2023年5月” — 表示疾病发生的时间是2023年5月\",\n            \"s=“呕吐、腹泻” — 表示病人的共同临床表现为呕吐和腹泻\",\n            \"Patient=“学生” — 表示学生为病人\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀t ∀s (Epidemic(学校C, 2023年5月, 呕吐、腹泻) ↔ (Appear(学生, 学校C, 2023年5月, 呕吐、腹泻) ∧ Increase(学校C, 2023年5月) ∧ Expand(学校C, 2023年5月) ∧ UncertainDiagnosis(Disease)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“工厂D” — 表示疾病发生的区域为工厂D\",\n            \"t=“2023年6月” — 表示疾病发生的时间是2023年6月\",\n            \"s=“头痛、乏力” — 表示病人的共同临床表现为头痛和乏力\",\n            \"Patient=“工人” — 表示工人为病人\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀t ∀s (Epidemic(工厂D, 2023年6月, 头痛、乏力) ↔ (Appear(工人, 工厂D, 2023年6月, 头痛、乏力) ∧ Increase(工厂D, 2023年6月) ∧ Expand(工厂D, 2023年6月) ∧ UncertainDiagnosis(Disease)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“E1” — E1表示一起由食品污染引起的中毒事件\",\n            \"Event=“E1” — 事件E1\",\n            \"FoodContamination(E1) — E1是由食品污染引起的\",\n            \"ManyPeopleInvolved(E1) — E1涉及的人数众多\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (PoisoningEvent(e) ∧ (FoodContamination(e) ∨ OccupationalHazard(e)) → (ManyPeopleInvolved(e) ∨ SevereCasualty(e)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“E2” — E2表示一起由职业危害引起的中毒事件\",\n            \"Event=“E2” — 事件E2\",\n            \"OccupationalHazard(E2) — E2是由职业危害引起的\",\n            \"SevereCasualty(E2) — E2造成的伤亡较重\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (PoisoningEvent(e) ∧ (FoodContamination(e) ∨ OccupationalHazard(e)) → (ManyPeopleInvolved(e) ∨ SevereCasualty(e)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“E3” — E3表示一起既由食品污染又由职业危害引起的中毒事件\",\n            \"Event=“E3” — 事件E3\",\n            \"FoodContamination(E3) — E3是由食品污染引起的\",\n            \"OccupationalHazard(E3) — E3是由职业危害引起的\",\n            \"ManyPeopleInvolved(E3) — E3涉及的人数众多\",\n            \"SevereCasualty(E3) — E3造成的伤亡较重\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (PoisoningEvent(e) ∧ (FoodContamination(e) ∨ OccupationalHazard(e)) → (ManyPeopleInvolved(e) ∨ SevereCasualty(e)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“E4” — E4表示一起由食品污染引起的中毒事件，但伤亡不重且人数不多\",\n            \"Event=“E4” — 事件E4\",\n            \"FoodContamination(E4) — E4是由食品污染引起的\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (PoisoningEvent(e) ∧ (FoodContamination(e) ∨ OccupationalHazard(e)) → (ManyPeopleInvolved(e) ∨ SevereCasualty(e)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“肺鼠疫事件A” — 表示一个肺鼠疫事件\",\n            \"扩散趋势(e) — 表示事件A有扩散趋势\",\n            \"波及多个省份(e) — 表示事件A波及2个以上的省份\"\n        ],\n        \"instance_logicexpression\": [\n            \"PneumonicPlague(“肺鼠疫事件A”) ∧ (扩散趋势(“肺鼠疫事件A”) ∨ 波及多个省份(“肺鼠疫事件A”)) → Level(“肺鼠疫事件A”, Ⅰ)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“传染性非典型肺炎事件B” — 表示一个传染性非典型肺炎事件\",\n            \"扩散趋势(e) — 表示事件B有扩散趋势\"\n        ],\n        \"instance_logicexpression\": [\n            \"AtypicalPneumonia(“传染性非典型肺炎事件B”) ∧ 扩散趋势(“传染性非典型肺炎事件B”) → Level(“传染性非典型肺炎事件B”, Ⅰ)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“群体性不明原因疾病事件C” — 表示一个群体性不明原因疾病事件\",\n            \"波及多个省份(e) — 表示事件C波及多个省份\",\n            \"扩散趋势(e) — 表示事件C有扩散趋势\"\n        ],\n        \"instance_logicexpression\": [\n            \"UnidentifiedDisease(“群体性不明原因疾病事件C”) ∧ 波及多个省份(“群体性不明原因疾病事件C”) ∧ 扩散趋势(“群体性不明原因疾病事件C”) → Level(“群体性不明原因疾病事件C”, Ⅰ)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“新传染病事件D” — 表示一个新传染病事件\",\n            \"扩散趋势(e) — 表示事件D有扩散趋势\"\n        ],\n        \"instance_logicexpression\": [\n            \"NewInfectiousDisease(“新传染病事件D”) ∧ 扩散趋势(“新传染病事件D”) → Level(“新传染病事件D”, Ⅰ)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“烈性病菌株丢失事件E” — 表示一个烈性病菌株丢失事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"PathogenLoss(“烈性病菌株丢失事件E”) → Level(“烈性病菌株丢失事件E”, Ⅰ)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“特大传染病疫情事件F” — 表示一个特大传染病疫情事件\",\n            \"ImportedCase(e) — 表示事件F有输入性病例\",\n            \"严重危及公共卫生安全(e) — 表示事件F严重危及我国公共卫生安全\"\n        ],\n        \"instance_logicexpression\": [\n            \"MajorEpidemic(“特大传染病疫情事件F”) ∧ ImportedCase(“特大传染病疫情事件F”) ∧ 严重危及公共卫生安全(“特大传染病疫情事件F”) → Level(“特大传染病疫情事件F”, Ⅰ)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“国务院卫生行政部门认定事件G” — 表示一个由国务院卫生行政部门认定的事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"IdentifiedByHealthDepartment(“国务院卫生行政部门认定事件G”) → Level(“国务院卫生行政部门认定事件G”, Ⅰ)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“新型冠状病毒肺炎” — 表示新型冠状病毒肺炎是一种重大传染病\",\n            \"Health=“社会公众身心健康” — 表示该事件严重影响社会公众身心健康\"\n        ],\n        \"instance_logicexpression\": [\n            \"（Epidemic(“新型冠状病毒肺炎”) ∨ UnidentifiedDisease(e) ∨ Poisoning(e) ∨ NaturalDisaster(e) ∨ AccidentDisaster(e) ∨ SocialSecurityEvent(e)) ∧ SevereImpact(“社会公众身心健康”) → ApplicablePlan('国家突发公共卫生事件应急预案', “新型冠状病毒肺炎”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“不明原因群体性腹泻” — 表示不明原因群体性腹泻是一种群体性不明原因疾病\",\n            \"Health=“社会公众身心健康” — 表示该事件严重影响社会公众身心健康\"\n        ],\n        \"instance_logicexpression\": [\n            \"（Epidemic(e) ∨ UnidentifiedDisease(“不明原因群体性腹泻”) ∨ Poisoning(e) ∨ NaturalDisaster(e) ∨ AccidentDisaster(e) ∨ SocialSecurityEvent(e)) ∧ SevereImpact(“社会公众身心健康”) → ApplicablePlan('国家突发公共卫生事件应急预案', “不明原因群体性腹泻”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“化工厂化学品泄漏” — 表示化工厂化学品泄漏是一个重大食物和职业中毒事件\",\n            \"Health=“社会公众身心健康” — 表示该事件严重影响社会公众身心健康\"\n        ],\n        \"instance_logicexpression\": [\n            \"（Epidemic(e) ∨ UnidentifiedDisease(e) ∨ Poisoning(“化工厂化学品泄漏”) ∨ NaturalDisaster(e) ∨ AccidentDisaster(e) ∨ SocialSecurityEvent(e)) ∧ SevereImpact(“社会公众身心健康”) → ApplicablePlan('国家突发公共卫生事件应急预案', “化工厂化学品泄漏”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“地震” — 表示地震是一个自然灾害\",\n            \"Health=“社会公众身心健康” — 表示该事件严重影响社会公众身心健康\"\n        ],\n        \"instance_logicexpression\": [\n            \"（Epidemic(e) ∨ UnidentifiedDisease(e) ∨ Poisoning(e) ∨ NaturalDisaster(“地震”) ∨ AccidentDisaster(e) ∨ SocialSecurityEvent(e)) ∧ SevereImpact(“社会公众身心健康”) → ApplicablePlan('国家突发公共卫生事件应急预案', “地震”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“交通事故” — 表示交通事故是一个事故灾难\",\n            \"Health=“社会公众身心健康” — 表示该事件严重影响社会公众身心健康\"\n        ],\n        \"instance_logicexpression\": [\n            \"（Epidemic(e) ∨ UnidentifiedDisease(e) ∨ Poisoning(e) ∨ NaturalDisaster(e) ∨ AccidentDisaster(“交通事故”) ∨ SocialSecurityEvent(e)) ∧ SevereImpact(“社会公众身心健康”) → ApplicablePlan('国家突发公共卫生事件应急预案', “交通事故”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“恐怖袭击” — 表示恐怖袭击是一个社会安全事件\",\n            \"Task=“应急医疗救援” — 表示该任务是应急医疗救援工作\",\n            \"p=“其他突发公共事件应急预案” — 表示其他突发公共事件中涉及的应急医疗救援工作预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyMedicalResponse(“应急医疗救援”) ∧ ¬(Epidemic(e) ∨ UnidentifiedDisease(e) ∨ Poisoning(e) ∨ NaturalDisaster(e) ∨ AccidentDisaster(e) ∨ SocialSecurityEvent(“恐怖袭击”)) → ∃p (ApplicablePlan(p, “恐怖袭击”) ∧ p ≠ '国家突发公共卫生事件应急预案')\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Society=“全球社会” — 表示全球社会以预防为主的原则。\",\n            \"Society=“全球社会” — 表示全球社会保持常备不懈的状态。\"\n        ],\n        \"instance_logicexpression\": [\n            \"PreventionFirst(全球社会) ∧ AlwaysPrepared(全球社会)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“流感疫情” — 表示提高社会对流感疫情的防范意识。\",\n            \"e=“流感疫情” — 表示社会落实针对流感疫情的防范措施。\",\n            \"e=“流感疫情” — 表示做好针对流感疫情的人员、技术、物资和设备的应急储备工作。\"\n        ],\n        \"instance_logicexpression\": [\n            \"PublicHealthEvent(流感疫情) → (RaiseAwareness(全球社会, 流感疫情) ∧ ImplementMeasures(全球社会, 流感疫情措施) ∧ EmergencyPreparedness(医疗人员, 疫苗技术, 防护用品, 医疗设备))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“未知病毒爆发” — 表示对可能引发未知病毒爆发的情况及时进行分析和预警。\",\n            \"s=“未知病毒爆发” — 表示对未知病毒爆发的情况做到早发现。\",\n            \"s=“未知病毒爆发” — 表示对未知病毒爆发的情况做到早报告。\",\n            \"s=“未知病毒爆发” — 表示对未知病毒爆发的情况做到早处理。\"\n        ],\n        \"instance_logicexpression\": [\n            \"PotentialEvent(未知病毒爆发) → (AnalyzeAndWarn(未知病毒爆发) ∧ EarlyDetection(未知病毒爆发) ∧ EarlyReporting(未知病毒爆发) ∧ EarlyHandling(未知病毒爆发))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“食品污染事件” — 表示对可能引发食品污染事件的情况及时进行分析和预警。\",\n            \"s=“食品污染事件” — 表示对食品污染事件的情况做到早发现。\",\n            \"s=“食品污染事件” — 表示对食品污染事件的情况做到早报告。\",\n            \"s=“食品污染事件” — 表示对食品污染事件的情况做到早处理。\"\n        ],\n        \"instance_logicexpression\": [\n            \"PotentialEvent(食品污染事件) → (AnalyzeAndWarn(食品污染事件) ∧ EarlyDetection(食品污染事件) ∧ EarlyReporting(食品污染事件) ∧ EarlyHandling(食品污染事件))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Event=“H1N1流感爆发” — 表示突发公共卫生事件为H1N1流感爆发\",\n            \"GovernmentLevel=“市级” — 表示人民政府的级别为市级\"\n        ],\n        \"instance_logicexpression\": [\n            \"PublicHealthEmergency(“H1N1流感爆发”) → TieredManagement(“H1N1流感爆发”)\",\n            \"GovernmentLevel(“市级”) ∧ PublicHealthEmergency(“H1N1流感爆发”) → UnifiedLeadership(“市级”, “H1N1流感爆发”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Event=“Ebola病毒疫情” — 表示突发公共卫生事件为Ebola病毒疫情\",\n            \"Department=“疾控中心” — 表示有关部门为疾控中心\",\n            \"DutyScope(“疾控中心”) — 表示疾控中心的职责范围\",\n            \"Regulation(“疾控中心”) — 表示疾控中心按照预案规定\"\n        ],\n        \"instance_logicexpression\": [\n            \"PublicHealthEmergency(“Ebola病毒疫情”) → TieredManagement(“Ebola病毒疫情”)\",\n            \"Department(“疾控中心”) ∧ PublicHealthEmergency(“Ebola病毒疫情”) ∧ DutyScope(“疾控中心”) ∧ Regulation(“疾控中心”) → EmergencyResponse(“疾控中心”, “Ebola病毒疫情”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Event=“SARS疫情” — 表示突发公共卫生事件为SARS疫情\",\n            \"GovernmentLevel=“省级” — 表示人民政府的级别为省级\"\n        ],\n        \"instance_logicexpression\": [\n            \"PublicHealthEmergency(“SARS疫情”) → TieredManagement(“SARS疫情”)\",\n            \"GovernmentLevel(“省级”) ∧ PublicHealthEmergency(“SARS疫情”) → UnifiedLeadership(“省级”, “SARS疫情”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Event=“登革热疫情” — 表示突发公共卫生事件为登革热疫情\",\n            \"Department=“卫生监督所” — 表示有关部门为卫生监督所\",\n            \"DutyScope(“卫生监督所”) — 表示卫生监督所的职责范围\",\n            \"Regulation(“卫生监督所”) — 表示卫生监督所按照预案规定\"\n        ],\n        \"instance_logicexpression\": [\n            \"PublicHealthEmergency(“登革热疫情”) → TieredManagement(“登革热疫情”)\",\n            \"Department(“卫生监督所”) ∧ PublicHealthEmergency(“登革热疫情”) ∧ DutyScope(“卫生监督所”) ∧ Regulation(“卫生监督所”) → EmergencyResponse(“卫生监督所”, “登革热疫情”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Event=“霍乱疫情” — 表示突发公共卫生事件为霍乱疫情\",\n            \"GovernmentLevel=“国家级” — 表示人民政府的级别为国家级\"\n        ],\n        \"instance_logicexpression\": [\n            \"PublicHealthEmergency(“霍乱疫情”) → TieredManagement(“霍乱疫情”)\",\n            \"GovernmentLevel(“国家级”) ∧ PublicHealthEmergency(“霍乱疫情”) → UnifiedLeadership(“国家级”, “霍乱疫情”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“市级政府” — 表示市级人民政府\",\n            \"h=“市级卫生局” — 表示市级卫生行政部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"Government(市级政府) → ImproveEmergencySystem(市级政府)\",\n            \"HealthDepartment(市级卫生局) → EstablishWorkSystem(市级卫生局)\",\n            \"PublicHealthEvent(e) → (QuickResponse(e) ∧ CarryOutMonitoring(e) ∧ CarryOutReporting(e) ∧ CarryOutHandling(e))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“省级政府” — 表示省级人民政府\",\n            \"h=“省级卫生厅” — 表示省级卫生行政部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"Government(省级政府) → ImproveEmergencySystem(省级政府)\",\n            \"HealthDepartment(省级卫生厅) → EstablishWorkSystem(省级卫生厅)\",\n            \"PublicHealthEvent(e) → (QuickResponse(e) ∧ CarryOutMonitoring(e) ∧ CarryOutReporting(e) ∧ CarryOutHandling(e))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“区级政府” — 表示区级人民政府\",\n            \"h=“区级卫生局” — 表示区级卫生行政部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"Government(区级政府) → ImproveEmergencySystem(区级政府)\",\n            \"HealthDepartment(区级卫生局) → EstablishWorkSystem(区级卫生局)\",\n            \"PublicHealthEvent(e) → (QuickResponse(e) ∧ CarryOutMonitoring(e) ∧ CarryOutReporting(e) ∧ CarryOutHandling(e))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“县级政府” — 表示县级人民政府\",\n            \"h=“县级卫生局” — 表示县级卫生行政部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"Government(县级政府) → ImproveEmergencySystem(县级政府)\",\n            \"HealthDepartment(县级卫生局) → EstablishWorkSystem(县级卫生局)\",\n            \"PublicHealthEvent(e) → (QuickResponse(e) ∧ CarryOutMonitoring(e) ∧ CarryOutReporting(e) ∧ CarryOutHandling(e))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“疾病控制中心” — 表示疾病控制中心充分尊重和依靠科学\",\n            \"o=“疾病控制中心” — 表示疾病控制中心重视开展科研和培训\"\n        ],\n        \"instance_logicexpression\": [\n            \"RespectScience(疾病控制中心) ∧ ResearchAndTraining(疾病控制中心) → TechSupport(疾病控制中心)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o1=“医院” — 表示医院\",\n            \"o2=“红十字会” — 表示红十字会\",\n            \"有效应对突发公共卫生事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"(Collaborate(医院, 红十字会) ∧ ResourceSharing(医院, 红十字会)) → 有效应对突发公共卫生事件\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“市政府” — 表示市政府广泛组织、动员公众参与\"\n        ],\n        \"instance_logicexpression\": [\n            \"MobilizePublic(市政府) → 广泛组织、动员公众参与突发公共卫生事件的应急处理\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家卫生研究院” — 表示国家卫生研究院充分尊重和依靠科学\",\n            \"o=“国家卫生研究院” — 表示国家卫生研究院重视开展科研和培训\"\n        ],\n        \"instance_logicexpression\": [\n            \"RespectScience(国家卫生研究院) ∧ ResearchAndTraining(国家卫生研究院) → TechSupport(国家卫生研究院)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o1=“大学” — 表示大学\",\n            \"o2=“科研机构” — 表示科研机构\",\n            \"有效应对突发公共卫生事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"(Collaborate(大学, 科研机构) ∧ ResourceSharing(大学, 科研机构)) → 有效应对突发公共卫生事件\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“非政府组织” — 表示非政府组织广泛组织、动员公众参与\"\n        ],\n        \"instance_logicexpression\": [\n            \"MobilizePublic(非政府组织) → 广泛组织、动员公众参与突发公共卫生事件的应急处理\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“H7N9禽流感爆发” — 表示H7N9禽流感爆发事件\",\n            \"部门：卫生部\"\n        ],\n        \"instance_logicexpression\": [\n            \"ActualNeed(H7N9禽流感爆发) → ResponsibleForCoordination(卫生部, H7N9禽流感爆发)\",\n            \"ActualNeed(H7N9禽流感爆发) → ProposeEstablishment(卫生部, 应急指挥部)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“埃博拉病毒疫情” — 表示埃博拉病毒疫情事件\",\n            \"部门：卫生部\"\n        ],\n        \"instance_logicexpression\": [\n            \"ActualNeed(埃博拉病毒疫情) → ResponsibleForCoordination(卫生部, 埃博拉病毒疫情)\",\n            \"ActualNeed(埃博拉病毒疫情) → ProposeEstablishment(卫生部, 应急指挥部)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“新型冠状病毒肺炎疫情” — 表示新型冠状病毒肺炎疫情事件\",\n            \"部门：卫生部\"\n        ],\n        \"instance_logicexpression\": [\n            \"ActualNeed(新型冠状病毒肺炎疫情) → ResponsibleForCoordination(卫生部, 新型冠状病毒肺炎疫情)\",\n            \"ActualNeed(新型冠状病毒肺炎疫情) → ProposeEstablishment(卫生部, 应急指挥部)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“霍乱疫情” — 表示霍乱疫情事件\",\n            \"部门：卫生部\"\n        ],\n        \"instance_logicexpression\": [\n            \"ActualNeed(霍乱疫情) → ResponsibleForCoordination(卫生部, 霍乱疫情)\",\n            \"ActualNeed(霍乱疫情) → ProposeEstablishment(卫生部, 应急指挥部)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“市卫生局” — 表示市卫生局负责组织协调\",\n            \"e=“H市流感疫情” — 表示H市发生的流感疫情\",\n            \"DepartmentRole(d) — 表示市卫生局的职责\",\n            \"NeedForCommand(e) — 表示H市流感疫情需要成立应急指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"PublicHealthEmergency(H市流感疫情) ∧ DepartmentRole(市卫生局) → ResponsibleForCoordination(市卫生局, H市流感疫情)\",\n            \"PublicHealthEmergency(H市流感疫情) ∧ DepartmentRole(市卫生局) ∧ NeedForCommand(H市流感疫情) → Propose(市卫生局, EstablishEmergencyCommand(H市人民政府, H市流感疫情应急指挥部))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“区卫生监督所” — 表示区卫生监督所负责组织协调\",\n            \"e=“Z区食物中毒事件” — 表示Z区发生的食物中毒事件\",\n            \"DepartmentRole(d) — 表示区卫生监督所的职责\",\n            \"NeedForCommand(e) — 表示Z区食物中毒事件需要成立应急指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"PublicHealthEmergency(Z区食物中毒事件) ∧ DepartmentRole(区卫生监督所) → ResponsibleForCoordination(区卫生监督所, Z区食物中毒事件)\",\n            \"PublicHealthEmergency(Z区食物中毒事件) ∧ DepartmentRole(区卫生监督所) ∧ NeedForCommand(Z区食物中毒事件) → Propose(区卫生监督所, EstablishEmergencyCommand(Z区人民政府, Z区食物中毒事件应急指挥部))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“县疾病预防控制中心” — 表示县疾病预防控制中心负责组织协调\",\n            \"e=“N县水源污染事件” — 表示N县发生的水源污染事件\",\n            \"DepartmentRole(d) — 表示县疾病预防控制中心的职责\",\n            \"NeedForCommand(e) — 表示N县水源污染事件需要成立应急指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"PublicHealthEmergency(N县水源污染事件) ∧ DepartmentRole(县疾病预防控制中心) → ResponsibleForCoordination(县疾病预防控制中心, N县水源污染事件)\",\n            \"PublicHealthEmergency(N县水源污染事件) ∧ DepartmentRole(县疾病预防控制中心) ∧ NeedForCommand(N县水源污染事件) → Propose(县疾病预防控制中心, EstablishEmergencyCommand(N县人民政府, N县水源污染事件应急指挥部))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“中央人民政府” — 表示中央人民政府\",\n            \"l=“国家级” — 表示国家级应急指挥部\",\n            \"a=“全国” — 表示全国范围\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀l (Government(中央人民政府) ∧ Level(国家级) → (SuggestEstablishment(HealthDepartment, 国家级) ∧ ActualWorkNeed(国家级) → EstablishEmergencyCommand(中央人民政府, 国家级)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“北京市人民政府” — 表示北京市人民政府\",\n            \"l=“地方级” — 表示地方级应急指挥部\",\n            \"a=“北京市” — 表示北京市范围\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀l (Government(北京市人民政府) ∧ Level(地方级) → (SuggestEstablishment(HealthDepartment, 地方级) ∧ ActualWorkNeed(地方级) → EstablishEmergencyCommand(北京市人民政府, 地方级)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“上海市卫生行政部门” — 表示上海市卫生行政部门\",\n            \"l=“地方级” — 表示地方级应急指挥部\",\n            \"a=“上海市” — 表示上海市范围\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀a (Government(上海市人民政府) ∧ Area(上海市) → TerritorialManagement(上海市人民政府, 上海市) ∧ EmergencyResponseWork(上海市人民政府, 上海市))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“广东省人民政府” — 表示广东省人民政府\",\n            \"l=“地方级” — 表示地方级应急指挥部\",\n            \"a=“广东省” — 表示广东省范围\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀l (Government(广东省人民政府) ∧ Level(地方级) → (SuggestEstablishment(HealthDepartment, 地方级) ∧ ActualWorkNeed(地方级) → EstablishEmergencyCommand(广东省人民政府, 地方级)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“四川省人民政府” — 表示四川省人民政府\",\n            \"l=“地方级” — 表示地方级应急指挥部\",\n            \"a=“四川省” — 表示四川省范围\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀a (Government(四川省人民政府) ∧ Area(四川省) → TerritorialManagement(四川省人民政府, 四川省) ∧ EmergencyResponseWork(四川省人民政府, 四川省))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“新型冠状病毒疫情” — 表示事件为新型冠状病毒疫情\",\n            \"d=“封锁城市” — 表示决策为封锁城市\",\n            \"u=“国家卫生健康委员会” — 表示单位为国家卫生健康委员会\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (MajorPublicHealthEvent(“新型冠状病毒疫情”) → (Responsible(CommandCenter, “新型冠状病毒疫情”) ∧ Lead(CommandCenter, “新型冠状病毒疫情”) ∧ Command(CommandCenter, “新型冠状病毒疫情”) ∧ ∃d (MakeDecision(CommandCenter, “封锁城市”) ∧ Decision(“封锁城市”, “新型冠状病毒疫情”))))\",\n            \"∀e ∀u (MajorPublicHealthEvent(“新型冠状病毒疫情”) → (Determine(CommandCenter, “国家卫生健康委员会”, “新型冠状病毒疫情”) → MemberUnit(CommandCenter, “国家卫生健康委员会”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“H7N9禽流感疫情” — 表示事件为H7N9禽流感疫情\",\n            \"d=“限制活禽交易” — 表示决策为限制活禽交易\",\n            \"u=“农业农村部” — 表示单位为农业农村部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (MajorPublicHealthEvent(“H7N9禽流感疫情”) → (Responsible(CommandCenter, “H7N9禽流感疫情”) ∧ Lead(CommandCenter, “H7N9禽流感疫情”) ∧ Command(CommandCenter, “H7N9禽流感疫情”) ∧ ∃d (MakeDecision(CommandCenter, “限制活禽交易”) ∧ Decision(“限制活禽交易”, “H7N9禽流感疫情”))))\",\n            \"∀e ∀u (MajorPublicHealthEvent(“H7N9禽流感疫情”) → (Determine(CommandCenter, “农业农村部”, “H7N9禽流感疫情”) → MemberUnit(CommandCenter, “农业农村部”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“埃博拉病毒疫情” — 表示事件为埃博拉病毒疫情\",\n            \"d=“国际合作” — 表示决策为国际合作\",\n            \"u=“外交部” — 表示单位为外交部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (MajorPublicHealthEvent(“埃博拉病毒疫情”) → (Responsible(CommandCenter, “埃博拉病毒疫情”) ∧ Lead(CommandCenter, “埃博拉病毒疫情”) ∧ Command(CommandCenter, “埃博拉病毒疫情”) ∧ ∃d (MakeDecision(CommandCenter, “国际合作”) ∧ Decision(“国际合作”, “埃博拉病毒疫情”))))\",\n            \"∀e ∀u (MajorPublicHealthEvent(“埃博拉病毒疫情”) → (Determine(CommandCenter, “外交部”, “埃博拉病毒疫情”) → MemberUnit(CommandCenter, “外交部”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“霍乱疫情” — 表示事件为霍乱疫情\",\n            \"d=“水源消毒” — 表示决策为水源消毒\",\n            \"u=“生态环境部” — 表示单位为生态环境部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (MajorPublicHealthEvent(“霍乱疫情”) → (Responsible(CommandCenter, “霍乱疫情”) ∧ Lead(CommandCenter, “霍乱疫情”) ∧ Command(CommandCenter, “霍乱疫情”) ∧ ∃d (MakeDecision(CommandCenter, “水源消毒”) ∧ Decision(“水源消毒”, “霍乱疫情”))))\",\n            \"∀e ∀u (MajorPublicHealthEvent(“霍乱疫情”) → (Determine(CommandCenter, “生态环境部”, “霍乱疫情”) → MemberUnit(CommandCenter, “生态环境部”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“省A” — 表示省A行政区域内发生的突发公共卫生事件\",\n            \"d=“省级突发公共卫生事件应急指挥部” — 表示由省级人民政府有关部门组成的应急指挥部\",\n            \"t=“应急处理的协调和指挥” — 表示应急指挥部负责的任务\",\n            \"a=“启动应急预案” — 表示应急指挥部作出的决策\",\n            \"m=“封锁疫区，隔离患者” — 表示应急指挥部决定采取的措施\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p ∀d ∀t ∀a ∀m (PublicHealthEmergency(省A) ∧ FormedBy(省级突发公共卫生事件应急指挥部, 省级人民政府有关部门) → (ResponsibleFor(省级突发公共卫生事件应急指挥部, 应急处理的协调和指挥) ∧ MakeDecision(省级突发公共卫生事件应急指挥部, 启动应急预案) ∧ TakeMeasures(省级突发公共卫生事件应急指挥部, 封锁疫区，隔离患者)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“省B” — 表示省B行政区域内发生的突发公共卫生事件\",\n            \"d=“省级突发公共卫生事件应急指挥部” — 表示由省级人民政府有关部门组成的应急指挥部\",\n            \"t=“应急处理的协调和指挥” — 表示应急指挥部负责的任务\",\n            \"a=“调配医疗资源” — 表示应急指挥部作出的决策\",\n            \"m=“增加医院床位，调派医护人员” — 表示应急指挥部决定采取的措施\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p ∀d ∀t ∀a ∀m (PublicHealthEmergency(省B) ∧ FormedBy(省级突发公共卫生事件应急指挥部, 省级人民政府有关部门) → (ResponsibleFor(省级突发公共卫生事件应急指挥部, 应急处理的协调和指挥) ∧ MakeDecision(省级突发公共卫生事件应急指挥部, 调配医疗资源) ∧ TakeMeasures(省级突发公共卫生事件应急指挥部, 增加医院床位，调派医护人员)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“省C” — 表示省C行政区域内发生的突发公共卫生事件\",\n            \"d=“省级突发公共卫生事件应急指挥部” — 表示由省级人民政府有关部门组成的应急指挥部\",\n            \"t=“应急处理的协调和指挥” — 表示应急指挥部负责的任务\",\n            \"a=“发布健康警告” — 表示应急指挥部作出的决策\",\n            \"m=“开展公共卫生教育，提高公众防护意识” — 表示应急指挥部决定采取的措施\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p ∀d ∀t ∀a ∀m (PublicHealthEmergency(省C) ∧ FormedBy(省级突发公共卫生事件应急指挥部, 省级人民政府有关部门) → (ResponsibleFor(省级突发公共卫生事件应急指挥部, 应急处理的协调和指挥) ∧ MakeDecision(省级突发公共卫生事件应急指挥部, 发布健康警告) ∧ TakeMeasures(省级突发公共卫生事件应急指挥部, 开展公共卫生教育，提高公众防护意识)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"国务院卫生行政部门=“国家卫生健康委员会” — 表示国务院卫生行政部门为国家卫生健康委员会\",\n            \"卫生应急办公室=“突发公共卫生事件应急指挥中心” — 表示卫生应急办公室为突发公共卫生事件应急指挥中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"Establish(国家卫生健康委员会, 突发公共卫生事件应急指挥中心) ∧ ResponsibleFor(突发公共卫生事件应急指挥中心, 应急处理日常管理工作)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“北京市” — 表示行政区域为北京市\",\n            \"Department=“北京市卫生和计划生育委员会” — 表示部门为北京市卫生和计划生育委员会\",\n            \"应急管理机构=“北京市突发公共卫生事件应急办公室” — 表示应急管理机构为北京市突发公共卫生事件应急办公室\"\n        ],\n        \"instance_logicexpression\": [\n            \"AdministrativeRegion(北京市) ∨ System(北京市) → (ReferTo(北京市卫生和计划生育委员会, 国家卫生健康委员会) ∧ Designate(北京市卫生和计划生育委员会, 北京市突发公共卫生事件应急办公室) ∧ ResponsibleFor(北京市突发公共卫生事件应急办公室, 协调管理工作))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“上海市” — 表示行政区域为上海市\",\n            \"卫生行政部门=“上海市卫生健康委员会” — 表示卫生行政部门为上海市卫生健康委员会\",\n            \"应急管理机构=“上海市突发公共卫生事件应急办公室” — 表示应急管理机构为上海市突发公共卫生事件应急办公室\"\n        ],\n        \"instance_logicexpression\": [\n            \"AdministrativeRegion(上海市) ∧ (上海市 = 市(地)级 ∨ 上海市 = 县级) → Designate(上海市卫生健康委员会, 上海市突发公共卫生事件应急办公室) ∧ ResponsibleFor(上海市突发公共卫生事件应急办公室, 日常管理工作)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“中国人民解放军” — 表示系统为中国人民解放军\",\n            \"Department=“中国人民解放军卫生部门” — 表示部门为中国人民解放军卫生部门\",\n            \"应急管理机构=“中国人民解放军突发公共卫生事件应急指挥中心” — 表示应急管理机构为中国人民解放军突发公共卫生事件应急指挥中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"System(中国人民解放军) → (ReferTo(中国人民解放军卫生部门, 国家卫生健康委员会) ∧ Designate(中国人民解放军卫生部门, 中国人民解放军突发公共卫生事件应急指挥中心) ∧ ResponsibleFor(中国人民解放军突发公共卫生事件应急指挥中心, 协调管理工作))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“河北省张家口市” — 表示行政区域为河北省张家口市\",\n            \"卫生行政部门=“张家口市卫生健康委员会” — 表示卫生行政部门为张家口市卫生健康委员会\",\n            \"应急管理机构=“张家口市突发公共卫生事件应急办公室” — 表示应急管理机构为张家口市突发公共卫生事件应急办公室\"\n        ],\n        \"instance_logicexpression\": [\n            \"AdministrativeRegion(河北省张家口市) ∧ (河北省张家口市 = 市(地)级 ∨ 河北省张家口市 = 县级) → Designate(张家口市卫生健康委员会, 张家口市突发公共卫生事件应急办公室) ∧ ResponsibleFor(张家口市突发公共卫生事件应急办公室, 日常管理工作)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“国务院卫生行政部门” — 表示国务院卫生行政部门负责组建委员会\",\n            \"C=“突发公共卫生事件专家咨询委员会” — 表示组建的委员会类型\"\n        ],\n        \"instance_logicexpression\": [\n            \"国务院卫生行政部门(国务院卫生行政部门) ∨ 省级卫生行政部门(国务院卫生行政部门) → ResponsibleForForming(国务院卫生行政部门, EmergencyPublicHealthEventCommittee(C))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“某省卫生行政部门” — 表示某省卫生行政部门负责组建委员会\",\n            \"C=“突发公共卫生事件专家咨询委员会” — 表示组建的委员会类型\"\n        ],\n        \"instance_logicexpression\": [\n            \"国务院卫生行政部门(某省卫生行政部门) ∨ 省级卫生行政部门(某省卫生行政部门) → ResponsibleForForming(某省卫生行政部门, EmergencyPublicHealthEventCommittee(C))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“某市卫生行政部门” — 表示某市卫生行政部门根据应急工作需要组建委员会\",\n            \"C=“突发公共卫生事件应急处理专家咨询委员会” — 表示组建的委员会类型\"\n        ],\n        \"instance_logicexpression\": [\n            \"市（地）级卫生行政部门(某市卫生行政部门) ∨ 县级卫生行政部门(某市卫生行政部门) → EmergencyWorkNecessity(某市卫生行政部门) → ResponsibleForForming(某市卫生行政部门, EmergencyPublicHealthEventCommittee(C))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“某县卫生行政部门” — 表示某县卫生行政部门根据应急工作需要组建委员会\",\n            \"C=“突发公共卫生事件应急处理专家咨询委员会” — 表示组建的委员会类型\"\n        ],\n        \"instance_logicexpression\": [\n            \"市（地）级卫生行政部门(某县卫生行政部门) ∨ 县级卫生行政部门(某县卫生行政部门) → EmergencyWorkNecessity(某县卫生行政部门) → ResponsibleForForming(某县卫生行政部门, EmergencyPublicHealthEventCommittee(C))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“市立医院” — 表示市立医院是突发公共卫生事件应急处理的专业技术机构\",\n            \"s=“H市流感爆发” — 表示H市发生了流感爆发这一突发公共卫生事件\",\n            \"Department=“市卫生局” — 表示市卫生局是卫生行政部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"ProfessionalInstitution(市立医院) → (ConductTraining(市立医院) ∧ ∀s (PublicHealthEmergency(H市流感爆发) → (FollowCommand(市立医院, 市卫生局) ∧ EmergencyResponse(市立医院))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“疾病预防控制中心” — 表示疾病预防控制中心是突发公共卫生事件应急处理的专业技术机构\",\n            \"s=“G区食物中毒事件” — 表示G区发生了食物中毒事件这一突发公共卫生事件\",\n            \"Department=“区卫生局” — 表示区卫生局是卫生行政部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"ProfessionalInstitution(疾病预防控制中心) → (ConductTraining(疾病预防控制中心) ∧ ∀s (PublicHealthEmergency(G区食物中毒事件) → (FollowCommand(疾病预防控制中心, 区卫生局) ∧ EmergencyResponse(疾病预防控制中心))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“卫生监督所” — 表示卫生监督所是突发公共卫生事件应急处理的专业技术机构\",\n            \"s=“F镇水源污染” — 表示F镇发生了水源污染这一突发公共卫生事件\",\n            \"Department=“镇卫生局” — 表示镇卫生局是卫生行政部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"ProfessionalInstitution(卫生监督所) → (ConductTraining(卫生监督所) ∧ ∀s (PublicHealthEmergency(F镇水源污染) → (FollowCommand(卫生监督所, 镇卫生局) ∧ EmergencyResponse(卫生监督所))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“出入境检验检疫局” — 表示出入境检验检疫局是突发公共卫生事件应急处理的专业技术机构\",\n            \"s=“E口岸登革热疫情” — 表示E口岸发生了登革热疫情这一突发公共卫生事件\",\n            \"Department=“口岸卫生局” — 表示口岸卫生局是卫生行政部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"ProfessionalInstitution(出入境检验检疫局) → (ConductTraining(出入境检验检疫局) ∧ ∀s (PublicHealthEmergency(E口岸登革热疫情) → (FollowCommand(出入境检验检疫局, 口岸卫生局) ∧ EmergencyResponse(出入境检验检疫局))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Country=“中国” — 表示国家为中国\",\n            \"i=“国家疾病预防控制中心” — 表示机构为国家疾病预防控制中心\",\n            \"e=“新型冠状病毒肺炎” — 表示事件为新型冠状病毒肺炎\"\n        ],\n        \"instance_logicexpression\": [\n            \"SurveillanceNetwork(中国)\",\n            \"Institution(国家疾病预防控制中心) ∧ Event(新型冠状病毒肺炎) → ResponsibleForMonitoring(国家疾病预防控制中心, 新型冠状病毒肺炎)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“北京市卫生和计划生育委员会” — 表示部门为北京市卫生和计划生育委员会\",\n            \"e=“流感” — 表示事件为流感\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(北京市卫生和计划生育委员会) ∧ Event(流感) → OrganizeMonitoring(北京市卫生和计划生育委员会, 流感)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家卫生健康委员会” — 表示部门为国家卫生健康委员会\",\n            \"q=“监测数据准确性” — 表示质量为监测数据准确性\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(国家卫生健康委员会) → StrengthenManagement(国家卫生健康委员会, 监测数据准确性)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Country=“中国” — 表示国家为中国\",\n            \"i=“上海市疾病预防控制中心” — 表示机构为上海市疾病预防控制中心\",\n            \"e=“登革热” — 表示事件为登革热\"\n        ],\n        \"instance_logicexpression\": [\n            \"SurveillanceNetwork(中国)\",\n            \"Institution(上海市疾病预防控制中心) ∧ Event(登革热) → ResponsibleForMonitoring(上海市疾病预防控制中心, 登革热)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“广东省卫生健康委员会” — 表示部门为广东省卫生健康委员会\",\n            \"e=“霍乱” — 表示事件为霍乱\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(广东省卫生健康委员会) ∧ Event(霍乱) → OrganizeMonitoring(广东省卫生健康委员会, 霍乱)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“四川省卫生健康委员会” — 表示部门为四川省卫生健康委员会\",\n            \"q=“监测流程规范性” — 表示质量为监测流程规范性\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(四川省卫生健康委员会) → StrengthenManagement(四川省卫生健康委员会, 监测流程规范性)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“中心医院” — 表示提供监测信息的机构为中心医院\",\n            \"d=“市卫生局” — 表示负责分析和预警的卫生行政部门为市卫生局\",\n            \"m=“流感病例增加” — 表示监测信息为流感病例增加\",\n            \"HazardLevel=“中等” — 表示分析的危害程度为中等\",\n            \"Trend=“可能扩散” — 表示分析的可能发展趋势为可能扩散\",\n            \"Warning=“流感预警” — 表示发出的预警为流感预警\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀i ∀s ∀m (ProvideMonitoringInfo(“中心医院”, “流感病例增加”) ∧ (i=医疗机构 ∨ i=疾病预防控制机构 ∨ i=卫生监督机构) → (AnalyzeHazardLevel(“市卫生局”, “流感病例增加”, “中等”) ∧ AnalyzeTrend(“市卫生局”, “流感病例增加”, “可能扩散”) → IssueWarning(“市卫生局”, “流感预警”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“市疾病预防控制中心” — 表示提供监测信息的机构为市疾病预防控制中心\",\n            \"d=“省卫生厅” — 表示负责分析和预警的卫生行政部门为省卫生厅\",\n            \"m=“登革热疫情” — 表示监测信息为登革热疫情\",\n            \"HazardLevel=“高” — 表示分析的危害程度为高\",\n            \"Trend=“快速增长” — 表示分析的可能发展趋势为快速增长\",\n            \"Warning=“登革热紧急预警” — 表示发出的预警为登革热紧急预警\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀i ∀s ∀m (ProvideMonitoringInfo(“市疾病预防控制中心”, “登革热疫情”) ∧ (i=医疗机构 ∨ i=疾病预防控制机构 ∨ i=卫生监督机构) → (AnalyzeHazardLevel(“省卫生厅”, “登革热疫情”, “高”) ∧ AnalyzeTrend(“省卫生厅”, “登革热疫情”, “快速增长”) → IssueWarning(“省卫生厅”, “登革热紧急预警”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“区卫生监督所” — 表示提供监测信息的机构为区卫生监督所\",\n            \"d=“区卫生局” — 表示负责分析和预警的卫生行政部门为区卫生局\",\n            \"m=“食品安全事件” — 表示监测信息为食品安全事件\",\n            \"HazardLevel=“低” — 表示分析的危害程度为低\",\n            \"Trend=“局部影响” — 表示分析的可能发展趋势为局部影响\",\n            \"Warning=“食品安全提示” — 表示发出的预警为食品安全提示\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀i ∀s ∀m (ProvideMonitoringInfo(“区卫生监督所”, “食品安全事件”) ∧ (i=医疗机构 ∨ i=疾病预防控制机构 ∨ i=卫生监督机构) → (AnalyzeHazardLevel(“区卫生局”, “食品安全事件”, “低”) ∧ AnalyzeTrend(“区卫生局”, “食品安全事件”, “局部影响”) → IssueWarning(“区卫生局”, “食品安全提示”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“某市医院” — 表示某市医院为有权报告的单位\",\n            \"d=“国家卫生健康委员会” — 表示国家卫生健康委员会为被报告的部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r ∀d (HasRightToReport(某市医院, 国家卫生健康委员会) ∧ HasRightToReport(某市医院, 国家卫生健康委员会))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“张医生” — 表示张医生为有权报告的个人\",\n            \"d=“某市卫生局” — 表示某市卫生局为被举报的部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r ∀d (HasRightToReport(张医生, 某市卫生局) ∧ HasRightToReport(张医生, 某市卫生局))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“某市疾病预防控制中心” — 表示某市疾病预防控制中心为责任报告单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀u (ResponsibleReportingUnit(某市疾病预防控制中心) → ∀e (Report(某市疾病预防控制中心, e)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“李护士” — 表示李护士为责任报告人\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (ResponsibleReporter(李护士) → ∀e (Report(李护士, e)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“某市环保局” — 表示某市环保局为责任报告单位\",\n            \"e=“水污染事件” — 表示水污染事件为突发公共卫生事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀u (ResponsibleReportingUnit(某市环保局) → ∀e (Report(某市环保局, 水污染事件)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“王医生” — 表示王医生为责任报告人\",\n            \"e=“食物中毒事件” — 表示食物中毒事件为突发公共卫生事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (ResponsibleReporter(王医生) → ∀e (Report(王医生, 食物中毒事件)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"E=“H1N1流感爆发” — 表示发生了H1N1流感爆发这一突发公共卫生事件\",\n            \"Level=“County” — 表示县级应急反应级别\"\n        ],\n        \"instance_logicexpression\": [\n            \"PublicHealthEmergency(H1N1流感爆发) → (EmergencyResponse(County, H1N1流感爆发) ∨ EmergencyResponse(City, H1N1流感爆发) ∨ EmergencyResponse(Province, H1N1流感爆发))\",\n            \"PublicHealthEmergency(H1N1流感爆发) → (AdjustWarningLevel(Initial, H1N1流感爆发) ∧ (Trend(H1N1流感爆发, Expanding) → UpgradeWarningLevel(H1N1流感爆发)) ∧ (Trend(H1N1流感爆发, Limited) → DowngradeWarningLevel(H1N1流感爆发)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“食物中毒事件” — 表示发生了食物中毒事件这一突发公共卫生事件\",\n            \"Level=“City” — 表示市级应急反应级别\",\n            \"TrendType=“Limited” — 表示事件发展趋势为局限\"\n        ],\n        \"instance_logicexpression\": [\n            \"PublicHealthEmergency(食物中毒事件) → (EmergencyResponse(County, 食物中毒事件) ∨ EmergencyResponse(City, 食物中毒事件) ∨ EmergencyResponse(Province, 食物中毒事件))\",\n            \"PublicHealthEmergency(食物中毒事件) → (AdjustWarningLevel(Initial, 食物中毒事件) ∧ (Trend(食物中毒事件, Expanding) → UpgradeWarningLevel(食物中毒事件)) ∧ (Trend(食物中毒事件, Limited) → DowngradeWarningLevel(食物中毒事件))\",\n            \"Trend(食物中毒事件, Limited) → RevokeWarning(食物中毒事件)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“新型病毒传播” — 表示发生了新型病毒传播这一突发公共卫生事件\",\n            \"Level=“Province” — 表示省级应急反应级别\",\n            \"TrendType=“Expanding” — 表示事件发展趋势为不断扩大\"\n        ],\n        \"instance_logicexpression\": [\n            \"PublicHealthEmergency(新型病毒传播) → (EmergencyResponse(County, 新型病毒传播) ∨ EmergencyResponse(City, 新型病毒传播) ∨ EmergencyResponse(Province, 新型病毒传播))\",\n            \"PublicHealthEmergency(新型病毒传播) → (AdjustWarningLevel(Initial, 新型病毒传播) ∧ (Trend(新型病毒传播, Expanding) → UpgradeWarningLevel(新型病毒传播)) ∧ (Trend(新型病毒传播, Limited) → DowngradeWarningLevel(新型病毒传播)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“校园流感爆发” — 表示在学校发生的突发公共卫生事件\",\n            \"d=“教育部” — 表示国务院有关部门\",\n            \"Place=“学校” — 表示事件地点为学校\",\n            \"Event=“校园流感爆发” — 表示具体的突发公共卫生事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e ∀d (PublicHealthEmergency(学校, 校园流感爆发) ∨ PublicHealthEmergency(RegionalEvent, 校园流感爆发) ∨ PublicHealthEmergency(NationalEvent, 校园流感爆发) → (HighAttention(教育部) ∧ RaiseAlertLevel(教育部) → (QuickEffectiveControl(校园流感爆发) ∧ MaintainSocialStability(教育部))))\",\n            \"∀e (EmergencyResponse(校园流感爆发) → (Investigate(校园流感爆发) ∧ Handle(校园流感爆发) ∧ Rescue(校园流感爆发) ∧ Verify(校园流感爆发) → ControlEventDevelopment(校园流感爆发)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“区域性运动会期间食物中毒” — 表示在区域性重要活动期间发生的突发公共卫生事件\",\n            \"d=“地方卫生局” — 表示地方各级人民政府及有关部门\",\n            \"Place=“区域性运动会” — 表示事件地点为区域性运动会\",\n            \"Event=“区域性运动会期间食物中毒” — 表示具体的突发公共卫生事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e ∀d (PublicHealthEmergency(学校, 区域性运动会期间食物中毒) ∨ PublicHealthEmergency(RegionalEvent, 区域性运动会期间食物中毒) ∨ PublicHealthEmergency(NationalEvent, 区域性运动会期间食物中毒) → (HighAttention(地方卫生局) ∧ RaiseAlertLevel(地方卫生局) → (QuickEffectiveControl(区域性运动会期间食物中毒) ∧ MaintainSocialStability(地方卫生局))))\",\n            \"∀e (EmergencyResponse(区域性运动会期间食物中毒) → (Investigate(区域性运动会期间食物中毒) ∧ Handle(区域性运动会期间食物中毒) ∧ Rescue(区域性运动会期间食物中毒) ∧ Verify(区域性运动会期间食物中毒) → ControlEventDevelopment(区域性运动会期间食物中毒)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“全国性会议期间疫情爆发” — 表示在全国性重要活动期间发生的突发公共卫生事件\",\n            \"d=“国家卫生健康委员会” — 表示国务院有关部门\",\n            \"Place=“全国性会议” — 表示事件地点为全国性会议\",\n            \"Event=“全国性会议期间疫情爆发” — 表示具体的突发公共卫生事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e ∀d (PublicHealthEmergency(学校, 全国性会议期间疫情爆发) ∨ PublicHealthEmergency(RegionalEvent, 全国性会议期间疫情爆发) ∨ PublicHealthEmergency(NationalEvent, 全国性会议期间疫情爆发) → (HighAttention(国家卫生健康委员会) ∧ RaiseAlertLevel(国家卫生健康委员会) → (QuickEffectiveControl(全国性会议期间疫情爆发) ∧ MaintainSocialStability(国家卫生健康委员会))))\",\n            \"∀e (EmergencyResponse(全国性会议期间疫情爆发) → (Investigate(全国性会议期间疫情爆发) ∧ Handle(全国性会议期间疫情爆发) ∧ Rescue(全国性会议期间疫情爆发) ∧ Verify(全国性会议期间疫情爆发) → ControlEventDevelopment(全国性会议期间疫情爆发)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“北京市卫生局” — 表示北京市卫生局\",\n            \"e=“流感疫情” — 表示突发公共卫生事件为流感疫情\",\n            \"Institution=“北京市疾病预防控制中心” — 表示相应的医疗卫生机构为北京市疾病预防控制中心\",\n            \"Personnel=“应急医疗队” — 表示应急处理所需的人员为应急医疗队\",\n            \"Supplies=“医疗物资” — 表示应急处理所需的物资为医疗物资\",\n            \"HigherDepartment=“国家卫生健康委员会” — 表示上一级人民政府卫生行政部门为国家卫生健康委员会\",\n            \"AffectedArea=“湖北省” — 表示突发公共卫生事件发生地区为湖北省\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀e (ReceiveNotice(北京市卫生局, 流感疫情) → (Notify(北京市卫生局, 北京市疾病预防控制中心) ∧ OrganizePreparation(北京市卫生局, 应急医疗队, 医疗物资) ∧ TakePreventiveMeasures(北京市卫生局) ∧ PreventOccurrence(北京市卫生局, 流感疫情) ∧ FollowCommand(北京市卫生局, 国家卫生健康委员会) ∧ SupportEmergencyHandling(北京市卫生局, 湖北省)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“上海市卫生局” — 表示上海市卫生局\",\n            \"e=“食物中毒事件” — 表示突发公共卫生事件为食物中毒事件\",\n            \"Institution=“上海市急救中心” — 表示相应的医疗卫生机构为上海市急救中心\",\n            \"Personnel=“中毒救治专家组” — 表示应急处理所需的人员为中毒救治专家组\",\n            \"Supplies=“解毒药品” — 表示应急处理所需的物资为解毒药品\",\n            \"HigherDepartment=“国家卫生健康委员会” — 表示上一级人民政府卫生行政部门为国家卫生健康委员会\",\n            \"AffectedArea=“江苏省” — 表示突发公共卫生事件发生地区为江苏省\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀e (ReceiveNotice(上海市卫生局, 食物中毒事件) → (Notify(上海市卫生局, 上海市急救中心) ∧ OrganizePreparation(上海市卫生局, 中毒救治专家组, 解毒药品) ∧ TakePreventiveMeasures(上海市卫生局) ∧ PreventOccurrence(上海市卫生局, 食物中毒事件) ∧ FollowCommand(上海市卫生局, 国家卫生健康委员会) ∧ SupportEmergencyHandling(上海市卫生局, 江苏省)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“广州市卫生局” — 表示广州市卫生局\",\n            \"e=“登革热疫情” — 表示突发公共卫生事件为登革热疫情\",\n            \"Institution=“广州市第八人民医院” — 表示相应的医疗卫生机构为广州市第八人民医院\",\n            \"Personnel=“传染病防控小组” — 表示应急处理所需的人员为传染病防控小组\",\n            \"Supplies=“防蚊用品” — 表示应急处理所需的物资为防蚊用品\",\n            \"HigherDepartment=“国家卫生健康委员会” — 表示上一级人民政府卫生行政部门为国家卫生健康委员会\",\n            \"AffectedArea=“海南省” — 表示突发公共卫生事件发生地区为海南省\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀e (ReceiveNotice(广州市卫生局, 登革热疫情) → (Notify(广州市卫生局, 广州市第八人民医院) ∧ OrganizePreparation(广州市卫生局, 传染病防控小组, 防蚊用品) ∧ TakePreventiveMeasures(广州市卫生局) ∧ PreventOccurrence(广州市卫生局, 登革热疫情) ∧ FollowCommand(广州市卫生局, 国家卫生健康委员会) ∧ SupportEmergencyHandling(广州市卫生局, 海南省)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"h=“中心医院” — 表示中心医院作为应急反应的主体\",\n            \"p=“李明” — 表示病人为李明\"\n        ],\n        \"instance_logicexpression\": [\n            \"Emergency(中心医院) → (Admission(中心医院, 李明) ∧ Treatment(中心医院, 李明) ∧ Transport(中心医院, 李明))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"h=“中心医院” — 表示中心医院作为应急反应的主体\",\n            \"p=“王红” — 表示病人为王红，重症患者\"\n        ],\n        \"instance_logicexpression\": [\n            \"CriticalPatient(王红) → CriticalCare(中心医院, 王红)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"h=“中心医院” — 表示中心医院作为应急反应的主体\",\n            \"p=“赵强” — 表示病人为赵强，普通患者\"\n        ],\n        \"instance_logicexpression\": [\n            \"GeneralPatient(赵强) → GeneralCare(中心医院, 赵强)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"h=“中心医院” — 表示中心医院作为应急反应的主体\",\n            \"p=“孙丽” — 表示病人为孙丽，疑似患者\"\n        ],\n        \"instance_logicexpression\": [\n            \"SuspectedPatient(孙丽) → ExcludeOrConfirm(中心医院, 孙丽)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"h=“中心医院” — 表示中心医院作为应急反应的主体\"\n        ],\n        \"instance_logicexpression\": [\n            \"DiseaseControl(中心医院) → (AssistCollection(中心医院, 标本) ∧ EpidemiologicalSurvey(中心医院, 调查))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"h=“中心医院” — 表示中心医院作为应急反应的主体\"\n        ],\n        \"instance_logicexpression\": [\n            \"OnsiteControl(中心医院) ∧ DisinfectionIsolation(中心医院) ∧ PersonalProtection(中心医院) ∧ MedicalWasteDisposal(中心医院) ∧ SewageTreatment(中心医院)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"h=“中心医院” — 表示中心医院作为应急反应的主体\",\n            \"p=“周梅” — 表示病人为周梅，传染病患者\"\n        ],\n        \"instance_logicexpression\": [\n            \"InfectiousDisease(周梅) → InfectiousDiseaseReport(中心医院, 周梅)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"h=“中心医院” — 表示中心医院作为应急反应的主体\",\n            \"p=“吴刚” — 表示病人为吴刚，中毒患者\"\n        ],\n        \"instance_logicexpression\": [\n            \"Poisoning(吴刚) → PoisoningReport(中心医院, 吴刚)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"h=“中心医院” — 表示中心医院作为应急反应的主体\",\n            \"p=“郑洁” — 表示病人为郑洁，因突发公共卫生事件受伤\"\n        ],\n        \"instance_logicexpression\": [\n            \"PublicHealthEvent(郑洁) → NoRefusal(中心医院, 郑洁)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"h=“中心医院” — 表示中心医院作为应急反应的主体\"\n        ],\n        \"instance_logicexpression\": [\n            \"UnclearDisease(中心医院) → CaseAnalysis(中心医院) ∧ NewInfectiousDisease(中心医院) → CaseAnalysis(中心医院)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“重大中毒事件” — 表示重大中毒事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"MajorPoisoning(重大中毒事件) → (OnsiteRescue(重大中毒事件) ∧ FollowUpTreatment(重大中毒事件))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"h=“中心医院” — 表示中心医院作为应急反应的主体\"\n        ],\n        \"instance_logicexpression\": [\n            \"Research(中心医院) ∧ InternationalExchange(中心医院)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“卫生行政部门” — 表示卫生行政部门\",\n            \"i=“某市人民医院” — 表示被督导检查的医疗机构\",\n            \"e=“H7N9流感爆发” — 表示突发公共卫生事件为H7N9流感爆发\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀i∀e (Lead(“卫生行政部门”, “H7N9流感爆发”) ∧ EmergencyResponse(“H7N9流感爆发”) → SuperviseInspect(“卫生监督机构”, “某市人民医院”, “H7N9流感爆发”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“水源污染事件” — 表示突发公共卫生事件为水源污染事件\",\n            \"Area=“FoodHygiene” — 表示卫生监督执法的领域为食品卫生\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EmergencyResponse(“水源污染事件”) → HealthSupervisionEnforcement(“卫生监督机构”, “FoodHygiene”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“卫生行政部门” — 表示卫生行政部门\",\n            \"e=“疫苗接种不良反应” — 表示突发公共卫生事件为疫苗接种不良反应\",\n            \"r=“突发公共卫生事件应急条例” — 表示依据的法规为《突发公共卫生事件应急条例》\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀e∀r (BasedOnRegulation(“卫生行政部门”, “突发公共卫生事件应急条例”, “疫苗接种不良反应”) ∧ EmergencyResponse(“疫苗接种不良反应”) → InvestigateHandle(“卫生行政部门”, “疫苗接种不良反应”, “Illegality”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“疾病预防控制中心” — 表示被督导检查的疾病预防控制机构\",\n            \"e=“登革热疫情” — 表示突发公共卫生事件为登革热疫情\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀i∀e (Lead(“卫生行政部门”, “登革热疫情”) ∧ EmergencyResponse(“登革热疫情”) → SuperviseInspect(“卫生监督机构”, “疾病预防控制中心”, “登革热疫情”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“学校食物中毒事件” — 表示突发公共卫生事件为学校食物中毒事件\",\n            \"Area=“EnvironmentalHygiene” — 表示卫生监督执法的领域为环境卫生\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (EmergencyResponse(“学校食物中毒事件”) → HealthSupervisionEnforcement(“卫生监督机构”, “EnvironmentalHygiene”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"E=“H1N1流感” — 表示发生了H1N1流感突发公共卫生事件\",\n            \"Agency=“北京出入境检验检疫局” — 表示出入境检验检疫机构为北京出入境检验检疫局\",\n            \"HealthDepartment=“北京市卫生局” — 表示当地卫生行政部门为北京市卫生局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (PublicHealthEmergency(H1N1流感) → (MobilizeTechnicalForce(北京出入境检验检疫局) ∧ CooperateEmergencyHandling(北京出入境检验检疫局, 北京市卫生局)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"I=“埃博拉病毒” — 表示发生了埃博拉病毒突发公共卫生事件\",\n            \"C=“病例增加” — 表示突发公共卫生事件的情况变化为病例增加\",\n            \"Agency=“上海出入境检验检疫局” — 表示出入境检验检疫机构为上海出入境检验检疫局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀I ∀C (PublicHealthEmergency(埃博拉病毒) ∧ Change(病例增加) → ReportInformation(上海出入境检验检疫局, 埃博拉病毒 ⊕ 病例增加))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“寨卡病毒” — 表示发生了寨卡病毒突发公共卫生事件\",\n            \"Agency=“广州出入境检验检疫局” — 表示出入境检验检疫机构为广州出入境检验检疫局\",\n            \"HealthDepartment=“广州市卫生局” — 表示当地卫生行政部门为广州市卫生局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (PublicHealthEmergency(寨卡病毒) → (MobilizeTechnicalForce(广州出入境检验检疫局) ∧ CooperateEmergencyHandling(广州出入境检验检疫局, 广州市卫生局)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"I=“登革热” — 表示发生了登革热突发公共卫生事件\",\n            \"C=“疫情扩散” — 表示突发公共卫生事件的情况变化为疫情扩散\",\n            \"Agency=“深圳出入境检验检疫局” — 表示出入境检验检疫机构为深圳出入境检验检疫局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀I ∀C (PublicHealthEmergency(登革热) ∧ Change(疫情扩散) → ReportInformation(深圳出入境检验检疫局, 登革热 ⊕ 疫情扩散))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“华北区” — 表示华北区未发生突发公共卫生事件\",\n            \"EventRegion=“华南区” — 表示华南区为事件发生地区\"\n        ],\n        \"instance_logicexpression\": [\n            \"NoEvent(华北区) → (MaintainContact(华北区, 华南区) ∧ ObtainInformation(华北区))\",\n            \"NoEvent(华北区) → PreparePersonnelMaterials(华北区)\",\n            \"NoEvent(华北区) → StrengthenMonitoringReporting(华北区)\",\n            \"StrengthenMonitoringReporting(华北区) → (EstablishReportingSystem(华北区) ∨ ¬EstablishReportingSystem(华北区))\",\n            \"NoEvent(华北区) → MonitorPreventControl(华北区)\",\n            \"NoEvent(华北区) → ConductPromotionEducation(华北区)\",\n            \"NoEvent(华北区) ∧ Decision(SuperiorGovernment) → ConductTrafficHealthQuarantine(华北区)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“华东区” — 表示华东区未发生突发公共卫生事件\",\n            \"EventRegion=“华中区” — 表示华中区为事件发生地区\"\n        ],\n        \"instance_logicexpression\": [\n            \"NoEvent(华东区) → (MaintainContact(华东区, 华中区) ∧ ObtainInformation(华东区))\",\n            \"NoEvent(华东区) → PreparePersonnelMaterials(华东区)\",\n            \"NoEvent(华东区) → StrengthenMonitoringReporting(华东区)\",\n            \"StrengthenMonitoringReporting(华东区) → (EstablishReportingSystem(华东区) ∨ ¬EstablishReportingSystem(华东区))\",\n            \"NoEvent(华东区) → MonitorPreventControl(华东区)\",\n            \"NoEvent(华东区) → ConductPromotionEducation(华东区)\",\n            \"NoEvent(华东区) ∧ Decision(SuperiorGovernment) → ConductTrafficHealthQuarantine(华东区)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“西南区” — 表示西南区未发生突发公共卫生事件\",\n            \"EventRegion=“东北区” — 表示东北区为事件发生地区\"\n        ],\n        \"instance_logicexpression\": [\n            \"NoEvent(西南区) → (MaintainContact(西南区, 东北区) ∧ ObtainInformation(西南区))\",\n            \"NoEvent(西南区) → PreparePersonnelMaterials(西南区)\",\n            \"NoEvent(西南区) → StrengthenMonitoringReporting(西南区)\",\n            \"StrengthenMonitoringReporting(西南区) → (EstablishReportingSystem(西南区) ∨ ¬EstablishReportingSystem(西南区))\",\n            \"NoEvent(西南区) → MonitorPreventControl(西南区)\",\n            \"NoEvent(西南区) → ConductPromotionEducation(西南区)\",\n            \"NoEvent(西南区) ∧ Decision(SuperiorGovernment) → ConductTrafficHealthQuarantine(西南区)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“西北区” — 表示西北区未发生突发公共卫生事件\",\n            \"EventRegion=“东南区” — 表示东南区为事件发生地区\"\n        ],\n        \"instance_logicexpression\": [\n            \"NoEvent(西北区) → (MaintainContact(西北区, 东南区) ∧ ObtainInformation(西北区))\",\n            \"NoEvent(西北区) → PreparePersonnelMaterials(西北区)\",\n            \"NoEvent(西北区) → StrengthenMonitoringReporting(西北区)\",\n            \"StrengthenMonitoringReporting(西北区) → (EstablishReportingSystem(西北区) ∨ ¬EstablishReportingSystem(西北区))\",\n            \"NoEvent(西北区) → MonitorPreventControl(西北区)\",\n            \"NoEvent(西北区) → ConductPromotionEducation(西北区)\",\n            \"NoEvent(西北区) ∧ Decision(SuperiorGovernment) → ConductTrafficHealthQuarantine(西北区)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“新型冠状病毒疫情” — 表示事件为新型冠状病毒疫情\",\n            \"Organization=“国务院”\"\n        ],\n        \"instance_logicexpression\": [\n            \"特别重大突发公共卫生事件(新型冠状病毒疫情) → (Organize(国务院, 新型冠状病毒疫情) ∨ Organize(国务院卫生行政部门, 新型冠状病毒疫情) ∨ Organize(有关部门, 新型冠状病毒疫情))\",\n            \"特别重大突发公共卫生事件(新型冠状病毒疫情) → (EmergencyResponse(国务院, 新型冠状病毒疫情) ∧ EmergencyResponse(国务院卫生行政部门, 新型冠状病毒疫情) ∧ EmergencyResponse(有关部门, 新型冠状病毒疫情))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“H7N9禽流感疫情” — 表示事件为H7N9禽流感疫情\",\n            \"Government=“国务院”\"\n        ],\n        \"instance_logicexpression\": [\n            \"特别重大突发公共卫生事件(H7N9禽流感疫情) → (EstablishCommandCenter(国务院, H7N9禽流感疫情) → Coordinate(CommandCenter, H7N9禽流感疫情))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“埃博拉病毒疫情” — 表示事件为埃博拉病毒疫情\",\n            \"Government=“省级人民政府”\"\n        ],\n        \"instance_logicexpression\": [\n            \"特别重大突发公共卫生事件(埃博拉病毒疫情) → (UnifiedDeployment(国务院, 埃博拉病毒疫情) → (OrganizeCoordinate(省级人民政府, 埃博拉病毒疫情) ∧ OrganizeCoordinate(市（地）人民政府, 埃博拉病毒疫情) ∧ OrganizeCoordinate(县（市）人民政府, 埃博拉病毒疫情)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“甲型H1N1流感疫情” — 表示事件为甲型H1N1流感疫情\",\n            \"Organization=“国务院卫生行政部门”\"\n        ],\n        \"instance_logicexpression\": [\n            \"特别重大突发公共卫生事件(甲型H1N1流感疫情) → (Organize(国务院卫生行政部门, 甲型H1N1流感疫情))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“严重急性呼吸道综合征（SARS）疫情” — 表示事件为严重急性呼吸道综合征（SARS）疫情\",\n            \"Government=“市（地）人民政府”\"\n        ],\n        \"instance_logicexpression\": [\n            \"特别重大突发公共卫生事件(严重急性呼吸道综合征（SARS）疫情) → (UnifiedDeployment(国务院, 严重急性呼吸道综合征（SARS）疫情) → (OrganizeCoordinate(市（地）人民政府, 严重急性呼吸道综合征（SARS）疫情)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“市级人民政府” — 表示市级人民政府\",\n            \"e=“流感疫情” — 表示突发公共卫生事件为流感疫情\",\n            \"h=“省级人民政府” — 表示上级人民政府为省级人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀e (EmergencyResponse(市级人民政府, 流感疫情) ∧ BeyondCapacity(市级人民政府, 流感疫情) → RequestSupport(市级人民政府, 省级人民政府, 流感疫情))\",\n            \"∀g∀e (RequestSupport(市级人民政府, 省级人民政府, 流感疫情) → ProvideSupport(省级人民政府, 市级人民政府, 流感疫情))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“县级人民政府” — 表示县级人民政府\",\n            \"e=“食物中毒事件” — 表示突发公共卫生事件为食物中毒事件\",\n            \"h=“市级人民政府” — 表示上级人民政府为市级人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀e (EmergencyResponse(县级人民政府, 食物中毒事件) ∧ BeyondCapacity(县级人民政府, 食物中毒事件) → RequestSupport(县级人民政府, 市级人民政府, 食物中毒事件))\",\n            \"∀g∀e (RequestSupport(县级人民政府, 市级人民政府, 食物中毒事件) → ProvideSupport(市级人民政府, 县级人民政府, 食物中毒事件))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“省级人民政府” — 表示省级人民政府\",\n            \"e=“大规模传染病爆发” — 表示突发公共卫生事件为大规模传染病爆发\",\n            \"h=“中央人民政府” — 表示上级人民政府为中央人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀e (EmergencyResponse(省级人民政府, 大规模传染病爆发) ∧ BeyondCapacity(省级人民政府, 大规模传染病爆发) → RequestSupport(省级人民政府, 中央人民政府, 大规模传染病爆发))\",\n            \"∀g∀e (RequestSupport(省级人民政府, 中央人民政府, 大规模传染病爆发) → ProvideSupport(中央人民政府, 省级人民政府, 大规模传染病爆发))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“乡镇级人民政府” — 表示乡镇级人民政府\",\n            \"e=“水源污染事件” — 表示突发公共卫生事件为水源污染事件\",\n            \"h=“县级人民政府” — 表示上级人民政府为县级人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀e (EmergencyResponse(乡镇级人民政府, 水源污染事件) ∧ BeyondCapacity(乡镇级人民政府, 水源污染事件) → RequestSupport(乡镇级人民政府, 县级人民政府, 水源污染事件))\",\n            \"∀g∀e (RequestSupport(乡镇级人民政府, 县级人民政府, 水源污染事件) → ProvideSupport(县级人民政府, 乡镇级人民政府, 水源污染事件))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“H1N1流感” — 表示突发公共卫生事件为H1N1流感\",\n            \"Hazard=“H1N1流感病毒” — 表示H1N1流感病毒隐患\",\n            \"IncubationPeriod=“7天” — 表示H1N1流感最长潜伏期为7天\"\n        ],\n        \"instance_logicexpression\": [\n            \"Emergency(H1N1流感) → (Eliminated(H1N1流感病毒) ∨ NoNewCases(7天))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“埃博拉疫情” — 表示特别重大突发公共卫生事件为埃博拉疫情\",\n            \"Department=“国家卫生部门” — 表示由国家卫生部门组织\",\n            \"Experts=“传染病专家组” — 表示组织传染病专家组\",\n            \"Action=“终止应急反应” — 表示终止应急反应的建议\"\n        ],\n        \"instance_logicexpression\": [\n            \"MajorEmergency(埃博拉疫情) → (Analysis(国家卫生部门, 传染病专家组) ∧ Suggest(国家卫生部门, 终止应急反应) ∧ (Approve(StateCouncil, 终止应急反应) ∨ Approve(NationalEmergencyCommand, 终止应急反应)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“登革热疫情” — 表示非特别重大突发公共卫生事件为登革热疫情\",\n            \"Department=“某市卫生部门” — 表示由某市卫生部门组织\",\n            \"Experts=“地方传染病专家组” — 表示组织地方传染病专家组\",\n            \"Government=“某市人民政府” — 表示由某市人民政府批准\",\n            \"HigherLevel=“上级卫生部门” — 表示向上级卫生部门报告\"\n        ],\n        \"instance_logicexpression\": [\n            \"¬MajorEmergency(登革热疫情) → (Analysis(某市卫生部门, 地方传染病专家组) ∧ Suggest(某市卫生部门, 终止应急反应) ∧ Approve(某市人民政府, 终止应急反应) ∧ Report(某市卫生部门, 上级卫生部门))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"LowerLevel=“某区卫生部门” — 表示某区卫生部门请求\",\n            \"HigherLevel=“市级卫生部门” — 表示市级卫生部门提供技术指导\"\n        ],\n        \"instance_logicexpression\": [\n            \"Request(某区卫生部门, 市级卫生部门) → TechnicalSupport(市级卫生部门, 某区卫生部门)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"E=“H1N1流感爆发” — 表示突发公共卫生事件为H1N1流感爆发\",\n            \"D=“北京市卫生局” — 表示卫生行政部门为北京市卫生局\",\n            \"G=“北京市人民政府” — 表示人民政府为北京市人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E ∀D ∀G (PublicHealthEmergency(H1N1流感爆发) ∧ HealthDepartment(北京市卫生局) ∧ PeoplesGovernment(北京市人民政府) → (OrganizeAssessment(北京市卫生局, H1N1流感爆发) ∧ ∀C (AssessmentContent(H1N1流感爆发, C) → C ∈ {事件概况, 现场调查处理概况, 病人救治情况, 所采取措施的效果评价, 应急处理过程中存在的问题, 取得的经验及改进建议}))\",\n            \"∀D ∀E ∀G1 ∀G2 (OrganizeAssessment(北京市卫生局, H1N1流感爆发) → (ReportTo(北京市卫生局, 北京市人民政府, 上一级人民政府) ∧ G1 = PeoplesGovernment(北京市卫生局) ∧ G2 = PeoplesGovernment(G1)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“登革热疫情” — 表示突发公共卫生事件为登革热疫情\",\n            \"D=“广东省卫生厅” — 表示卫生行政部门为广东省卫生厅\",\n            \"G=“广东省人民政府” — 表示人民政府为广东省人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E ∀D ∀G (PublicHealthEmergency(登革热疫情) ∧ HealthDepartment(广东省卫生厅) ∧ PeoplesGovernment(广东省人民政府) → (OrganizeAssessment(广东省卫生厅, 登革热疫情) ∧ ∀C (AssessmentContent(登革热疫情, C) → C ∈ {事件概况, 现场调查处理概况, 病人救治情况, 所采取措施的效果评价, 应急处理过程中存在的问题, 取得的经验及改进建议}))\",\n            \"∀D ∀E ∀G1 ∀G2 (OrganizeAssessment(广东省卫生厅, 登革热疫情) → (ReportTo(广东省卫生厅, 广东省人民政府, 上一级人民政府) ∧ G1 = PeoplesGovernment(广东省卫生厅) ∧ G2 = PeoplesGovernment(G1)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“食物中毒事件” — 表示突发公共卫生事件为食物中毒事件\",\n            \"D=“上海市卫生委员会” — 表示卫生行政部门为上海市卫生委员会\",\n            \"G=“上海市人民政府” — 表示人民政府为上海市人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E ∀D ∀G (PublicHealthEmergency(食物中毒事件) ∧ HealthDepartment(上海市卫生委员会) ∧ PeoplesGovernment(上海市人民政府) → (OrganizeAssessment(上海市卫生委员会, 食物中毒事件) ∧ ∀C (AssessmentContent(食物中毒事件, C) → C ∈ {事件概况, 现场调查处理概况, 病人救治情况, 所采取措施的效果评价, 应急处理过程中存在的问题, 取得的经验及改进建议}))\",\n            \"∀D ∀E ∀G1 ∀G2 (OrganizeAssessment(上海市卫生委员会, 食物中毒事件) → (ReportTo(上海市卫生委员会, 上海市人民政府, 上一级人民政府) ∧ G1 = PeoplesGovernment(上海市卫生委员会) ∧ G2 = PeoplesGovernment(G1)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“疾控中心” — 疾控中心为参加突发公共卫生事件应急处理的集体\",\n            \"p=“李医生” — 李医生为参加突发公共卫生事件应急处理的个人\",\n            \"d1=“人事部门” — 人事部门参与联合表彰\",\n            \"d2=“卫生行政部门” — 卫生行政部门参与联合表彰\",\n            \"Event=“H市流感疫情” — 表示H市发生的流感疫情是突发公共卫生事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀p∀d1∀d2 (PublicHealthEmergency(H市流感疫情)∧Participate(疾控中心, H市流感疫情)∧Contribute(疾控中心, H市流感疫情)∧Department(人事部门)∧Department(卫生行政部门)∧(人事部门 ≠ 卫生行政部门)→JointCommendation(人事部门, 卫生行政部门, 疾控中心))\",\n            \"∀g∀p∀d1∀d2 (PublicHealthEmergency(H市流感疫情)∧Participate(李医生, H市流感疫情)∧Contribute(李医生, H市流感疫情)∧Department(人事部门)∧Department(卫生行政部门)∧(人事部门 ≠ 卫生行政部门)→JointCommendation(人事部门, 卫生行政部门, 李医生))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“王护士” — 王护士在突发公共卫生事件应急处理工作中英勇献身\",\n            \"Department=“民政部门” — 民政部门负责追认王护士为烈士\",\n            \"Event=“H市流感疫情” — 表示H市发生的流感疫情是突发公共卫生事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (PublicHealthEmergency(H市流感疫情)∧HeroicSacrifice(王护士, H市流感疫情)∧Department(民政部门)→PosthumouslyHonoredAsMartyr(民政部门, 王护士))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“红十字救援队” — 红十字救援队为参加突发公共卫生事件应急处理的集体\",\n            \"d1=“卫生行政部门” — 卫生行政部门参与联合表彰\",\n            \"d2=“民政部门” — 民政部门参与联合表彰\",\n            \"Event=“G市地震灾害后的疫情” — 表示G市地震后发生的疫情是突发公共卫生事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀p∀d1∀d2 (PublicHealthEmergency(G市地震灾害后的疫情)∧Participate(红十字救援队, G市地震灾害后的疫情)∧Contribute(红十字救援队, G市地震灾害后的疫情)∧Department(卫生行政部门)∧Department(民政部门)∧(卫生行政部门 ≠ 民政部门)→JointCommendation(卫生行政部门, 民政部门, 红十字救援队))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“刘医生” — 刘医生在突发公共卫生事件应急处理工作中英勇献身\",\n            \"Department=“民政部门” — 民政部门负责追认刘医生为烈士\",\n            \"Event=“G市地震灾害后的疫情” — 表示G市地震后发生的疫情是突发公共卫生事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (PublicHealthEmergency(G市地震灾害后的疫情)∧HeroicSacrifice(刘医生, G市地震灾害后的疫情)∧Department(民政部门)→PosthumouslyHonoredAsMartyr(民政部门, 刘医生))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“张医生” — 张医生在突发公共卫生事件中玩忽职守\",\n            \"Regulation=《突发公共卫生事件应急条例》\"\n        ],\n        \"instance_logicexpression\": [\n            \"Neglect(张医生) ∨ Dereliction(张医生) ∨ Misconduct(张医生) → HoldAccountable(张医生, RelevantLaw(《突发公共卫生事件应急条例》))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“李护士” — 李护士在突发公共卫生事件中失职\",\n            \"Regulation=《传染病防治法》\"\n        ],\n        \"instance_logicexpression\": [\n            \"Neglect(李护士) ∨ Dereliction(李护士) ∨ Misconduct(李护士) → HoldAccountable(李护士, RelevantLaw(《传染病防治法》))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“王院长” — 王院长在突发公共卫生事件中渎职\",\n            \"Regulation=《医疗事故处理条例》\"\n        ],\n        \"instance_logicexpression\": [\n            \"Neglect(王院长) ∨ Dereliction(王院长) ∨ Misconduct(王院长) → HoldAccountable(王院长, RelevantLaw(《医疗事故处理条例》))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“赵主任” — 赵主任在突发公共卫生事件中玩忽职守\",\n            \"Regulation=《突发公共卫生事件应急条例》\"\n        ],\n        \"instance_logicexpression\": [\n            \"Neglect(赵主任) ∨ Dereliction(赵主任) ∨ Misconduct(赵主任) → HoldAccountable(赵主任, RelevantLaw(《突发公共卫生事件应急条例》))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“孙经理” — 孙经理在突发公共卫生事件中失职\",\n            \"Regulation=《食品安全法》\"\n        ],\n        \"instance_logicexpression\": [\n            \"Neglect(孙经理) ∨ Dereliction(孙经理) ∨ Misconduct(孙经理) → HoldAccountable(孙经理, RelevantLaw(《食品安全法》))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“李医生” — 李医生因参与应急处理工作致病\",\n            \"ParticipateInEmergencyHandling(李医生) — 李医生参与了应急处理工作\",\n            \"CauseDisease(李医生) — 李医生因参与应急处理工作而致病\"\n        ],\n        \"instance_logicexpression\": [\n            \"ParticipateInEmergencyHandling(李医生) → (CauseDisease(李医生) ∨ CauseDisability(李医生) ∨ Death(李医生)) → ProvideAllowanceAndCompensation(李医生)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“王护士” — 王护士因参与应急处理工作致残\",\n            \"ParticipateInEmergencyHandling(王护士) — 王护士参与了应急处理工作\",\n            \"CauseDisability(王护士) — 王护士因参与应急处理工作而致残\"\n        ],\n        \"instance_logicexpression\": [\n            \"ParticipateInEmergencyHandling(王护士) → (CauseDisease(王护士) ∨ CauseDisability(王护士) ∨ Death(王护士)) → ProvideAllowanceAndCompensation(王护士)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“赵工程师” — 赵工程师因参与应急处理工作死亡\",\n            \"ParticipateInEmergencyHandling(赵工程师) — 赵工程师参与了应急处理工作\",\n            \"Death(赵工程师) — 赵工程师因参与应急处理工作而死亡\"\n        ],\n        \"instance_logicexpression\": [\n            \"ParticipateInEmergencyHandling(赵工程师) → (CauseDisease(赵工程师) ∨ CauseDisability(赵工程师) ∨ Death(赵工程师)) → ProvideAllowanceAndCompensation(赵工程师)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“孙技术员” — 孙技术员是专业技术人员，参与了应急处理工作\",\n            \"ProfessionalTechnician(孙技术员) — 孙技术员是专业技术人员\",\n            \"ParticipateInEmergencyHandling(孙技术员) — 孙技术员参与了应急处理工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"ProfessionalTechnician(孙技术员) ∧ ParticipateInEmergencyHandling(孙技术员) → EstablishAllowanceStandard(孙技术员) ∧ ProvideAllowanceAndCompensation(孙技术员)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“周专家” — 周专家是专业技术人员，参与了应急处理工作\",\n            \"ProfessionalTechnician(周专家) — 周专家是专业技术人员\",\n            \"ParticipateInEmergencyHandling(周专家) — 周专家参与了应急处理工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"ProfessionalTechnician(周专家) ∧ ParticipateInEmergencyHandling(周专家) → EstablishAllowanceStandard(周专家) ∧ ProvideAllowanceAndCompensation(周专家)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"EmergencyWorkEnded() — 表示突发公共卫生事件应急工作已经结束。\",\n            \"g=“市级政府” — 表示地方各级人民政府为市级政府\",\n            \"u=“市医院” — 表示相关单位为市医院\",\n            \"e=“蓝天制药” — 表示相关企业为蓝天制药\",\n            \"i=“张三” — 表示相关个人为张三\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyWorkEnded() → OrganizeAssessment(市级政府, 市医院, 蓝天制药, 张三) ∧ ProvideCompensation(市级政府, 市医院, 蓝天制药, 张三)\",\n            \"UrgentMobilization(市医院, 蓝天制药, 张三) → ∃g (OrganizeAssessment(g, 市医院, 蓝天制药, 张三) ∧ ProvideCompensation(g, 市医院, 蓝天制药, 张三))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"EmergencyWorkEnded() — 表示突发公共卫生事件应急工作已经结束。\",\n            \"g=“省级政府” — 表示地方各级人民政府为省级政府\",\n            \"u=“省疾控中心” — 表示相关单位为省疾控中心\",\n            \"e=“红星医疗” — 表示相关企业为红星医疗\",\n            \"i=“李四” — 表示相关个人为李四\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyWorkEnded() → OrganizeAssessment(省级政府, 省疾控中心, 红星医疗, 李四) ∧ ProvideCompensation(省级政府, 省疾控中心, 红星医疗, 李四)\",\n            \"UrgentMobilization(省疾控中心, 红星医疗, 李四) → ∃g (OrganizeAssessment(g, 省疾控中心, 红星医疗, 李四) ∧ ProvideCompensation(g, 省疾控中心, 红星医疗, 李四))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"EmergencyWorkEnded() — 表示突发公共卫生事件应急工作已经结束。\",\n            \"g=“区级政府” — 表示地方各级人民政府为区级政府\",\n            \"u=“社区卫生服务中心” — 表示相关单位为社区卫生服务中心\",\n            \"e=“绿岛生物” — 表示相关企业为绿岛生物\",\n            \"i=“王五” — 表示相关个人为王五\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyWorkEnded() → OrganizeAssessment(区级政府, 社区卫生服务中心, 绿岛生物, 王五) ∧ ProvideCompensation(区级政府, 社区卫生服务中心, 绿岛生物, 王五)\",\n            \"UrgentMobilization(社区卫生服务中心, 绿岛生物, 王五) → ∃g (OrganizeAssessment(g, 社区卫生服务中心, 绿岛生物, 王五) ∧ ProvideCompensation(g, 社区卫生服务中心, 绿岛生物, 王五))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“国家卫生健康委员会” — 表示国家卫生健康委员会作为卫生行政部门\",\n            \"Activity=“全国突发公共卫生事件监测预警” — 表示全国突发公共卫生事件的监测和预警活动\",\n            \"Team=“国家突发公共卫生事件应急队伍” — 表示国家突发公共卫生事件应急处理队伍\",\n            \"Research=“突发公共卫生事件应急技术研究” — 表示突发公共卫生事件应急技术研究\",\n            \"System=“国家突发公共卫生事件预防控制体系” — 表示国家突发公共卫生事件预防控制体系\",\n            \"Work=“突发公共卫生事件应急处理工作” — 表示突发公共卫生事件应急处理工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"国务院有关部门(国家卫生健康委员会) ∨ 地方各级人民政府(国家卫生健康委员会) ∨ 卫生行政部门(国家卫生健康委员会) → (PreventionPrimary(国家卫生健康委员会) ∧ CombinePeaceWar(国家卫生健康委员会) ∧ StrengthenOrganization(国家卫生健康委员会) ∧ ConductMonitoringWarning(全国突发公共卫生事件监测预警) ∧ StrengthenTeamBuilding(国家突发公共卫生事件应急队伍) ∧ StrengthenTechnicalResearch(突发公共卫生事件应急技术研究) ∧ EstablishPreventionControlSystem(国家突发公共卫生事件预防控制体系) ∧ EnsureWorkConduct(突发公共卫生事件应急处理工作))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“北京市卫生健康委员会” — 表示北京市卫生健康委员会作为地方卫生行政部门\",\n            \"Activity=“北京市突发公共卫生事件监测预警” — 表示北京市突发公共卫生事件的监测和预警活动\",\n            \"Team=“北京市突发公共卫生事件应急队伍” — 表示北京市突发公共卫生事件应急处理队伍\",\n            \"Research=“北京市突发公共卫生事件应急技术研究” — 表示北京市突发公共卫生事件应急技术研究\",\n            \"System=“北京市突发公共卫生事件预防控制体系” — 表示北京市突发公共卫生事件预防控制体系\",\n            \"Work=“北京市突发公共卫生事件应急处理工作” — 表示北京市突发公共卫生事件应急处理工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"国务院有关部门(北京市卫生健康委员会) ∨ 地方各级人民政府(北京市卫生健康委员会) ∨ 卫生行政部门(北京市卫生健康委员会) → (PreventionPrimary(北京市卫生健康委员会) ∧ CombinePeaceWar(北京市卫生健康委员会) ∧ StrengthenOrganization(北京市卫生健康委员会) ∧ ConductMonitoringWarning(北京市突发公共卫生事件监测预警) ∧ StrengthenTeamBuilding(北京市突发公共卫生事件应急队伍) ∧ StrengthenTechnicalResearch(北京市突发公共卫生事件应急技术研究) ∧ EstablishPreventionControlSystem(北京市突发公共卫生事件预防控制体系) ∧ EnsureWorkConduct(北京市突发公共卫生事件应急处理工作))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“上海市卫生健康委员会” — 表示上海市卫生健康委员会作为地方卫生行政部门\",\n            \"Activity=“上海市突发公共卫生事件监测预警” — 表示上海市突发公共卫生事件的监测和预警活动\",\n            \"Team=“上海市突发公共卫生事件应急队伍” — 表示上海市突发公共卫生事件应急处理队伍\",\n            \"Research=“上海市突发公共卫生事件应急技术研究” — 表示上海市突发公共卫生事件应急技术研究\",\n            \"System=“上海市突发公共卫生事件预防控制体系” — 表示上海市突发公共卫生事件预防控制体系\",\n            \"Work=“上海市突发公共卫生事件应急处理工作” — 表示上海市突发公共卫生事件应急处理工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"国务院有关部门(上海市卫生健康委员会) ∨ 地方各级人民政府(上海市卫生健康委员会) ∨ 卫生行政部门(上海市卫生健康委员会) → (PreventionPrimary(上海市卫生健康委员会) ∧ CombinePeaceWar(上海市卫生健康委员会) ∧ StrengthenOrganization(上海市卫生健康委员会) ∧ ConductMonitoringWarning(上海市突发公共卫生事件监测预警) ∧ StrengthenTeamBuilding(上海市突发公共卫生事件应急队伍) ∧ StrengthenTechnicalResearch(上海市突发公共卫生事件应急技术研究) ∧ EstablishPreventionControlSystem(上海市突发公共卫生事件预防控制体系) ∧ EnsureWorkConduct(上海市突发公共卫生事件应急处理工作))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“国家应急决策指挥系统” — 表示国家建立的信息、技术平台\",\n            \"r=“现有医疗信息系统” — 表示现有资源\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (Establish(Country, “国家应急决策指挥系统”) → Undertake(“国家应急决策指挥系统”, Collect) ∧ Undertake(“国家应急决策指挥系统”, Process) ∧ Undertake(“国家应急决策指挥系统”, Analyze) ∧ Undertake(“国家应急决策指挥系统”, Publish) ∧ Undertake(“国家应急决策指挥系统”, Transfer) ∧ TieredResponsibility(“国家应急决策指挥系统”))\",\n            \"∀p ∀r (MakeFullUse(“国家应急决策指挥系统”, “现有医疗信息系统”) → Build(“国家应急决策指挥系统”, Network))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i1=“卫生行政部门” — 表示卫生行政部门\",\n            \"i2=“医疗救治机构” — 表示医疗救治机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i1 ∀i2 (ShareInformation(i1, i2) → (i1 = 卫生行政部门 ∧ i2 = 医疗救治机构))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i1=“医疗救治机构” — 表示医疗救治机构\",\n            \"i2=“疾病预防控制机构” — 表示疾病预防控制机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i1 ∀i2 (ShareInformation(i1, i2) → (i1 = 医疗救治机构 ∧ i2 = 疾病预防控制机构))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i1=“卫生行政部门” — 表示卫生行政部门\",\n            \"i2=“疾病预防控制机构” — 表示疾病预防控制机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i1 ∀i2 (ShareInformation(i1, i2) → (i1 = 卫生行政部门 ∧ i2 = 疾病预防控制机构))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Country=“中国” — 表示国家为中国\",\n            \"Region=“北京市” — 表示地区为北京市\",\n            \"Organization=“北京市疾病预防控制中心” — 表示组织为北京市疾病预防控制中心\",\n            \"Institution=“北京市某医院” — 表示医疗卫生机构为北京市某医院\",\n            \"Skill=“流行病学调查” — 表示技能为流行病学调查\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishSystem(中国)\",\n            \"AccelerateConstruction(北京市, 疾病预防控制机构) ∧ AccelerateConstruction(北京市, 基层预防保健组织)\",\n            \"StrengthenResponsibility(北京市某医院)\",\n            \"EstablishEmergencyMechanism(北京市)\",\n            \"ImproveInformationNetwork(北京市)\",\n            \"ImproveInfrastructure(北京市疾病预防控制中心)\",\n            \"StrengthenProfessionalTeam(北京市疾病预防控制中心)\",\n            \"EnhanceCapability(北京市疾病预防控制中心, 流行病学调查)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Country=“中国” — 表示国家为中国\",\n            \"Region=“上海市” — 表示地区为上海市\",\n            \"Organization=“上海市疾病预防控制中心” — 表示组织为上海市疾病预防控制中心\",\n            \"Institution=“上海市某医院” — 表示医疗卫生机构为上海市某医院\",\n            \"Skill=“现场处置” — 表示技能为现场处置\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishSystem(中国)\",\n            \"AccelerateConstruction(上海市, 疾病预防控制机构) ∧ AccelerateConstruction(上海市, 基层预防保健组织)\",\n            \"StrengthenResponsibility(上海市某医院)\",\n            \"EstablishEmergencyMechanism(上海市)\",\n            \"ImproveInformationNetwork(上海市)\",\n            \"ImproveInfrastructure(上海市疾病预防控制中心)\",\n            \"StrengthenProfessionalTeam(上海市疾病预防控制中心)\",\n            \"EnhanceCapability(上海市疾病预防控制中心, 现场处置)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Country=“中国” — 表示国家为中国\",\n            \"Region=“广东省” — 表示地区为广东省\",\n            \"Organization=“广东省疾病预防控制中心” — 表示组织为广东省疾病预防控制中心\",\n            \"Institution=“广东省某医院” — 表示医疗卫生机构为广东省某医院\",\n            \"Skill=“实验室检测检验” — 表示技能为实验室检测检验\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishSystem(中国)\",\n            \"AccelerateConstruction(广东省, 疾病预防控制机构) ∧ AccelerateConstruction(广东省, 基层预防保健组织)\",\n            \"StrengthenResponsibility(广东省某医院)\",\n            \"EstablishEmergencyMechanism(广东省)\",\n            \"ImproveInformationNetwork(广东省)\",\n            \"ImproveInfrastructure(广东省疾病预防控制中心)\",\n            \"StrengthenProfessionalTeam(广东省疾病预防控制中心)\",\n            \"EnhanceCapability(广东省疾病预防控制中心, 实验室检测检验)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“全国” — 表示在全国范围内建成\",\n            \"Type=“急救机构” — 表示设施类型为急救机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (Establish(全国, 急救机构) ∧ Include(急救机构, 急救) ∧ MeetNationalCondition(急救机构) ∧ CoverUrbanRural(急救机构) ∧ FunctionComplete(急救机构) ∧ Responsive(急救机构) ∧ CoordinatedOperation(急救机构) ∧ SustainableDevelopment(急救机构))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“东部地区” — 表示在东部地区建成\",\n            \"Type=“传染病救治机构” — 表示设施类型为传染病救治机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (Establish(东部地区, 传染病救治机构) ∧ Include(传染病救治机构, 传染病) ∧ MeetNationalCondition(传染病救治机构) ∧ CoverUrbanRural(传染病救治机构) ∧ FunctionComplete(传染病救治机构) ∧ Responsive(传染病救治机构) ∧ CoordinatedOperation(传染病救治机构) ∧ SustainableDevelopment(传染病救治机构))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“西部地区” — 表示在西部地区建成\",\n            \"Type=“化学中毒与核辐射救治基地” — 表示设施类型为化学中毒与核辐射救治基地\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (Establish(西部地区, 化学中毒与核辐射救治基地) ∧ Include(化学中毒与核辐射救治基地, 化学中毒与核辐射) ∧ MeetNationalCondition(化学中毒与核辐射救治基地) ∧ CoverUrbanRural(化学中毒与核辐射救治基地) ∧ FunctionComplete(化学中毒与核辐射救治基地) ∧ Responsive(化学中毒与核辐射救治基地) ∧ CoordinatedOperation(化学中毒与核辐射救治基地) ∧ SustainableDevelopment(化学中毒与核辐射救治基地))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“中部地区” — 表示在中部地区建成\",\n            \"Type=“急救机构” — 表示设施类型为急救机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (Establish(中部地区, 急救机构) ∧ Include(急救机构, 急救) ∧ MeetNationalCondition(急救机构) ∧ CoverUrbanRural(急救机构) ∧ FunctionComplete(急救机构) ∧ Responsive(急救机构) ∧ CoordinatedOperation(急救机构) ∧ SustainableDevelopment(急救机构))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“南部地区” — 表示在南部地区建成\",\n            \"Type=“传染病救治机构” — 表示设施类型为传染病救治机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (Establish(南部地区, 传染病救治机构) ∧ Include(传染病救治机构, 传染病) ∧ MeetNationalCondition(传染病救治机构) ∧ CoverUrbanRural(传染病救治机构) ∧ FunctionComplete(传染病救治机构) ∧ Responsive(传染病救治机构) ∧ CoordinatedOperation(传染病救治机构) ∧ SustainableDevelopment(传染病救治机构))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“北部地区” — 表示在北部地区建成\",\n            \"Type=“化学中毒与核辐射救治基地” — 表示设施类型为化学中毒与核辐射救治基地\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (Establish(北部地区, 化学中毒与核辐射救治基地) ∧ Include(化学中毒与核辐射救治基地, 化学中毒与核辐射) ∧ MeetNationalCondition(化学中毒与核辐射救治基地) ∧ CoverUrbanRural(化学中毒与核辐射救治基地) ∧ FunctionComplete(化学中毒与核辐射救治基地) ∧ Responsive(化学中毒与核辐射救治基地) ∧ CoordinatedOperation(化学中毒与核辐射救治基地) ∧ SustainableDevelopment(化学中毒与核辐射救治基地))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"国家=“中国” — 表示国家为中国\",\n            \"SystemType=“卫生执法监督体系” — 表示体系类型为卫生执法监督体系\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishSystem(中国, 卫生执法监督体系)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家卫生健康委员会” — 表示卫生行政部门为国家卫生健康委员会\",\n            \"d=“北京市卫生健康监督所” — 表示卫生行政部门为北京市卫生健康监督所\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(国家卫生健康委员会) → (DefineFunctions(国家卫生健康委员会) ∧ ImplementResponsibility(国家卫生健康委员会) ∧ StandardizeBehavior(国家卫生健康委员会) ∧ StrengthenTeamBuilding(国家卫生健康委员会))\",\n            \"Department(北京市卫生健康监督所) → (DefineFunctions(北京市卫生健康监督所) ∧ ImplementResponsibility(北京市卫生健康监督所) ∧ StandardizeBehavior(北京市卫生健康监督所) ∧ StrengthenTeamBuilding(北京市卫生健康监督所))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“李医生” — 表示卫生监督人员为李医生\",\n            \"p=“王护士” — 表示卫生监督人员为王护士\"\n        ],\n        \"instance_logicexpression\": [\n            \"Personnel(李医生) → (ImplementQualificationAccess(李医生) ∧ ImplementOnTheJobTraining(李医生) → ImproveCapacityAndLevel(李医生))\",\n            \"Personnel(王护士) → (ImplementQualificationAccess(王护士) ∧ ImplementOnTheJobTraining(王护士) → ImproveCapacityAndLevel(王护士))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“市级卫生局” — 表示市级卫生行政部门\",\n            \"p=“平战结合、因地制宜，分类管理、分级负责，统一管理、协调运转” — 表示建立应急救治队伍所依据的原则\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀p (Department(市级卫生局) ∧ Principle(“平战结合、因地制宜，分类管理、分级负责，统一管理、协调运转”) → (EstablishTeam(市级卫生局, “平战结合、因地制宜，分类管理、分级负责，统一管理、协调运转”) ∧ StrengthenManagement(市级卫生局, Team) ∧ StrengthenTraining(市级卫生局, Team)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“省级卫生厅” — 表示省级卫生行政部门\",\n            \"p=“平战结合、因地制宜，分类管理、分级负责，统一管理、协调运转” — 表示建立应急救治队伍所依据的原则\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀p (Department(省级卫生厅) ∧ Principle(“平战结合、因地制宜，分类管理、分级负责，统一管理、协调运转”) → (EstablishTeam(省级卫生厅, “平战结合、因地制宜，分类管理、分级负责，统一管理、协调运转”) ∧ StrengthenManagement(省级卫生厅, Team) ∧ StrengthenTraining(省级卫生厅, Team)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“区级卫生所” — 表示区级卫生行政部门\",\n            \"p=“平战结合、因地制宜，分类管理、分级负责，统一管理、协调运转” — 表示建立应急救治队伍所依据的原则\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀p (Department(区级卫生所) ∧ Principle(“平战结合、因地制宜，分类管理、分级负责，统一管理、协调运转”) → (EstablishTeam(区级卫生所, “平战结合、因地制宜，分类管理、分级负责，统一管理、协调运转”) ∧ StrengthenManagement(区级卫生所, Team) ∧ StrengthenTraining(区级卫生所, Team)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“县级卫生站” — 表示县级卫生行政部门\",\n            \"p=“平战结合、因地制宜，分类管理、分级负责，统一管理、协调运转” — 表示建立应急救治队伍所依据的原则\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀p (Department(县级卫生站) ∧ Principle(“平战结合、因地制宜，分类管理、分级负责，统一管理、协调运转”) → (EstablishTeam(县级卫生站, “平战结合、因地制宜，分类管理、分级负责，统一管理、协调运转”) ∧ StrengthenManagement(县级卫生站, Team) ∧ StrengthenTraining(县级卫生站, Team)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“市级卫生局” — 表示市级卫生局作为组织应急演练的部门\",\n            \"GovernmentHealthDepartment(市级卫生局) — 表示市级卫生局是人民政府卫生行政部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"UnifiedPlanning(市级卫生局) ∧ ClassifiedImplementation(市级卫生局) ∧ GradedResponsibility(市级卫生局) ∧ HighlightKeyPoints(市级卫生局) ∧ AdaptToDemands(市级卫生局) ∧ (Regular(市级卫生局) ∨ Irregular(市级卫生局)) ∧ EmergencyDrill(市级卫生局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“省级卫生厅” — 表示省级卫生厅作为组织应急演练的部门\",\n            \"GovernmentHealthDepartment(省级卫生厅) — 表示省级卫生厅是人民政府卫生行政部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"UnifiedPlanning(省级卫生厅) ∧ ClassifiedImplementation(省级卫生厅) ∧ GradedResponsibility(省级卫生厅) ∧ HighlightKeyPoints(省级卫生厅) ∧ AdaptToDemands(省级卫生厅) ∧ (Regular(省级卫生厅) ∨ Irregular(省级卫生厅)) ∧ EmergencyDrill(省级卫生厅)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“区级卫生所” — 表示区级卫生所作为组织应急演练的部门\",\n            \"GovernmentHealthDepartment(区级卫生所) — 表示区级卫生所是人民政府卫生行政部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"UnifiedPlanning(区级卫生所) ∧ ClassifiedImplementation(区级卫生所) ∧ GradedResponsibility(区级卫生所) ∧ HighlightKeyPoints(区级卫生所) ∧ AdaptToDemands(区级卫生所) ∧ (Regular(区级卫生所) ∨ Irregular(区级卫生所)) ∧ EmergencyDrill(区级卫生所)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家级卫生部门” — 表示国家级卫生部门作为组织应急演练的部门\",\n            \"GovernmentHealthDepartment(国家级卫生部门) — 表示国家级卫生部门是人民政府卫生行政部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"UnifiedPlanning(国家级卫生部门) ∧ ClassifiedImplementation(国家级卫生部门) ∧ GradedResponsibility(国家级卫生部门) ∧ HighlightKeyPoints(国家级卫生部门) ∧ AdaptToDemands(国家级卫生部门) ∧ (Regular(国家级卫生部门) ∨ Irregular(国家级卫生部门)) ∧ EmergencyDrill(国家级卫生部门)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=“突发公共卫生事件防治科学研究” — 表示国家开展的研究主题是突发公共卫生事件防治科学研究\",\n            \"Subtopic1=“现场流行病学调查方法”\",\n            \"Subtopic2=“实验室病因检测技术”\",\n            \"Subtopic3=“药物治疗”\",\n            \"Subtopic4=“疫苗”\",\n            \"Subtopic5=“应急反应装备”\",\n            \"Subtopic6=“中医药”\",\n            \"Subtopic7=“中西医结合防治”\",\n            \"Subtopic8=“新发传染病快速诊断方法”\",\n            \"Subtopic9=“诊断试剂”\",\n            \"Subtopic10=“相关疫苗研究”\"\n        ],\n        \"instance_logicexpression\": [\n            \"ConductResearch(“突发公共卫生事件防治科学研究”) ∧ Includes(“突发公共卫生事件防治科学研究”, “现场流行病学调查方法”) ∧ Includes(“突发公共卫生事件防治科学研究”, “实验室病因检测技术”) ∧ Includes(“突发公共卫生事件防治科学研究”, “药物治疗”) ∧ Includes(“突发公共卫生事件防治科学研究”, “疫苗”) ∧ Includes(“突发公共卫生事件防治科学研究”, “应急反应装备”) ∧ Includes(“突发公共卫生事件防治科学研究”, “中医药”) ∧ Includes(“突发公共卫生事件防治科学研究”, “中西医结合防治”) ∧ Includes(“突发公共卫生事件防治科学研究”, “新发传染病快速诊断方法”) ∧ Includes(“突发公共卫生事件防治科学研究”, “诊断试剂”) ∧ Includes(“突发公共卫生事件防治科学研究”, “相关疫苗研究”) → TechnicalReserve(“突发公共卫生事件防治科学研究”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“突发公共卫生事件防治科学研究”\"\n        ],\n        \"instance_logicexpression\": [\n            \"ConductResearch(“突发公共卫生事件防治科学研究”) → InternationalExchangeAndCooperation(“突发公共卫生事件防治科学研究”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“突发公共卫生事件防治科学研究”\",\n            \"s=“世界卫生组织” — 表示引进技术来源是世界卫生组织\"\n        ],\n        \"instance_logicexpression\": [\n            \"InternationalExchangeAndCooperation(“突发公共卫生事件防治科学研究”) → IntroduceTechnology(“突发公共卫生事件防治科学研究”, “世界卫生组织”) ∧ ImproveLevel(“突发公共卫生事件防治科学研究”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“突发公共卫生事件防治科学研究”\",\n            \"s=“美国疾病控制与预防中心” — 表示引进技术来源是美国疾病控制与预防中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"InternationalExchangeAndCooperation(“突发公共卫生事件防治科学研究”) → IntroduceTechnology(“突发公共卫生事件防治科学研究”, “美国疾病控制与预防中心”) ∧ ImproveLevel(“突发公共卫生事件防治科学研究”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“中央政府” — 表示中央政府建立物资和生产能力的储备\",\n            \"m=“口罩” — 表示储备物资为口罩\",\n            \"pc=“口罩生产线” — 表示生产能力储备为口罩生产线\"\n        ],\n        \"instance_logicexpression\": [\n            \"GovernmentLevel(中央政府) → EstablishReserve(中央政府, 口罩, 口罩生产线)\",\n            \"PublicHealthEmergency(发生) → ∀g (CallReserve(g, 口罩))\",\n            \"CallReserve(中央政府, 口罩) → ReplenishReserve(中央政府, 口罩)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“省级政府” — 表示省级政府建立物资和生产能力的储备\",\n            \"m=“防护服” — 表示储备物资为防护服\",\n            \"pc=“防护服生产线” — 表示生产能力储备为防护服生产线\"\n        ],\n        \"instance_logicexpression\": [\n            \"GovernmentLevel(省级政府) → EstablishReserve(省级政府, 防护服, 防护服生产线)\",\n            \"PublicHealthEmergency(发生) → ∀g (CallReserve(g, 防护服))\",\n            \"CallReserve(省级政府, 防护服) → ReplenishReserve(省级政府, 防护服)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“市级政府” — 表示市级政府建立物资和生产能力的储备\",\n            \"m=“消毒液” — 表示储备物资为消毒液\",\n            \"pc=“消毒液生产线” — 表示生产能力储备为消毒液生产线\"\n        ],\n        \"instance_logicexpression\": [\n            \"GovernmentLevel(市级政府) → EstablishReserve(市级政府, 消毒液, 消毒液生产线)\",\n            \"PublicHealthEmergency(发生) → ∀g (CallReserve(g, 消毒液))\",\n            \"CallReserve(市级政府, 消毒液) → ReplenishReserve(市级政府, 消毒液)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“县级政府” — 表示县级政府建立物资和生产能力的储备\",\n            \"m=“检测试剂” — 表示储备物资为检测试剂\",\n            \"pc=“检测试剂生产线” — 表示生产能力储备为检测试剂生产线\"\n        ],\n        \"instance_logicexpression\": [\n            \"GovernmentLevel(县级政府) → EstablishReserve(县级政府, 检测试剂, 检测试剂生产线)\",\n            \"PublicHealthEmergency(发生) → ∀g (CallReserve(g, 检测试剂))\",\n            \"CallReserve(县级政府, 检测试剂) → ReplenishReserve(县级政府, 检测试剂)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“城市医院扩建项目” — 表示城市医院扩建是突发公共卫生事件的应急处理项目\",\n            \"c=“国际援助” — 表示通过国际援助渠道筹集资金\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponse(城市医院扩建项目) → EnsureFunding(城市医院扩建项目)\",\n            \"Channel(国际援助) → RaiseFunds(国际援助) ∧ EmergencyResponse(城市医院扩建项目)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“乡村医疗设施改善项目” — 表示乡村医疗设施改善是专业技术机构的应急处理项目\",\n            \"Institution=“乡村卫生院” — 表示乡村卫生院是专业技术机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"ProfessionalInstitution(乡村医疗设施改善项目) → (ImplementPolicy(FinancialSubsidy(乡村卫生院)) ∧ EnsureFunding(乡村医疗设施改善项目))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“山区疫情防控项目” — 表示山区疫情防控是位于边远贫困地区的应急处理项目\"\n        ],\n        \"instance_logicexpression\": [\n            \"ImpoverishedArea(山区疫情防控项目) → EnsureFunding(山区疫情防控项目)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“沿海城市防疫中心建设” — 表示沿海城市防疫中心建设是突发公共卫生事件的应急处理项目\",\n            \"c=“国内捐款” — 表示通过国内捐款渠道筹集资金\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponse(沿海城市防疫中心建设) → EnsureFunding(沿海城市防疫中心建设)\",\n            \"Channel(国内捐款) → RaiseFunds(国内捐款) ∧ EmergencyResponse(沿海城市防疫中心建设)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“边境地区疾病预防项目” — 表示边境地区疾病预防是专业技术机构的应急处理项目\",\n            \"Institution=“边境疾控中心” — 表示边境疾控中心是专业技术机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"ProfessionalInstitution(边境地区疾病预防项目) → (ImplementPolicy(FinancialSubsidy(边境疾控中心)) ∧ EnsureFunding(边境地区疾病预防项目))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=“市级应急医疗队” — 表示队伍是市级应急医疗队\",\n            \"i=“卫星电话” — 表示通信设备为卫星电话\",\n            \"v=“救护车” — 表示交通工具为救护车\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyMedicalTeam(“市级应急医疗队”) → (CommunicationDevice(“卫星电话”) ∧ Equip(“市级应急医疗队”, “卫星电话”)) ∧ (TransportationTool(“救护车”) ∧ Equip(“市级应急医疗队”, “救护车”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“省级应急医疗队” — 表示队伍是省级应急医疗队\",\n            \"i=“无线电” — 表示通信设备为无线电\",\n            \"v=“救援直升机” — 表示交通工具为救援直升机\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyMedicalTeam(“省级应急医疗队”) → (CommunicationDevice(“无线电”) ∧ Equip(“省级应急医疗队”, “无线电”)) ∧ (TransportationTool(“救援直升机”) ∧ Equip(“省级应急医疗队”, “救援直升机”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“区级应急医疗队” — 表示队伍是区级应急医疗队\",\n            \"i=“移动基站” — 表示通信设备为移动基站\",\n            \"v=“全地形车” — 表示交通工具为全地形车\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyMedicalTeam(“区级应急医疗队”) → (CommunicationDevice(“移动基站”) ∧ Equip(“区级应急医疗队”, “移动基站”)) ∧ (TransportationTool(“全地形车”) ∧ Equip(“区级应急医疗队”, “全地形车”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“国家级应急医疗队” — 表示队伍是国家级应急医疗队\",\n            \"i=“加密通信器” — 表示通信设备为加密通信器\",\n            \"v=“高速运输机” — 表示交通工具为高速运输机\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyMedicalTeam(“国家级应急医疗队”) → (CommunicationDevice(“加密通信器”) ∧ Equip(“国家级应急医疗队”, “加密通信器”)) ∧ (TransportationTool(“高速运输机”) ∧ Equip(“国家级应急医疗队”, “高速运输机”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“国家卫生健康委员会” — 表示国家卫生健康委员会作为国务院有关部门\",\n            \"Laws=“突发公共卫生事件应对法” — 表示国家卫生健康委员会起草和制订的法律、法规和规章制度\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Department(国家卫生健康委员会) → (EnhanceResearch(国家卫生健康委员会) ∧ DraftAndFormulate(国家卫生健康委员会, 突发公共卫生事件应对法) ∧ Improve(国家卫生健康委员会, 突发公共卫生事件应对法)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“地方卫生健康局” — 表示地方卫生健康局作为地方各级人民政府及有关部门\",\n            \"Regulations=“突发公共卫生事件应急条例” — 表示地方卫生健康局执行的规定\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Department(地方卫生健康局) → Execute(地方卫生健康局, 突发公共卫生事件应急条例))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家药品监督管理局” — 表示国家药品监督管理局作为国务院有关部门\",\n            \"Person=“张三” — 表示因履行职责不力造成工作损失的当事人张三\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀p (Department(国家药品监督管理局) ∧ CauseLoss(张三) → HoldAccountable(国家药品监督管理局, 张三))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“省级人民政府” — 表示省级人民政府作为地方各级人民政府及有关部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Department(省级人民政府) → PerformDuties(省级人民政府))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“市级疾病预防控制中心” — 表示市级疾病预防控制中心作为地方各级人民政府及有关部门\",\n            \"Person=“李四” — 表示因履行职责不力造成工作损失的当事人李四\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀p (Department(市级疾病预防控制中心) ∧ CauseLoss(李四) → HoldAccountable(市级疾病预防控制中心, 李四))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“市级政府” — 表示政府级别为市级\",\n            \"d=“卫生局” — 表示有关部门为卫生局\",\n            \"m=“互联网” — 表示媒介为互联网\",\n            \"k=“突发公共卫生事件应急知识” — 表示普及的知识为突发公共卫生事件应急知识\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀d∀m∀k (GovernmentLevel(市级政府, 县级以上) ∧ Department(卫生局) → (Organize(市级政府, 卫生局) ∧ Use(卫生局, 互联网) ∧ CarryOut(卫生局, Public, 突发公共卫生事件应急知识) ∧ Promote(卫生局, Public, HealthScience) ∧ Guide(卫生局, Public, ScientificBehavior)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“省级政府” — 表示政府级别为省级\",\n            \"d=“教育局” — 表示有关部门为教育局\",\n            \"m=“报刊” — 表示媒介为报刊\",\n            \"k=“卫生科普知识” — 表示普及的知识为卫生科普知识\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀d∀m∀k (GovernmentLevel(省级政府, 县级以上) ∧ Department(教育局) → (Organize(省级政府, 教育局) ∧ Use(教育局, 报刊) ∧ CarryOut(教育局, Public, 卫生科普知识) ∧ Promote(教育局, Public, HealthScience) ∧ Guide(教育局, Public, ScientificBehavior)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“红十字会” — 表示组织为红十字会\",\n            \"r=“普及卫生应急知识” — 表示作用为普及卫生应急知识\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀r (Organization(红十字会, 社会团体) → PlayRole(红十字会, 普及卫生应急知识))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“区级政府” — 表示政府级别为区级\",\n            \"d=“疾病预防控制中心” — 表示有关部门为疾病预防控制中心\",\n            \"m=“手册” — 表示媒介为手册\",\n            \"k=“科学行为和方式” — 表示普及的知识为科学行为和方式\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀d∀m∀k (GovernmentLevel(区级政府, 县级以上) ∧ Department(疾病预防控制中心) → (Organize(区级政府, 疾病预防控制中心) ∧ Use(疾病预防控制中心, 手册) ∧ CarryOut(疾病预防控制中心, Public, 科学行为和方式) ∧ Promote(疾病预防控制中心, Public, HealthScience) ∧ Guide(疾病预防控制中心, Public, ScientificBehavior)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“医学会” — 表示组织为医学会\",\n            \"r=“普及卫生科普知识” — 表示作用为普及卫生科普知识\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀r (Organization(医学会, 社会团体) → PlayRole(医学会, 普及卫生科普知识))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“埃博拉” — 表示埃博拉是一种传染病\",\n            \"c=“刚果” — 表示埃博拉在刚果已经被发现\",\n            \"NotDiscovered(埃博拉, 中国) — 表示埃博拉在中国尚未被发现\"\n        ],\n        \"instance_logicexpression\": [\n            \"InfectiousDisease(埃博拉) ∧ (埃博拉 = 埃博拉 ∨ 埃博拉 = 猴痘 ∨ 埃博拉 = 黄热病 ∨ 埃博拉 = 人变异性克雅氏病) → (∃c (Discovered(埃博拉, 刚果) ∧ 刚果 ≠ 中国) ∧ NotDiscovered(埃博拉, 中国))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“猴痘” — 表示猴痘是一种传染病\",\n            \"c=“尼日利亚” — 表示猴痘在尼日利亚已经被发现\",\n            \"NotDiscovered(猴痘, 中国) — 表示猴痘在中国尚未被发现\"\n        ],\n        \"instance_logicexpression\": [\n            \"InfectiousDisease(猴痘) ∧ (猴痘 = 埃博拉 ∨ 猴痘 = 猴痘 ∨ 猴痘 = 黄热病 ∨ 猴痘 = 人变异性克雅氏病) → (∃c (Discovered(猴痘, 尼日利亚) ∧ 尼日利亚 ≠ 中国) ∧ NotDiscovered(猴痘, 中国))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“黄热病” — 表示黄热病是一种传染病\",\n            \"c=“巴西” — 表示黄热病在巴西已经被发现\",\n            \"NotDiscovered(黄热病, 中国) — 表示黄热病在中国尚未被发现\"\n        ],\n        \"instance_logicexpression\": [\n            \"InfectiousDisease(黄热病) ∧ (黄热病 = 埃博拉 ∨ 黄热病 = 猴痘 ∨ 黄热病 = 黄热病 ∨ 黄热病 = 人变异性克雅氏病) → (∃c (Discovered(黄热病, 巴西) ∧ 巴西 ≠ 中国) ∧ NotDiscovered(黄热病, 中国))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“人变异性克雅氏病” — 表示人变异性克雅氏病是一种传染病\",\n            \"c=“美国” — 表示人变异性克雅氏病在美国已经被发现\",\n            \"NotDiscovered(人变异性克雅氏病, 中国) — 表示人变异性克雅氏病在中国尚未被发现\"\n        ],\n        \"instance_logicexpression\": [\n            \"InfectiousDisease(人变异性克雅氏病) ∧ (人变异性克雅氏病 = 埃博拉 ∨ 人变异性克雅氏病 = 猴痘 ∨ 人变异性克雅氏病 = 黄热病 ∨ 人变异性克雅氏病 = 人变异性克雅氏病) → (∃c (Discovered(人变异性克雅氏病, 美国) ∧ 美国 ≠ 中国) ∧ NotDiscovered(人变异性克雅氏病, 中国))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Disease=“天花” — 表示天花疾病已被消灭\",\n            \"Disease=“脊髓灰质炎” — 表示脊髓灰质炎疾病已被消灭\"\n        ],\n        \"instance_logicexpression\": [\n            \"Eliminated(天花) ∧ Eliminated(脊髓灰质炎)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“食品污染事件A” — 表示发生了食品污染事件A\",\n            \"Department=“市卫生局” — 表示市卫生局负责分析评估和核定事故级别\"\n        ],\n        \"instance_logicexpression\": [\n            \"FoodSafetyIncident(食品污染事件A) → AnalyzeAssess(市卫生局, 食品污染事件A) ∧ DetermineLevel(市卫生局, 食品污染事件A, Level)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“特别重大食品中毒事件B” — 表示发生了特别重大食品中毒事件B\",\n            \"Ministry=“卫生部” — 表示卫生部参与提出建议\",\n            \"Office=“食品安全办” — 表示食品安全办参与提出建议\",\n            \"Suggestion=“启动I级响应” — 表示建议内容为启动I级响应\",\n            \"Government=“国务院” — 表示国务院负责批准建议\",\n            \"Command=“国家特别重大食品安全事故应急处置指挥部” — 表示成立的指挥部名称\"\n        ],\n        \"instance_logicexpression\": [\n            \"特别重大FoodSafetyIncident(特别重大食品中毒事件B) → Propose(卫生部, 食品安全办, 启动I级响应) ∧ Approve(国务院, 启动I级响应) → EstablishCommand(国务院, 国家特别重大食品安全事故应急处置指挥部) ∧ EmergencyResponse(国家特别重大食品安全事故应急处置指挥部, 特别重大食品中毒事件B)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“重大食品污染事件C” — 表示发生了重大食品污染事件C\",\n            \"Government=“省级人民政府” — 表示省级人民政府负责组织应急处置\"\n        ],\n        \"instance_logicexpression\": [\n            \"重大FoodSafetyIncident(重大食品污染事件C) → OrganizeResponse(省级人民政府, Command, 重大食品污染事件C)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“较大食品安全事故D” — 表示发生了较大食品安全事故D\",\n            \"Government=“市级人民政府” — 表示市级人民政府负责组织应急处置\"\n        ],\n        \"instance_logicexpression\": [\n            \"较大FoodSafetyIncident(较大食品安全事故D) → OrganizeResponse(市级人民政府, Command, 较大食品安全事故D)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“一般食品安全事故E” — 表示发生了一般食品安全事故E\",\n            \"Government=“县级人民政府” — 表示县级人民政府负责组织应急处置\"\n        ],\n        \"instance_logicexpression\": [\n            \"一般FoodSafetyIncident(一般食品安全事故E) → OrganizeResponse(县级人民政府, Command, 一般食品安全事故E)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“卫生部” — 卫生部是指挥部的成员单位\",\n            \"Nature=“食品安全事故” — 事故性质为食品安全事故\",\n            \"Need=“紧急救援和调查” — 应急处置工作的需要为紧急救援和调查\"\n        ],\n        \"instance_logicexpression\": [\n            \"CommandMember(卫生部) ↔ (AccidentNature(食品安全事故) ∧ EmergencyResponseNeed(紧急救援和调查))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“农业部” — 农业部是指挥部的成员单位\",\n            \"Nature=“农业灾害” — 事故性质为农业灾害\",\n            \"Need=“灾害救助和恢复生产” — 应急处置工作的需要为灾害救助和恢复生产\"\n        ],\n        \"instance_logicexpression\": [\n            \"CommandMember(农业部) ↔ (AccidentNature(农业灾害) ∧ EmergencyResponseNeed(灾害救助和恢复生产))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“国际食品安全事件” — 事故涉及国外\",\n            \"d=“外交部” — 外交部是指挥部的成员单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"InvolveForeign(国际食品安全事件) → (CommandMember(外交部) ∧ CommandMember(港澳办) ∧ CommandMember(台办))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“港澳台地区灾害” — 事故涉及港澳台\",\n            \"d=“港澳办” — 港澳办是指挥部的成员单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"InvolveForeign(港澳台地区灾害) → (CommandMember(外交部) ∧ CommandMember(港澳办) ∧ CommandMember(台办))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“食品安全办” — 食品安全办是指挥部办公室的成员\"\n        ],\n        \"instance_logicexpression\": [\n            \"CommandOfficeMember(卫生部) ∧ CommandOfficeMember(食品安全办)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"CommandCenter=“市应急指挥中心” — 表示指挥部为市应急指挥中心\",\n            \"EmergencyResponse=“化学品泄漏事故应急处置” — 表示事故应急处置工作为化学品泄漏事故\",\n            \"Decision=“化学品泄漏应急响应计划” — 表示重大应急决策和部署为化学品泄漏应急响应计划\",\n            \"Information=“化学品泄漏事故通报” — 表示事故的重要信息为化学品泄漏事故通报\",\n            \"Report=“化学品泄漏应急处置工作报告” — 表示应急处置工作报告为化学品泄漏应急处置工作报告\",\n            \"Task=“现场安全评估” — 表示应急处置的其他工作为现场安全评估\"\n        ],\n        \"instance_logicexpression\": [\n            \"Lead(“市应急指挥中心”, “化学品泄漏事故应急处置”) ∧ StudyDecision(“市应急指挥中心”, “化学品泄漏应急响应计划”) ∧ ReleaseInformation(“市应急指挥中心”, “化学品泄漏事故通报”) ∧ ReviewReport(“市应急指挥中心”, “化学品泄漏应急处置工作报告”) ∧ OtherWork(“市应急指挥中心”, “现场安全评估”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"CommandCenter=“区应急响应指挥部” — 表示指挥部为区应急响应指挥部\",\n            \"EmergencyResponse=“地震灾害应急处置” — 表示事故应急处置工作为地震灾害应急处置\",\n            \"Decision=“地震灾害应急救援方案” — 表示重大应急决策和部署为地震灾害应急救援方案\",\n            \"Information=“地震灾害情况通告” — 表示事故的重要信息为地震灾害情况通告\",\n            \"Report=“地震灾害应急处置工作报告” — 表示应急处置工作报告为地震灾害应急处置工作报告\",\n            \"Task=“灾后重建规划” — 表示应急处置的其他工作为灾后重建规划\"\n        ],\n        \"instance_logicexpression\": [\n            \"Lead(“区应急响应指挥部”, “地震灾害应急处置”) ∧ StudyDecision(“区应急响应指挥部”, “地震灾害应急救援方案”) ∧ ReleaseInformation(“区应急响应指挥部”, “地震灾害情况通告”) ∧ ReviewReport(“区应急响应指挥部”, “地震灾害应急处置工作报告”) ∧ OtherWork(“区应急响应指挥部”, “灾后重建规划”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"CommandCenter=“国家应急指挥中心” — 表示指挥部为国家应急指挥中心\",\n            \"EmergencyResponse=“重大洪涝灾害应急处置” — 表示事故应急处置工作为重大洪涝灾害应急处置\",\n            \"Decision=“洪涝灾害应急救援策略” — 表示重大应急决策和部署为洪涝灾害应急救援策略\",\n            \"Information=“洪涝灾害紧急预警” — 表示事故的重要信息为洪涝灾害紧急预警\",\n            \"Report=“洪涝灾害应急处置工作报告” — 表示应急处置工作报告为洪涝灾害应急处置工作报告\",\n            \"Task=“灾情信息收集” — 表示应急处置的其他工作为灾情信息收集\"\n        ],\n        \"instance_logicexpression\": [\n            \"Lead(“国家应急指挥中心”, “重大洪涝灾害应急处置”) ∧ StudyDecision(“国家应急指挥中心”, “洪涝灾害应急救援策略”) ∧ ReleaseInformation(“国家应急指挥中心”, “洪涝灾害紧急预警”) ∧ ReviewReport(“国家应急指挥中心”, “洪涝灾害应急处置工作报告”) ∧ OtherWork(“国家应急指挥中心”, “灾情信息收集”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Office=“指挥部办公室” — 表示指挥部办公室\",\n            \"Deployment=“事故应急处置部署” — 表示指挥部的各项部署\",\n            \"Response=“具体应急响应措施” — 表示事故应急处置工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"HandleDailyWork(指挥部办公室)\",\n            \"ImplementDeployment(指挥部办公室, 事故应急处置部署) ∧ OrganizeEmergencyResponse(指挥部办公室, 具体应急响应措施)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Office=“指挥部办公室” — 表示指挥部办公室\",\n            \"Region=“东部地区” — 表示相关地区\",\n            \"Department=“消防部门” — 表示相关部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"InspectAndUrge(指挥部办公室, 东部地区, 消防部门) → (ControlAccident(指挥部办公室) ∧ PreventExpansion(指挥部办公室))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Office=“指挥部办公室” — 表示指挥部办公室\",\n            \"Problem=“资源分配问题” — 表示事故应急处理工作中的具体问题\"\n        ],\n        \"instance_logicexpression\": [\n            \"ResearchAndCoordinate(指挥部办公室, 资源分配问题) → (ReportStatus(指挥部办公室, 国务院) ∧ ReportStatus(指挥部办公室, 指挥部) ∧ ReportStatus(指挥部办公室, 成员单位))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Office=“指挥部办公室” — 表示指挥部办公室\"\n        ],\n        \"instance_logicexpression\": [\n            \"OrganizeInformationRelease(指挥部办公室)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Office=“指挥部办公室” — 表示指挥部办公室\",\n            \"System=“应急响应制度” — 表示会商、发文、信息发布和督查等制度\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishSystem(指挥部办公室, 应急响应制度) → (QuickResponse(指挥部办公室) ∧ EfficientHandling(指挥部办公室))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"u=“消防局” — 表示成员单位为消防局\",\n            \"c=“应急指挥部” — 表示指挥部为应急指挥部\",\n            \"s=“化工厂” — 表示事故场景在化工厂\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀u∀c∀s (Accident(“化工厂”) → (WorkUnderLeadership(“消防局”, “应急指挥部”) ∧ SuperviseAndGuide(“消防局”, GovernmentDepartment) ∧ EmergencyRescue(“消防局”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“医疗救援队” — 表示成员单位为医疗救援队\",\n            \"c=“灾害应急中心” — 表示指挥部为灾害应急中心\",\n            \"s=“矿井” — 表示事故场景在矿井\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀u∀c∀s (Accident(“矿井”) → (WorkUnderLeadership(“医疗救援队”, “灾害应急中心”) ∧ SuperviseAndGuide(“医疗救援队”, GovernmentDepartment) ∧ EmergencyRescue(“医疗救援队”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“电力公司” — 表示成员单位为电力公司\",\n            \"c=“能源应急指挥部” — 表示指挥部为能源应急指挥部\",\n            \"s=“发电厂” — 表示事故场景在发电厂\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀u∀c∀s (Accident(“发电厂”) → (WorkUnderLeadership(“电力公司”, “能源应急指挥部”) ∧ SuperviseAndGuide(“电力公司”, GovernmentDepartment) ∧ EmergencyRescue(“电力公司”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“交通管理局” — 表示成员单位为交通管理局\",\n            \"c=“城市应急响应中心” — 表示指挥部为城市应急响应中心\",\n            \"s=“城市主干道” — 表示事故场景在城市主干道\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀u∀c∀s (Accident(“城市主干道”) → (WorkUnderLeadership(“交通管理局”, “城市应急响应中心”) ∧ SuperviseAndGuide(“交通管理局”, GovernmentDepartment) ∧ EmergencyRescue(“交通管理局”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“地震应急指挥部” — 表示指挥部为地震应急指挥部\",\n            \"w=“搜救组” — 表示工作组为搜救组\",\n            \"t=“搜救任务” — 表示任务为搜救任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀w (AccidentDisposalNeed(地震应急指挥部) → SubordinateGroup(地震应急指挥部, 搜救组))\",\n            \"∀c ∀w (SubordinateGroup(地震应急指挥部, 搜救组) → (UnifiedCommand(地震应急指挥部, 搜救组) ∧ ∀t (CarryOutWork(搜救组, 搜救任务) → ReportStatus(搜救组, CommandCenterOffice))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“火灾事故处理中心” — 表示指挥部为火灾事故处理中心\",\n            \"w=“医疗救护组” — 表示工作组为医疗救护组\",\n            \"t=“医疗救护任务” — 表示任务为医疗救护任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀w (AccidentDisposalNeed(火灾事故处理中心) → SubordinateGroup(火灾事故处理中心, 医疗救护组))\",\n            \"∀c ∀w (SubordinateGroup(火灾事故处理中心, 医疗救护组) → (UnifiedCommand(火灾事故处理中心, 医疗救护组) ∧ ∀t (CarryOutWork(医疗救护组, 医疗救护任务) → ReportStatus(医疗救护组, CommandCenterOffice))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“化学品泄漏应急响应中心” — 表示指挥部为化学品泄漏应急响应中心\",\n            \"w=“环境监测组” — 表示工作组为环境监测组\",\n            \"t=“环境监测任务” — 表示任务为环境监测任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀w (AccidentDisposalNeed(化学品泄漏应急响应中心) → SubordinateGroup(化学品泄漏应急响应中心, 环境监测组))\",\n            \"∀c ∀w (SubordinateGroup(化学品泄漏应急响应中心, 环境监测组) → (UnifiedCommand(化学品泄漏应急响应中心, 环境监测组) ∧ ∀t (CarryOutWork(环境监测组, 环境监测任务) → ReportStatus(环境监测组, CommandCenterOffice))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“交通事故处理指挥部” — 表示指挥部为交通事故处理指挥部\",\n            \"w=“交通疏导组” — 表示工作组为交通疏导组\",\n            \"t=“交通疏导任务” — 表示任务为交通疏导任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀w (AccidentDisposalNeed(交通事故处理指挥部) → SubordinateGroup(交通事故处理指挥部, 交通疏导组))\",\n            \"∀c ∀w (SubordinateGroup(交通事故处理指挥部, 交通疏导组) → (UnifiedCommand(交通事故处理指挥部, 交通疏导组) ∧ ∀t (CarryOutWork(交通疏导组, 交通疏导任务) → ReportStatus(交通疏导组, CommandCenterOffice))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“化工厂爆炸事故” — 表示事故为化工厂爆炸事故\",\n            \"Department=“卫生部” — 表示卫生部牵头进行事故调查\",\n            \"Department=“公安部” — 表示公安部参与事故调查\",\n            \"Department=“监察部” — 表示监察部参与事故调查\",\n            \"InvestigationGroup=“事故调查组” — 表示事故调查组负责调查\"\n        ],\n        \"instance_logicexpression\": [\n            \"Accident(“化工厂爆炸事故”) → (LeadInvestigation(卫生部) ∧ ParticipateInvestigation(公安部) ∧ ParticipateInvestigation(监察部) ∧ InvestigateCause(事故调查组, “化工厂爆炸事故”) ∧ AssessImpact(事故调查组, “化工厂爆炸事故”) ∧ DetermineCause(事故调查组, “化工厂爆炸事故”) ∧ DrawConclusion(事故调查组, “化工厂爆炸事故”) ∧ ProposePrevention(事故调查组, “化工厂爆炸事故”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“化工厂爆炸事故” — 表示事故为化工厂爆炸事故\",\n            \"CrimeSuspected=“是” — 表示事故中存在涉嫌犯罪的情况\",\n            \"Police=“当地公安机关” — 表示涉案地公安机关\"\n        ],\n        \"instance_logicexpression\": [\n            \"Accident(“化工厂爆炸事故”) ∧ CrimeSuspected(“是”) → (SuperviseInvestigation(公安部, 当地公安机关) ∧ PursueResponsibility(公安部, 当地公安机关))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“监管人员” — 表示监管人员\",\n            \"o=“其他机关工作人员” — 表示其他机关工作人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"Staff(“监管人员”) ∧ Department(“其他机关工作人员”) → (InvestigateMisconduct(事故调查组, “监管人员”) ∧ InvestigateMisconduct(事故调查组, “其他机关工作人员”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=“化工厂” — 表示事故发生地为化工厂\",\n            \"Member=“专家组” — 表示事故调查组派出的专家组\"\n        ],\n        \"instance_logicexpression\": [\n            \"Location(“化工厂”) → (SetUpInvestigationGroup(“化工厂”) ∨ DispatchForwardTeam(专家组, “化工厂”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d1=“市场监管局” — 表示市场监管局牵头处理某事故\",\n            \"d2=“卫生监督所” — 表示卫生监督所共同处理某事故\",\n            \"i=“食品工厂” — 表示事故地点在食品工厂\",\n            \"p=“某批次奶粉” — 表示与事故相关的产品为某批次奶粉\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d1 ∀d2 ∀i ∀p (Incident(食品工厂) ∧ RelatedProduct(某批次奶粉) → (Lead(市场监管局, 食品工厂) ∧ Collaborate(市场监管局, 卫生监督所, 食品工厂) ∧ Supervise(市场监管局, Recall(某批次奶粉)) ∧ Supervise(市场监管局, Shelf(某批次奶粉)) ∧ Supervise(市场监管局, Seal(某批次奶粉)) ∧ Guide(市场监管局, StrictControl(流通渠道)) → PreventHarm()))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d1=“食品药品监督管理局” — 表示食品药品监督管理局牵头处理某事故\",\n            \"d2=“质量技术监督局” — 表示质量技术监督局共同处理某事故\",\n            \"i=“海鲜市场” — 表示事故地点在海鲜市场\",\n            \"p=“某批次海产品” — 表示与事故相关的产品为某批次海产品\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d1 ∀d2 ∀i ∀p (Incident(海鲜市场) ∧ RelatedProduct(某批次海产品) → (Lead(食品药品监督管理局, 海鲜市场) ∧ Collaborate(食品药品监督管理局, 质量技术监督局, 海鲜市场) ∧ Supervise(食品药品监督管理局, Recall(某批次海产品)) ∧ Supervise(食品药品监督管理局, Shelf(某批次海产品)) ∧ Supervise(食品药品监督管理局, Seal(某批次海产品)) ∧ Guide(食品药品监督管理局, StrictControl(流通渠道)) → PreventHarm()))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d1=“农业农村部” — 表示农业农村部牵头处理某事故\",\n            \"d2=“环保局” — 表示环保局共同处理某事故\",\n            \"i=“蔬菜种植基地” — 表示事故地点在蔬菜种植基地\",\n            \"p=“某批次蔬菜” — 表示与事故相关的产品为某批次蔬菜\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d1 ∀d2 ∀i ∀p (Incident(蔬菜种植基地) ∧ RelatedProduct(某批次蔬菜) → (Lead(农业农村部, 蔬菜种植基地) ∧ Collaborate(农业农村部, 环保局, 蔬菜种植基地) ∧ Supervise(农业农村部, Recall(某批次蔬菜)) ∧ Supervise(农业农村部, Shelf(某批次蔬菜)) ∧ Supervise(农业农村部, Seal(某批次蔬菜)) ∧ Guide(农业农村部, StrictControl(流通渠道)) → PreventHarm()))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d1=“海关” — 表示海关牵头处理某事故\",\n            \"d2=“出入境检验检疫局” — 表示出入境检验检疫局共同处理某事故\",\n            \"i=“进口食品仓库” — 表示事故地点在进口食品仓库\",\n            \"p=“某批次进口食品” — 表示与事故相关的产品为某批次进口食品\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d1 ∀d2 ∀i ∀p (Incident(进口食品仓库) ∧ RelatedProduct(某批次进口食品) → (Lead(海关, 进口食品仓库) ∧ Collaborate(海关, 出入境检验检疫局, 进口食品仓库) ∧ Supervise(海关, Recall(某批次进口食品)) ∧ Supervise(海关, Shelf(某批次进口食品)) ∧ Supervise(海关, Seal(某批次进口食品)) ∧ Guide(海关, StrictControl(流通渠道)) → PreventHarm()))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“卫生部” — 表示卫生部负责相关任务\",\n            \"p=“紧急救治方案” — 表示制定的紧急救治方案\",\n            \"i=“事故调查组” — 表示事故调查组\",\n            \"s=“化工厂” — 表示事故场景在化工厂\",\n            \"事故发生地人民政府卫生部门=“化工厂所在地卫生局” — 表示化工厂所在地人民政府卫生部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀p ∀i ∀s (Accident(“化工厂”) ∧ Investigation(“事故调查组”, “化工厂”) ∧ Responsible(“卫生部”, DevelopPlan(“卫生部”, “紧急救治方案”, “事故调查组”)) → Guide(“卫生部”, “化工厂所在地卫生局”, 医疗救治(受到危害人员, “紧急救治方案”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“卫生部” — 表示卫生部负责相关任务\",\n            \"p=“综合医疗计划” — 表示制定的综合医疗计划\",\n            \"i=“环境健康调查组” — 表示环境健康调查组\",\n            \"s=“矿区” — 表示事故场景在矿区\",\n            \"事故发生地人民政府卫生部门=“矿区卫生局” — 表示矿区人民政府卫生部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀p ∀i ∀s (Accident(“矿区”) ∧ Investigation(“环境健康调查组”, “矿区”) ∧ Responsible(“卫生部”, DevelopPlan(“卫生部”, “综合医疗计划”, “环境健康调查组”)) → Guide(“卫生部”, “矿区卫生局”, 医疗救治(受到危害人员, “综合医疗计划”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“卫生部” — 表示卫生部负责相关任务\",\n            \"p=“紧急响应医疗方案” — 表示制定的紧急响应医疗方案\",\n            \"i=“重大事故调查组” — 表示重大事故调查组\",\n            \"s=“城市中心广场” — 表示事故场景在城市中心广场\",\n            \"事故发生地人民政府卫生部门=“市中心卫生局” — 表示城市中心广场人民政府卫生部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀p ∀i ∀s (Accident(“城市中心广场”) ∧ Investigation(“重大事故调查组”, “城市中心广场”) ∧ Responsible(“卫生部”, DevelopPlan(“卫生部”, “紧急响应医疗方案”, “重大事故调查组”)) → Guide(“卫生部”, “市中心卫生局”, 医疗救治(受到危害人员, “紧急响应医疗方案”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“卫生部” — 表示卫生部负责相关任务\",\n            \"p=“长期康复计划” — 表示制定的长期康复计划\",\n            \"i=“工业事故调查组” — 表示工业事故调查组\",\n            \"s=“工业园区” — 表示事故场景在工业园区\",\n            \"事故发生地人民政府卫生部门=“工业园区卫生局” — 表示工业园区人民政府卫生部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀p ∀i ∀s (Accident(“工业园区”) ∧ Investigation(“工业事故调查组”, “工业园区”) ∧ Responsible(“卫生部”, DevelopPlan(“卫生部”, “长期康复计划”, “工业事故调查组”)) → Guide(“卫生部”, “工业园区卫生局”, 医疗救治(受到危害人员, “长期康复计划”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“卫生部” — 表示卫生部牵头进行工作\",\n            \"p=“检测方案A” — 表示卫生部提出的检测方案\",\n            \"r=“检测数据集X” — 表示综合分析的检测数据\",\n            \"c=“事故原因1” — 表示查找到的事故原因\",\n            \"t=“发展趋势Y” — 表示评估的事故发展趋势\",\n            \"con=“可能后果Z” — 表示预测的事故后果\",\n            \"ref=“抢救方案建议W” — 表示提供的现场抢救方案和控制措施参考\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀p∀r (Lead(卫生部) ∧ ProposePlan(卫生部, 检测方案A) → (OrganizeImplementation(卫生部, 检测方案A) ∧ SynthesizeAnalysis(检测数据集X) ∧ IdentifyCause(事故原因1) ∧ AssessTrend(发展趋势Y) ∧ PredictConsequence(可能后果Z) ∧ ProvideReference(抢救方案建议W)))\",\n            \"∀d∀o∀r (Lead(卫生部) → Report(卫生部, 指挥部办公室, 检测数据集X))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“卫生部” — 表示卫生部牵头进行工作\",\n            \"p=“检测方案B” — 表示卫生部提出的另一项检测方案\",\n            \"r=“检测数据集Y” — 表示综合分析的另一组检测数据\",\n            \"c=“事故原因2” — 表示查找到的另一起事故原因\",\n            \"t=“发展趋势Z” — 表示评估的另一事故发展趋势\",\n            \"con=“可能后果X” — 表示预测的另一事故后果\",\n            \"ref=“控制措施建议V” — 表示提供的另一现场抢救方案和控制措施参考\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀p∀r (Lead(卫生部) ∧ ProposePlan(卫生部, 检测方案B) → (OrganizeImplementation(卫生部, 检测方案B) ∧ SynthesizeAnalysis(检测数据集Y) ∧ IdentifyCause(事故原因2) ∧ AssessTrend(发展趋势Z) ∧ PredictConsequence(可能后果X) ∧ ProvideReference(控制措施建议V)))\",\n            \"∀d∀o∀r (Lead(卫生部) → Report(卫生部, 指挥部办公室, 检测数据集Y))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“公安部” — 表示公安部牵头\",\n            \"g=“某市市政府” — 表示某市市政府是事故发生地的政府\",\n            \"a=“维护稳定” — 表示维护社会稳定的任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"Lead(“公安部”, “维护稳定”) → Guide(“公安部”, “某市市政府”, EnhancePublicSecurity) ∧ AccidentLocation(“某市市政府”) → MaintainSocialStability(“某市市政府”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“公安部” — 表示公安部牵头\",\n            \"g=“某省省政府” — 表示某省省政府是事故发生地的政府\",\n            \"a=“维护稳定” — 表示维护社会稳定的任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"Lead(“公安部”, “维护稳定”) → Guide(“公安部”, “某省省政府”, EnhancePublicSecurity) ∧ AccidentLocation(“某省省政府”) → MaintainSocialStability(“某省省政府”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“公安部” — 表示公安部牵头\",\n            \"g=“某县县政府” — 表示某县县政府是事故发生地的政府\",\n            \"a=“维护稳定” — 表示维护社会稳定的任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"Lead(“公安部”, “维护稳定”) → Guide(“公安部”, “某县县政府”, EnhancePublicSecurity) ∧ AccidentLocation(“某县县政府”) → MaintainSocialStability(“某县县政府”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“公安部” — 表示公安部牵头\",\n            \"g=“某乡镇政府” — 表示某乡镇政府是事故发生地的政府\",\n            \"a=“维护稳定” — 表示维护社会稳定的任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"Lead(“公安部”, “维护稳定”) → Guide(“公安部”, “某乡镇政府”, EnhancePublicSecurity) ∧ AccidentLocation(“某乡镇政府”) → MaintainSocialStability(“某乡镇政府”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d1=“中央宣传部” — 中央宣传部牵头组织工作\",\n            \"d2=“新闻办” — 新闻办参与组织工作\",\n            \"d3=“卫生部” — 卫生部参与组织工作\",\n            \"Task1=“事故处置宣传报道” — 事故处置的宣传报道工作\",\n            \"Task2=“舆论引导” — 舆论引导工作\",\n            \"Task3=“信息发布” — 信息发布工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃d1 ∃d2 ∃d3 (Lead(中央宣传部) ∧ Organize(中央宣传部, 事故处置宣传报道) ∧ Organize(中央宣传部, 舆论引导) ∧ (d1 = 中央宣传部 ∨ d2 = 新闻办 ∨ d3 = 卫生部) ∧ Cooperate(中央宣传部, 新闻办, 信息发布) ∧ Cooperate(中央宣传部, 卫生部, 信息发布))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"CommandCenter=“应急指挥部” — 表示指挥部为应急指挥部\",\n            \"eg=“环境安全专家组” — 表示专家组为环境安全专家组\",\n            \"Expert=“李教授” — 表示李教授是专家\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishExpertGroup(应急指挥部) → (∃eg (ExpertGroup(eg) ∧ ResponsibleForAnalysis(eg, Accident) ∧ ProvideDecisionAdvice(eg, EmergencyResponse) ∧ ParticipateInEmergencyHandling(eg)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"CommandCenter=“灾害应对中心” — 表示指挥部为灾害应对中心\",\n            \"eg=“灾害评估专家组” — 表示专家组为灾害评估专家组\",\n            \"Expert=“王博士” — 表示王博士是专家\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishExpertGroup(灾害应对中心) → (∃eg (ExpertGroup(eg) ∧ ResponsibleForAnalysis(eg, Accident) ∧ ProvideDecisionAdvice(eg, EmergencyResponse) ∧ ParticipateInEmergencyHandling(eg)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"CommandCenter=“工业事故处理中心” — 表示指挥部为工业事故处理中心\",\n            \"eg=“工业事故分析专家组” — 表示专家组为工业事故分析专家组\",\n            \"Expert=“赵工程师” — 表示赵工程师是专家\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishExpertGroup(工业事故处理中心) → (∃eg (ExpertGroup(eg) ∧ ResponsibleForAnalysis(eg, Accident) ∧ ProvideDecisionAdvice(eg, EmergencyResponse) ∧ ParticipateInEmergencyHandling(eg)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"CommandCenter=“公共卫生应急中心” — 表示指挥部为公共卫生应急中心\",\n            \"eg=“公共卫生应急专家组” — 表示专家组为公共卫生应急专家组\",\n            \"Expert=“钱医生” — 表示钱医生是专家\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishExpertGroup(公共卫生应急中心) → (∃eg (ExpertGroup(eg) ∧ ResponsibleForAnalysis(eg, Accident) ∧ ProvideDecisionAdvice(eg, EmergencyResponse) ∧ ParticipateInEmergencyHandling(eg)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“市立医院” — 表示市立医院作为食品安全事故应急处置专业技术机构\",\n            \"Department=“市卫生局” — 表示市卫生局作为卫生行政部门\",\n            \"Department=“市食品药品监督管理局” — 表示市食品药品监督管理局作为食品安全监管部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseInstitution(市立医院) → (CarryOutWork(市立医院, 市卫生局) ∧ CarryOutWork(市立医院, 市食品药品监督管理局))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“疾病预防控制中心” — 表示疾病预防控制中心作为食品安全事故应急处置专业技术机构\",\n            \"Department=“省卫生厅” — 表示省卫生厅作为卫生行政部门\",\n            \"Department=“省食品药品监督管理局” — 表示省食品药品监督管理局作为食品安全监管部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseInstitution(疾病预防控制中心) → (CarryOutWork(疾病预防控制中心, 省卫生厅) ∧ CarryOutWork(疾病预防控制中心, 省食品药品监督管理局))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“食品安全检测实验室” — 表示食品安全检测实验室作为食品安全事故应急处置专业技术机构\",\n            \"Department=“区卫生和计划生育局” — 表示区卫生和计划生育局作为卫生行政部门\",\n            \"Department=“区市场监督管理局” — 表示区市场监督管理局作为食品安全监管部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseInstitution(食品安全检测实验室) → (CarryOutWork(食品安全检测实验室, 区卫生和计划生育局) ∧ CarryOutWork(食品安全检测实验室, 区市场监督管理局))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“市急救中心” — 表示市急救中心作为食品安全事故应急处置专业技术机构\",\n            \"Department=“市卫生健康委员会” — 表示市卫生健康委员会作为卫生行政部门\",\n            \"Department=“市市场监管局” — 表示市市场监管局作为食品安全监管部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseInstitution(市急救中心) → (CarryOutWork(市急救中心, 市卫生健康委员会) ∧ CarryOutWork(市急救中心, 市市场监管局))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“国家食品安全信息网络体系” — 表示卫生部建立的国家统一的食品安全信息网络体系\",\n            \"Component1=“食品安全监测”\",\n            \"Component2=“事故报告与通报”\",\n            \"Component3=“食品安全事故隐患预警”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (Establish(卫生部, “国家食品安全信息网络体系”) ∧ Include(“国家食品安全信息网络体系”, “食品安全监测”) ∧ Include(“国家食品安全信息网络体系”, “事故报告与通报”) ∧ Include(“国家食品安全信息网络体系”, “食品安全事故隐患预警”)) → InformationSharing(“国家食品安全信息网络体系”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“国家食品安全信息网络体系” — 表示卫生部建立的国家统一的食品安全信息网络体系\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (Establish(卫生部, “国家食品安全信息网络体系”) → Responsible(卫生部, “国家食品安全信息网络体系”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“卫生部”\",\n            \"Facility=“信息报告和举报电话”\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Responsible(卫生部, 食品安全信息网络体系) → SetUp(卫生部, “信息报告和举报电话”) ∧ EnsureChannel(卫生部))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“某食品加工厂” — 表示发生在某食品加工厂的食品安全事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (FoodSafetyIncident(“某食品加工厂”) → ∃d (SetUp(d, 信息报告和举报电话) ∧ EnsureChannel(d)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“卫生行政部门” — 表示负责建立体系的部门\",\n            \"s=“医疗救治体系” — 表示建立的体系类型\",\n            \"f=“功能完善、反应灵敏、运转协调、持续发展” — 表示体系的特点\",\n            \"i=“食品安全事故A” — 表示具体的食品安全事故\",\n            \"Person=“张三” — 表示受到伤害的人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀s∀f (EstablishSystem(“卫生行政部门”, “医疗救治体系”) ∧ SystemFeature(“医疗救治体系”, “功能完善、反应灵敏、运转协调、持续发展”) → (∀i (FoodSafetyIncident(i) ∧ Injury(“张三”) → RapidTreatment(“张三”))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“卫生行政部门” — 表示负责建立体系的部门\",\n            \"s=“医疗救治体系” — 表示建立的体系类型\",\n            \"f=“功能完善、反应灵敏、运转协调、持续发展” — 表示体系的特点\",\n            \"i=“食品安全事故B” — 表示具体的食品安全事故\",\n            \"Person=“李四” — 表示受到伤害的人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀s∀f (EstablishSystem(“卫生行政部门”, “医疗救治体系”) ∧ SystemFeature(“医疗救治体系”, “功能完善、反应灵敏、运转协调、持续发展”) → (∀i (FoodSafetyIncident(i) ∧ Injury(“李四”) → RapidTreatment(“李四”))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“卫生行政部门” — 表示负责建立体系的部门\",\n            \"s=“医疗救治体系” — 表示建立的体系类型\",\n            \"f=“功能完善、反应灵敏、运转协调、持续发展” — 表示体系的特点\",\n            \"i=“食品安全事故C” — 表示具体的食品安全事故\",\n            \"Person=“王五” — 表示受到伤害的人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀s∀f (EstablishSystem(“卫生行政部门”, “医疗救治体系”) ∧ SystemFeature(“医疗救治体系”, “功能完善、反应灵敏、运转协调、持续发展”) → (∀i (FoodSafetyIncident(i) ∧ Injury(“王五”) → RapidTreatment(“王五”))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“食品安全应急中心” — 表示应急处置专业技术机构为食品安全应急中心\",\n            \"t=“事故核实” — 表示相关技术工作为事故核实\"\n        ],\n        \"instance_logicexpression\": [\n            \"应急处置专业技术机构(食品安全应急中心) → (ConductTraining(食品安全应急中心) ∧ StrengthenResponseForce(食品安全应急中心) ∧ ImproveCapability(食品安全应急中心))\",\n            \"应急处置专业技术机构(食品安全应急中心) → (事故核实 → ProvideTalentSupport(食品安全应急中心, 事故核实))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“疾病预防控制中心” — 表示应急处置专业技术机构为疾病预防控制中心\",\n            \"t=“级别核定” — 表示相关技术工作为级别核定\"\n        ],\n        \"instance_logicexpression\": [\n            \"应急处置专业技术机构(疾病预防控制中心) → (ConductTraining(疾病预防控制中心) ∧ StrengthenResponseForce(疾病预防控制中心) ∧ ImproveCapability(疾病预防控制中心))\",\n            \"应急处置专业技术机构(疾病预防控制中心) → (级别核定 → ProvideTalentSupport(疾病预防控制中心, 级别核定))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“食品药品监督管理局” — 表示应急处置专业技术机构为食品药品监督管理局\",\n            \"t=“事故隐患预警” — 表示相关技术工作为事故隐患预警\"\n        ],\n        \"instance_logicexpression\": [\n            \"应急处置专业技术机构(食品药品监督管理局) → (ConductTraining(食品药品监督管理局) ∧ StrengthenResponseForce(食品药品监督管理局) ∧ ImproveCapability(食品药品监督管理局))\",\n            \"应急处置专业技术机构(食品药品监督管理局) → (事故隐患预警 → ProvideTalentSupport(食品药品监督管理局, 事故隐患预警))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“科技部” — 表示国务院有关部门为科技部\"\n        ],\n        \"instance_logicexpression\": [\n            \"国务院有关部门(科技部) → (EnhanceTechR&D(科技部) ∧ PromoteExchanges(科技部))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“卫生健康委员会” — 表示国务院有关部门为卫生健康委员会\"\n        ],\n        \"instance_logicexpression\": [\n            \"国务院有关部门(卫生健康委员会) → (EnhanceTechR&D(卫生健康委员会) ∧ PromoteExchanges(卫生健康委员会))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"f=“食品检测设备” — 表示食品安全事故应急处置所需的设施为食品检测设备\",\n            \"e=“应急食品处理机” — 表示食品安全事故应急处置所需的设备为应急食品处理机\",\n            \"m=“食品检测试剂” — 表示食品安全事故应急处置所需的物资为食品检测试剂\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f ∀e ∀m (EnsureReserve(“食品检测设备”, “应急食品处理机”, “食品检测试剂”) → (TimelyReplenish(“食品检测试剂”)))\",\n            \"∀f (EnsureFunds(“食品检测试剂”) → IncludeInBudget(“食品检测试剂”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“食品安全事故应急中心” — 表示食品安全事故应急处置所需的设施为食品安全事故应急中心\",\n            \"e=“食品快速检测仪” — 表示食品安全事故应急处置所需的设备为食品快速检测仪\",\n            \"m=“应急食品供应包” — 表示食品安全事故应急处置所需的物资为应急食品供应包\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f ∀e ∀m (EnsureReserve(“食品安全事故应急中心”, “食品快速检测仪”, “应急食品供应包”) → (TimelyReplenish(“应急食品供应包”)))\",\n            \"∀f (EnsureFunds(“应急食品供应包”) → IncludeInBudget(“应急食品供应包”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“食品卫生实验室” — 表示食品安全事故应急处置所需的设施为食品卫生实验室\",\n            \"e=“食品成分分析仪” — 表示食品安全事故应急处置所需的设备为食品成分分析仪\",\n            \"m=“食品检测防护服” — 表示食品安全事故应急处置所需的物资为食品检测防护服\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f ∀e ∀m (EnsureReserve(“食品卫生实验室”, “食品成分分析仪”, “食品检测防护服”) → (TimelyReplenish(“食品检测防护服”)))\",\n            \"∀f (EnsureFunds(“食品检测防护服”) → IncludeInBudget(“食品检测防护服”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“食品安全事故应急响应车” — 表示食品安全事故应急处置所需的设施为食品安全事故应急响应车\",\n            \"e=“食品微生物检测箱” — 表示食品安全事故应急处置所需的设备为食品微生物检测箱\",\n            \"m=“食品检测试剂盒” — 表示食品安全事故应急处置所需的物资为食品检测试剂盒\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f ∀e ∀m (EnsureReserve(“食品安全事故应急响应车”, “食品微生物检测箱”, “食品检测试剂盒”) → (TimelyReplenish(“食品检测试剂盒”)))\",\n            \"∀f (EnsureFunds(“食品检测试剂盒”) → IncludeInBudget(“食品检测试剂盒”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“食品污染事件” — 表示食品安全事故为食品污染事件\",\n            \"S=“志愿者团队” — 表示动员的社会力量为志愿者团队\",\n            \"m=“消毒设备” — 表示调用的物资为消毒设备\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseNeed(食品污染事件) → (MobilizeSocialForces(志愿者团队) ∧ ParticipateInResponse(志愿者团队, 食品污染事件))\",\n            \"EmergencyResponseNeed(食品污染事件) ∧ CallForMaterials(消毒设备, 食品污染事件) → (ReturnMaterials(消毒设备) ∨ Compensate(消毒设备))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“学校食物中毒” — 表示食品安全事故为学校食物中毒事件\",\n            \"S=“救援组织” — 表示动员的社会力量为救援组织\",\n            \"m=“急救药品” — 表示调用的物资为急救药品\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseNeed(学校食物中毒) → (MobilizeSocialForces(救援组织) ∧ ParticipateInResponse(救援组织, 学校食物中毒))\",\n            \"EmergencyResponseNeed(学校食物中毒) ∧ CallForMaterials(急救药品, 学校食物中毒) → (ReturnMaterials(急救药品) ∨ Compensate(急救药品))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“餐厅食物中毒” — 表示食品安全事故为餐厅食物中毒事件\",\n            \"S=“社区服务队” — 表示动员的社会力量为社区服务队\",\n            \"m=“食品检测设备” — 表示调用的物资为食品检测设备\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseNeed(餐厅食物中毒) → (MobilizeSocialForces(社区服务队) ∧ ParticipateInResponse(社区服务队, 餐厅食物中毒))\",\n            \"EmergencyResponseNeed(餐厅食物中毒) ∧ CallForMaterials(食品检测设备, 餐厅食物中毒) → (ReturnMaterials(食品检测设备) ∨ Compensate(食品检测设备))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“食品工厂事故” — 表示食品安全事故为食品工厂事故\",\n            \"S=“专业救援队” — 表示动员的社会力量为专业救援队\",\n            \"m=“防护服” — 表示调用的物资为防护服\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseNeed(食品工厂事故) → (MobilizeSocialForces(专业救援队) ∧ ParticipateInResponse(专业救援队, 食品工厂事故))\",\n            \"EmergencyResponseNeed(食品工厂事故) ∧ CallForMaterials(防护服, 食品工厂事故) → (ReturnMaterials(防护服) ∨ Compensate(防护服))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“国务院食品安全部门” — 表示国务院食品安全部门\",\n            \"g=“食品安全专业人员” — 表示食品安全专业人员群体\",\n            \"t=“食品安全知识” — 表示食品安全知识主题\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀g ∀t (Department(“国务院食品安全部门”) ∧ Group(“食品安全专业人员”) ∧ Topic(“食品安全知识”, FoodSafety) → (Promote(“国务院食品安全部门”, “食品安全专业人员”, “食品安全知识”) ∨ Educate(“国务院食品安全部门”, “食品安全专业人员”, “食品安全知识”) ∨ Train(“国务院食品安全部门”, “食品安全专业人员”, “食品安全知识”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国务院食品安全部门” — 表示国务院食品安全部门\",\n            \"g=“食品生产经营者” — 表示食品生产经营者群体\",\n            \"s=“食品安全操作技能” — 表示食品安全操作技能\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p ∀s (Professional(p) ∧ Skill(“食品安全操作技能”, FoodSafety) → MasterSkill(p, “食品安全操作技能”))\",\n            \"∀p (Producer(p) → EnhanceAwareness(p, Responsibility))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国务院食品安全部门” — 表示国务院食品安全部门\",\n            \"g=“广大消费者” — 表示广大消费者群体\",\n            \"r=“风险意识和防范能力” — 表示风险意识和防范能力\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (Consumer(c) → ImproveAbility(c, “风险意识和防范能力”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“李师傅” — 李师傅为食品安全专业人员\",\n            \"s=“食品检测技能” — 表示食品检测技能\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p ∀s (Professional(“李师傅”) ∧ Skill(“食品检测技能”, FoodSafety) → MasterSkill(“李师傅”, “食品检测技能”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“王大妈” — 王大妈为普通消费者\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (Consumer(“王大妈”) → ImproveAbility(“王大妈”, RiskPrevention))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“卫生部” — 表示部门为卫生部\",\n            \"p=“国家食品安全风险监测能力建设规划” — 表示规划为国家食品安全风险监测能力建设规划\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(卫生部) ∧ Plan(国家食品安全风险监测能力建设规划) → (DevelopPlan(卫生部, 国家食品安全风险监测能力建设规划) ∧ ImplementPlan(卫生部, 国家食品安全风险监测能力建设规划))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“卫生部” — 表示部门为卫生部\",\n            \"t=“食源性疾病监测” — 表示类型为食源性疾病监测\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(卫生部) ∧ Type(食源性疾病监测) → EstablishMonitoringSystem(卫生部, 食源性疾病监测)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“卫生部” — 表示部门为卫生部\",\n            \"r=“食品安全风险评估结果” — 表示结果为食品安全风险评估结果\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(卫生部) ∧ Result(食品安全风险评估结果) → ComprehensiveAnalysis(卫生部, 食品安全风险评估结果)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“卫生部” — 表示部门为卫生部\",\n            \"w=“高风险食品警示” — 表示警示为高风险食品警示\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(卫生部) ∧ Warning(高风险食品警示) → IssueWarning(卫生部, 高风险食品警示)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“市场监管总局” — 表示部门为市场监管总局\",\n            \"r=“食品安全隐患” — 表示风险为食品安全隐患\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(市场监管总局) ∧ Risk(食品安全隐患) → ReportRisk(市场监管总局, 食品安全隐患)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“市场监管总局” — 表示部门为市场监管总局\",\n            \"m=“食品召回措施” — 表示措施为食品召回措施\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(市场监管总局) ∧ Measure(食品召回措施) → TakeMeasures(市场监管总局, 食品召回措施)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“食品工厂A” — 表示食品安全事故发生单位为食品工厂A\",\n            \"r=“食品安全事故X” — 表示食品安全事故为X\",\n            \"Source=“食品工厂A” — 表示信息来源为食品工厂A\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀r (FoodSafetyIncident(X) → (ReportInfo(食品工厂A, X) ∨ ReportInfo(MedicalInstitution, r) ∨ TechnicalMonitoring(X) ∨ PublicComplaint(r) ∨ MediaDisclosure(r) ∨ InternationalNotification(r)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“食品安全事故Y” — 表示食品安全事故为Y\",\n            \"r=“医疗机构B的报告” — 表示医疗机构报告的信息为B\",\n            \"Source=“医疗机构B” — 表示信息来源为医疗机构B\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀r (FoodSafetyIncident(Y) → (ReportInfo(ProductionUnit, i) ∨ ReportInfo(医疗机构B, r) ∨ TechnicalMonitoring(i) ∨ PublicComplaint(r) ∨ MediaDisclosure(r) ∨ InternationalNotification(r)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“食品安全事故Z” — 表示食品安全事故为Z\",\n            \"r=“技术机构C的监测结果” — 表示技术机构监测和分析结果为C\",\n            \"Source=“技术机构C” — 表示信息来源为技术机构C\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀r (FoodSafetyIncident(Z) → (ReportInfo(ProductionUnit, i) ∨ ReportInfo(MedicalInstitution, r) ∨ TechnicalMonitoring(Z) ∨ PublicComplaint(r) ∨ MediaDisclosure(r) ∨ InternationalNotification(r)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“公众举报D” — 表示经核实的公众举报信息为D\",\n            \"Source=“公众举报D” — 表示信息来源为公众举报D\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀r (FoodSafetyIncident(i) → (ReportInfo(ProductionUnit, i) ∨ ReportInfo(MedicalInstitution, r) ∨ TechnicalMonitoring(i) ∨ PublicComplaint(D) ∨ MediaDisclosure(r) ∨ InternationalNotification(r)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“媒体披露E” — 表示经核实的媒体披露与报道信息为E\",\n            \"Source=“媒体披露E” — 表示信息来源为媒体披露E\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀r (FoodSafetyIncident(i) → (ReportInfo(ProductionUnit, i) ∨ ReportInfo(MedicalInstitution, r) ∨ TechnicalMonitoring(i) ∨ PublicComplaint(r) ∨ MediaDisclosure(E) ∨ InternationalNotification(r)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“国际通报F” — 表示世界卫生组织等国际机构、其他国家和地区通报我国信息为F\",\n            \"Source=“国际通报F” — 表示信息来源为国际通报F\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀r (FoodSafetyIncident(i) → (ReportInfo(ProductionUnit, i) ∨ ReportInfo(MedicalInstitution, r) ∨ TechnicalMonitoring(i) ∨ PublicComplaint(r) ∨ MediaDisclosure(r) ∨ InternationalNotification(F)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“食品公司A” — 表示食品生产经营者为食品公司A\",\n            \"Department：CountyHealthDepartment — 表示县级卫生行政部门\",\n            \"Department：ResponsibleDepartment — 表示负责本单位食品安全监管工作的有关部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"DiscoverFoodSafetyIssue(食品公司A) → Report(食品公司A, CountyHealthDepartment) ∧ Report(食品公司A, ResponsibleDepartment)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“学校食堂B” — 表示单位为学校食堂B\",\n            \"Department：CountyHealthDepartment — 表示县级卫生行政部门\",\n            \"Department：ResponsibleDepartment — 表示有关监管部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"AcuteGroupHealthDamage(学校食堂B) → Report(学校食堂B, CountyHealthDepartment) ∧ Report(学校食堂B, ResponsibleDepartment)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“医院C” — 表示单位为医院C\",\n            \"Department：CountyHealthDepartment — 表示县级卫生行政部门\",\n            \"Department：ResponsibleDepartment — 表示有关监管部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"ReceiveTreatment(医院C) → Report(医院C, CountyHealthDepartment) ∧ Report(医院C, ResponsibleDepartment)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“检测实验室D” — 表示食品安全相关技术机构为检测实验室D\",\n            \"Department：CountyHealthDepartment — 表示县级卫生行政部门\",\n            \"Department：ResponsibleDepartment — 表示有关监管部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"DiscoverRelatedSituation(检测实验室D) → Report(检测实验室D, CountyHealthDepartment) ∨ Report(检测实验室D, ResponsibleDepartment)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“市场监管局E” — 表示监管部门为市场监管局E\",\n            \"Department：CountyHealthDepartment — 表示县级卫生行政部门\",\n            \"Department：OtherDepartments — 表示其他有关部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"Notify(市场监管局E, CountyHealthDepartment) ∧ Notify(市场监管局E, OtherDepartments) → Verify(CountyHealthDepartment)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“CountyHealthDepartment” — 表示卫生行政部门\",\n            \"Department：HigherAuthorities — 表示上级人民政府卫生行政部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"Verify(CountyHealthDepartment) → (ActivateEmergencyResponse(CountyHealthDepartment) ∧ ReportToHigherAuthorities(CountyHealthDepartment))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“市场监管局” — 表示市场监管局为有关监管部门\",\n            \"ha=“市卫生局” — 表示市卫生局为卫生行政部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀ha (ProvideInformation(市场监管局, 市卫生局) → OrganizeAssessment(市卫生局))\",\n            \"∀ha (OrganizeAssessment(市卫生局) → AssessmentContent(HealthDamage, Scope, Impact, Trend))\",\n            \"∀ha (OrganizeAssessment(市卫生局) → DetermineAccidentLevel(AccidentLevel))\",\n            \"∀ha (OrganizeAssessment(市卫生局) → DetermineMeasures(Measures))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“环保局” — 表示环保局为有关监管部门\",\n            \"ha=“省卫生厅” — 表示省卫生厅为卫生行政部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀ha (ProvideInformation(环保局, 省卫生厅) → OrganizeAssessment(省卫生厅))\",\n            \"∀ha (OrganizeAssessment(省卫生厅) → AssessmentContent(HealthDamage, Scope, Impact, Trend))\",\n            \"∀ha (OrganizeAssessment(省卫生厅) → DetermineAccidentLevel(AccidentLevel))\",\n            \"∀ha (OrganizeAssessment(省卫生厅) → DetermineMeasures(Measures))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“农业农村部” — 表示农业农村部为有关监管部门\",\n            \"ha=“区卫生局” — 表示区卫生局为卫生行政部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀ha (ProvideInformation(农业农村部, 区卫生局) → OrganizeAssessment(区卫生局))\",\n            \"∀ha (OrganizeAssessment(区卫生局) → AssessmentContent(HealthDamage, Scope, Impact, Trend))\",\n            \"∀ha (OrganizeAssessment(区卫生局) → DetermineAccidentLevel(AccidentLevel))\",\n            \"∀ha (OrganizeAssessment(区卫生局) → DetermineMeasures(Measures))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“海关总署” — 表示海关总署为有关监管部门\",\n            \"ha=“国家卫生健康委员会” — 表示国家卫生健康委员会为卫生行政部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀ha (ProvideInformation(海关总署, 国家卫生健康委员会) → OrganizeAssessment(国家卫生健康委员会))\",\n            \"∀ha (OrganizeAssessment(国家卫生健康委员会) → AssessmentContent(HealthDamage, Scope, Impact, Trend))\",\n            \"∀ha (OrganizeAssessment(国家卫生健康委员会) → DetermineAccidentLevel(AccidentLevel))\",\n            \"∀ha (OrganizeAssessment(国家卫生健康委员会) → DetermineMeasures(Measures))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“特别重大食品安全事故” — 表示事故为特别重大食品安全事故\",\n            \"Level=Ⅰ — 表示事故分级为Ⅰ级\",\n            \"GovernmentLevel=国务院 — 表示由国务院启动响应\"\n        ],\n        \"instance_logicexpression\": [\n            \"FoodSafetyIncident(“特别重大食品安全事故”, Ⅰ) → (ActivateResponse(Ⅰ, 国务院) ∧ EstablishCommand(国务院) ∧ EmergencyResponse(“特别重大食品安全事故”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“重大食品安全事故” — 表示事故为重大食品安全事故\",\n            \"Level=Ⅱ — 表示事故分级为Ⅱ级\",\n            \"GovernmentLevel=省级人民政府 — 表示由省级人民政府启动响应\"\n        ],\n        \"instance_logicexpression\": [\n            \"FoodSafetyIncident(“重大食品安全事故”, Ⅱ) → ActivateResponse(Ⅱ, 省级人民政府)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“较大食品安全事故” — 表示事故为较大食品安全事故\",\n            \"Level=Ⅲ — 表示事故分级为Ⅲ级\",\n            \"GovernmentLevel=市级人民政府 — 表示由市级人民政府启动响应\"\n        ],\n        \"instance_logicexpression\": [\n            \"FoodSafetyIncident(“较大食品安全事故”, Ⅲ) → ActivateResponse(Ⅲ, 市级人民政府)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“一般食品安全事故” — 表示事故为一般食品安全事故\",\n            \"Level=Ⅳ — 表示事故分级为Ⅳ级\",\n            \"GovernmentLevel=县级人民政府 — 表示由县级人民政府启动响应\"\n        ],\n        \"instance_logicexpression\": [\n            \"FoodSafetyIncident(“一般食品安全事故”, Ⅳ) → ActivateResponse(Ⅳ, 县级人民政府)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g1=省级人民政府 — 表示省级人民政府启动Ⅰ级响应\",\n            \"g2=国务院 — 表示国务院为上级人民政府\",\n            \"w=工作组 — 表示派出的工作组\"\n        ],\n        \"instance_logicexpression\": [\n            \"ActivateResponse(Ⅰ, 省级人民政府) ∧ HigherGovernment(省级人民政府, 国务院) → DispatchWorkGroup(国务院, 工作组) ∧ EmergencyResponse(工作组, “特别重大食品安全事故”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“指挥部” — 表示响应级别的指挥部\",\n            \"u=“成员单位” — 表示指挥部成员单位\",\n            \"Level=“I级” — 表示响应级别为Ⅰ级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀u(ResponseLevel(c, Ⅰ) → UnifiedCommand(c, u) ∧ EmergencyResponse(u,处置工作))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“省级人民政府” — 表示事发地省级人民政府\",\n            \"h=“地市级人民政府” — 表示地市级人民政府\",\n            \"Level=“I级” — 表示响应级别为Ⅰ级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p∀h(ResponseLevel(p, Ⅰ) → (OrganizeCoordinate(p, h) ∧ EmergencyResponse(h,处置工作) ∧ ¬迟报(Progress)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“事故发生单位” — 表示事故发生单位\",\n            \"p=“先期处置方案” — 表示事故发生单位的先期处置方案\",\n            \"Department=“卫生行政部门” — 表示卫生行政部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀p(ResponseLevel(a, Ⅰ) → PreliminaryResponse(a, p) ∧ CooperateResponse(a, Department))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“指挥部” — 表示响应级别的指挥部\",\n            \"u=“事发地省级人民政府” — 表示指挥部成员单位中的省级人民政府\",\n            \"Level=“I级” — 表示响应级别为Ⅰ级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀u(ResponseLevel(c, Ⅰ) → UnifiedCommand(c, u) ∧ EmergencyResponse(u,处置工作))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“地市级人民政府” — 表示地市级人民政府\",\n            \"h=“县级人民政府” — 表示县级人民政府\",\n            \"Level=“I级” — 表示响应级别为Ⅰ级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p∀h(ResponseLevel(p, Ⅰ) → (OrganizeCoordinate(p, h) ∧ EmergencyResponse(h,处置工作) ∧ ¬迟报(Progress)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“食品生产企业” — 表示食品生产企业\",\n            \"p=“食品安全事故应急处置方案” — 表示食品生产企业的应急处置方案\",\n            \"Department=“市场监管部门” — 表示市场监管部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀p(ResponseLevel(a, Ⅰ) → PreliminaryResponse(a, p) ∧ CooperateResponse(a, Department))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“沙门氏菌” — 表示食源性疾病为沙门氏菌\",\n            \"e=“食物中毒” — 表示传染病疫情为食物中毒\",\n            \"Document1=“中华人民共和国传染病防治法” — 表示《中华人民共和国传染病防治法》\",\n            \"Document2=“国家突发公共卫生事件应急预案” — 表示《国家突发公共卫生事件应急预案》\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀e (Involves(沙门氏菌, 食物中毒) ∧ Regulation(中华人民共和国传染病防治法) ∧ Regulation(国家突发公共卫生事件应急预案) → CarryOut(疫情防控) ∧ CarryOut(应急处置))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“霍乱” — 表示食源性疾病为霍乱\",\n            \"e=“霍乱疫情” — 表示传染病疫情为霍乱疫情\",\n            \"Document1=“中华人民共和国传染病防治法” — 表示《中华人民共和国传染病防治法》\",\n            \"Document2=“国家突发公共卫生事件应急预案” — 表示《国家突发公共卫生事件应急预案》\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀e (Involves(霍乱, 霍乱疫情) ∧ Regulation(中华人民共和国传染病防治法) ∧ Regulation(国家突发公共卫生事件应急预案) → CarryOut(疫情防控) ∧ CarryOut(应急处置))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“甲型肝炎” — 表示食源性疾病为甲型肝炎\",\n            \"e=“肝炎疫情” — 表示传染病疫情为肝炎疫情\",\n            \"Document1=“中华人民共和国传染病防治法” — 表示《中华人民共和国传染病防治法》\",\n            \"Document2=“国家突发公共卫生事件应急预案” — 表示《国家突发公共卫生事件应急预案》\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀e (Involves(甲型肝炎, 肝炎疫情) ∧ Regulation(中华人民共和国传染病防治法) ∧ Regulation(国家突发公共卫生事件应急预案) → CarryOut(疫情防控) ∧ CarryOut(应急处置))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“诺如病毒” — 表示食源性疾病为诺如病毒\",\n            \"e=“诺如病毒疫情” — 表示传染病疫情为诺如病毒疫情\",\n            \"Document1=“中华人民共和国传染病防治法” — 表示《中华人民共和国传染病防治法》\",\n            \"Document2=“国家突发公共卫生事件应急预案” — 表示《国家突发公共卫生事件应急预案》\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀e (Involves(诺如病毒, 诺如病毒疫情) ∧ Regulation(中华人民共和国传染病防治法) ∧ Regulation(国家突发公共卫生事件应急预案) → CarryOut(疫情防控) ∧ CarryOut(应急处置))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“卫生行政部门” — 表示负责应急处置的部门为卫生行政部门\",\n            \"m=“救治食品安全事故患者” — 表示应急处置措施为救治食品安全事故患者\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀m (应急处置(“卫生行政部门”, “救治食品安全事故患者”) → (UtilizeMedicalResources(“卫生行政部门”) ∧ OrganizeTreatment(“卫生行政部门”, 医疗机构, 食品安全事故患者)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“卫生行政部门” — 表示负责应急处置的部门为卫生行政部门\",\n            \"m=“流行病学调查” — 表示应急处置措施为流行病学调查\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (应急处置(“卫生行政部门”, “流行病学调查”) → ConductEpidemiologicalSurvey(“卫生行政部门”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“卫生行政部门” — 表示负责应急处置的部门为卫生行政部门\",\n            \"m=“抽样检验” — 表示应急处置措施为抽样检验\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (应急处置(“卫生行政部门”, “抽样检验”) → ConductSamplingInspection(“卫生行政部门”) ∧ IdentifyCause(“卫生行政部门”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“食品安全事故” — 表示涉嫌犯罪的食品安全事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (涉嫌犯罪(“食品安全事故”) → InterveneInvestigation(公安机关) ∧ InvestigateCrime(公安机关))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“食品污染事故” — 表示事故为食品污染事故\",\n            \"d=“质量监督局” — 表示质量监督局参与封存\",\n            \"i=“受污染的农产品” — 表示事故相关的受污染农产品\",\n            \"h=“卫生行政部门” — 表示卫生行政部门查明食品安全事故原因\",\n            \"Operator=“食品生产经营者” — 表示食品生产经营者执行清洗消毒和消除污染\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀d ∀i (AccidentNature(食品污染事故) ∧ Characteristic(食品污染事故) ∧ HazardLevel(食品污染事故) → (Seal(质量监督局, 受污染的农产品) ∧ (∃h (查明原因(h) → (CleanAndDisinfect(食品生产经营者, 受污染的农产品) ∧ EliminatePollution(食品生产经营者, 受污染的农产品)))))\",\n            \"∀a ∀d ∀i (确认污染(食品污染事故, 受污染的农产品) → (Recall(食品生产经营者, 受污染的农产品) ∧ CeaseOperation(食品生产经营者, 受污染的农产品) ∧ Destroy(食品生产经营者, 受污染的农产品)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“食品安全事故” — 表示事故为食品安全事故\",\n            \"d=“食品药品监管局” — 表示食品药品监管局参与封存\",\n            \"i=“受污染的食品加工工具” — 表示事故相关的受污染食品加工工具\",\n            \"h=“卫生行政部门” — 表示卫生行政部门查明食品安全事故原因\",\n            \"Operator=“食品生产经营者” — 表示食品生产经营者执行清洗消毒和消除污染\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀d ∀i (AccidentNature(食品安全事故) ∧ Characteristic(食品安全事故) ∧ HazardLevel(食品安全事故) → (Seal(食品药品监管局, 受污染的食品加工工具) ∧ (∃h (查明原因(h) → (CleanAndDisinfect(食品生产经营者, 受污染的食品加工工具) ∧ EliminatePollution(食品生产经营者, 受污染的食品加工工具)))))\",\n            \"∀a ∀d ∀i (未确认污染(食品安全事故, 受污染的食品加工工具) → Unseal(食品药品监管局, 受污染的食品加工工具))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“进口食品污染事故” — 表示事故为进口食品污染事故\",\n            \"d=“出入境检验检疫局” — 表示出入境检验检疫局参与封存\",\n            \"i=“进口食品原料” — 表示事故相关的进口食品原料\",\n            \"h=“卫生行政部门” — 表示卫生行政部门查明食品安全事故原因\",\n            \"Operator=“食品生产经营者” — 表示食品生产经营者执行清洗消毒和消除污染\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a ∀d ∀i (AccidentNature(进口食品污染事故) ∧ Characteristic(进口食品污染事故) ∧ HazardLevel(进口食品污染事故) → (Seal(出入境检验检疫局, 进口食品原料) ∧ (∃h (查明原因(h) → (CleanAndDisinfect(食品生产经营者, 进口食品原料) ∧ EliminatePollution(食品生产经营者, 进口食品原料)))))\",\n            \"∀a ∀d ∀i (确认污染(进口食品污染事故, 进口食品原料) → (Recall(食品生产经营者, 进口食品原料) ∧ CeaseOperation(食品生产经营者, 进口食品原料) ∧ Destroy(食品生产经营者, 进口食品原料)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"A=“化工厂爆炸” — 表示发生了化工厂爆炸事故\",\n            \"G=“邻近市” — 表示事故可能蔓延到邻近市\",\n            \"D=“外交部” — 表示协调涉外部门为外交部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A (Accident(化工厂爆炸) → (Assess(化工厂爆炸) ∧ ∀G (Spread(化工厂爆炸, 邻近市) → Notify(邻近市, 化工厂爆炸)) ∧ (AffectAbroad(化工厂爆炸) → ∃D CoordinateNotify(外交部, 化工厂爆炸)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“森林火灾” — 表示发生了森林火灾事故\",\n            \"G=“相邻县” — 表示事故可能蔓延到相邻县\",\n            \"D=“环保部” — 表示协调涉外部门为环保部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A (Accident(森林火灾) → (Assess(森林火灾) ∧ ∀G (Spread(森林火灾, 相邻县) → Notify(相邻县, 森林火灾)) ∧ (AffectAbroad(森林火灾) → ∃D CoordinateNotify(环保部, 森林火灾)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“海上溢油” — 表示发生了海上溢油事故\",\n            \"G=“沿海省” — 表示事故可能蔓延到沿海省\",\n            \"D=“海洋局” — 表示协调涉外部门为海洋局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A (Accident(海上溢油) → (Assess(海上溢油) ∧ ∀G (Spread(海上溢油, 沿海省) → Notify(沿海省, 海上溢油)) ∧ (AffectAbroad(海上溢油) → ∃D CoordinateNotify(海洋局, 海上溢油)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“核电站泄漏” — 表示发生了核电站泄漏事故\",\n            \"G=“周边国家” — 表示事故可能蔓延到周边国家\",\n            \"D=“能源部” — 表示协调涉外部门为能源部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A (Accident(核电站泄漏) → (Assess(核电站泄漏) ∧ ∀G (Spread(核电站泄漏, 周边国家) → Notify(周边国家, 核电站泄漏)) ∧ (AffectAbroad(核电站泄漏) → ∃D CoordinateNotify(能源部, 核电站泄漏)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“食品安全检测中心” — 表示应急处置专业技术机构为食品安全检测中心\",\n            \"f=“沙门氏菌” — 表示相关危险因素为沙门氏菌\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i∀f (相关危险因素(沙门氏菌) → Test(食品安全检测中心, 沙门氏菌))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“检测数据集D1” — 表示检测数据集\",\n            \"t=“沙门氏菌检测结果” — 表示检测结果\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀t (Test(食品安全检测中心, 沙门氏菌检测结果) → AnalyzeAssess(专家组, 检测数据集D1))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“检测数据集D1” — 表示检测数据集\",\n            \"趋势=“事故扩散趋势” — 表示事故发展趋势\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (AnalyzeAssess(专家组, 检测数据集D1) → AnalyzeTrend(专家组, 事故扩散趋势))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"后果=“大规模健康影响” — 表示事故后果\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (AnalyzeAssess(专家组, 检测数据集D1) → PredictOutcome(专家组, 大规模健康影响))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"方案=“食品安全事故应急处置方案” — 表示事故调查和现场处置方案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (AnalyzeAssess(专家组, 检测数据集D1) → ProvideReference(专家组, 食品安全事故应急处置方案))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d1=“市场监管局” — 表示有关部门为市场监管局\",\n            \"f=“沙门氏菌” — 表示相关危险因素为沙门氏菌\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d1∀f (相关危险因素(沙门氏菌) → EliminateOrControl(市场监管局, 沙门氏菌))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d2=“卫生局” — 表示有关部门为卫生局\",\n            \"c=“食物中毒患者” — 表示事故中伤病人员\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d2∀c (事故中伤病人员(食物中毒患者) → Treat(卫生局, 食物中毒患者))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d3=“环境保护局” — 表示有关部门为环境保护局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d3 (食品安全事故 → ControlScene(环境保护局, 现场))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d4=“食品药品监督管理局” — 表示有关部门为食品药品监督管理局\",\n            \"f=“受污染食品” — 表示受污染食品\n        ],\n        \"instance_logicexpression\": [\n            \"∀d4 (受污染食品(受污染食品) → ControlContaminatedFood(食品药品监督管理局, 受污染食品))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d5=“应急管理局” — 表示有关部门为应急管理局\",\n            \"h=“次生衍生事故隐患” — 表示次生、衍生事故隐患\n        ],\n        \"instance_logicexpression\": [\n            \"∀d5 (次生衍生事故隐患(次生衍生事故隐患) → EliminateHazard(应急管理局, 次生衍生事故隐患))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“学校食堂” — 表示食品安全事故发生在学校食堂\",\n            \"Level=“1级” — 表示初始响应级别为1级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (FoodSafetyIncident(“学校食堂”) → (AssessmentResult(“学校食堂”) → (ResponseLevel(“1级”) ⊕ IncreaseResponseLevel(“1级”))))\",\n            \"∀s (IncidentWorsening(“学校食堂”) ∧ ImpactExpansion(“学校食堂”) ∧ SpreadingTrend(“学校食堂”) ∧ ComplexityAndUncontrollability(“学校食堂”) → IncreaseResponseLevel(“1级”))\",\n            \"∀s (EducationalInstitution(“学校食堂”) ∨ ImportantEvent(“学校食堂”) → IncreaseResponseLevel(“1级”))\",\n            \"∀s (FoodSafetyIncident(“学校食堂”) → EmergencyHandling(“学校食堂”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“国际会议中心” — 表示食品安全事故发生在国际会议中心\",\n            \"Level=“2级” — 表示初始响应级别为2级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (FoodSafetyIncident(“国际会议中心”) → (AssessmentResult(“国际会议中心”) → (ResponseLevel(“2级”) ⊕ IncreaseResponseLevel(“2级”))))\",\n            \"∀s (IncidentWorsening(“国际会议中心”) ∧ ImpactExpansion(“国际会议中心”) ∧ SpreadingTrend(“国际会议中心”) ∧ ComplexityAndUncontrollability(“国际会议中心”) → IncreaseResponseLevel(“2级”))\",\n            \"∀s (EducationalInstitution(“国际会议中心”) ∨ ImportantEvent(“国际会议中心”) → IncreaseResponseLevel(“2级”))\",\n            \"∀s (FoodSafetyIncident(“国际会议中心”) → EmergencyHandling(“国际会议中心”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“幼儿园” — 表示食品安全事故发生在幼儿园\",\n            \"Level=“3级” — 表示初始响应级别为3级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (FoodSafetyIncident(“幼儿园”) → (AssessmentResult(“幼儿园”) → (ResponseLevel(“3级”) ⊕ IncreaseResponseLevel(“3级”))))\",\n            \"∀s (IncidentWorsening(“幼儿园”) ∧ ImpactExpansion(“幼儿园”) ∧ SpreadingTrend(“幼儿园”) ∧ ComplexityAndUncontrollability(“幼儿园”) → IncreaseResponseLevel(“3级”))\",\n            \"∀s (EducationalInstitution(“幼儿园”) ∨ ImportantEvent(“幼儿园”) → IncreaseResponseLevel(“3级”))\",\n            \"∀s (FoodSafetyIncident(“幼儿园”) → EmergencyHandling(“幼儿园”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“全国运动会” — 表示食品安全事故发生在全国运动会期间\",\n            \"Level=“4级” — 表示初始响应级别为4级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (FoodSafetyIncident(“全国运动会”) → (AssessmentResult(“全国运动会”) → (ResponseLevel(“4级”) ⊕ IncreaseResponseLevel(“4级”))))\",\n            \"∀s (IncidentWorsening(“全国运动会”) ∧ ImpactExpansion(“全国运动会”) ∧ SpreadingTrend(“全国运动会”) ∧ ComplexityAndUncontrollability(“全国运动会”) → IncreaseResponseLevel(“4级”))\",\n            \"∀s (EducationalInstitution(“全国运动会”) ∨ ImportantEvent(“全国运动会”) → IncreaseResponseLevel(“4级”))\",\n            \"∀s (FoodSafetyIncident(“全国运动会”) → EmergencyHandling(“全国运动会”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“化工厂爆炸事故” — 表示事故为化工厂爆炸事故\",\n            \"AccidentHazardControlled(a) — 表示化工厂爆炸事故危害得到了有效控制\",\n            \"HazardBelowAssessmentLevel(a) — 表示化工厂爆炸事故危害降低到了原级别评估标准以下\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (AccidentHazardControlled(a) ∧ (HazardBelowAssessmentLevel(a) ∨ NoFurtherSpread(a)) → LowerEmergencyResponseLevel(a))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“矿井瓦斯泄漏事故” — 表示事故为矿井瓦斯泄漏事故\",\n            \"AccidentHazardControlled(a) — 表示矿井瓦斯泄漏事故危害得到了有效控制\",\n            \"NoFurtherSpread(a) — 表示矿井瓦斯泄漏事故没有进一步扩散的趋势\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (AccidentHazardControlled(a) ∧ (HazardBelowAssessmentLevel(a) ∨ NoFurtherSpread(a)) → LowerEmergencyResponseLevel(a))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“化学品泄漏事故” — 表示事故为化学品泄漏事故\",\n            \"AccidentHazardControlled(a) — 表示化学品泄漏事故危害得到了有效控制\",\n            \"HazardBelowAssessmentLevel(a) — 表示化学品泄漏事故危害降低到了原级别评估标准以下\",\n            \"NoFurtherSpread(a) — 表示化学品泄漏事故没有进一步扩散的趋势\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (AccidentHazardControlled(a) ∧ (HazardBelowAssessmentLevel(a) ∨ NoFurtherSpread(a)) → LowerEmergencyResponseLevel(a))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“森林火灾事故” — 表示事故为森林火灾事故\",\n            \"AccidentHazardControlled(a) — 表示森林火灾事故危害得到了有效控制\",\n            \"NoFurtherSpread(a) — 表示森林火灾事故没有进一步扩散的趋势\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a (AccidentHazardControlled(a) ∧ (HazardBelowAssessmentLevel(a) ∨ NoFurtherSpread(a)) → LowerEmergencyResponseLevel(a))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"FoodSafetyAccidentControlled() — 表示食品安全事故已经得到控制。\",\n            \"p=“患者1” — 表示患者1已经得到救治\",\n            \"StableCondition(患者1, 24Hours) — 表示患者1病情稳定超过24小时。\",\n            \"NoNewAcutePatients() — 表示没有新的急性病症患者出现。\",\n            \"LastPatient=“患者2” — 表示患者2是末例患者\",\n            \"IncubationPeriod=48Hours — 表示食源性感染性疾病的最长潜伏期为48小时。\",\n            \"Site=“工厂A” — 表示工厂A是受污染食品的现场。\",\n            \"ContaminatedFood=“产品X” — 表示产品X是受污染的食品。\",\n            \"Environment=“河流B” — 表示河流B是受污染的环境。\",\n            \"Standard=“环保标准C” — 表示环保标准C是环境污染清理的相关标准。\"\n        ],\n        \"instance_logicexpression\": [\n            \"FoodSafetyAccidentControlled() ∧ ∀p (Treated(患者1) ∧ StableCondition(患者1, 24Hours)) ∧ NoNewAcutePatients() ∧ NoNewFoodborneCases(患者2, 48Hours) → ResponseTermination()\",\n            \"EffectiveControl(工厂A, 产品X) ∧ EffectiveCleanup(河流B, 环保标准C) ∧ EliminatedSecondaryRisks() → ResponseTermination()\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"FoodSafetyAccidentControlled() — 表示食品安全事故已经得到控制。\",\n            \"p=“患者3” — 表示患者3已经得到救治\",\n            \"StableCondition(患者3, 24Hours) — 表示患者3病情稳定超过24小时。\",\n            \"NoNewAcutePatients() — 表示没有新的急性病症患者出现。\",\n            \"LastPatient=“患者4” — 表示患者4是末例患者\",\n            \"IncubationPeriod=72Hours — 表示食源性感染性疾病的最长潜伏期为72小时。\",\n            \"Site=“市场C” — 表示市场C是受污染食品的现场。\",\n            \"ContaminatedFood=“产品Y” — 表示产品Y是受污染的食品。\",\n            \"Environment=“土壤D” — 表示土壤D是受污染的环境。\",\n            \"Standard=“环保标准Z” — 表示环保标准Z是环境污染清理的相关标准。\"\n        ],\n        \"instance_logicexpression\": [\n            \"FoodSafetyAccidentControlled() ∧ ∀p (Treated(患者3) ∧ StableCondition(患者3, 24Hours)) ∧ NoNewAcutePatients() ∧ NoNewFoodborneCases(患者4, 72Hours) → ResponseTermination()\",\n            \"EffectiveControl(市场C, 产品Y) ∧ EffectiveCleanup(土壤D, 环保标准Z) ∧ EliminatedSecondaryRisks() → ResponseTermination()\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“指挥部” — 表示组织为指挥部\",\n            \"i=“化工厂爆炸事故” — 表示事故为化工厂爆炸事故\",\n            \"c=“级别调整条件” — 表示评估结果符合级别调整条件\",\n            \"g=“市级人民政府” — 表示政府为市级人民政府\",\n            \"l=“一级响应” — 表示响应级别为一级响应\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀i∀c (Assess(指挥部, 化工厂爆炸事故) ∧ MeetsCriteria(指挥部, 级别调整条件) → Propose(指挥部, AdjustLevel)) ∧ ∀g (Propose(指挥部, AdjustLevel) → ApproveAndImplement(市级人民政府, AdjustLevel))\",\n            \"∀g∀l (ApproveAndImplement(市级人民政府, AdjustLevel) → TakeMeasures(市级人民政府, 一级响应))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“指挥部” — 表示组织为指挥部\",\n            \"i=“食品污染事件” — 表示事故为食品污染事件\",\n            \"c=“响应终止条件” — 表示评估结果符合响应终止条件\",\n            \"g=“省级人民政府” — 表示政府为省级人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀i∀c (Assess(指挥部, 食品污染事件) ∧ MeetsCriteria(指挥部, 响应终止条件) → Propose(指挥部, TerminateResponse)) ∧ ∀g (Propose(指挥部, TerminateResponse) → ApproveAndImplement(省级人民政府, TerminateResponse))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=“区级人民政府” — 表示下级政府为区级人民政府\",\n            \"h=“省级专业部门” — 表示上级政府为省级专业部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀h∀l (RequestSupport(区级人民政府, 省级专业部门) → ProvideSupport(省级专业部门, 区级人民政府))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“指挥部A” — 表示指挥部A负责信息发布\",\n            \"Method=“召开新闻发布会” — 表示信息发布方式为召开新闻发布会\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (指挥部(指挥部A) ∨ 办公室(指挥部A) → (PressConference(指挥部A) ∨ PressRelease(指挥部A) → ReleaseInformation(指挥部A, 召开新闻发布会)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“办公室B” — 表示办公室B负责信息发布\",\n            \"Method=“发布新闻通稿” — 表示信息发布方式为发布新闻通稿\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (指挥部(办公室B) ∨ 办公室(办公室B) → (PressConference(办公室B) ∨ PressRelease(办公室B) → ReleaseInformation(办公室B, 发布新闻通稿)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“指挥部C” — 表示指挥部C负责信息发布\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (指挥部(指挥部C) ∨ 办公室(指挥部C) → (PromoteReporting(指挥部C) ∧ GuidePublicOpinion(指挥部C)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“办公室D” — 表示办公室D负责信息发布\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (指挥部(办公室D) ∨ 办公室(办公室D) → (PromoteReporting(办公室D) ∧ GuidePublicOpinion(办公室D)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“某市市政府” — 表示事发地人民政府为某市市政府\",\n            \"d=“市场监管局” — 表示有关部门为市场监管局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀d (Aftercare(某市市政府, 市场监管局) → (EliminateImpact(某市市政府) ∧ RestoreOrder(某市市政府) ∧ ImprovePolicy(某市市政府)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“某食品公司” — 表示食品安全事故涉及的公司为某食品公司\"\n        ],\n        \"instance_logicexpression\": [\n            \"食品安全事故(某食品公司) → (EmergencyInsuranceAcceptance(InsuranceCompany) ∧ ClaimSettlement(InsuranceCompany))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“某食品公司” — 表示造成食品安全事故的责任单位为某食品公司\",\n            \"v=“受害消费者” — 表示受害人为受害消费者\"\n        ],\n        \"instance_logicexpression\": [\n            \"食品安全事故(某食品公司) ∧ 责任单位(某食品公司, 受害消费者) → (Compensate(受害消费者, 某食品公司) ∧ BearCosts(受害消费者, 某食品公司))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“某省省政府” — 表示事发地人民政府为某省省政府\",\n            \"d=“环保局” — 表示有关部门为环保局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀g∀d (Aftercare(某省省政府, 环保局) → (EliminateImpact(某省省政府) ∧ RestoreOrder(某省省政府) ∧ ImprovePolicy(某省省政府)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“某餐饮集团” — 表示食品安全事故涉及的餐饮集团为某餐饮集团\"\n        ],\n        \"instance_logicexpression\": [\n            \"食品安全事故(某餐饮集团) → (EmergencyInsuranceAcceptance(InsuranceCompany) ∧ ClaimSettlement(InsuranceCompany))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“某餐饮集团” — 表示造成食品安全事故的责任单位为某餐饮集团\",\n            \"v=“受害顾客” — 表示受害人为受害顾客\"\n        ],\n        \"instance_logicexpression\": [\n            \"食品安全事故(某餐饮集团) ∧ 责任单位(某餐饮集团, 受害顾客) → (Compensate(受害顾客, 某餐饮集团) ∧ BearCosts(受害顾客, 某餐饮集团))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“李华” — 李华在食品安全事故应急管理和处置工作中作出突出贡献\",\n            \"i=“2023年A市食品污染事件” — 表示发生了食品安全事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyManagement(李华, 2023年A市食品污染事件) ∧ FoodSafetyIncident(2023年A市食品污染事件) ∧ OutstandingContribution(李华) → (Commend(李华) ∧ Reward(李华))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“张伟” — 张伟在食品安全事故应急管理和处置工作中作出突出贡献\",\n            \"i=“2023年B市食品中毒事件” — 表示发生了食品安全事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyManagement(张伟, 2023年B市食品中毒事件) ∧ FoodSafetyIncident(2023年B市食品中毒事件) ∧ OutstandingContribution(张伟) → (Commend(张伟) ∧ Reward(张伟))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“王芳” — 王芳在食品安全事故应急管理和处置工作中作出突出贡献\",\n            \"i=“2023年C市食品掺假事件” — 表示发生了食品安全事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyManagement(王芳, 2023年C市食品掺假事件) ∧ FoodSafetyIncident(2023年C市食品掺假事件) ∧ OutstandingContribution(王芳) → (Commend(王芳) ∧ Reward(王芳))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“赵强” — 赵强在食品安全事故应急管理和处置工作中作出突出贡献\",\n            \"i=“2023年D市食品过期事件” — 表示发生了食品安全事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyManagement(赵强, 2023年D市食品过期事件) ∧ FoodSafetyIncident(2023年D市食品过期事件) ∧ OutstandingContribution(赵强) → (Commend(赵强) ∧ Reward(赵强))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“食品中毒事件” — 表示食品安全事故为食品中毒事件\",\n            \"Subject=“食品公司A” — 表示责任单位为食品公司A\"\n        ],\n        \"instance_logicexpression\": [\n            \"DelayReport(“食品中毒事件”) ∨ FalseReport(“食品中毒事件”) ∨ ConcealReport(“食品中毒事件”) ∨ OmitReport(“食品中毒事件”) → HoldAccountable(“食品公司A”, “食品中毒事件”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“李经理” — 表示失职或渎职行为人为李经理\",\n            \"Incident=“食品污染事故” — 表示应急管理工作中的事故为食品污染事故\"\n        ],\n        \"instance_logicexpression\": [\n            \"DerelictionOfDuty(“李经理”) ∨ Misconduct(“李经理”) → HoldAccountable(“食品公司B”, “食品污染事故”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“食品掺假事件” — 表示食品安全事故为食品掺假事件\",\n            \"Subject=“食品工厂C” — 表示责任单位为食品工厂C\"\n        ],\n        \"instance_logicexpression\": [\n            \"Crime(“食品掺假事件”) → CriminalLiability(“食品工厂C”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“王主管” — 表示失职或渎职行为人为王主管\",\n            \"Incident=“食品过期销售事件” — 表示应急管理工作中的事故为食品过期销售事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"DerelictionOfDuty(“王主管”) ∨ Misconduct(“王主管”) → HoldAccountable(“超市X”, “食品过期销售事件”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“食品添加剂超标事件” — 表示食品安全事故为食品添加剂超标事件\",\n            \"Subject=“食品加工厂Y” — 表示责任单位为食品加工厂Y\"\n        ],\n        \"instance_logicexpression\": [\n            \"Crime(“食品添加剂超标事件”) → CriminalLiability(“食品加工厂Y”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=“台风” — 表示气象灾害为台风\",\n            \"Commander=“中国气象局气象服务工作领导小组” — 表示领导小组为指挥官\",\n            \"Department=“中国气象局应急管理办公室” — 表示局应急办为负责部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t (气象灾害(台风) → (Lead(中国气象局气象服务工作领导小组, 防范与应急处置(台风)) ∧ ResponsibleForEmergencyResponse(中国气象局应急管理办公室, 综合协调(台风))))\",\n            \"∀d ∀t (内设机构或直属单位(d) ∧ 应急响应任务(台风) → OrganizeEmergencyResponse(d, 台风))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“洪水” — 表示气象灾害为洪水\",\n            \"Commander=“中国气象局气象服务工作领导小组” — 表示领导小组为指挥官\",\n            \"Department=“中国气象局应急管理办公室” — 表示局应急办为负责部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t (气象灾害(洪水) → (Lead(中国气象局气象服务工作领导小组, 防范与应急处置(洪水)) ∧ ResponsibleForEmergencyResponse(中国气象局应急管理办公室, 综合协调(洪水))))\",\n            \"∀d ∀t (内设机构或直属单位(d) ∧ 应急响应任务(洪水) → OrganizeEmergencyResponse(d, 洪水))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“干旱” — 表示气象灾害为干旱\",\n            \"Commander=“中国气象局气象服务工作领导小组” — 表示领导小组为指挥官\",\n            \"Department=“中国气象局应急管理办公室” — 表示局应急办为负责部门\",\n            \"d=“气象预报中心” — 表示内设机构或直属单位为气象预报中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t (气象灾害(干旱) → (Lead(中国气象局气象服务工作领导小组, 防范与应急处置(干旱)) ∧ ResponsibleForEmergencyResponse(中国气象局应急管理办公室, 综合协调(干旱))))\",\n            \"∀d ∀t (内设机构或直属单位(气象预报中心) ∧ 应急响应任务(干旱) → OrganizeEmergencyResponse(气象预报中心, 干旱))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“冰雹” — 表示气象灾害为冰雹\",\n            \"Commander=“中国气象局气象服务工作领导小组” — 表示领导小组为指挥官\",\n            \"Department=“中国气象局应急管理办公室” — 表示局应急办为负责部门\",\n            \"d=“气候监测中心” — 表示内设机构或直属单位为气候监测中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t (气象灾害(冰雹) → (Lead(中国气象局气象服务工作领导小组, 防范与应急处置(冰雹)) ∧ ResponsibleForEmergencyResponse(中国气象局应急管理办公室, 综合协调(冰雹))))\",\n            \"∀d ∀t (内设机构或直属单位(气候监测中心) ∧ 应急响应任务(冰雹) → OrganizeEmergencyResponse(气候监测中心, 冰雹))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“中央气象灾害应急指示” — 表示党中央、国务院有关气象灾害应急工作的指示精神\",\n            \"服务：应急响应气象服务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (指示(“中央气象灾害应急指示”) → Implement(领导小组, “中央气象灾害应急指示”) ∧ Deploy(领导小组, 应急响应气象服务))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“气象决策服务报告” — 表示向党中央、国务院及有关部门提供的气象决策服务材料\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀m (气象决策服务材料(“气象决策服务报告”) → ReviewAndIssue(领导小组, “气象决策服务报告”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“国家气象局” — 表示进入应急响应状态的单位\",\n            \"团队：现场工作组\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀u (应急响应状态单位(“国家气象局”) → InspectAndGuide(领导小组, “国家气象局”) ∧ DecideToSend(领导小组, 现场工作组))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“应急物资和资金” — 表示应急处置所需的人员、物资、资金及技术装备等资源\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (应急处置资源(“应急物资和资金”) → CommandAndDispatch(领导小组, “应急物资和资金”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“重大气象灾害事件” — 表示气象灾害应急过程中其它重大突发事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (重大突发事件(“重大气象灾害事件”) → CommandAndHandle(领导小组, “重大气象灾害事件”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“月度天气会商” — 表示天气会商\",\n            \"会议：应急工作例会\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀m (天气会商(“月度天气会商”) ∨ 应急工作例会(“应急工作例会”) → AttendMeeting(领导小组, “月度天气会商”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Office=“局应急办” — 表示局应急办组织应急会商和综合研判\",\n            \"Team=“领导小组” — 表示局应急办向领导小组提出启动应急响应建议\"\n        ],\n        \"instance_logicexpression\": [\n            \"OrganizeConsultation(“局应急办”) ∧ ProposeRecommendation(“局应急办”, “领导小组”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Office=“局应急办” — 表示局应急办根据领导小组命令，统一组织、协调各单位气象灾害应急响应工作\",\n            \"Units=“各单位” — 表示局应急办协调的各单位\",\n            \"Resources=“应急物资” — 表示局应急办负责协调的应急物资\",\n            \"Resources=“资金” — 表示局应急办负责协调的资金\"\n        ],\n        \"instance_logicexpression\": [\n            \"OrganizeCoordination(“局应急办”, “各单位”) ∧ ResourceAllocation(“局应急办”, “应急物资”) ∧ ResourceAllocation(“局应急办”, “资金”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Office=“局应急办” — 表示局应急办向国务院办公厅及有关部门报送应急响应期间的决策服务信息\",\n            \"Recipient=“国务院办公厅” — 表示局应急办报送信息的接收方之一\",\n            \"Recipient=“有关部门” — 表示局应急办报送信息的接收方之一\"\n        ],\n        \"instance_logicexpression\": [\n            \"ReportInformation(“局应急办”, “国务院办公厅”) ∧ ReportInformation(“局应急办”, “有关部门”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Office=“局应急办” — 表示局应急办收集和汇总各相关应急情况\",\n            \"Situations=“各相关应急情况” — 表示局应急办收集汇总的应急情况\",\n            \"Team=“领导小组” — 表示局应急办向领导小组报告应急情况\"\n        ],\n        \"instance_logicexpression\": [\n            \"CollectSummarize(“局应急办”, “各相关应急情况”) ∧ ReportSituation(“局应急办”, “领导小组”) ∧ EditSummary(“局应急办”) ∧ UrgeWork(“局应急办”, “各单位”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Office=“局应急办” — 表示局应急办组织起草气象应急响应工作方案\",\n            \"Office=“局应急办” — 表示局应急办组织起草应急响应工作总结\"\n        ],\n        \"instance_logicexpression\": [\n            \"DraftPlan(“局应急办”) ∧ DraftSummary(“局应急办”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Office=“局应急办” — 表示局应急办在应急响应期间，组织、协调其他重大突发事件的处置\"\n        ],\n        \"instance_logicexpression\": [\n            \"HandleEvents(“局应急办”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Office=“局应急办” — 表示局应急办完成领导小组交办的其他事项\",\n            \"Tasks=“其他事项” — 表示领导小组交办的其他事项\"\n        ],\n        \"instance_logicexpression\": [\n            \"CompleteTasks(“局应急办”, “其他事项”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“台风预警” — 表示气象灾害的预报预警情况为台风预警\",\n            \"DepartmentA=“减灾司” — 表示参与部门为减灾司\",\n            \"DepartmentB=“局应急办” — 表示参与部门为局应急办\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (MeteorologicalDisasterForecast(台风预警) → (EmergencyConsultation(减灾司, 局应急办) ∧ ComprehensiveAssessment(减灾司, 局应急办)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“减灾司” — 表示制作服务材料的部门为减灾司\"\n        ],\n        \"instance_logicexpression\": [\n            \"ProduceServiceMaterials(减灾司)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“减灾司” — 表示开展服务的部门为减灾司\",\n            \"ServiceType=“公众气象服务” — 表示服务类型为公众气象服务\"\n        ],\n        \"instance_logicexpression\": [\n            \"ConductService(减灾司, 公众气象服务)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“减灾司” — 表示开展服务的部门为减灾司\",\n            \"ServiceType=“专业气象服务” — 表示服务类型为专业气象服务\"\n        ],\n        \"instance_logicexpression\": [\n            \"ConductService(减灾司, 专业气象服务)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“减灾司” — 表示负责灾情调查的部门为减灾司\"\n        ],\n        \"instance_logicexpression\": [\n            \"DisasterInvestigation(减灾司)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“减灾司” — 表示负责信息收集的部门为减灾司\"\n        ],\n        \"instance_logicexpression\": [\n            \"CollectInformation(减灾司)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“减灾司” — 表示负责效益评估的部门为减灾司\"\n        ],\n        \"instance_logicexpression\": [\n            \"BenefitAssessment(减灾司)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“减灾司” — 表示按要求参加会商的部门为减灾司\"\n        ],\n        \"instance_logicexpression\": [\n            \"AttendConsultation(减灾司)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“减灾司” — 表示完成其他任务的部门为减灾司\"\n        ],\n        \"instance_logicexpression\": [\n            \"CompleteOtherTasks(减灾司)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Department=“预报司” — 表示负责部门为预报司\",\n            \"Task=“气象灾害应急预报预警任务” — 表示预报司负责落实的任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"ResponsibleForImplementation(预报司, 气象灾害应急预报预警任务)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“预报司” — 表示负责部门为预报司\",\n            \"Information=“气象灾害实况预报预警及风险评估信息” — 表示预报司负责制作和汇总的信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"ProduceAndSummarize(预报司, 气象灾害实况预报预警及风险评估信息)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“预报司” — 表示部门为预报司\",\n            \"OtherDepartment=“观测司” — 表示另一个部门为观测司\",\n            \"Requirement=“应急加密和移动观测需求” — 表示预报司向观测司提出的需求\"\n        ],\n        \"instance_logicexpression\": [\n            \"需要应急加密和移动观测 → Request(预报司, 观测司, 应急加密和移动观测需求)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“预报司” — 表示负责部门为预报司\",\n            \"Activity=“应急响应期间加密天气预报预测会商” — 表示预报司组织协调的活动\"\n        ],\n        \"instance_logicexpression\": [\n            \"OrganizeAndCoordinate(预报司, 应急响应期间加密天气预报预测会商)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“预报司” — 表示负责部门为预报司\",\n            \"Activity=“重大灾害天气联防” — 表示预报司组织协调的活动\"\n        ],\n        \"instance_logicexpression\": [\n            \"OrganizeAndCoordinate(预报司, 重大灾害天气联防)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“预报司” — 表示负责部门为预报司\",\n            \"Activity=“天气会商和应急工作例会” — 表示预报司参加的活动\"\n        ],\n        \"instance_logicexpression\": [\n            \"ParticipateInActivity(预报司, 天气会商和应急工作例会)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Department=“预报司” — 表示负责部门为预报司\",\n            \"Task=“领导小组交办的其他任务” — 表示预报司完成的其他任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"CompleteOtherTasks(预报司, 领导小组交办的其他任务)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“观测司” — 表示观测司负责相关任务\",\n            \"m=“气象观测资料” — 表示观测司负责收集、传输和处理的资料类型\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀m (观测司(观测司) → (OrganizeCollection(观测司, 气象观测资料) ∧ OrganizeTransmission(观测司, 气象观测资料) ∧ OrganizeProcessing(观测司, 气象观测资料)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“预报司” — 表示预报司提出需求\",\n            \"观测司=“观测司” — 表示观测司负责响应需求\"\n        ],\n        \"instance_logicexpression\": [\n            \"预报司需求(预报司) → (EmergencyIntensiveObservation(观测司) ∧ MobileObservation(观测司) ∧ OrganizeTransmission(观测司, 预报司需求))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“观测司” — 表示观测司负责气象装备的运行、监控、维修和调配\"\n        ],\n        \"instance_logicexpression\": [\n            \"OrganizeEquipmentOperation(观测司) ∧ OrganizeEquipmentMonitoring(观测司) ∧ OrganizeEquipmentMaintenance(观测司) ∧ OrganizeEquipmentAllocation(观测司)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“观测司” — 表示观测司按要求参加天气会商和应急工作例会\"\n        ],\n        \"instance_logicexpression\": [\n            \"ParticipateInWeatherConsultation(观测司) ∧ ParticipateInEmergencyMeeting(观测司)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“观测司” — 表示观测司完成领导小组交办的其他任务\",\n            \"t=“特定任务” — 表示领导小组交办的其他具体任务\"\n        ],\n        \"instance_logicexpression\": [\n            \"领导小组任务(特定任务) → CompleteOtherTasks(观测司, 特定任务)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“气象灾害应急工作指示” — 表示党中央、国务院有关气象灾害应急工作的指示\",\n            \"t=“内部宣传” — 表示办公室负责的内部宣传报道\",\n            \"t=“外部宣传” — 表示办公室负责的外部宣传报道\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Directive(“气象灾害应急工作指示”) → CoordinateImplement(办公室, “气象灾害应急工作指示”))\",\n            \"∀t (Type(“内部宣传”) → Report(办公室, “内部宣传”))\",\n            \"∀t (Type(“外部宣传”) → Report(办公室, “外部宣传”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“新闻发布” — 表示办公室负责的新闻发布工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"OrganizePressRelease(办公室)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“现场报道” — 表示办公室负责的现场报道工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"CoordinateOnsiteReporting(办公室)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“应急科普宣传” — 表示办公室负责的应急科普宣传工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"OrganizeEmergencySciencePopularization(办公室)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“天气会商” — 表示办公室按要求参加的天气会商\"\n        ],\n        \"instance_logicexpression\": [\n            \"AttendWeatherConsultation(办公室)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“应急工作例会” — 表示办公室按要求参加的应急工作例会\"\n        ],\n        \"instance_logicexpression\": [\n            \"AttendEmergencyMeeting(办公室)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“其他任务1” — 表示领导小组交办的其他任务1\",\n            \"t=“其他任务2” — 表示领导小组交办的其他任务2\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t (Task(“其他任务1”) → CompleteOtherTasks(办公室, “其他任务1”))\",\n            \"∀t (Task(“其他任务2”) → CompleteOtherTasks(办公室, “其他任务2”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“气象中心” — 表示气象中心根据职责分工承担的责任\",\n            \"Responsibility=“灾害监测、预报预警、气象服务” — 表示气象中心的责任\"\n        ],\n        \"instance_logicexpression\": [\n            \"DutyDivision(气象中心, 灾害监测、预报预警、气象服务) → (DisasterMonitoring(气象中心) ∧ ForecastWarning(气象中心) ∧ MeteorologicalService(气象中心))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“气候中心” — 表示气候中心根据职责分工承担的责任\",\n            \"Responsibility=“灾害监测、预报预警、气象服务” — 表示气候中心的责任\"\n        ],\n        \"instance_logicexpression\": [\n            \"DutyDivision(气候中心, 灾害监测、预报预警、气象服务) → (DisasterMonitoring(气候中心) ∧ ForecastWarning(气候中心) ∧ MeteorologicalService(气候中心))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“卫星中心” — 表示卫星中心根据职责分工承担的责任\",\n            \"Responsibility=“灾害监测、预报预警、气象服务” — 表示卫星中心的责任\"\n        ],\n        \"instance_logicexpression\": [\n            \"DutyDivision(卫星中心, 灾害监测、预报预警、气象服务) → (DisasterMonitoring(卫星中心) ∧ ForecastWarning(卫星中心) ∧ MeteorologicalService(卫星中心))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“信息中心” — 表示信息中心根据职责分工承担的责任\",\n            \"Responsibility=“灾害监测、预报预警、气象服务” — 表示信息中心的责任\"\n        ],\n        \"instance_logicexpression\": [\n            \"DutyDivision(信息中心, 灾害监测、预报预警、气象服务) → (DisasterMonitoring(信息中心) ∧ ForecastWarning(信息中心) ∧ MeteorologicalService(信息中心))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“探测中心” — 表示探测中心根据职责分工承担的责任\",\n            \"Responsibility=“灾害监测、预报预警、气象服务” — 表示探测中心的责任\"\n        ],\n        \"instance_logicexpression\": [\n            \"DutyDivision(探测中心, 灾害监测、预报预警、气象服务) → (DisasterMonitoring(探测中心) ∧ ForecastWarning(探测中心) ∧ MeteorologicalService(探测中心))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“公共服务中心” — 表示公共服务中心根据职责分工承担的责任\",\n            \"Responsibility=“灾害监测、预报预警、气象服务” — 表示公共服务中心的责任\"\n        ],\n        \"instance_logicexpression\": [\n            \"DutyDivision(公共服务中心, 灾害监测、预报预警、气象服务) → (DisasterMonitoring(公共服务中心) ∧ ForecastWarning(公共服务中心) ∧ MeteorologicalService(公共服务中心))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“气科院” — 表示气科院根据应急响应要求承担的责任\",\n            \"Responsibility=“科技支撑、新闻宣传、影视服务” — 表示气科院的责任\"\n        ],\n        \"instance_logicexpression\": [\n            \"DutyDivision(气科院, 科技支撑、新闻宣传、影视服务) → (TechSupport(气科院) ∧ PressPromotion(气科院) ∧ FilmService(气科院))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“报社” — 表示报社根据应急响应要求承担的责任\",\n            \"Responsibility=“科技支撑、新闻宣传、影视服务” — 表示报社的责任\"\n        ],\n        \"instance_logicexpression\": [\n            \"DutyDivision(报社, 科技支撑、新闻宣传、影视服务) → (TechSupport(报社) ∧ PressPromotion(报社) ∧ FilmService(报社))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“华风集团” — 表示华风集团根据应急响应要求承担的责任\",\n            \"Responsibility=“科技支撑、新闻宣传、影视服务” — 表示华风集团的责任\"\n        ],\n        \"instance_logicexpression\": [\n            \"DutyDivision(华风集团, 科技支撑、新闻宣传、影视服务) → (TechSupport(华风集团) ∧ PressPromotion(华风集团) ∧ FilmService(华风集团))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“人事司” — 表示人事司根据实际需要或领导小组的要求组建专家组\",\n            \"r=“灾情应急响应” — 表示实际需要或领导小组的要求为灾情应急响应\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀r ((FormExpertGroup(人事司, 灾情应急响应) ∨ FormExpertGroup(计财司, 灾情应急响应)) → (DisasterInvestigation(气象部门) ∧ EmergencyRelief(气象部门) ∧ FinancialMaterialSupport(气象部门)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“计财司” — 表示计财司根据实际需要或领导小组的要求组建专家组\",\n            \"r=“灾后重建资金调配” — 表示实际需要或领导小组的要求为灾后重建资金调配\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀r ((FormExpertGroup(人事司, 灾后重建资金调配) ∨ FormExpertGroup(计财司, 灾后重建资金调配)) → (DisasterInvestigation(气象部门) ∧ EmergencyRelief(气象部门) ∧ FinancialMaterialSupport(气象部门)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“机关服务中心” — 表示服务中心提供水电保障\"\n        ],\n        \"instance_logicexpression\": [\n            \"UtilitiesSupport(机关服务中心)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“机关服务中心” — 表示服务中心提供医疗卫生服务\"\n        ],\n        \"instance_logicexpression\": [\n            \"MedicalService(机关服务中心)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“机关服务中心” — 表示服务中心安排食宿\"\n        ],\n        \"instance_logicexpression\": [\n            \"AccommodationArrangement(机关服务中心)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“机关服务中心” — 表示服务中心进行安全保卫工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"SecurityProtection(机关服务中心)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“消防局” — 表示消防局遵循应急响应原则\",\n            \"Principle=“分灾响应” — 表示消防局遵循分灾响应原则\",\n            \"Principle=“分级负责” — 表示消防局遵循分级负责原则\",\n            \"Principle=“上下联动” — 表示消防局遵循上下联动原则\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (FollowPrinciple(消防局, 分灾响应) ∧ FollowPrinciple(消防局, 分级负责) ∧ FollowPrinciple(消防局, 上下联动) → EmergencyPlanAndResponsibility(消防局))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“医院” — 表示医院遵循应急响应原则\",\n            \"Principle=“分灾响应” — 表示医院遵循分灾响应原则\",\n            \"Principle=“分级负责” — 表示医院遵循分级负责原则\",\n            \"Principle=“上下联动” — 表示医院遵循上下联动原则\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (FollowPrinciple(医院, 分灾响应) ∧ FollowPrinciple(医院, 分级负责) ∧ FollowPrinciple(医院, 上下联动) → EmergencyPlanAndResponsibility(医院))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“电力公司” — 表示电力公司遵循应急响应原则\",\n            \"Principle=“分灾响应” — 表示电力公司遵循分灾响应原则\",\n            \"Principle=“分级负责” — 表示电力公司遵循分级负责原则\",\n            \"Principle=“上下联动” — 表示电力公司遵循上下联动原则\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (FollowPrinciple(电力公司, 分灾响应) ∧ FollowPrinciple(电力公司, 分级负责) ∧ FollowPrinciple(电力公司, 上下联动) → EmergencyPlanAndResponsibility(电力公司))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“市政府” — 表示市政府遵循应急响应原则\",\n            \"Principle=“分灾响应” — 表示市政府遵循分灾响应原则\",\n            \"Principle=“分级负责” — 表示市政府遵循分级负责原则\",\n            \"Principle=“上下联动” — 表示市政府遵循上下联动原则\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o (FollowPrinciple(市政府, 分灾响应) ∧ FollowPrinciple(市政府, 分级负责) ∧ FollowPrinciple(市政府, 上下联动) → EmergencyPlanAndResponsibility(市政府))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Level=IV — 表示IV级应急响应\",\n            \"Level=III — 表示III级应急响应\",\n            \"Level=II — 表示II级应急响应\",\n            \"Level=I — 表示I级应急响应\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseLevel(IV) ∧ EmergencyResponseLevel(III) ∧ EmergencyResponseLevel(II) ∧ EmergencyResponseLevel(I) ∧ ¬∃L (EmergencyResponseLevel(L) ∧ L > I)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“台风来袭” — 表示应急会商的实际情况是台风来袭\",\n            \"Document=《重大气象灾害应急响应启动等级》 — 表示参照标准为《重大气象灾害应急响应启动等级》\",\n            \"Factor1=“预警信号” — 表示考虑因素之一为预警信号\",\n            \"Factor2=“可能影响程度” — 表示考虑因素之一为可能影响程度\",\n            \"Factor3=“临近实况监测” — 表示考虑因素之一为临近实况监测\",\n            \"Factor4=“发生灾害范围” — 表示考虑因素之一为发生灾害范围\",\n            \"Factor5=“公众关注程度” — 表示考虑因素之一为公众关注程度\",\n            \"Recommendation=“启动一级应急响应” — 表示提出的具体建议为启动一级应急响应\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (EmergencyConsultation(台风来袭) ∧ ReferenceStandard(重大气象灾害应急响应启动等级) → (ConsiderFactor(预警信号) ∧ ConsiderFactor(可能影响程度) ∧ ConsiderFactor(临近实况监测) ∧ ConsiderFactor(发生灾害范围) ∧ ConsiderFactor(公众关注程度) → ProposeRecommendation(启动一级应急响应)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“洪水灾害” — 表示应急会商的实际情况是洪水灾害\",\n            \"Document=《重大气象灾害应急响应启动等级》 — 表示参照标准为《重大气象灾害应急响应启动等级》\",\n            \"Factor1=“预警信号” — 表示考虑因素之一为预警信号\",\n            \"Factor2=“可能影响程度” — 表示考虑因素之一为可能影响程度\",\n            \"Factor3=“临近实况监测” — 表示考虑因素之一为临近实况监测\",\n            \"Factor4=“发生灾害范围” — 表示考虑因素之一为发生灾害范围\",\n            \"Factor5=“公众关注程度” — 表示考虑因素之一为公众关注程度\",\n            \"Recommendation=“启动二级应急响应” — 表示提出的具体建议为启动二级应急响应\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (EmergencyConsultation(洪水灾害) ∧ ReferenceStandard(重大气象灾害应急响应启动等级) → (ConsiderFactor(预警信号) ∧ ConsiderFactor(可能影响程度) ∧ ConsiderFactor(临近实况监测) ∧ ConsiderFactor(发生灾害范围) ∧ ConsiderFactor(公众关注程度) → ProposeRecommendation(启动二级应急响应)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“地震灾害” — 表示应急会商的实际情况是地震灾害\",\n            \"Document=《重大气象灾害应急响应启动等级》 — 表示参照标准为《重大气象灾害应急响应启动等级》\",\n            \"Factor1=“预警信号” — 表示考虑因素之一为预警信号\",\n            \"Factor2=“可能影响程度” — 表示考虑因素之一为可能影响程度\",\n            \"Factor3=“临近实况监测” — 表示考虑因素之一为临近实况监测\",\n            \"Factor4=“发生灾害范围” — 表示考虑因素之一为发生灾害范围\",\n            \"Factor5=“公众关注程度” — 表示考虑因素之一为公众关注程度\",\n            \"Recommendation=“启动三级应急响应” — 表示提出的具体建议为启动三级应急响应\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (EmergencyConsultation(地震灾害) ∧ ReferenceStandard(重大气象灾害应急响应启动等级) → (ConsiderFactor(预警信号) ∧ ConsiderFactor(可能影响程度) ∧ ConsiderFactor(临近实况监测) ∧ ConsiderFactor(发生灾害范围) ∧ ConsiderFactor(公众关注程度) → ProposeRecommendation(启动三级应急响应)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"灾害类型：台风\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃w (IssueWarning(中央气象台, 台风) ∧ (w = 台风))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"灾害类型：暴雨\",\n            \"损失：严重损失\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃d (OccurDisaster(暴雨, 严重损失) ∧ 气象相关(暴雨))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"灾害类型：暴雪\",\n            \"地区：山区\",\n            \"时间：冬季\",\n            \"人群：游客\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃s ∃t ∃g (SensitiveImpact(暴雪, 山区, 冬季, 游客) ∧ 社会反应(暴雪))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"级别：二级\",\n            \"范围：全省\"\n        ],\n        \"instance_logicexpression\": [\n            \"AdjustEmergencyResponse(二级, 全省)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [],\n        \"instance_logicexpression\": [\n            \"LiftEmergencyResponse\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“局领导” — 表示分管预报服务的局领导\",\n            \"e=“局应急办主任” — 表示局应急办主任\",\n            \"d=“减灾司司长” — 表示减灾司司长\",\n            \"m=“气象中心主任” — 表示气象中心主任\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p ∀e ∀d ∀m (EmergencyConsultationResult(['局领导', '局应急办主任', '减灾司司长', '气象中心主任']) → JointlyDecide(['局领导', '局应急办主任', '减灾司司长', '气象中心主任'], ActivateEmergencyResponse))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“副局长” — 表示分管预报服务的副局长\",\n            \"e=“应急办副主任” — 表示局应急办副主任\",\n            \"d=“减灾处副处长” — 表示减灾处副处长\",\n            \"m=“气象中心副主任” — 表示气象中心副主任\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p ∀e ∀d ∀m (EmergencyConsultationResult(['副局长', '应急办副主任', '减灾处副处长', '气象中心副主任']) → JointlyDecide(['副局长', '应急办副主任', '减灾处副处长', '气象中心副主任'], ActivateEmergencyResponse))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“局长” — 表示局长\",\n            \"e=“应急办主任” — 表示局应急办主任\",\n            \"d=“减灾司司长” — 表示减灾司司长\",\n            \"m=“气象中心主任” — 表示气象中心主任\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p ∀e ∀d ∀m (EmergencyConsultationResult(['局长', '应急办主任', '减灾司司长', '气象中心主任']) → JointlyDecide(['局长', '应急办主任', '减灾司司长', '气象中心主任'], ActivateEmergencyResponse))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“副局长” — 表示分管预报服务的副局长\",\n            \"e=“应急办副主任” — 表示局应急办副主任\",\n            \"d=“减灾司副司长” — 表示减灾司副司长\",\n            \"m=“气象中心预报员” — 表示气象中心预报员\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p ∀e ∀d ∀m (EmergencyConsultationResult(['副局长', '应急办副主任', '减灾司副司长', '气象中心预报员']) → JointlyDecide(['副局长', '应急办副主任', '减灾司副司长', '气象中心预报员'], ActivateEmergencyResponse))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“局应急办” — 表示起草命令的办公室\",\n            \"c=“应急响应命令A” — 表示应急响应命令A\",\n            \"l=“局长” — 表示局领导为局长\",\n            \"Type=“启动” — 表示应急响应的类型为启动\",\n            \"Level=“Ⅰ级” — 表示应急响应的级别为Ⅰ级\",\n            \"Scope=“全市范围” — 表示应急响应的范围为全市\"\n        ],\n        \"instance_logicexpression\": [\n            \"DraftCommand(局应急办, 应急响应命令A) → ∃l (SignCommand(l, 应急响应命令A))\",\n            \"EmergencyResponse(应急响应命令A, 启动, Ⅰ级, 全市范围)\",\n            \"Level(应急响应命令A, Ⅰ) → ∃d (SignCommand(d, 应急响应命令A) ∧ Director(d))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“局应急办” — 表示起草命令的办公室\",\n            \"c=“应急响应命令B” — 表示应急响应命令B\",\n            \"l=“副局长” — 表示局领导为副局长\",\n            \"Type=“变更” — 表示应急响应的类型为变更\",\n            \"Level=“Ⅲ级” — 表示应急响应的级别为Ⅲ级\",\n            \"Scope=“特定区域” — 表示应急响应的范围为特定区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"DraftCommand(局应急办, 应急响应命令B) → ∃l (SignCommand(l, 应急响应命令B))\",\n            \"EmergencyResponse(应急响应命令B, 变更, Ⅲ级, 特定区域)\",\n            \"Level(应急响应命令B, Ⅲ) → ∃d (SignCommand(d, 应急响应命令B) ∧ DeputyDirector(d))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“局应急办” — 表示起草命令的办公室\",\n            \"c=“应急响应命令C” — 表示应急响应命令C\",\n            \"l=“局长” — 表示局领导为局长\",\n            \"Type=“解除” — 表示应急响应的类型为解除\",\n            \"Level=“Ⅱ级” — 表示应急响应的级别为Ⅱ级\",\n            \"Scope=“局部区域” — 表示应急响应的范围为局部区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"DraftCommand(局应急办, 应急响应命令C) → ∃l (SignCommand(l, 应急响应命令C))\",\n            \"EmergencyResponse(应急响应命令C, 解除, Ⅱ级, 局部区域)\",\n            \"Level(应急响应命令C, Ⅱ) → ∃d (SignCommand(d, 应急响应命令C) ∧ Director(d))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“局应急办” — 表示起草命令的办公室\",\n            \"c=“应急响应命令D” — 表示应急响应命令D\",\n            \"l=“副局长” — 表示局领导为副局长\",\n            \"Type=“启动” — 表示应急响应的类型为启动\",\n            \"Level=“Ⅳ级” — 表示应急响应的级别为Ⅳ级\",\n            \"Scope=“全区域” — 表示应急响应的范围为全区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"DraftCommand(局应急办, 应急响应命令D) → ∃l (SignCommand(l, 应急响应命令D))\",\n            \"EmergencyResponse(应急响应命令D, 启动, Ⅳ级, 全区域)\",\n            \"Level(应急响应命令D, Ⅳ) → ∃d (SignCommand(d, 应急响应命令D) ∧ DeputyDirector(d))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d1=“台风” — 表示台风这种气象灾害类型\",\n            \"d2=“暴雨” — 表示暴雨这种气象灾害类型\",\n            \"l1=“二级” — 表示台风适合的应急响应级别为二级\",\n            \"l2=“三级” — 表示暴雨适合的应急响应级别为三级\"\n        ],\n        \"instance_logicexpression\": [\n            \"ConcurrentDisasters(台风, 暴雨) → (SuitableLevel(台风, 二级) ∧ SuitableLevel(暴雨, 三级) → EmergencyResponse(台风, 三))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“高温” — 表示高温这种气象灾害类型\",\n            \"l1=“一级” — 表示高温当前的应急响应级别为一级\"\n        ],\n        \"instance_logicexpression\": [\n            \"MeteorologicalDisaster(高温) → (EmergencyResponse(高温, 一级) → (∀l (一级 < l → EmergencyResponse(高温, l) → EmergencyResponse(高温, l+1)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“寒潮” — 表示寒潮这种气象灾害类型\",\n            \"l1=“二级” — 表示寒潮当前的应急响应级别为二级\",\n            \"l=“三级” — 表示存在一个级别三级，且三级小于寒潮的最高级别\"\n        ],\n        \"instance_logicexpression\": [\n            \"MeteorologicalDisaster(寒潮) → (EmergencyResponse(寒潮, 二级) ∧ (∃l (二级 < 三级 ∧ 三级 < maxLevel)) → EmergencyResponse(寒潮, maxLevel))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d1=“冰雹” — 表示冰雹这种气象灾害类型\",\n            \"d2=“龙卷风” — 表示龙卷风这种气象灾害类型\",\n            \"l1=“一级” — 表示冰雹适合的应急响应级别为一级\",\n            \"l2=“一级” — 表示龙卷风适合的应急响应级别为一级\"\n        ],\n        \"instance_logicexpression\": [\n            \"ConcurrentDisasters(冰雹, 龙卷风) → (SuitableLevel(冰雹, 一级) ∧ SuitableLevel(龙卷风, 一级) → EmergencyResponse(冰雹, 一级))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“洪水” — 表示洪水这种气象灾害类型\",\n            \"l1=“三级” — 表示洪水当前的应急响应级别为三级\"\n        ],\n        \"instance_logicexpression\": [\n            \"MeteorologicalDisaster(洪水) → (EmergencyResponse(洪水, 三级) → (∀l (三级 < l → EmergencyResponse(洪水, l) → EmergencyResponse(洪水, l+1)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"m=“北京市气象局” — 表示应急响应的气象局为北京市气象局\",\n            \"r=“启动三级应急响应” — 表示领导小组或当地政府对北京市气象局的要求\",\n            \"p=“北京市气象局三级应急预案” — 表示北京市气象局的应急预案\",\n            \"s=“强降雨天气” — 表示北京市气象局面临的实际情况\",\n            \"Level=3 — 表示应急响应级别为三级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀m (EmergencyResponseActivation(北京市气象局) → (LeadershipGroupRequirement(北京市气象局, 启动三级应急响应) ∨ LocalGovernmentRequirement(北京市气象局, 启动三级应急响应)) ∧ (EmergencyPlan(北京市气象局, 北京市气象局三级应急预案) ∧ ActualSituation(北京市气象局, 强降雨天气)) ∧ (Level ≥ 3))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“上海市气象局” — 表示应急响应的气象局为上海市气象局\",\n            \"l=2 — 表示应急响应级别将从二级降级\",\n            \"Downgrade=“应急响应降级至二级” — 表示上海市气象局将应急响应级别降级的行动\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀m (EmergencyResponseDowngrade(上海市气象局, 2) → ReportToEmergencyOffice(上海市气象局, 应急响应降级至二级) ∧ LeadershipGroupApproval(上海市气象局, 应急响应降级至二级))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“广州市气象局” — 表示应急响应的气象局为广州市气象局\",\n            \"Removal=“解除应急响应” — 表示广州市气象局解除应急响应的行动\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀m (EmergencyResponseRemoval(广州市气象局) → ReportToEmergencyOffice(广州市气象局, 解除应急响应) ∧ LeadershipGroupApproval(广州市气象局, 解除应急响应))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"m=“深圳市气象局” — 表示应急响应的气象局为深圳市气象局\",\n            \"r=“启动一级应急响应” — 表示领导小组或当地政府对深圳市气象局的要求\",\n            \"p=“深圳市气象局一级应急预案” — 表示深圳市气象局的应急预案\",\n            \"s=“台风红色预警” — 表示深圳市气象局面临的实际情况\",\n            \"Level=1 — 表示应急响应级别为一级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀m (EmergencyResponseActivation(深圳市气象局) → (LeadershipGroupRequirement(深圳市气象局, 启动一级应急响应) ∨ LocalGovernmentRequirement(深圳市气象局, 启动一级应急响应)) ∧ (EmergencyPlan(深圳市气象局, 深圳市气象局一级应急预案) ∧ ActualSituation(深圳市气象局, 台风红色预警)) ∧ (Level ≥ 1))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“IV级应急响应命令” — 表示应急响应的启动或变更命令为IV级\",\n            \"Office=“局应急办” — 表示局应急办\",\n            \"Recipient=“有关省(区、市)气象局、直属单位和内设机构” — 表示传达命令的接收单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (EmergencyResponseActivation(“IV级应急响应命令”) → (OnDuty(局应急办) ∧ MonitorWeather(局应急办)))\",\n            \"∀c (EmergencyResponseActivation(“IV级应急响应命令”) → (ConveyCommand(局应急办, 有关省(区、市)气象局、直属单位和内设机构, “IV级应急响应命令”)))\",\n            \"∀c (EmergencyResponseActivation(“IV级应急响应命令”) → (OrganizePromotion(办公室) ∧ ReleaseDynamics(办公室)))\",\n            \"∀c (EmergencyResponseActivation(“IV级应急响应命令”) → (ReportSituation(局应急办, 国务院应急办) ∧ CreateInformation(局应急办)))\",\n            \"∀c (EmergencyResponseActivation(“IV级应急响应命令”) → (NotifySituation(局应急办, 领导小组) ∧ AnalyzeWeather(减灾司)))\",\n            \"∀c (EmergencyResponseActivation(“IV级应急响应命令”) → (ProposeRecommendations(减灾司, 局应急办) ∧ FullDayEmergencyDuty(省（区、市）气象局) ∧ LeadershipDuty(省（区、市）气象局)))\",\n            \"∀c (EmergencyResponseActivation(“IV级应急响应命令”) → (ReportImportantSituation(省（区、市）气象局)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“III级应急响应命令” — 表示应急响应的启动或变更命令为III级\",\n            \"Office=“局应急办” — 表示局应急办\",\n            \"Recipient=“有关省(区、市)气象局、直属单位和内设机构” — 表示传达命令的接收单位\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (EmergencyResponseActivation(“III级应急响应命令”) → (OnDuty(局应急办) ∧ MonitorWeather(局应急办)))\",\n            \"∀c (EmergencyResponseActivation(“III级应急响应命令”) → (ConveyCommand(局应急办, 有关省(区、市)气象局、直属单位和内设机构, “III级应急响应命令”)))\",\n            \"∀c (EmergencyResponseActivation(“III级应急响应命令”) → (OrganizePromotion(办公室) ∧ ReleaseDynamics(办公室)))\",\n            \"∀c (EmergencyResponseActivation(“III级应急响应命令”) → (ReportSituation(局应急办, 国务院应急办) ∧ CreateInformation(局应急办)))\",\n            \"∀c (EmergencyResponseActivation(“III级应急响应命令”) → (NotifySituation(局应急办, 领导小组) ∧ AnalyzeWeather(减灾司)))\",\n            \"∀c (EmergencyResponseActivation(“III级应急响应命令”) → (ProposeRecommendations(减灾司, 局应急办) ∧ FullDayEmergencyDuty(省（区、市）气象局) ∧ LeadershipDuty(省（区、市）气象局)))\",\n            \"∀c (EmergencyResponseActivation(“III级应急响应命令”) → (ReportImportantSituation(省（区、市）气象局)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“台风预警” — 表示通过媒介公布的内容为台风预警\",\n            \"Medium=“电视直播” — 表示信息公布的形式为电视直播\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (Publish(p) → Timely(p) ∧ Accurate(p) ∧ Objective(p) ∧ Comprehensive(p))\",\n            \"∀p (Publish(p) → (TVLive(p) ∨ PressRelease(p) ∨ OnSiteReport(p) ∨ Interview(p) ∨ PressConference(p)))\",\n            \"∀p (Publish(p) → (DisasterType(p) ∧ Intensity(p) ∧ ImpactRange(p) ∧ Trend(p) ∧ EmergencyResponse(p) ∧ ServiceWork(p)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“洪水新闻通稿” — 表示通过媒介公布的内容为洪水新闻通稿\",\n            \"Medium=“发布新闻通稿” — 表示信息公布的形式为发布新闻通稿\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (Publish(p) → Timely(p) ∧ Accurate(p) ∧ Objective(p) ∧ Comprehensive(p))\",\n            \"∀p (Publish(p) → (TVLive(p) ∨ PressRelease(p) ∨ OnSiteReport(p) ∨ Interview(p) ∨ PressConference(p)))\",\n            \"∀p (Publish(p) → (DisasterType(p) ∧ Intensity(p) ∧ ImpactRange(p) ∧ Trend(p) ∧ EmergencyResponse(p) ∧ ServiceWork(p)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“地震现场报道” — 表示通过媒介公布的内容为地震现场报道\",\n            \"Medium=“组织现场报道” — 表示信息公布的形式为组织现场报道\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (Publish(p) → Timely(p) ∧ Accurate(p) ∧ Objective(p) ∧ Comprehensive(p))\",\n            \"∀p (Publish(p) → (TVLive(p) ∨ PressRelease(p) ∨ OnSiteReport(p) ∨ Interview(p) ∨ PressConference(p)))\",\n            \"∀p (Publish(p) → (DisasterType(p) ∧ Intensity(p) ∧ ImpactRange(p) ∧ Trend(p) ∧ EmergencyResponse(p) ∧ ServiceWork(p)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“干旱记者采访” — 表示通过媒介公布的内容为干旱记者采访\",\n            \"Medium=“接受记者采访” — 表示信息公布的形式为接受记者采访\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (Publish(p) → Timely(p) ∧ Accurate(p) ∧ Objective(p) ∧ Comprehensive(p))\",\n            \"∀p (Publish(p) → (TVLive(p) ∨ PressRelease(p) ∨ OnSiteReport(p) ∨ Interview(p) ∨ PressConference(p)))\",\n            \"∀p (Publish(p) → (DisasterType(p) ∧ Intensity(p) ∧ ImpactRange(p) ∧ Trend(p) ∧ EmergencyResponse(p) ∧ ServiceWork(p)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“暴雨新闻发布会” — 表示通过媒介公布的内容为暴雨新闻发布会\",\n            \"Medium=“举行新闻发布会” — 表示信息公布的形式为举行新闻发布会\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (Publish(p) → Timely(p) ∧ Accurate(p) ∧ Objective(p) ∧ Comprehensive(p))\",\n            \"∀p (Publish(p) → (TVLive(p) ∨ PressRelease(p) ∨ OnSiteReport(p) ∨ Interview(p) ∨ PressConference(p)))\",\n            \"∀p (Publish(p) → (DisasterType(p) ∧ Intensity(p) ∧ ImpactRange(p) ∧ Trend(p) ∧ EmergencyResponse(p) ∧ ServiceWork(p)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“指挥官A” — 表示指挥官A签署了应急响应解除命令\",\n            \"u=“单位X” — 表示应急响应单位X\"\n        ],\n        \"instance_logicexpression\": [\n            \"SignOffEmergencyResponse(指挥官A) → ∀u (解除应急状态(单位X) ∧ ReturnToNormalOperation(单位X))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=IV — 表示IV级应急响应终止\",\n            \"u=“单位Y” — 表示应急响应单位Y\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseTerminated(IV) ∧ (IV=IV ∨ IV=III) → ∀u Summarize(单位Y)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=I — 表示I级应急响应终止\",\n            \"u=“单位Z” — 表示应急响应单位Z\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseTerminated(I) ∧ (I=II ∨ I=I) → ∀u (SubmitSummary(单位Z, 局应急办) ∧ AggregateSummary(局应急办, 领导小组))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"u=“单位W” — 表示应急响应单位W\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseTerminated(单位W) → (OrganizeMidtermAssessment(局应急办) ∨ AnalyzeAndSummarize(局应急办, 单位W))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=“台风山竹” — 表示台风名称为山竹\",\n            \"Region=“西北太平洋” — 表示台风生成于西北太平洋区域\",\n            \"Feature=“有组织的对流和确定的气旋性环流” — 表示台风具有的特征\"\n        ],\n        \"instance_logicexpression\": [\n            \"GeneratedIn(台风山竹, 西北太平洋) ∧ Has(台风山竹, 有组织的对流和确定的气旋性环流) → Called(台风山竹, 热带气旋)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“台风海葵” — 表示台风名称为海葵\",\n            \"Region=“东北太平洋” — 表示台风生成于东北太平洋区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"GeneratedIn(台风海葵, 东北太平洋) ∧ Has(台风海葵, 有组织的对流和确定的气旋性环流) → Called(台风海葵, 热带气旋)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“台风山竹” — 表示台风名称为山竹\",\n            \"Type=“强台风” — 表示台风类型为强台风\"\n        ],\n        \"instance_logicexpression\": [\n            \"Called(台风山竹, 热带气旋) → Includes(台风山竹, 强台风)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“台风海葵” — 表示台风名称为海葵\",\n            \"Type=“热带风暴” — 表示台风类型为热带风暴\"\n        ],\n        \"instance_logicexpression\": [\n            \"Called(台风海葵, 热带气旋) → Includes(台风海葵, 热带风暴)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“台风山竹” — 表示台风名称为山竹\"\n        ],\n        \"instance_logicexpression\": [\n            \"(Includes(台风山竹, 热带风暴) ∨ Includes(台风山竹, 强热带风暴) ∨ Includes(台风山竹, 台风) ∨ Includes(台风山竹, 强台风) ∨ Includes(台风山竹, 超强台风)) → Called(台风山竹, 台风)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“台风海葵” — 表示台风名称为海葵\"\n        ],\n        \"instance_logicexpression\": [\n            \"(Includes(台风海葵, 热带风暴) ∨ Includes(台风海葵, 强热带风暴) ∨ Includes(台风海葵, 台风) ∨ Includes(台风海葵, 强台风) ∨ Includes(台风海葵, 超强台风)) → Called(台风海葵, 台风)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=60mm — 表示24小时内降雨量为60mm\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃p (Rainfall(24h, 60mm) ∧ 60mm ≥ 50mm) ∨ ∃p (Rainfall(12h, p) ∧ p ≥ 30mm)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=35mm — 表示12小时内降雨量为35mm\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃p (Rainfall(24h, p) ∧ p ≥ 50mm) ∨ ∃p (Rainfall(12h, 35mm) ∧ 35mm ≥ 30mm)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=48mm — 表示24小时内降雨量为48mm，不满足暴雨条件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃p (Rainfall(24h, 48mm) ∧ 48mm < 50mm) ∨ ∃p (Rainfall(12h, p) ∧ p ≥ 30mm)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=28mm — 表示12小时内降雨量为28mm，不满足暴雨条件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃p (Rainfall(24h, p) ∧ p ≥ 50mm) ∨ ∃p (Rainfall(12h, 28mm) ∧ 28mm < 30mm)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=10mm — 表示24小时内的降雪量为10mm\",\n            \"Period=24h — 表示时间段为24小时\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃p (Snowfall(24h, 10mm) ∧ 10mm ≥ 10mm) ∨ ∃p (Snowfall(12h, p) ∧ p ≥ 6mm)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=6mm — 表示12小时内的降雪量为6mm\",\n            \"Period=12h — 表示时间段为12小时\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃p (Snowfall(24h, p) ∧ p ≥ 10mm) ∨ ∃p (Snowfall(12h, 6mm) ∧ 6mm ≥ 6mm)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=15mm — 表示24小时内的降雪量为15mm，超过10mm\",\n            \"Period=24h — 表示时间段为24小时\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃p (Snowfall(24h, 15mm) ∧ 15mm ≥ 10mm) ∨ ∃p (Snowfall(12h, p) ∧ p ≥ 6mm)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=7mm — 表示12小时内的降雪量为7mm，超过6mm\",\n            \"Period=12h — 表示时间段为12小时\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃p (Snowfall(24h, p) ∧ p ≥ 10mm) ∨ ∃p (Snowfall(12h, 7mm) ∧ 7mm ≥ 6mm)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“2023年11月北京” — 表示2023年11月北京发生的寒潮事件\",\n            \"ΔT=“10℃” — 表示气温在24小时内迅速下降10℃以上\",\n            \"Strength=“7级” — 表示风力强度为7级\",\n            \"Type=“雪” — 表示伴随的雨雪天气类型为雪\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (ColdWave(e) → (TemperatureDrop(e, 10) ∧ Wind(e) ∧ Precipitation(e, 雪)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“2023年12月上海” — 表示2023年12月上海发生的寒潮事件\",\n            \"ΔT=“9℃” — 表示气温在24小时内迅速下降9℃以上\",\n            \"Strength=“6级” — 表示风力强度为6级\",\n            \"Type=“雨” — 表示伴随的雨雪天气类型为雨\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (ColdWave(e) → (TemperatureDrop(e, 9) ∧ Wind(e) ∧ Precipitation(e, 雨)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“2024年1月哈尔滨” — 表示2024年1月哈尔滨发生的寒潮事件\",\n            \"ΔT=“12℃” — 表示气温在24小时内迅速下降12℃以上\",\n            \"Strength=“8级” — 表示风力强度为8级\",\n            \"Type=“暴雪” — 表示伴随的雨雪天气类型为暴雪\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (ColdWave(e) → (TemperatureDrop(e, 12) ∧ Wind(e) ∧ Precipitation(e, 暴雪)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“2024年2月广州” — 表示2024年2月广州发生的寒潮事件\",\n            \"ΔT=“8℃” — 表示气温在24小时内迅速下降8℃以上\",\n            \"Strength=“5级” — 表示风力强度为5级\",\n            \"Type=“雨夹雪” — 表示伴随的雨雪天气类型为雨夹雪\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (ColdWave(e) → (TemperatureDrop(e, 8) ∧ Wind(e) ∧ Precipitation(e, 雨夹雪)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"w=21.0 — 表示风速为21.0m/s\"\n        ],\n        \"instance_logicexpression\": [\n            \"SeaGale(21.0) ↔ (21.0 ≥ 20.8 ∧ 21.0 ≤ 24.4)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=23.0 — 表示风速为23.0m/s\"\n        ],\n        \"instance_logicexpression\": [\n            \"SeaGale(23.0) ↔ (23.0 ≥ 20.8 ∧ 23.0 ≤ 24.4)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=20.7 — 表示风速为20.7m/s，不满足海上大风的条件\"\n        ],\n        \"instance_logicexpression\": [\n            \"SeaGale(20.7) ↔ (20.7 ≥ 20.8 ∧ 20.7 ≤ 24.4)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=24.5 — 表示风速为24.5m/s，超过海上大风的最高风速\"\n        ],\n        \"instance_logicexpression\": [\n            \"SeaGale(24.5) ↔ (24.5 ≥ 20.8 ∧ 24.5 ≤ 24.4)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=22.0 — 表示风速为22.0m/s\"\n        ],\n        \"instance_logicexpression\": [\n            \"SeaGale(22.0) ↔ (22.0 ≥ 20.8 ∧ 22.0 ≤ 24.4)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"w=“西北风” — 表示风向为西北风\",\n            \"d=“戈壁滩” — 表示尘沙来自戈壁滩\",\n            \"a=“城市上空” — 表示空气浑浊发生在城市上空\",\n            \"v=“0.5km” — 表示能见度为0.5km\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w∀d∀a∀v (StrongWind(“西北风”) ∧ RaiseDust(“戈壁滩”) ∧ AirPollution(“城市上空”) ∧ Visibility(“0.5km”) → Sandstorm(“西北风”, “戈壁滩”, “0.5km”) ∧ Visibility(“0.5km”) < 1)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=“东北风” — 表示风向为东北风\",\n            \"d=“沙漠” — 表示尘沙来自沙漠\",\n            \"a=“乡村地区” — 表示空气浑浊发生在乡村地区\",\n            \"v=“0.8km” — 表示能见度为0.8km\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w∀d∀a∀v (StrongWind(“东北风”) ∧ RaiseDust(“沙漠”) ∧ AirPollution(“乡村地区”) ∧ Visibility(“0.8km”) → Sandstorm(“东北风”, “沙漠”, “0.8km”) ∧ Visibility(“0.8km”) < 1)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=“西南风” — 表示风向为西南风\",\n            \"d=“黄土高原” — 表示尘沙来自黄土高原\",\n            \"a=“山区” — 表示空气浑浊发生在山区\",\n            \"v=“0.3km” — 表示能见度为0.3km\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w∀d∀a∀v (StrongWind(“西南风”) ∧ RaiseDust(“黄土高原”) ∧ AirPollution(“山区”) ∧ Visibility(“0.3km”) → Sandstorm(“西南风”, “黄土高原”, “0.3km”) ∧ Visibility(“0.3km”) < 1)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=“东南风” — 表示风向为东南风\",\n            \"d=“草原” — 表示尘沙来自草原\",\n            \"a=“沿海城市” — 表示空气浑浊发生在沿海城市\",\n            \"v=“0.6km” — 表示能见度为0.6km\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w∀d∀a∀v (StrongWind(“东南风”) ∧ RaiseDust(“草原”) ∧ AirPollution(“沿海城市”) ∧ Visibility(“0.6km”) → Sandstorm(“东南风”, “草原”, “0.6km”) ∧ Visibility(“0.6km”) < 1)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“小麦” — 小麦处于生长期间\",\n            \"Period=“春季” — 表示春季这个时期\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (GrowthPeriod(小麦) ∧ LowerAverageTemperature(小麦, 春季) → GrowthDelay(小麦))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“水稻” — 水稻对低温反应敏感\",\n            \"Temperature=“5°C” — 表示日平均气温降到5°C\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (SensitiveToLowTemperature(水稻) ∧ TemperatureDropBelowTolerance(水稻, 5°C) → PhysiologicalDamage(水稻))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“玉米” — 玉米出现生理障碍或结实器官受损\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (PhysiologicalDamage(玉米) → MatureAndHarvestFailure(玉米))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“大豆” — 大豆不能正常成熟、采收\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (MatureAndHarvestFailure(大豆) → YieldAndQualityDecrease(大豆))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“苹果树” — 苹果树生长发育速度延缓\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (GrowthDelay(苹果树) ∨ PhysiologicalDamage(苹果树) → AgriculturalMeteorologicalDisaster(苹果树))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“葡萄” — 葡萄遭受生理障碍或结实器官受损\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c (GrowthDelay(葡萄) ∨ PhysiologicalDamage(葡萄) → AgriculturalMeteorologicalDisaster(葡萄))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=35℃ — 表示日最高气温为35℃\",\n            \"WeatherProcess=高温天气 — 表示高温天气过程\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t (HighTemperature(35℃) → (Harmful(高温天气, 农牧业) ∧ Harmful(高温天气, 能源供应) ∧ Harmful(高温天气, 人体健康)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=37℃ — 表示日最高气温为37℃\",\n            \"WeatherProcess=极端高温天气 — 表示极端高温天气过程\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t (HighTemperature(37℃) → (Harmful(极端高温天气, 农牧业) ∧ Harmful(极端高温天气, 能源供应) ∧ Harmful(极端高温天气, 人体健康)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=36℃ — 表示日最高气温为36℃\",\n            \"WeatherProcess=持续高温天气 — 表示持续高温天气过程\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t (HighTemperature(36℃) → (Harmful(持续高温天气, 农牧业) ∧ Harmful(持续高温天气, 能源供应) ∧ Harmful(持续高温天气, 人体健康)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=38℃ — 表示日最高气温为38℃\",\n            \"WeatherProcess=破纪录高温天气 — 表示破纪录高温天气过程\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t (HighTemperature(38℃) → (Harmful(破纪录高温天气, 农牧业) ∧ Harmful(破纪录高温天气, 能源供应) ∧ Harmful(破纪录高温天气, 人体健康)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“春季” — 表示春季时段\",\n            \"蒸发量：Evaporation(“春季”) = 120mm — 表示春季时段内的蒸发量\",\n            \"降水量：Precipitation(“春季”) = 80mm — 表示春季时段内的降水量\",\n            \"领域：农牧业\"\n        ],\n        \"instance_logicexpression\": [\n            \"Drought(“春季”) → (Evaporation(“春季”) > Precipitation(“春季”) ∧ WaterShortage(“春季”))\",\n            \"Drought(“春季”) → CauseHarm(“春季”, 农牧业)\",\n            \"Sector(农牧业) → CauseHarm(Drought, 农牧业)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“夏季” — 表示夏季时段\",\n            \"蒸发量：Evaporation(“夏季”) = 150mm — 表示夏季时段内的蒸发量\",\n            \"降水量：Precipitation(“夏季”) = 100mm — 表示夏季时段内的降水量\",\n            \"领域：林业\"\n        ],\n        \"instance_logicexpression\": [\n            \"Drought(“夏季”) → (Evaporation(“夏季”) > Precipitation(“夏季”) ∧ WaterShortage(“夏季”))\",\n            \"Drought(“夏季”) → CauseHarm(“夏季”, 林业)\",\n            \"Sector(林业) → CauseHarm(Drought, 林业)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“秋季” — 表示秋季时段\",\n            \"蒸发量：Evaporation(“秋季”) = 90mm — 表示秋季时段内的蒸发量\",\n            \"降水量：Precipitation(“秋季”) = 110mm — 表示秋季时段内的降水量\",\n            \"领域：水利\"\n        ],\n        \"instance_logicexpression\": [\n            \"Drought(“秋季”) → (Evaporation(“秋季”) > Precipitation(“秋季”) ∧ WaterShortage(“秋季”))\",\n            \"Drought(“秋季”) → CauseHarm(“秋季”, 水利)\",\n            \"Sector(水利) → CauseHarm(Drought, 水利)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“冬季” — 表示冬季时段\",\n            \"蒸发量：Evaporation(“冬季”) = 50mm — 表示冬季时段内的蒸发量\",\n            \"降水量：Precipitation(“冬季”) = 60mm — 表示冬季时段内的降水量\",\n            \"领域：人畜饮水\"\n        ],\n        \"instance_logicexpression\": [\n            \"Drought(“冬季”) → (Evaporation(“冬季”) > Precipitation(“冬季”) ∧ WaterShortage(“冬季”))\",\n            \"Drought(“冬季”) → CauseHarm(“冬季”, 人畜饮水)\",\n            \"Sector(人畜饮水) → CauseHarm(Drought, 人畜饮水)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“小麦” — 小麦处于生长季节\",\n            \"t=“-2℃” — 气温降到-2℃\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p∀t (GrowingSeason(小麦) ∧ TemperatureBelowZero(-2℃) → Frost(-2℃, 小麦))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“葡萄” — 葡萄处于生长季节\",\n            \"t=“0℃” — 气温降到0℃\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p∀t (GrowingSeason(葡萄) ∧ TemperatureBelowZero(0℃) → Frost(0℃, 葡萄))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“苹果树” — 苹果树处于生长季节\",\n            \"t=“-1℃” — 气温降到-1℃\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p∀t (GrowingSeason(苹果树) ∧ TemperatureBelowZero(-1℃) → Frost(-1℃, 苹果树))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“水稻” — 水稻处于生长季节\",\n            \"t=“-3℃” — 气温降到-3℃\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p∀t (GrowingSeason(水稻) ∧ TemperatureBelowZero(-3℃) → Frost(-3℃, 水稻))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“冬季早晨” — 表示冬季早晨是一个冰冻天气现象\",\n            \"r=“雾” — 表示雾是降水的一种\",\n            \"o=“道路” — 表示道路是物体\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (FreezingWeather(冬季早晨) ↔ (∃r (Precipitation(雾) ∧ ∃o (Object(道路) ∧ Freeze(雾, 道路)))))\",\n            \"∀p ∀s (FreezingWeather(冬季早晨) → (CauseHarm(冬季早晨, 农牧业) ∨ CauseHarm(冬季早晨, 林业) ∨ CauseHarm(冬季早晨, 交通) ∨ CauseHarm(冬季早晨, 电力) ∨ CauseHarm(冬季早晨, 通信设施)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“寒冷夜晚” — 表示寒冷夜晚是一个冰冻天气现象\",\n            \"r=“雨” — 表示雨是降水的一种\",\n            \"o=“电线” — 表示电线是物体\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (FreezingWeather(寒冷夜晚) ↔ (∃r (Precipitation(雨) ∧ ∃o (Object(电线) ∧ Freeze(雨, 电线)))))\",\n            \"∀p ∀s (FreezingWeather(寒冷夜晚) → (CauseHarm(寒冷夜晚, 农牧业) ∨ CauseHarm(寒冷夜晚, 林业) ∨ CauseHarm(寒冷夜晚, 交通) ∨ CauseHarm(寒冷夜晚, 电力) ∨ CauseHarm(寒冷夜晚, 通信设施)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“初春夜晚” — 表示初春夜晚是一个冰冻天气现象\",\n            \"r=“雪” — 表示雪是降水的一种\",\n            \"o=“树枝” — 表示树枝是物体\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (FreezingWeather(初春夜晚) ↔ (∃r (Precipitation(雪) ∧ ∃o (Object(树枝) ∧ Freeze(雪, 树枝)))))\",\n            \"∀p ∀s (FreezingWeather(初春夜晚) → (CauseHarm(初春夜晚, 农牧业) ∨ CauseHarm(初春夜晚, 林业) ∨ CauseHarm(初春夜晚, 交通) ∨ CauseHarm(初春夜晚, 电力) ∨ CauseHarm(初春夜晚, 通信设施)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“深秋早晨” — 表示深秋早晨是一个冰冻天气现象\",\n            \"r=“雾” — 表示雾是降水的一种\",\n            \"o=“车辆” — 表示车辆是物体\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (FreezingWeather(深秋早晨) ↔ (∃r (Precipitation(雾) ∧ ∃o (Object(车辆) ∧ Freeze(雾, 车辆)))))\",\n            \"∀p ∀s (FreezingWeather(深秋早晨) → (CauseHarm(深秋早晨, 农牧业) ∨ CauseHarm(深秋早晨, 林业) ∨ CauseHarm(深秋早晨, 交通) ∨ CauseHarm(深秋早晨, 电力) ∨ CauseHarm(深秋早晨, 通信设施)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“城市A” — 表示大气在城市A\",\n            \"v=“200m” — 表示能见度为200米\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀v (HeavyFog(a, v) ↔ (Suspended(Droplets, a) ∧ Visibility(v) < 500)) → HeavyFog(城市A, 200m) ↔ (Suspended(Droplets, 城市A) ∧ Visibility(200m) < 500)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“城市B” — 表示大气在城市B\",\n            \"v=“300m” — 表示能见度为300米\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀v (HeavyFog(a, v) ↔ (Suspended(Droplets, a) ∧ Visibility(v) < 500)) → HeavyFog(城市B, 300m) ↔ (Suspended(Droplets, 城市B) ∧ Visibility(300m) < 500)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“城市C” — 表示大气在城市C\",\n            \"v=“400m” — 表示能见度为400米\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀v (HeavyFog(a, v) ↔ (Suspended(Droplets, a) ∧ Visibility(v) < 500)) → HeavyFog(城市C, 400m) ↔ (Suspended(Droplets, 城市C) ∧ Visibility(400m) < 500)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“城市D” — 表示大气在城市D\",\n            \"v=“450m” — 表示能见度为450米\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀v (HeavyFog(a, v) ↔ (Suspended(Droplets, a) ∧ Visibility(v) < 500)) → HeavyFog(城市D, 450m) ↔ (Suspended(Droplets, 城市D) ∧ Visibility(450m) < 500)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“PM2.5” — 表示悬浮在空中的微粒为PM2.5\",\n            \"d=5.0 — 表示能见度为5.0km\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p∀d (Suspend(PM2.5) ∧ Indistinguishable(PM2.5) ∧ Visibility(5.0) ∧ 5.0 < 10.0 → Haze(PM2.5, 5.0))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“灰尘” — 表示悬浮在空中的微粒为灰尘\",\n            \"d=3.0 — 表示能见度为3.0km\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p∀d (Suspend(灰尘) ∧ Indistinguishable(灰尘) ∧ Visibility(3.0) ∧ 3.0 < 10.0 → Haze(灰尘, 3.0))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“汽车尾气颗粒” — 表示悬浮在空中的微粒为汽车尾气颗粒\",\n            \"d=7.5 — 表示能见度为7.5km\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p∀d (Suspend(汽车尾气颗粒) ∧ Indistinguishable(汽车尾气颗粒) ∧ Visibility(7.5) ∧ 7.5 < 10.0 → Haze(汽车尾气颗粒, 7.5))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“工业排放颗粒” — 表示悬浮在空中的微粒为工业排放颗粒\",\n            \"d=2.0 — 表示能见度为2.0km\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p∀d (Suspend(工业排放颗粒) ∧ Indistinguishable(工业排放颗粒) ∧ Visibility(2.0) ∧ 2.0 < 10.0 → Haze(工业排放颗粒, 2.0))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台=“中央气象台” — 表示发布预警的机构为中央气象台\",\n            \"预警等级=“蓝色预警” — 表示预警等级为蓝色预警\",\n            \"灾害类型=“台风” — 表示灾害类型为台风\",\n            \"地区=“我国沿海” — 表示预计登陆或影响的地区为我国沿海\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w ∀d (IssueWarning(中央气象台, 蓝色预警, 台风) → (ExpectedImpact(热带风暴, 我国沿海) ∨ (HasImpact(热带风暴, 我国沿海海面) ∧ HasImpact(热带风暴, 我国陆地) ∧ MayContinue(影响))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台=“中央气象台” — 表示发布预警的机构为中央气象台\",\n            \"预警等级=“蓝色预警” — 表示预警等级为蓝色预警\",\n            \"灾害类型=“台风” — 表示灾害类型为台风\",\n            \"地区=“我国沿海海面” — 表示已经造成影响的地区为我国沿海海面\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w ∀d (IssueWarning(中央气象台, 蓝色预警, 台风) → (ExpectedImpact(热带风暴, 我国沿海) ∨ (HasImpact(热带风暴, 我国沿海海面) ∧ HasImpact(热带风暴, 我国陆地) ∧ MayContinue(影响))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台=“中央气象台” — 表示发布预警的机构为中央气象台\",\n            \"预警等级=“蓝色预警” — 表示预警等级为蓝色预警\",\n            \"灾害类型=“台风” — 表示灾害类型为台风\",\n            \"地区=“我国陆地” — 表示已经造成影响的地区为我国陆地\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w ∀d (IssueWarning(中央气象台, 蓝色预警, 台风) → (ExpectedImpact(热带风暴, 我国沿海) ∨ (HasImpact(热带风暴, 我国沿海海面) ∧ HasImpact(热带风暴, 我国陆地) ∧ MayContinue(影响))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台=“中央气象台” — 表示发布预警的机构为中央气象台\",\n            \"预警级别=“黄色预警” — 表示预警级别为黄色预警\",\n            \"风暴类型=“强热带风暴” — 表示预计的风暴类型为强热带风暴\",\n            \"风力等级=“10~11级” — 表示预计的风力等级为10级到11级\",\n            \"影响范围=“我国沿海海面及陆地” — 表示影响范围为我国沿海海面及陆地\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 黄色预警) ∧ ForecastStorm(中央气象台, 强热带风暴, 10~11级) → Ⅲ级响应启动(w))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台=“中央气象台” — 表示发布预警的机构为中央气象台\",\n            \"风暴类型=“强热带风暴” — 表示预计的风暴类型为强热带风暴\",\n            \"影响范围=“我国沿海海面及陆地” — 表示影响范围为我国沿海海面及陆地\"\n        ],\n        \"instance_logicexpression\": [\n            \"Impact(强热带风暴, 我国沿海海面及陆地) ∧ ContinuedImpact(强热带风暴, 我国沿海海面及陆地) → Ⅲ级响应启动(w)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“中央气象台” — 表示预警发布的组织为中央气象台\",\n            \"l=“橙色预警” — 表示预警级别为橙色\",\n            \"c=“预计未来将有台风登陆或影响我国沿海” — 表示预警的条件\",\n            \"Intensity=“12~13” — 表示预计台风的中心附近最大平均风力为12级~13级\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀l∀c (IssueWarning(中央气象台, 橙色预警, 预计未来将有台风登陆或影响我国沿海) ∧ ForecastTyphoon(12~13) → 启动Ⅱ级响应(中央气象台))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“我国沿海海面” — 表示受影响的区域为我国沿海海面\",\n            \"i=“重大影响” — 表示台风已经造成的重大影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀i (TyphoonImpact(我国沿海海面, 重大影响) ∧ MayContinue(重大影响) → 启动Ⅱ级响应(我国沿海海面))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“我国沿海陆地” — 表示受影响的区域为我国沿海陆地\",\n            \"i=“重大影响” — 表示台风已经造成的重大影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀i (TyphoonImpact(我国沿海陆地, 重大影响) ∧ MayContinue(重大影响) → 启动Ⅱ级响应(我国沿海陆地))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“中央气象台” — 表示预警发布的组织为中央气象台\",\n            \"l=“橙色预警” — 表示预警级别为橙色\",\n            \"c=“台风已经对我国沿海海面及陆地造成重大影响” — 表示预警的条件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀l∀c (IssueWarning(中央气象台, 橙色预警, 台风已经对我国沿海海面及陆地造成重大影响) → 启动Ⅱ级响应(中央气象台))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“中央气象台” — 表示预警发布的组织为中央气象台\",\n            \"t=“红色预警” — 表示预警类型为红色预警\",\n            \"a=“我国沿海” — 表示预计受影响的区域为我国沿海\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀t∀a (IssueWarning(中央气象台, 红色预警) → (ForecastTyphoon(14~15, 我国沿海) ∨ ForecastTyphoon(16+, 我国沿海)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“强台风” — 表示台风类型为强台风\",\n            \"a=“沿海海面” — 表示受影响的区域为沿海海面\",\n            \"i=“重大影响” — 表示台风造成的影响为重大影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t∀a∀i (CauseImpact(强台风, 沿海海面, 重大影响) ∧ MayContinue(重大影响) → (t = 强台风))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“超强台风” — 表示台风类型为超强台风\",\n            \"a=“沿海陆地” — 表示受影响的区域为沿海陆地\",\n            \"i=“特别重大影响” — 表示台风造成的影响为特别重大影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t∀a∀i (CauseImpact(超强台风, 沿海陆地, 特别重大影响) ∧ MayContinue(特别重大影响) → (t = 超强台风))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台=“中央气象台” — 表示发布预警的机构为中央气象台\",\n            \"预警等级=“蓝色预警” — 表示发布的预警等级为蓝色预警\",\n            \"时间=“48h” — 表示预计预警将持续48小时\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 蓝色预警) ∧ ExpectedContinue(中央气象台, 蓝色预警, 48h) → 启动IV级响应(w))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=“城市A” — 表示暴雨天气已经出现的城市A\",\n            \"灾害类型=“城乡渍涝” — 表示暴雨可能或已经引发的城乡渍涝灾害\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (暴雨天气出现(城市A) ∧ CauseDisaster(城乡渍涝)) → 启动IV级响应(w)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区=“省份X和省份Y” — 表示两个及以上省（自治区、直辖市）同时发生一般洪水\",\n            \"w=“省份X和省份Y” — 表示响应启动的地区为省份X和省份Y\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (暴雨天气出现(w) ∧ Flood(省份X和省份Y)) → 启动IV级响应(w)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"河流=“长江” — 表示大江大河干流堤防出现险情的河流为长江\",\n            \"w=“长江流域” — 表示响应启动的地区为长江流域\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (暴雨天气出现(w) ∧ LeveeDanger(长江)) → 启动IV级响应(w)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"水库=“水库A” — 表示大中型水库出现险情的水库为水库A\",\n            \"w=“水库A地区” — 表示响应启动的地区为水库A地区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (暴雨天气出现(w) ∧ ReservoirDanger(水库A)) → 启动IV级响应(w)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警级别：黄色预警\",\n            \"地区：华北\",\n            \"预计预警级别：蓝色预警\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 黄色预警) ∧ ExpectedContinuousRain(华北, 蓝色预警) → 启动Ⅲ级响应())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"灾害类型：渍涝\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d1 ∀d2 (RainCauseDisaster(渍涝) ∨ RainCauseDisaster(次生灾害) → 启动Ⅲ级响应())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区1：江苏省\",\n            \"地区2：浙江省\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p1 (FloodDisaster(江苏省) ∧ ∃p2 (FloodDisaster(浙江省) ∧ 江苏省 ≠ 浙江省) → 启动Ⅲ级响应())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区：广东省\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (FloodDisaster(广东省) → 启动Ⅲ级响应())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"河流：长江\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (LeveeEmergency(长江) → 启动Ⅲ级响应())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"水库类型：大型\",\n            \"险情级别：严重\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (ReservoirEmergency(大型, 严重) ∨ ReservoirEmergency(中型, 严重) ∨ ReservoirEmergency(小型, 垮坝) → 启动Ⅲ级响应())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"水库类型：中型\",\n            \"险情级别：严重\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (ReservoirEmergency(大型, 严重) ∨ ReservoirEmergency(中型, 严重) ∨ ReservoirEmergency(小型, 垮坝) → 启动Ⅲ级响应())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"水库类型：小型\",\n            \"险情级别：垮坝\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (ReservoirEmergency(大型, 严重) ∨ ReservoirEmergency(中型, 严重) ∨ ReservoirEmergency(小型, 垮坝) → 启动Ⅲ级响应())\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警等级：暴雨概色预警\",\n            \"地区：北京\",\n            \"预警等级：暴雨黄色预警\",\n            \"灾害类型：城乡渍涝\",\n            \"流域：长江流域\",\n            \"河流：黄河\",\n            \"地区：湖北省\",\n            \"水库：三峡水库\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 暴雨概色预警) ∧ ∀r (MeetWarningStandard(北京, 暴雨黄色预警) → (∃t (t = 未来48h ∧ ∀a (a ∈ 北京 → MeetWarningStandard(a, 暴雨黄色预警))) ∨ (∃d1 (CauseDisaster(城乡渍涝) ∧ 影响持续(城乡渍涝)) ∨ Flood(长江流域) ∨ ∃r (LeveeBreach(黄河)) ∨ ∃p (数量(p, 两个及以上) ∧ ∀c (c ∈ p → ∃l (FloodDisaster(l))) ∨ DamBreak(三峡水库))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警等级：暴雨概色预警\",\n            \"地区：上海\",\n            \"预警等级：暴雨橙色预警\",\n            \"灾害类型：交通中断\",\n            \"流域：珠江流域\",\n            \"河流：钱塘江\",\n            \"地区：广东省\",\n            \"水库：新丰江水库\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 暴雨概色预警) ∧ ∀r (MeetWarningStandard(上海, 暴雨橙色预警) → (∃t (t = 未来48h ∧ ∀a (a ∈ 上海 → MeetWarningStandard(a, 暴雨橙色预警))) ∨ (∃d1 (CauseDisaster(交通中断) ∧ 影响持续(交通中断)) ∨ Flood(珠江流域) ∨ ∃r (LeveeBreach(钱塘江)) ∨ ∃p (数量(p, 两个及以上) ∧ ∀c (c ∈ p → ∃l (FloodDisaster(l))) ∨ DamBreak(新丰江水库))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警等级：暴雨概色预警\",\n            \"地区：重庆\",\n            \"预警等级：暴雨红色预警\",\n            \"灾害类型：通信中断\",\n            \"流域：嘉陵江流域\",\n            \"河流：乌江\",\n            \"地区：四川省\",\n            \"水库：紫坪铺水库\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 暴雨概色预警) ∧ ∀r (MeetWarningStandard(重庆, 暴雨红色预警) → (∃t (t = 未来48h ∧ ∀a (a ∈ 重庆 → MeetWarningStandard(a, 暴雨红色预警))) ∨ (∃d1 (CauseDisaster(通信中断) ∧ 影响持续(通信中断)) ∨ Flood(嘉陵江流域) ∨ ∃r (LeveeBreach(乌江)) ∨ ∃p (数量(p, 两个及以上) ∧ ∀c (c ∈ p → ∃l (FloodDisaster(l))) ∨ DamBreak(紫坪铺水库))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警等级：红色预警\",\n            \"橙色预警预计持续时间：48h\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 红色预警) ∧ ExpectedContinue(橙色预警, 48h) → 启动I级响应(w))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"流域：长江流域\",\n            \"灾害类型：城乡渍涝\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (FloodOccur(长江流域) ∧ FloodCauseDisaster(城乡渍涝) → 启动I级响应(w))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"流域1：黄河流域\",\n            \"流域2：珠江流域\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (FloodOccur(黄河流域) ∧ FloodOccur(珠江流域) → 启动I级响应(w))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"河段：长江中下游河段\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (LeveeBreach(长江中下游河段) → 启动I级响应(w))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"水库：三峡水库\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (DamBreak(三峡水库) → 启动I级响应(w))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"w=“华北区域” — 表示预警区域为华北区域\",\n            \"a=“河北省” — 表示河北省已经出现暴雪天气\",\n            \"p1=“北京市” — 表示北京市交通、电力、通信受到影响\",\n            \"p2=“天津市” — 表示天津市交通、电力、通信受到影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w∀a (IssueWarning(中央气象台, 蓝色预警, “华北区域”) ∧ MeetWarningStandard(“华北区域”, 蓝色预警) ∧ (BlizzardOccur(“河北省”) ∨ (AffectTransportation(“北京市”) ∧ AffectPower(“北京市”) ∧ AffectCommunication(“北京市”) ∧ ThreatenLivestock(“北京市”) ∧ ImpactMayContinue(“北京市”)) ∧ (AffectTransportation(“天津市”) ∧ AffectPower(“天津市”) ∧ AffectCommunication(“天津市”) ∧ ThreatenLivestock(“天津市”) ∧ ImpactMayContinue(“天津市”)))) → IV级响应启动\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=“东北区域” — 表示预警区域为东北区域\",\n            \"a=“黑龙江省” — 表示黑龙江省已经出现暴雪天气\",\n            \"p1=“吉林省” — 表示吉林省交通、电力、通信受到影响\",\n            \"p2=“辽宁省” — 表示辽宁省交通、电力、通信受到影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w∀a (IssueWarning(中央气象台, 蓝色预警, “东北区域”) ∧ MeetWarningStandard(“东北区域”, 蓝色预警) ∧ (BlizzardOccur(“黑龙江省”) ∨ (AffectTransportation(“吉林省”) ∧ AffectPower(“吉林省”) ∧ AffectCommunication(“吉林省”) ∧ ThreatenLivestock(“吉林省”) ∧ ImpactMayContinue(“吉林省”)) ∧ (AffectTransportation(“辽宁省”) ∧ AffectPower(“辽宁省”) ∧ AffectCommunication(“辽宁省”) ∧ ThreatenLivestock(“辽宁省”) ∧ ImpactMayContinue(“辽宁省”)))) → IV级响应启动\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=“西北区域” — 表示预警区域为西北区域\",\n            \"a=“新疆维吾尔自治区” — 表示新疆维吾尔自治区已经出现暴雪天气\",\n            \"p1=“甘肃省” — 表示甘肃省交通、电力、通信受到影响\",\n            \"p2=“青海省” — 表示青海省交通、电力、通信受到影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w∀a (IssueWarning(中央气象台, 蓝色预警, “西北区域”) ∧ MeetWarningStandard(“西北区域”, 蓝色预警) ∧ (BlizzardOccur(“新疆维吾尔自治区”) ∨ (AffectTransportation(“甘肃省”) ∧ AffectPower(“甘肃省”) ∧ AffectCommunication(“甘肃省”) ∧ ThreatenLivestock(“甘肃省”) ∧ ImpactMayContinue(“甘肃省”)) ∧ (AffectTransportation(“青海省”) ∧ AffectPower(“青海省”) ∧ AffectCommunication(“青海省”) ∧ ThreatenLivestock(“青海省”) ∧ ImpactMayContinue(“青海省”)))) → IV级响应启动\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“中央气象台” — 表示发布预警的组织为中央气象台\",\n            \"a1=“华北区域” — 表示预警区内的大部地区之一为华北区域\",\n            \"a2=“东北区域” — 表示预警区内的大部地区之一为东北区域\",\n            \"r=“河北省” — 表示省级区域为河北省\"\n        ],\n        \"instance_logicexpression\": [\n            \"IssueWarning(中央气象台, 黄色, 48) ∧ MeetWarningStandard(华北区域, 蓝色) ∧ MeetWarningStandard(东北区域, 蓝色) → (华北区域 = 东北区域 → ⊥) ∧ ∃r (ProvinceArea(河北省) ∧ (华北区域 ⊆ 河北省 ∨ 东北区域 ⊆ 河北省))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“华东区域” — 表示暴雪天气出现的区域为华东区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"BlizzardOccurrence(华东区域) → (AffectTransportation(华东区域) ∨ AffectPower(华东区域) ∨ AffectCommunication(华东区域) ∨ ThreatenLivestockSafety(华东区域))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“西北区域” — 表示暴雪天气出现的区域为西北区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"BlizzardOccurrence(西北区域) → (AffectTransportation(西北区域) ∨ AffectPower(西北区域) ∨ AffectCommunication(西北区域) ∨ ThreatenLivestockSafety(西北区域))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“中央气象台” — 表示发布预警的组织为中央气象台\",\n            \"a1=“华中区域” — 表示预警区内的大部地区之一为华中区域\",\n            \"a2=“华南区域” — 表示预警区内的大部地区之一为华南区域\",\n            \"r=“广东省” — 表示省级区域为广东省\"\n        ],\n        \"instance_logicexpression\": [\n            \"IssueWarning(中央气象台, 黄色, 48) ∧ MeetWarningStandard(华中区域, 蓝色) ∧ MeetWarningStandard(华南区域, 蓝色) → (华中区域 = 华南区域 → ⊥) ∧ ∃r (ProvinceArea(广东省) ∧ (华中区域 ⊆ 广东省 ∨ 华南区域 ⊆ 广东省))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“西南区域” — 表示暴雪天气出现的区域为西南区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"BlizzardOccurrence(西南区域) → (AffectTransportation(西南区域) ∨ AffectPower(西南区域) ∨ AffectCommunication(西南区域) ∨ ThreatenLivestockSafety(西南区域))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警等级：暴雪概色预警\",\n            \"地区1：北京\",\n            \"地区2：河北\",\n            \"牧区：内蒙古\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 暴雪概色预警) ∧ ∀r (MeetWarningStandard(r, 暴雪黄色预警) → ImpactMayContinue(r))) → ∃p1 ∃p2 (BlizzardOccur(北京) ∧ BlizzardOccur(河北) ∧ (AffectTransportation(北京) ∨ AffectTransportation(河北)) ∧ (AffectPower(北京) ∨ AffectPower(河北)) ∧ (AffectCommunication(北京) ∨ AffectCommunication(河北)) ∧ (LivestockThreat(内蒙古)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警等级：暴雪概色预警\",\n            \"地区1：黑龙江\",\n            \"地区2：吉林\",\n            \"牧区：新疆\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 暴雪概色预警) ∧ ∀r (MeetWarningStandard(r, 暴雪黄色预警) → ImpactMayContinue(r))) → ∃p1 ∃p2 (BlizzardOccur(黑龙江) ∧ BlizzardOccur(吉林) ∧ (AffectTransportation(黑龙江) ∨ AffectTransportation(吉林)) ∧ (AffectPower(黑龙江) ∨ AffectPower(吉林)) ∧ (AffectCommunication(黑龙江) ∨ AffectCommunication(吉林)) ∧ (LivestockThreat(新疆)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警等级：暴雪概色预警\",\n            \"地区1：辽宁\",\n            \"地区2：内蒙古\",\n            \"牧区：青海\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 暴雪概色预警) ∧ ∀r (MeetWarningStandard(r, 暴雪黄色预警) → ImpactMayContinue(r))) → ∃p1 ∃p2 (BlizzardOccur(辽宁) ∧ BlizzardOccur(内蒙古) ∧ (AffectTransportation(辽宁) ∨ AffectTransportation(内蒙古)) ∧ (AffectPower(辽宁) ∨ AffectPower(内蒙古)) ∧ (AffectCommunication(辽宁) ∨ AffectCommunication(内蒙古)) ∧ (LivestockThreat(青海)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警等级：暴雪概色预警\",\n            \"地区1：山西\",\n            \"地区2：陕西\",\n            \"牧区：甘肃\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 暴雪概色预警) ∧ ∀r (MeetWarningStandard(r, 暴雪黄色预警) → ImpactMayContinue(r))) → ∃p1 ∃p2 (BlizzardOccur(山西) ∧ BlizzardOccur(陕西) ∧ (AffectTransportation(山西) ∨ AffectTransportation(陕西)) ∧ (AffectPower(山西) ∨ AffectPower(陕西)) ∧ (AffectCommunication(山西) ∨ AffectCommunication(陕西)) ∧ (LivestockThreat(甘肃)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台=“中央气象台” — 中央气象台负责发布预警\",\n            \"预警等级=“红色预警” — 发布的预警等级为红色预警\",\n            \"地区=“华北区域” — 预警发布的地区为华北区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃气象台 ∃地区 (IssueWarning(中央气象台, 红色预警, 华北区域) ∧ ∀t (t ∈ [0, 48) → MeetWarningStandard(华北区域, 橙色预警以上)) → 启动I级响应()\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"省=“河北省” — 河北省受到暴雪影响\",\n            \"气象台=“中央气象台” — 中央气象台负责发布预警\",\n            \"预警等级=“红色预警” — 发布的预警等级为红色预警\",\n            \"影响类型=“交通” — 河北省交通受到影响\",\n            \"威胁类型=“牲畜安全” — 河北省牲畜安全受到威胁\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀省 (省 ∈ {省, 自治区, 直辖市} ∧ ∃气象台 (IssueWarning(中央气象台, 红色预警, 河北省) ∧ (Impact(河北省, 交通) ∨ Impact(河北省, 电力) ∨ Impact(河北省, 通信)) ∧ Threat(河北省, 牲畜安全)) ∧ 省数量 ≥ 2 → 启动I级响应()\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"省=“内蒙古自治区” — 内蒙古自治区受到暴雪影响\",\n            \"气象台=“中央气象台” — 中央气象台负责发布预警\",\n            \"预警等级=“红色预警” — 发布的预警等级为红色预警\",\n            \"影响类型=“电力” — 内蒙古自治区电力受到影响\",\n            \"威胁类型=“牲畜安全” — 内蒙古自治区牲畜安全受到威胁\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀省 (省 ∈ {省, 自治区, 直辖市} ∧ ∃气象台 (IssueWarning(中央气象台, 红色预警, 内蒙古自治区) ∧ (Impact(内蒙古自治区, 交通) ∨ Impact(内蒙古自治区, 电力) ∨ Impact(内蒙古自治区, 通信)) ∧ Threat(内蒙古自治区, 牲畜安全)) ∧ 省数量 ≥ 2 → 启动I级响应()\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"省=“黑龙江省” — 黑龙江省受到暴雪影响\",\n            \"气象台=“中央气象台” — 中央气象台负责发布预警\",\n            \"预警等级=“红色预警” — 发布的预警等级为红色预警\",\n            \"影响类型=“通信” — 黑龙江省通信受到影响\",\n            \"威胁类型=“牲畜安全” — 黑龙江省牲畜安全受到威胁\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀省 (省 ∈ {省, 自治区, 直辖市} ∧ ∃气象台 (IssueWarning(中央气象台, 红色预警, 黑龙江省) ∧ (Impact(黑龙江省, 交通) ∨ Impact(黑龙江省, 电力) ∨ Impact(黑龙江省, 通信)) ∧ Threat(黑龙江省, 牲畜安全)) ∧ 省数量 ≥ 2 → 启动I级响应()\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警级别：蓝色预警\",\n            \"预警内容：未来72小时内寒潮天气将持续\",\n            \"天气类型：寒潮\",\n            \"持续时间：72h\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 蓝色预警, w) ∧ ContinueWeather(寒潮, 72h) → 启动IV级响应)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区1：广东省\",\n            \"地区2：海南省\",\n            \"影响类型：经济林果\",\n            \"影响类型：农作物\",\n            \"影响类型：水产养殖\",\n            \"影响类型：畜禽生产\",\n            \"影响类型：设施农业\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d1 ∀d2 (CauseDamage(广东省, 经济林果) ∨ CauseDamage(广东省, 农作物) ∨ CauseDamage(广东省, 水产养殖) ∨ CauseDamage(广东省, 畜禽生产) ∨ CauseDamage(广东省, 设施农业) ∧ CauseDamage(海南省, 经济林果) ∨ CauseDamage(海南省, 农作物) ∨ CauseDamage(海南省, 水产养殖) ∨ CauseDamage(海南省, 畜禽生产) ∨ CauseDamage(海南省, 设施农业) ∧ ImpactContinue(经济林果) ∧ ImpactContinue(农作物) ∧ ImpactContinue(水产养殖) ∧ ImpactContinue(畜禽生产) ∧ ImpactContinue(设施农业) → 启动IV级响应)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区1：山东省\",\n            \"地区2：辽宁省\",\n            \"影响类型：经济林果\",\n            \"影响类型：农作物\",\n            \"影响类型：水产养殖\",\n            \"影响类型：畜禽生产\",\n            \"影响类型：设施农业\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d1 ∀d2 (CauseDamage(山东省, 经济林果) ∨ CauseDamage(山东省, 农作物) ∨ CauseDamage(山东省, 水产养殖) ∨ CauseDamage(山东省, 畜禽生产) ∨ CauseDamage(山东省, 设施农业) ∧ CauseDamage(辽宁省, 经济林果) ∨ CauseDamage(辽宁省, 农作物) ∨ CauseDamage(辽宁省, 水产养殖) ∨ CauseDamage(辽宁省, 畜禽生产) ∨ CauseDamage(辽宁省, 设施农业) ∧ ImpactContinue(经济林果) ∧ ImpactContinue(农作物) ∧ ImpactContinue(水产养殖) ∧ ImpactContinue(畜禽生产) ∧ ImpactContinue(设施农业) → 启动IV级响应)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“中央气象台” — 表示预警发布的组织为中央气象台\",\n            \"Type=“寒潮黄色预警” — 表示预警类型为寒潮黄色预警\",\n            \"Duration=“72小时” — 表示预警预计持续时间为72小时\",\n            \"Condition=“寒潮” — 表示天气条件为寒潮\",\n            \"Area=“预警区” — 表示预警区域为预警区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃o (IssueWarning(中央气象台, 寒潮黄色预警, 72) ∧ ContinueWeather(寒潮,预警区, 72) → 启动Ⅲ级响应())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a1=“广东省” — 表示广东省可能或已经对热带、亚热带经济林果造成损失\",\n            \"a2=“河南省” — 表示河南省可能或已经对农作物造成损失\",\n            \"Impact=“热带亚热带经济林果、农作物” — 表示影响为热带、亚热带经济林果和农作物\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃a1 ∃a2 (CauseDamage(广东省, 热带亚热带经济林果) ∧ CauseDamage(河南省, 农作物) ∧ (ImpactContinue(广东省, 损失) ∨ ImpactContinue(河南省, 损失)) → 启动Ⅲ级响应()\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a3=“山东省” — 表示山东省可能或已经对水产养殖造成损失\",\n            \"a4=“四川省” — 表示四川省可能或已经对畜禽生产造成损失\",\n            \"Impact=“水产养殖、畜禽生产” — 表示影响为水产养殖和畜禽生产\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃a3 ∃a4 (CauseDamage(山东省, 水产养殖) ∧ CauseDamage(四川省, 畜禽生产) ∧ (ImpactContinue(山东省, 损失) ∨ ImpactContinue(四川省, 损失)) → 启动Ⅲ级响应()\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a5=“黑龙江省” — 表示黑龙江省可能或已经对北方设施农业造成损失\",\n            \"Impact=“北方设施农业” — 表示影响为北方设施农业\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃a5 (CauseDamage(黑龙江省, 北方设施农业) ∧ ImpactContinue(黑龙江省, 损失) → 启动Ⅲ级响应())\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警级别：橙色预警\",\n            \"预警内容：寒潮\",\n            \"天气类型：寒潮\",\n            \"持续时间：72h\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 橙色预警, 寒潮) ∧ ContinueWeather(寒潮, 72h) → 启动Ⅱ级响应(w))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区：广东省\",\n            \"损失类型：农作物\",\n            \"地区：海南省\",\n            \"损失类型：水产养殖\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃p1 ∃p2 (CauseDamage(广东省, 农作物) ∧ CauseDamage(海南省, 水产养殖) ∧ (广东省 ≠ 海南省) → 启动Ⅱ级响应(w))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区：四川省\",\n            \"损失类型：高禽生产\",\n            \"影响：热带、亚热带经济林果、农作物、水产养殖、高禽生产及北方设施农业等\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (CauseDamage(四川省, 高禽生产) → ImpactContinue(影响))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区：山东省\",\n            \"损失类型：设施农业\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (CauseDamage(山东省, 设施农业) → ImpactContinue(影响))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区：浙江省\",\n            \"损失类型：经济林果\",\n            \"地区：福建省\",\n            \"损失类型：经济林果\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃p1 ∃p2 (CauseDamage(浙江省, 经济林果) ∧ CauseDamage(福建省, 经济林果) ∧ (浙江省 ≠ 福建省) → 启动Ⅱ级响应(w))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台=“中央气象台” — 中央气象台发布预警\",\n            \"预警等级=“黄色” — 预警等级为黄色\",\n            \"预警类型=“大风” — 预警类型为大风\",\n            \"地区=“东海区域” — 预警区为东海区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 黄色, 大风) ∧ ∀a (预警区(东海区域) → MeetStandard(东海区域, 黄色, 大风) → ActivateResponse(Ⅲ级))\",\n            \"∀w (CauseImpact(水上作业, 较大) ∨ CauseImpact(过往船舶安全, 较大) ∨ CauseImpact(交通, 较大) ∨ CauseImpact(群众生产生活, 较大) → ActivateResponse(Ⅲ级))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台=“中央气象台” — 中央气象台发布预警\",\n            \"预警等级=“黄色” — 预警等级为黄色\",\n            \"预警类型=“大风” — 预警类型为大风\",\n            \"地区=“南海区域” — 预警区为南海区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 黄色, 大风) ∧ ∀a (预警区(南海区域) → MeetStandard(南海区域, 黄色, 大风) → ActivateResponse(Ⅲ级))\",\n            \"∀w (CauseImpact(水上作业, 较大) ∨ CauseImpact(过往船舶安全, 较大) ∨ CauseImpact(交通, 较大) ∨ CauseImpact(群众生产生活, 较大) → ActivateResponse(Ⅲ级))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"影响类型=“水上作业” — 影响类型为水上作业\",\n            \"影响程度=“较大” — 影响程度为较大\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 黄色, 大风) ∧ ∀a (预警区(a) → MeetStandard(a, 黄色, 大风) → ActivateResponse(Ⅲ级))\",\n            \"CauseImpact(水上作业, 较大) → ActivateResponse(Ⅲ级)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"影响类型=“过往船舶安全” — 影响类型为过往船舶安全\",\n            \"影响程度=“较大” — 影响程度为较大\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 黄色, 大风) ∧ ∀a (预警区(a) → MeetStandard(a, 黄色, 大风) → ActivateResponse(Ⅲ级))\",\n            \"CauseImpact(过往船舶安全, 较大) → ActivateResponse(Ⅲ级)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"影响类型=“交通” — 影响类型为交通\",\n            \"影响程度=“较大” — 影响程度为较大\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 黄色, 大风) ∧ ∀a (预警区(a) → MeetStandard(a, 黄色, 大风) → ActivateResponse(Ⅲ级))\",\n            \"CauseImpact(交通, 较大) → ActivateResponse(Ⅲ级)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"影响类型=“群众生产生活” — 影响类型为群众生产生活\",\n            \"影响程度=“较大” — 影响程度为较大\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 黄色, 大风) ∧ ∀a (预警区(a) → MeetStandard(a, 黄色, 大风) → ActivateResponse(Ⅲ级))\",\n            \"CauseImpact(群众生产生活, 较大) → ActivateResponse(Ⅲ级)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警等级：橙色\",\n            \"预警类型：大风\",\n            \"地区：A区\",\n            \"预警等级：黄色\",\n            \"预警类型：大风\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 橙色, 大风) ∧ ∀a (预警区(A区) → MeetWarningStandard(A区, 黄色, 大风) ∨ MeetWarningStandard(A区, 橙色, 大风)) → 启动Ⅱ级响应(w)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警等级：橙色\",\n            \"预警类型：大风\",\n            \"地区：B区\",\n            \"预警等级：橙色\",\n            \"预警类型：大风\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 橙色, 大风) ∧ ∀a (预警区(B区) → MeetWarningStandard(B区, 黄色, 大风) ∨ MeetWarningStandard(B区, 橙色, 大风)) → 启动Ⅱ级响应(w)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区：沿海地区\",\n            \"大风天气：是\",\n            \"风暴潮：是\",\n            \"影响类型：水上作业\",\n            \"持续影响：是\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (OccurWind(沿海地区) ∧ OccurStormSurge(沿海地区) ∧ CauseImpact(水上作业) ∧ ContinuedImpact(水上作业) → 启动Ⅱ级响应(w))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区：沿海地区\",\n            \"大风天气：是\",\n            \"风暴潮：是\",\n            \"影响类型：船舶安全\",\n            \"持续影响：是\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (OccurWind(沿海地区) ∧ OccurStormSurge(沿海地区) ∧ CauseImpact(船舶安全) ∧ ContinuedImpact(船舶安全) → 启动Ⅱ级响应(w))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区：沿海地区\",\n            \"大风天气：是\",\n            \"风暴潮：是\",\n            \"影响类型：交通\",\n            \"持续影响：是\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (OccurWind(沿海地区) ∧ OccurStormSurge(沿海地区) ∧ CauseImpact(交通) ∧ ContinuedImpact(交通) → 启动Ⅱ级响应(w))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区：沿海地区\",\n            \"大风天气：是\",\n            \"风暴潮：是\",\n            \"影响类型：生产生活\",\n            \"持续影响：是\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (OccurWind(沿海地区) ∧ OccurStormSurge(沿海地区) ∧ CauseImpact(生产生活) ∧ ContinuedImpact(生产生活) → 启动Ⅱ级响应(w))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警类型：低温蓝色预警\",\n            \"地区：华北\",\n            \"主要农作物：小麦\",\n            \"温度下限：5°C\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w ∀p (IssueWarning(中央气象台, 低温蓝色预警) ∨ LowHumidityWeather(华北) → (SustainedLowTemperature(华北) ∧ AffectYield(华北, 小麦) ∧ AbnormallyLow(华北, 气温) ∨ CoolingWeather(华北) ∧ ∀c (CropTolerance(c, 5°C) → CoolingWeather(华北) → 气温 < 5°C))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警类型：低温蓝色预警\",\n            \"地区：东北\",\n            \"主要农作物：玉米\",\n            \"温度下限：3°C\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w ∀p (IssueWarning(中央气象台, 低温蓝色预警) ∨ LowHumidityWeather(东北) → (SustainedLowTemperature(东北) ∧ AffectYield(东北, 玉米) ∧ AbnormallyLow(东北, 气温) ∨ CoolingWeather(东北) ∧ ∀c (CropTolerance(c, 3°C) → CoolingWeather(东北) → 气温 < 3°C))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警类型：低温蓝色预警\",\n            \"地区：华东\",\n            \"主要农作物：水稻\",\n            \"温度下限：7°C\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w ∀p (IssueWarning(中央气象台, 低温蓝色预警) ∨ LowHumidityWeather(华东) → (SustainedLowTemperature(华东) ∧ AffectYield(华东, 水稻) ∧ AbnormallyLow(华东, 气温) ∨ CoolingWeather(华东) ∧ ∀c (CropTolerance(c, 7°C) → CoolingWeather(华东) → 气温 < 7°C))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警类型：低温蓝色预警\",\n            \"地区：华南\",\n            \"主要农作物：柑橘\",\n            \"温度下限：10°C\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w ∀p (IssueWarning(中央气象台, 低温蓝色预警) ∨ LowHumidityWeather(华南) → (SustainedLowTemperature(华南) ∧ AffectYield(华南, 柑橘) ∧ AbnormallyLow(华南, 气温) ∨ CoolingWeather(华南) ∧ ∀c (CropTolerance(c, 10°C) → CoolingWeather(华南) → 气温 < 10°C))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警级别：黄色预警\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 黄色预警) → 启动低温Ⅲ级响应(w))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p1=“河北省” — 表示河北省出现低温天气\",\n            \"p2=“山东省” — 表示山东省出现低温天气\",\n            \"主要农作物：冬小麦\",\n            \"温度：5°C\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (LowTemperatureWeather(河北省) ∧ LowTemperatureWeather(山东省) ∧ ImpactYield(河北省, 冬小麦) ∧ ImpactYield(山东省, 冬小麦) ∧ AbnormallyLow(河北省, 5°C) ∧ AbnormallyLow(山东省, 5°C) ∧ ContinuedLowTemperature(河北省) ∧ ContinuedLowTemperature(山东省) → 启动低温Ⅲ级响应(w))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“吉林省” — 表示吉林省出现降温天气\",\n            \"主要农作物：水稻\",\n            \"温度：12°C\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (CoolingWeather(吉林省) ∧ TemperatureLowerLimit(水稻, 12°C) ∧ (日平均气温(吉林省) < 12°C) → 启动低温Ⅲ级响应(w))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警级别：黄色预警\",\n            \"p1=“黑龙江省” — 表示黑龙江省出现低温天气\",\n            \"p2=“辽宁省” — 表示辽宁省出现低温天气\",\n            \"主要农作物：玉米\",\n            \"温度：3°C\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 黄色预警) ∨ (LowTemperatureWeather(黑龙江省) ∧ LowTemperatureWeather(辽宁省) ∧ ImpactYield(黑龙江省, 玉米) ∧ ImpactYield(辽宁省, 玉米) ∧ AbnormallyLow(黑龙江省, 3°C) ∧ AbnormallyLow(辽宁省, 3°C) ∧ ContinuedLowTemperature(黑龙江省) ∧ ContinuedLowTemperature(辽宁省)) → 启动低温Ⅲ级响应(w))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“内蒙古自治区” — 表示内蒙古自治区出现降温天气\",\n            \"主要农作物：马铃薯\",\n            \"温度：8°C\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (CoolingWeather(内蒙古自治区) ∧ TemperatureLowerLimit(马铃薯, 8°C) ∧ (日平均气温(内蒙古自治区) < 8°C) → 启动低温Ⅲ级响应(w))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警级别：黄色预警\",\n            \"天数：2\",\n            \"地区1：北京\",\n            \"地区2：天津\",\n            \"预警级别：蓝色预警\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 黄色预警, 2) ∧ ∀r (MeetWarningStandard(北京, 蓝色预警) ∨ MeetWarningStandard(天津, 蓝色预警)) → 启动IV级响应)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警级别：黄色预警\",\n            \"天数：2\",\n            \"地区1：上海\",\n            \"地区2：浙江\",\n            \"预警级别：黄色预警\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 黄色预警, 2) ∧ ∀r (MeetWarningStandard(上海, 黄色预警) ∨ MeetWarningStandard(浙江, 黄色预警)) → 启动IV级响应)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区：河北\",\n            \"影响类型：健康\",\n            \"影响类型：农作物\",\n            \"电量紧张：是\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (PoseThreat(河北, 健康) ∨ PoseThreat(河北, 农作物) ∧ TightElectricity(河北) ∧ ImpactContinue(河北) → 启动IV级响应)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区：四川\",\n            \"影响类型：健康\",\n            \"影响类型：农作物\",\n            \"电量紧张：是\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (PoseThreat(四川, 健康) ∨ PoseThreat(四川, 农作物) ∧ TightElectricity(四川) ∧ ImpactContinue(四川) → 启动IV级响应)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警级别：橙色预警\",\n            \"天数：2\",\n            \"地区1：北京\",\n            \"预警级别1：蓝色预警\",\n            \"地区2：上海\",\n            \"预警级别2：蓝色预警\",\n            \"预计未来72h：是\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 橙色预警, 2) ∧ ∀r (MeetWarningStandard(r, 蓝色预警) → (r ∈ 预警区 ∧ 预计未来72h(r)))) ∨ (∃p1 ∃p2 (p1 ≠ p2 ∧ 产生威胁(p1, 健康威胁) ∧ 产生威胁(p2, 健康威胁)) ∧ ∃r (IncreaseHeatstrokePatients(r) ∧ AffectCropGrowth(r) ∧ TightElectricity(r) ∧ ImpactMayContinue(r)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警级别：橙色预警\",\n            \"天数：2\",\n            \"地区：广东\",\n            \"影响：健康威胁\",\n            \"地区：浙江\",\n            \"影响：健康威胁\",\n            \"地区：江苏\",\n            \"中暑患者增多：是\",\n            \"农作物受影响：是\",\n            \"电力紧张：是\",\n            \"影响可能持续：是\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 橙色预警, 2) ∧ ∀r (MeetWarningStandard(r, 蓝色预警) → (r ∈ 预警区 ∧ 预计未来72h(r)))) ∨ (∃p1 ∃p2 (p1 ≠ p2 ∧ 产生威胁(p1, 健康威胁) ∧ 产生威胁(p2, 健康威胁)) ∧ ∃r (IncreaseHeatstrokePatients(r) ∧ AffectCropGrowth(r) ∧ TightElectricity(r) ∧ ImpactMayContinue(r)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台=“中央气象台” — 表示中央气象台发布高温红色预警。\",\n            \"时间=“72小时” — 表示预计未来72小时内预警区内的大部地区将连续达到高温黄色预警以上标准。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueHighTempRedAlert(中央气象台) ∧ IssueHighTempRedAlert(中央气象台) ∧ ForecastHighTempYellowAlert(中央气象台, 72) → Ⅱ级响应启动())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区=“华北” — 表示高温天气在华北地区已经出现。\",\n            \"地区=“华北” — 表示高温天气对华北地区群众健康产生重大威胁。\",\n            \"地区=“华北” — 表示华北地区中暑患者明显增多。\",\n            \"地区=“华北” — 表示高温天气对华北地区的经济和社会活动产生重大影响。\",\n            \"地区=“华北” — 表示华北地区城乡用电明显紧张。\",\n            \"地区=“华北” — 表示高温天气对华北地区的影响可能持续。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r (HighTempWeatherOccurred(华北) ∧ MajorHealthThreat(华北) ∧ HeatstrokeIncrease(华北) ∧ EconomicSocialImpact(华北) ∧ ElectricityTension(华北) ∧ ImpactMayContinue(华北) → Ⅱ级响应启动())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台=“中央气象台” — 表示中央气象台发布高温红色预警。\",\n            \"时间=“72小时” — 表示预计未来72小时内预警区内的大部地区将连续达到高温黄色预警以上标准。\",\n            \"地区=“华东” — 表示高温天气在华东地区已经出现。\",\n            \"地区=“华东” — 表示高温天气对华东地区群众健康产生重大威胁。\",\n            \"地区=“华东” — 表示华东地区中暑患者明显增多。\",\n            \"地区=“华东” — 表示高温天气对华东地区的经济和社会活动产生重大影响。\",\n            \"地区=“华东” — 表示华东地区城乡用电明显紧张。\",\n            \"地区=“华东” — 表示高温天气对华东地区的影响可能持续。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueHighTempRedAlert(中央气象台) ∧ IssueHighTempRedAlert(中央气象台) ∧ ForecastHighTempYellowAlert(中央气象台, 72) → Ⅱ级响应启动())\",\n            \"∀r (HighTempWeatherOccurred(华东) ∧ MajorHealthThreat(华东) ∧ HeatstrokeIncrease(华东) ∧ EconomicSocialImpact(华东) ∧ ElectricityTension(华东) ∧ ImpactMayContinue(华东) → Ⅱ级响应启动())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台=“中央气象台” — 表示中央气象台发布高温红色预警。\",\n            \"时间=“72小时” — 表示预计未来72小时内预警区内的大部地区将连续达到高温黄色预警以上标准。\",\n            \"地区=“华南” — 表示高温天气在华南地区已经出现。\",\n            \"地区=“华南” — 表示高温天气对华南地区群众健康产生重大威胁。\",\n            \"地区=“华南” — 表示华南地区中暑患者明显增多。\",\n            \"地区=“华南” — 表示高温天气对华南地区的经济和社会活动产生重大影响。\",\n            \"地区=“华南” — 表示华南地区城乡用电明显紧张。\",\n            \"地区=“华南” — 表示高温天气对华南地区的影响可能持续。\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueHighTempRedAlert(中央气象台) ∧ IssueHighTempRedAlert(中央气象台) ∧ ForecastHighTempYellowAlert(中央气象台, 72) → Ⅱ级响应启动())\",\n            \"∀r (HighTempWeatherOccurred(华南) ∧ MajorHealthThreat(华南) ∧ HeatstrokeIncrease(华南) ∧ EconomicSocialImpact(华南) ∧ ElectricityTension(华南) ∧ ImpactMayContinue(华南) → Ⅱ级响应启动())\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警级别：蓝色预警\",\n            \"预警内容：霜冻天气\",\n            \"地区：华北平原\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 蓝色预警, w) ∧ 预计未来48h(w, 华北平原) → (FrostOccurrence(华北平原) ∧ AffectCrops(华北平原)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警级别：蓝色预警\",\n            \"预警内容：霜冻天气\",\n            \"地区：长江中下游地区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 蓝色预警, w) ∧ 预计未来48h(w, 长江中下游地区) → (FrostOccurrence(长江中下游地区) ∧ AffectCrops(长江中下游地区)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区：东北三省\",\n            \"霜冻天气已经出现：是\",\n            \"影响省份数量：3\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (霜冻天气已经出现(p) ∧ 两个及以上省(p) → (AffectCrops(东北三省) ∧ ContinuedImpact(东北三省)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区：西北地区\",\n            \"霜冻天气已经出现：是\",\n            \"影响省份数量：2\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (霜冻天气已经出现(p) ∧ 两个及以上省(p) → (AffectCrops(西北地区) ∧ ContinuedImpact(西北地区)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"w=“华北区域” — 表示预警区域为华北区域\",\n            \"a=“黄色” — 表示预警等级为黄色\",\n            \"p=“华北区域” — 表示影响区域为华北区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w∀a (IssueWarning(中央气象台, 黄色, “华北区域”) ∧ (MeetWarningStandard(“华北区域”, 黄色) ∨ IceWeatherOccurred(“华北区域”)) → ∃p (CauseImpact(“华北区域”, 交通运输) ∧ CauseImpact(“华北区域”, 电力供应) ∧ CauseImpact(“华北区域”, 人类生活) ∧ ImpactMayContinue(“华北区域”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=“华东区域” — 表示预警区域为华东区域\",\n            \"a=“黄色” — 表示预警等级为黄色\",\n            \"p=“华东区域” — 表示影响区域为华东区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w∀a (IssueWarning(中央气象台, 黄色, “华东区域”) ∧ (MeetWarningStandard(“华东区域”, 黄色) ∨ IceWeatherOccurred(“华东区域”)) → ∃p (CauseImpact(“华东区域”, 交通运输) ∧ CauseImpact(“华东区域”, 电力供应) ∧ CauseImpact(“华东区域”, 人类生活) ∧ ImpactMayContinue(“华东区域”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=“华南区域” — 表示预警区域为华南区域\",\n            \"a=“黄色” — 表示预警等级为黄色\",\n            \"p=“华南区域” — 表示影响区域为华南区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w∀a (IssueWarning(中央气象台, 黄色, “华南区域”) ∧ (MeetWarningStandard(“华南区域”, 黄色) ∨ IceWeatherOccurred(“华南区域”)) → ∃p (CauseImpact(“华南区域”, 交通运输) ∧ CauseImpact(“华南区域”, 电力供应) ∧ CauseImpact(“华南区域”, 人类生活) ∧ ImpactMayContinue(“华南区域”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=“华中区域” — 表示预警区域为华中区域\",\n            \"a=“黄色” — 表示预警等级为黄色\",\n            \"p=“华中区域” — 表示影响区域为华中区域\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w∀a (IssueWarning(中央气象台, 黄色, “华中区域”) ∧ (MeetWarningStandard(“华中区域”, 黄色) ∨ IceWeatherOccurred(“华中区域”)) → ∃p (CauseImpact(“华中区域”, 交通运输) ∧ CauseImpact(“华中区域”, 电力供应) ∧ CauseImpact(“华中区域”, 人类生活) ∧ ImpactMayContinue(“华中区域”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警等级：橙色预警\",\n            \"预警时间：72h\",\n            \"地区：北京\",\n            \"预警等级：黄色以上预警\",\n            \"地区：上海\",\n            \"影响类型：交通运输\",\n            \"地区：广东\",\n            \"影响类型：电力供应\",\n            \"地区：四川\",\n            \"影响类型：人类生活\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 橙色预警, 72h) → (∃r (MeetWarningStandard(北京, 黄色以上预警) ∧ ∃p (CauseImpact(上海, 交通运输) ∨ CauseImpact(广东, 电力供应) ∨ CauseImpact(四川, 人类生活)) ∧ ∃c (ContinuedImpact(上海, 交通运输) ∨ ContinuedImpact(广东, 电力供应) ∨ ContinuedImpact(四川, 人类生活))))\",\n            \"∀w (IssueWarning(中央气象台, 橙色预警, 72h) ∨ ∃p (CauseImpact(上海, 交通运输) ∨ CauseImpact(广东, 电力供应) ∨ CauseImpact(四川, 人类生活)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警等级：橙色预警\",\n            \"预警时间：72h\",\n            \"地区：湖南\",\n            \"预警等级：黄色以上预警\",\n            \"地区：湖北\",\n            \"影响类型：交通运输\",\n            \"地区：河南\",\n            \"影响类型：电力供应\",\n            \"地区：河北\",\n            \"影响类型：人类生活\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 橙色预警, 72h) → (∃r (MeetWarningStandard(湖南, 黄色以上预警) ∧ ∃p (CauseImpact(湖北, 交通运输) ∨ CauseImpact(河南, 电力供应) ∨ CauseImpact(河北, 人类生活)) ∧ ∃c (ContinuedImpact(湖北, 交通运输) ∨ ContinuedImpact(河南, 电力供应) ∨ ContinuedImpact(河北, 人类生活))))\",\n            \"∀w (IssueWarning(中央气象台, 橙色预警, 72h) ∨ ∃p (CauseImpact(湖北, 交通运输) ∨ CauseImpact(河南, 电力供应) ∨ CauseImpact(河北, 人类生活)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警等级：红色预警\",\n            \"预警时间：72h\",\n            \"地区1：北京\",\n            \"地区2：河北\",\n            \"预警等级：橙色以上\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 红色预警, 72h) ∧ ∀r (MeetWarningStandard(北京, 橙色以上) ∧ MeetWarningStandard(河北, 橙色以上) → (FrostyWeatherAppeared() ∨ ∃p (CauseImpact(p, 交通运输, 特别严重) ∧ ∃e (CauseImpact(e, 电力供应, 特别严重) ∧ ∃l (CauseImpact(l, 人类生活, 特别严重))))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警等级：红色预警\",\n            \"预警时间：72h\",\n            \"地区1：上海\",\n            \"地区2：江苏\",\n            \"预警等级：橙色以上\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 红色预警, 72h) ∧ ∀r (MeetWarningStandard(上海, 橙色以上) ∧ MeetWarningStandard(江苏, 橙色以上) → (FrostyWeatherAppeared() ∨ ∃p (CauseImpact(p, 交通运输, 特别严重) ∧ ∃e (CauseImpact(e, 电力供应, 特别严重) ∧ ∃l (CauseImpact(l, 人类生活, 特别严重))))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警等级：红色预警\",\n            \"预警时间：72h\",\n            \"地区1：广东\",\n            \"地区2：广西\",\n            \"预警等级：橙色以上\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 红色预警, 72h) ∧ ∀r (MeetWarningStandard(广东, 橙色以上) ∧ MeetWarningStandard(广西, 橙色以上) → (FrostyWeatherAppeared() ∨ ∃p (CauseImpact(p, 交通运输, 特别严重) ∧ ∃e (CauseImpact(e, 电力供应, 特别严重) ∧ ∃l (CauseImpact(l, 人类生活, 特别严重))))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警等级：红色预警\",\n            \"预警时间：72h\",\n            \"地区1：四川\",\n            \"地区2：重庆\",\n            \"预警等级：橙色以上\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 红色预警, 72h) ∧ ∀r (MeetWarningStandard(四川, 橙色以上) ∧ MeetWarningStandard(重庆, 橙色以上) → (FrostyWeatherAppeared() ∨ ∃p (CauseImpact(p, 交通运输, 特别严重) ∧ ∃e (CauseImpact(e, 电力供应, 特别严重) ∧ ∃l (CauseImpact(l, 人类生活, 特别严重))))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警等级：橙色\",\n            \"预警类型：大雾\",\n            \"地区：华北区域\",\n            \"预警等级：黄色\",\n            \"预计未来72h：是\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 橙色, 大雾) ∧ ∀r (MeetWarningStandard(华北区域, 黄色, 大雾) → 预计未来72h(华北区域, 连续达到, 预警等级)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警等级：橙色\",\n            \"预警类型：大雾\",\n            \"地区：华东区域\",\n            \"预警等级：黄色\",\n            \"预计未来72h：是\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 橙色, 大雾) ∧ ∀r (MeetWarningStandard(华东区域, 黄色, 大雾) → 预计未来72h(华东区域, 连续达到, 预警等级)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区：河北省\",\n            \"影响程度：较大\",\n            \"地区：山东省\",\n            \"影响程度：较大\",\n            \"地区：河南省\",\n            \"影响程度：较大\",\n            \"影响可能持续：是\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃p (影响交通运输(河北省, 较大) ∧ ∃t (河北省 ∈ t ∧ t ∈ {省, 自治区, 直辖市}) ∧ ∃n (n ≥ 2 ∧ ∀i (i ∈ n → 影响交通运输(i, 较大))) ∧ 影响可能持续)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区：江苏省\",\n            \"影响程度：较大\",\n            \"地区：浙江省\",\n            \"影响程度：较大\",\n            \"地区：安徽省\",\n            \"影响程度：较大\",\n            \"影响可能持续：是\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃p (影响交通运输(江苏省, 较大) ∧ ∃t (江苏省 ∈ t ∧ t ∈ {省, 自治区, 直辖市}) ∧ ∃n (n ≥ 2 ∧ ∀i (i ∈ n → 影响交通运输(i, 较大))) ∧ 影响可能持续)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警等级：红色预警\",\n            \"预警类型：大雾\",\n            \"地区：华北区域\",\n            \"橙色预警以上：橙色预警\",\n            \"未来72h：是\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃w (IssueWarning(中央气象台, 红色预警, 大雾) ∧ ∀r (MeetWarningStandard(华北区域, 橙色预警, 大雾) → (华北区域 ∈ 预警区) ∧ (华北区域 ∈ 未来72h))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警等级：红色预警\",\n            \"预警类型：大雾\",\n            \"地区：华东区域\",\n            \"橙色预警以上：橙色预警\",\n            \"未来72h：是\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃w (IssueWarning(中央气象台, 红色预警, 大雾) ∧ ∀r (MeetWarningStandard(华东区域, 橙色预警, 大雾) → (华东区域 ∈ 预警区) ∧ (华东区域 ∈ 未来72h))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警等级：红色预警\",\n            \"预警类型：大雾\",\n            \"地区：东北区域\",\n            \"橙色预警以上：橙色预警\",\n            \"未来72h：是\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃w (IssueWarning(中央气象台, 红色预警, 大雾) ∧ ∀r (MeetWarningStandard(东北区域, 橙色预警, 大雾) → (东北区域 ∈ 预警区) ∧ (东北区域 ∈ 未来72h))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区：河北省\",\n            \"影响程度：重大影响\",\n            \"大雾影响地区：是\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃d (AffectTransportation(河北省, 重大影响) ∧ (河北省 ∈ 省) ∧ ∃n (n ≥ 3 ∧ ∀p (p ∈ 河北省 → (p ∈ 大雾影响地区))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区：江苏省\",\n            \"影响程度：重大影响\",\n            \"大雾影响地区：是\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃d (AffectTransportation(江苏省, 重大影响) ∧ (江苏省 ∈ 省) ∧ ∃n (n ≥ 3 ∧ ∀p (p ∈ 江苏省 → (p ∈ 大雾影响地区))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区：广东省\",\n            \"影响程度：重大影响\",\n            \"大雾影响地区：是\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃d (AffectTransportation(广东省, 重大影响) ∧ (广东省 ∈ 省) ∧ ∃n (n ≥ 3 ∧ ∀p (p ∈ 广东省 → (p ∈ 大雾影响地区))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警类型：霾黄色预警\",\n            \"时间：48h\",\n            \"地区a：北京市\",\n            \"地区b：天津市\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 霾黄色预警, 48h) ∧ ∀a (预警区(北京市) → MeetWarningStandard(北京市, 霾黄色预警)) ∧ ∀a (预警区(天津市) → MeetWarningStandard(天津市, 霾黄色预警)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区p1：河北省\",\n            \"影响类型：交通运输\",\n            \"地区p2：山西省\",\n            \"影响类型：人类生活\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃p1 ∃p2 (Impact(河北省, 交通运输) ∧ Impact(山西省, 人类生活)) ∧ (ContinuedImpact(河北省, 交通运输) ∨ ContinuedImpact(山西省, 人类生活))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区p1：上海市\",\n            \"影响类型：人类生活\",\n            \"地区p2：江苏省\",\n            \"影响类型：交通运输\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃p1 ∃p2 (Impact(上海市, 人类生活) ∧ Impact(江苏省, 交通运输)) ∧ (ContinuedImpact(上海市, 人类生活) ∨ ContinuedImpact(江苏省, 交通运输))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警类型：霾黄色预警\",\n            \"时间：48h\",\n            \"地区a：重庆市\",\n            \"地区b：四川省\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 霾黄色预警, 48h) ∧ ∀a (预警区(重庆市) → MeetWarningStandard(重庆市, 霾黄色预警)) ∧ ∀a (预警区(四川省) → MeetWarningStandard(四川省, 霾黄色预警)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区p1：辽宁省\",\n            \"影响类型：交通运输\",\n            \"地区p2：吉林省\",\n            \"影响类型：人类生活\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃p1 ∃p2 (Impact(辽宁省, 交通运输) ∧ Impact(吉林省, 人类生活)) ∧ (ContinuedImpact(辽宁省, 交通运输) ∨ ContinuedImpact(吉林省, 人类生活))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警级别：橙色\",\n            \"地区：华北区域\",\n            \"预警级别：黄色以上\",\n            \"持续时间：72h\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 橙色) ∧ ∀a (预警区(华北区域) → MeetWarningStandard(华北区域, 黄色以上)) ∧ 持续时间(72h) → 启动Ⅲ级响应())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区：华东区域\",\n            \"预警级别：黄色以上\",\n            \"省：江苏省\",\n            \"影响类型：交通运输\",\n            \"影响类型：人类生活\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃r (霾天气出现(华东区域) ∧ ∃t (省(江苏省) ∨ 自治区(t) ∨ 直辖市(t)) ∧ ∀l (大部分地区(l, 江苏省) → (Impact(l, 交通运输) ∨ Impact(l, 人类生活)) ∧ 持续影响(l, 影响类型)) → 启动Ⅲ级响应()\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警级别：橙色\",\n            \"地区：华南区域\",\n            \"预警级别：黄色以上\",\n            \"持续时间：72h\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 橙色) ∧ ∀a (预警区(华南区域) → MeetWarningStandard(华南区域, 黄色以上)) ∧ 持续时间(72h) → 启动Ⅲ级响应())\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"地区：华中区域\",\n            \"预警级别：黄色以上\",\n            \"自治区：广西壮族自治区\",\n            \"影响类型：交通运输\",\n            \"影响类型：人类生活\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃r (霾天气出现(华中区域) ∧ ∃t (省(t) ∨ 自治区(广西壮族自治区) ∨ 直辖市(t)) ∧ ∀l (大部分地区(l, 广西壮族自治区) → (Impact(l, 交通运输) ∨ Impact(l, 人类生活)) ∧ 持续影响(l, 影响类型)) → 启动Ⅲ级响应()\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警级别：橙色\",\n            \"地区：东北区域\",\n            \"预警级别：黄色以上\",\n            \"持续时间：72h\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀w (IssueWarning(中央气象台, 橙色) ∧ ∀a (预警区(东北区域) → MeetWarningStandard(东北区域, 黄色以上)) ∧ 持续时间(72h) → 启动Ⅲ级响应())\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"气象台：中央气象台\",\n            \"预警等级：红色预警\",\n            \"时间：未来120小时\",\n            \"地区：预警区\",\n            \"预警等级：橙色预警\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃w (IssueWarning(中央气象台, 红色预警, w) ∧ ∀r (r ⊆预警区 → MeetWarningStandard(r, 橙色预警) → 持续时间(w, 120h)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"天气现象：霾天气\",\n            \"地区：河北省\",\n            \"影响类型：交通运输\",\n            \"地区：北京市\",\n            \"影响类型：人类生活\",\n            \"地区：天津市\",\n            \"影响类型：交通运输\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃w (霾天气(w) ∧ ∃p1 (p1 是省) ∧ ∃t1 (t1 是交通运输) ∧ Impact(河北省, t1) ∧ 持续影响(河北省, t1) ∧ ∃p2 (p2 是直辖市) ∧ ∃t2 (t2 是人类生活) ∧ Impact(北京市, t2) ∧ 持续影响(北京市, t2) ∧ ∃p3 (p3 是直辖市) ∧ ∃t3 (t3 是交通运输) ∧ Impact(天津市, t3) ∧ 持续影响(天津市, t3) ∧ 受影响地区数量(p1, p2, p3) ≥ 3)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"国家森林防火指挥部负责全国森林防火工作\",\n            \"国家林业局设立指挥部办公室并负责指挥部日常工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"Responsible(国家森林防火指挥部, ForestFirePrevention) ∧ Organize(国家森林防火指挥部, ForestFirePrevention) ∧ Coordinate(国家森林防火指挥部, ForestFirePrevention) ∧ Guide(国家森林防火指挥部, ForestFirePrevention) ∧ Establish(国家林业局, 指挥部办公室) ∧ Responsible(指挥部办公室, 指挥部日常工作)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"北京市设立森林防火指挥机构负责本行政区域森林防火工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃o (Establish(北京市, o) ∧ Responsible(o, ForestFirePrevention) ∧ Organize(o, ForestFirePrevention) ∧ Coordinate(o, ForestFirePrevention) ∧ Guide(o, ForestFirePrevention))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"广东省人民政府根据需要设立森林防火指挥机构负责本行政区域森林防火工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃o (Establish(广东省人民政府, o) ∧ Responsible(o, ForestFirePrevention) ∧ Organize(o, ForestFirePrevention) ∧ Coordinate(o, ForestFirePrevention) ∧ Guide(o, ForestFirePrevention))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"某县级人民政府根据需要设立森林防火指挥机构负责本行政区域森林防火工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃o (Establish(某县级人民政府, o) ∧ Responsible(o, ForestFirePrevention) ∧ Organize(o, ForestFirePrevention) ∧ Coordinate(o, ForestFirePrevention) ∧ Guide(o, ForestFirePrevention))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c=“县级以上地方人民政府抗震救灾指挥部” — 表示抗震救灾指挥部\",\n            \"a=“某市” — 表示行政区域为某市\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c∀a (CommandCenter(“县级以上地方人民政府抗震救灾指挥部”) ∧ Area(“某市”) → (Lead(“县级以上地方人民政府抗震救灾指挥部”, “某市”) ∧ Command(“县级以上地方人民政府抗震救灾指挥部”, “某市”) ∧ Coordinate(“县级以上地方人民政府抗震救灾指挥部”, “某市”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o1=“当地解放军” — 表示解放军\",\n            \"o2=“武警部队” — 表示武警部队\",\n            \"a=“某市” — 表示行政区域为某市\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o1∀o2∀a (Organization(“当地解放军”) ∧ Organization(“武警部队”) ∧ Area(“某市”) ∧抗震救灾职责(“当地解放军”) ∧抗震救灾职责(“武警部队”) → (ParticipateInRelief(“当地解放军”, “某市”) ∧ ParticipateInRelief(“武警部队”, “某市”) ∧ CloselyCoordinate(“当地解放军”, “武警部队”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o1=“民兵组织” — 表示民兵组织\",\n            \"o2=“地方有关部门” — 表示地方有关部门\",\n            \"a=“某县” — 表示行政区域为某县\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o1∀o2∀a (Organization(“民兵组织”) ∧ Organization(“地方有关部门”) ∧ Area(“某县”) ∧抗震救灾职责(“民兵组织”) ∧抗震救灾职责(“地方有关部门”) → (ParticipateInRelief(“民兵组织”, “某县”) ∧ ParticipateInRelief(“地方有关部门”, “某县”) ∧ CloselyCoordinate(“民兵组织”, “地方有关部门”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o1=“某市消防局” — 表示消防局\",\n            \"o2=“某市红十字会” — 表示红十字会\",\n            \"a=“某市” — 表示行政区域为某市\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o1∀o2∀a (Organization(“某市消防局”) ∧ Organization(“某市红十字会”) ∧ Area(“某市”) ∧抗震救灾职责(“某市消防局”) ∧抗震救灾职责(“某市红十字会”) → (ParticipateInRelief(“某市消防局”, “某市”) ∧ ParticipateInRelief(“某市红十字会”, “某市”) ∧ CloselyCoordinate(“某市消防局”, “某市红十字会”)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"f=“森林火灾A” — 表示某次森林火灾为森林火灾A\",\n            \"c=“当地森林防火指挥机构A” — 表示当地森林防火指挥机构为当地森林防火指挥机构A\"\n        ],\n        \"instance_logicexpression\": [\n            \"ForestFire(森林火灾A) → ∃c (LocalCommand(当地森林防火指挥机构A) ∧ InCharge(当地森林防火指挥机构A, 森林火灾A))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“森林火灾B” — 表示某次森林火灾为森林火灾B\",\n            \"c=“省级森林防火指挥机构1” — 表示省级森林防火指挥机构为省级森林防火指挥机构1\"\n        ],\n        \"instance_logicexpression\": [\n            \"CrossProvincial(森林火灾B) ∧ MajorOrExtreme(森林火灾B) → ∃c (ProvincialCommand(省级森林防火指挥机构1) ∧ InCharge(省级森林防火指挥机构1, 森林火灾B))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“森林火灾C” — 表示某次森林火灾为森林火灾C\",\n            \"NationalCommander=“国家森林防火指挥部” — 表示国家森林防火指挥部负责协调和指导\"\n        ],\n        \"instance_logicexpression\": [\n            \"CrossProvincial(森林火灾C) ∧ MajorOrExtreme(森林火灾C) → NationalCommand(国家森林防火指挥部) ∧ CoordinateAndGuide(国家森林防火指挥部, 森林火灾C)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“森林火灾D” — 表示某次森林火灾为森林火灾D\",\n            \"c=“省级森林防火指挥机构2” — 表示省级森林防火指挥机构为省级森林防火指挥机构2\"\n        ],\n        \"instance_logicexpression\": [\n            \"CrossProvincial(森林火灾D) ∧ MajorOrExtreme(森林火灾D) → ∃c (ProvincialCommand(省级森林防火指挥机构2) ∧ InCharge(省级森林防火指挥机构2, 森林火灾D))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“地方森林防火指挥机构A” — 表示地方森林防火指挥机构A\",\n            \"s=“森林X” — 表示森林火灾现场在森林X\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀s (ForestFire(森林X) → EstablishCommand(地方森林防火指挥机构A, 森林X))\",\n            \"∀u∀c∀s (ForestFire(森林X) ∧ ParticipateInFirefighting(u, 森林X) → ObeyCommand(u, c))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“地方森林防火指挥机构B” — 表示地方森林防火指挥机构B\",\n            \"s=“森林Y” — 表示森林火灾现场在森林Y\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀s (ForestFire(森林Y) → EstablishCommand(地方森林防火指挥机构B, 森林Y))\",\n            \"∀u∀c∀s (ForestFire(森林Y) ∧ ParticipateInFirefighting(u, 森林Y) → ObeyCommand(u, c))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“地方森林防火指挥机构C” — 表示地方森林防火指挥机构C\",\n            \"s=“森林Z” — 表示森林火灾现场在森林Z\",\n            \"u=“消防队1” — 表示参加前方扑火的单位为消防队1\",\n            \"c=“前线指挥部C” — 表示前线指挥部为C\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀s (ForestFire(森林Z) → EstablishCommand(地方森林防火指挥机构C, 森林Z))\",\n            \"∀u∀c∀s (ForestFire(森林Z) ∧ ParticipateInFirefighting(消防队1, 森林Z) → ObeyCommand(消防队1, 前线指挥部C))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“地方森林防火指挥机构D” — 表示地方森林防火指挥机构D\",\n            \"s=“森林W” — 表示森林火灾现场在森林W\",\n            \"u=“消防队2” — 表示参加前方扑火的单位为消防队2\",\n            \"c=“前线指挥部D” — 表示前线指挥部为D\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀s (ForestFire(森林W) → EstablishCommand(地方森林防火指挥机构D, 森林W))\",\n            \"∀u∀c∀s (ForestFire(森林W) ∧ ParticipateInFirefighting(消防队2, 森林W) → ObeyCommand(消防队2, 前线指挥部D))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"f=“林区A” — 表示火灾发生在林区A\",\n            \"c=“林区A县政府” — 表示林区A县政府是县级或以上级别政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f∀c (Fire(林区A) ∧ CountyLevelOrAbove(林区A县政府) → (PerformTask(武警森林部队, 扑救任务) ∧ UnderCommand(武警森林部队, 林区A县政府)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“林区B” — 表示火灾发生在林区B\",\n            \"t=“跨省界扑救任务” — 表示扑救任务涉及跨省界\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t (CrossProvince(跨省界扑救任务) → PerformTask(武警森林部队, 跨省界扑救任务) ∧ UnderCommand(武警森林部队, 国家森林防火指挥部))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“林区C” — 表示火灾发生在林区C\",\n            \"c=“林区C市政府” — 表示林区C市政府是县级或以上级别政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f∀c (Fire(林区C) ∧ CountyLevelOrAbove(林区C市政府) → (PerformTask(武警森林部队, 扑救任务) ∧ UnderCommand(武警森林部队, 林区C市政府)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“林区D” — 表示火灾发生在林区D\",\n            \"c=“林区D省政府” — 表示林区D省政府是县级或以上级别政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f∀c (Fire(林区D) ∧ CountyLevelOrAbove(林区D省政府) → (PerformTask(武警森林部队, 扑救任务) ∧ UnderCommand(武警森林部队, 林区D省政府)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d1=“国家林业局” — 表示国家林业局作为林业主管部门\",\n            \"d2=“国家气象局” — 表示国家气象局作为气象主管部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"林业主管部门(国家林业局) ∧ 气象主管部门(国家气象局) → Consult(国家林业局, 国家气象局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家林业局” — 表示国家林业局作为制作预警信息的部门\",\n            \"w=“森林火险橙色预警” — 表示国家林业局制作的预警信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"林业主管部门(国家林业局) ∨ 气象主管部门(国家林业局) → CreateWarning(国家林业局, 森林火险橙色预警)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=“森林火险橙色预警” — 表示需要发布的预警信息\",\n            \"c=“互联网” — 表示预警信息发布的渠道之一\"\n        ],\n        \"instance_logicexpression\": [\n            \"RiskArea(互联网) → PublishWarning(森林火险橙色预警, 互联网)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=“森林火险橙色预警” — 表示由国家森林防火指挥部创建的预警信息\",\n            \"p=“广东省森林防火指挥机构” — 表示省级森林防火指挥机构之一\"\n        ],\n        \"instance_logicexpression\": [\n            \"CreateWarning(国家森林防火指挥部, 森林火险橙色预警) → 省级森林防火指挥机构(广东省森林防火指挥机构) ∧ RequestWork(国家森林防火指挥部, 广东省森林防火指挥机构)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d1=“北京市园林绿化局” — 表示北京市园林绿化局作为林业主管部门\",\n            \"d2=“北京市气象局” — 表示北京市气象局作为气象主管部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"林业主管部门(北京市园林绿化局) ∧ 气象主管部门(北京市气象局) → Consult(北京市园林绿化局, 北京市气象局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“四川省林业和草原局” — 表示四川省林业和草原局作为制作预警信息的部门\",\n            \"w=“森林火险红色预警” — 表示四川省林业和草原局制作的预警信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"林业主管部门(四川省林业和草原局) ∨ 气象主管部门(四川省林业和草原局) → CreateWarning(四川省林业和草原局, 森林火险红色预警)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=“森林火险红色预警” — 表示需要发布的预警信息\",\n            \"c=“手机短信” — 表示预警信息发布的渠道之一\"\n        ],\n        \"instance_logicexpression\": [\n            \"RiskArea(手机短信) → PublishWarning(森林火险红色预警, 手机短信)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"l=“红色” — 表示预警级别为红色\",\n            \"r=“A区” — 表示预警地区为A区\",\n            \"Department=“县级以上地方人民政府” — 表示执行部门为县级以上地方人民政府\",\n            \"Force=“武警森林部队” — 表示武警森林部队\",\n            \"FireDepartment=“当地森林消防队伍” — 表示当地森林消防队伍\"\n        ],\n        \"instance_logicexpression\": [\n            \"WarningLevel(红色) → (红色 = 红色 ∨ 红色 = 橙色 ∨ 红色 = 黄色 ∨ 红色 = 蓝色)\",\n            \"IssueWarning(A区, 红色) ∧ (红色 = 橙色 ∨ 红色 = 红色) → (StrengthenManagement(县级以上地方人民政府) ∧ ConductInspection(县级以上地方人民政府) ∧ IncreaseBroadcast(县级以上地方人民政府) ∧ PrepareSupplies(县级以上地方人民政府) ∧ AdjustTroops(武警森林部队) ∧ ForwardDeployment(当地森林消防队伍))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=“橙色” — 表示预警级别为橙色\",\n            \"r=“B区” — 表示预警地区为B区\",\n            \"Department=“县级以上地方人民政府” — 表示执行部门为县级以上地方人民政府\",\n            \"Force=“武警森林部队” — 表示武警森林部队\",\n            \"FireDepartment=“当地森林消防队伍” — 表示当地森林消防队伍\"\n        ],\n        \"instance_logicexpression\": [\n            \"WarningLevel(橙色) → (橙色 = 红色 ∨ 橙色 = 橙色 ∨ 橙色 = 黄色 ∨ 橙色 = 蓝色)\",\n            \"IssueWarning(B区, 橙色) ∧ (橙色 = 橙色 ∨ 橙色 = 红色) → (StrengthenManagement(县级以上地方人民政府) ∧ ConductInspection(县级以上地方人民政府) ∧ IncreaseBroadcast(县级以上地方人民政府) ∧ PrepareSupplies(县级以上地方人民政府) ∧ AdjustTroops(武警森林部队) ∧ ForwardDeployment(当地森林消防队伍))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=“黄色” — 表示预警级别为黄色\",\n            \"r=“C区” — 表示预警地区为C区\"\n        ],\n        \"instance_logicexpression\": [\n            \"WarningLevel(黄色) → (黄色 = 红色 ∨ 黄色 = 橙色 ∨ 黄色 = 黄色 ∨ 黄色 = 蓝色)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=“蓝色” — 表示预警级别为蓝色\",\n            \"r=“D区” — 表示预警地区为D区\"\n        ],\n        \"instance_logicexpression\": [\n            \"WarningLevel(蓝色) → (蓝色 = 红色 ∨ 蓝色 = 橙色 ∨ 蓝色 = 黄色 ∨ 蓝色 = 蓝色)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"w=“蓝色预警” — 表示发布了蓝色预警信息\",\n            \"地方政府=“某市县级人民政府” — 表示预警地区的县级以上地方人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"发布预警(蓝色预警) ∧ (蓝色预警 = 蓝色预警 ∨ 蓝色预警 = 黄色预警) → (CloselyMonitor(某市县级人民政府, 天气情况) ∧ CloselyMonitor(某市县级人民政府, 森林火险预警变化) ∧ StrengthenPatrol(森林防火巡护) ∧ StrengthenPatrol(卫星林火监测) ∧ StrengthenPatrol(瞭望监测) ∧ DoPropaganda(预警信息发布) ∧ DoPropaganda(森林防火) ∧ StrengthenManagement(火源管理) ∧ PrepareEquipment(防火装备) ∧ PrepareEquipment(物资) → OnStandby(森林消防队伍))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=“黄色预警” — 表示发布了黄色预警信息\",\n            \"地方政府=“某省人民政府” — 表示预警地区的省级人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"发布预警(黄色预警) ∧ (黄色预警 = 蓝色预警 ∨ 黄色预警 = 黄色预警) → (CloselyMonitor(某省人民政府, 天气情况) ∧ CloselyMonitor(某省人民政府, 森林火险预警变化) ∧ StrengthenPatrol(森林防火巡护) ∧ StrengthenPatrol(卫星林火监测) ∧ StrengthenPatrol(瞭望监测) ∧ DoPropaganda(预警信息发布) ∧ DoPropaganda(森林防火) ∧ StrengthenManagement(火源管理) ∧ PrepareEquipment(防火装备) ∧ PrepareEquipment(物资) → OnStandby(森林消防队伍))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=“蓝色预警” — 表示发布了蓝色预警信息\",\n            \"地方政府=“某县地方人民政府” — 表示预警地区的县级人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"发布预警(蓝色预警) ∧ (蓝色预警 = 蓝色预警 ∨ 蓝色预警 = 黄色预警) → (CloselyMonitor(某县地方人民政府, 天气情况) ∧ CloselyMonitor(某县地方人民政府, 森林火险预警变化) ∧ StrengthenPatrol(森林防火巡护) ∧ StrengthenPatrol(卫星林火监测) ∧ StrengthenPatrol(瞭望监测) ∧ DoPropaganda(预警信息发布) ∧ DoPropaganda(森林防火) ∧ StrengthenManagement(火源管理) ∧ PrepareEquipment(防火装备) ∧ PrepareEquipment(物资) → OnStandby(森林消防队伍))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"w=“黄色预警” — 表示发布了黄色预警信息\",\n            \"地方政府=“某市地方人民政府” — 表示预警地区的市级人民政府\"\n        ],\n        \"instance_logicexpression\": [\n            \"发布预警(黄色预警) ∧ (黄色预警 = 蓝色预警 ∨ 黄色预警 = 黄色预警) → (CloselyMonitor(某市地方人民政府, 天气情况) ∧ CloselyMonitor(某市地方人民政府, 森林火险预警变化) ∧ StrengthenPatrol(森林防火巡护) ∧ StrengthenPatrol(卫星林火监测) ∧ StrengthenPatrol(瞭望监测) ∧ DoPropaganda(预警信息发布) ∧ DoPropaganda(森林防火) ∧ StrengthenManagement(火源管理) ∧ PrepareEquipment(防火装备) ∧ PrepareEquipment(物资) → OnStandby(森林消防队伍))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=500 — 受害森林面积为500公顷\",\n            \"c=10 — 死亡人数为10人\",\n            \"i=20 — 重伤人数为20人\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀c∀i (ForestFire(500, 10, 20) → (500 < 1000 ∧ 10 < 30 ∧ 20 < 100 → GeneralForestFire(500, 10, 20)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=1500 — 受害森林面积为1500公顷\",\n            \"c=25 — 死亡人数为25人\",\n            \"i=90 — 重伤人数为90人\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀c∀i (ForestFire(1500, 25, 90) → (1500 ≥ 1000 ∨ 25 ≥ 30 ∨ 90 ≥ 100 → ExtraordinaryForestFire(1500, 25, 90)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=800 — 受害森林面积为800公顷\",\n            \"c=0 — 死亡人数为0人\",\n            \"i=150 — 重伤人数为150人\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀c∀i (ForestFire(800, 0, 150) → (800 < 1000 ∧ 0 < 30 ∧ 150 ≥ 100 → MajorForestFire(800, 0, 150)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=950 — 受害森林面积为950公顷\",\n            \"c=45 — 死亡人数为45人\",\n            \"i=50 — 重伤人数为50人\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀c∀i (ForestFire(950, 45, 50) → (950 < 1000 ∧ 45 ≥ 30 ∧ 50 < 100 → ExtraordinaryForestFire(950, 45, 50)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=1200 — 受害森林面积为1200公顷\",\n            \"c=5 — 死亡人数为5人\",\n            \"i=80 — 重伤人数为80人\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀c∀i (ForestFire(1200, 5, 80) → (1200 ≥ 1000 ∨ 5 < 30 ∨ 80 < 100 → LargeForestFire(1200, 5, 80)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=150 — 表示受害森林面积为150公顷\",\n            \"d=15 — 表示死亡人数为15人\",\n            \"i=60 — 表示重伤人数为60人\"\n        ],\n        \"instance_logicexpression\": [\n            \"AffectedArea(150) ∧ DeathCount(15) ∧ InjuredCount(60) → (150 > 100 ∧ 150 < 1000 ∨ 15 > 10 ∧ 15 < 30 ∨ 60 > 50 ∧ 60 < 100) → MajorForestFire(150, 15, 60)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=800 — 表示受害森林面积为800公顷\",\n            \"d=20 — 表示死亡人数为20人\",\n            \"i=55 — 表示重伤人数为55人\"\n        ],\n        \"instance_logicexpression\": [\n            \"AffectedArea(800) ∧ DeathCount(20) ∧ InjuredCount(55) → (800 > 100 ∧ 800 < 1000 ∨ 20 > 10 ∧ 20 < 30 ∨ 55 > 50 ∧ 55 < 100) → MajorForestFire(800, 20, 55)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=120 — 表示受害森林面积为120公顷\",\n            \"d=25 — 表示死亡人数为25人\",\n            \"i=70 — 表示重伤人数为70人\"\n        ],\n        \"instance_logicexpression\": [\n            \"AffectedArea(120) ∧ DeathCount(25) ∧ InjuredCount(70) → (120 > 100 ∧ 120 < 1000 ∨ 25 > 10 ∧ 25 < 30 ∨ 70 > 50 ∧ 70 < 100) → MajorForestFire(120, 25, 70)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=950 — 表示受害森林面积为950公顷\",\n            \"d=12 — 表示死亡人数为12人\",\n            \"i=90 — 表示重伤人数为90人\"\n        ],\n        \"instance_logicexpression\": [\n            \"AffectedArea(950) ∧ DeathCount(12) ∧ InjuredCount(90) → (950 > 100 ∧ 950 < 1000 ∨ 12 > 10 ∧ 12 < 30 ∨ 90 > 50 ∧ 90 < 100) → MajorForestFire(950, 12, 90)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=2 — 表示受害森林面积为2公顷\",\n            \"d=4 — 表示死亡人数为4人\",\n            \"i=15 — 表示重伤人数为15人\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃a ∃d ∃i (AffectedArea(2) ∧ DeathCount(4) ∧ InjuredCount(15) ∧ ((2 > 1 ∧ 2 ≤ 100) ∨ (4 > 3 ∧ 4 ≤ 10) ∨ (15 > 10 ∧ 15 ≤ 50)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=50 — 表示受害森林面积为50公顷\",\n            \"d=7 — 表示死亡人数为7人\",\n            \"i=30 — 表示重伤人数为30人\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃a ∃d ∃i (AffectedArea(50) ∧ DeathCount(7) ∧ InjuredCount(30) ∧ ((50 > 1 ∧ 50 ≤ 100) ∨ (7 > 3 ∧ 7 ≤ 10) ∨ (30 > 10 ∧ 30 ≤ 50)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=95 — 表示受害森林面积为95公顷\",\n            \"d=9 — 表示死亡人数为9人\",\n            \"i=45 — 表示重伤人数为45人\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃a ∃d ∃i (AffectedArea(95) ∧ DeathCount(9) ∧ InjuredCount(45) ∧ ((95 > 1 ∧ 95 ≤ 100) ∨ (9 > 3 ∧ 9 ≤ 10) ∨ (45 > 10 ∧ 45 ≤ 50)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=3 — 表示受害森林面积为3公顷\",\n            \"d=5 — 表示死亡人数为5人\",\n            \"i=20 — 表示重伤人数为20人\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃a ∃d ∃i (AffectedArea(3) ∧ DeathCount(5) ∧ InjuredCount(20) ∧ ((3 > 1 ∧ 3 ≤ 100) ∨ (5 > 3 ∧ 5 ≤ 10) ∨ (20 > 10 ∧ 20 ≤ 50)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Area=0.5 — 表示受害森林面积为0.5公顷\",\n            \"Land=“非森林” — 表示起火的是其他林地\",\n            \"Count=2 — 表示死亡人数为2人\"\n        ],\n        \"instance_logicexpression\": [\n            \"(AffectedArea(0.5) ∨ Fire(“非森林”)) ∧ (Death(2) ∨ Injured(1..10))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Area=1.5 — 表示受害森林面积为1.5公顷\",\n            \"Count=0 — 表示没有死亡人数\",\n            \"Count=8 — 表示重伤人数为8人\"\n        ],\n        \"instance_logicexpression\": [\n            \"(AffectedArea(1.5) ∨ Fire(OtherLand)) ∧ (Death(0) ∨ Injured(8))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Area=0.8 — 表示受害森林面积为0.8公顷\",\n            \"Count=3 — 表示死亡人数为3人\",\n            \"Count=1 — 表示重伤人数为1人\"\n        ],\n        \"instance_logicexpression\": [\n            \"(AffectedArea(0.8) ∨ Fire(OtherLand)) ∧ (Death(3) ∨ Injured(1))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Area=0.2 — 表示受害森林面积为0.2公顷\",\n            \"Land=“森林” — 表示起火的是森林\",\n            \"Count=0 — 表示没有死亡人数\",\n            \"Count=10 — 表示重伤人数为10人\"\n        ],\n        \"instance_logicexpression\": [\n            \"(AffectedArea(0.2) ∨ Fire(“森林”)) ∧ (Death(0) ∨ Injured(10))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"FireOccured() — 表示火灾发生。\",\n            \"Institution=“基层森林防火指挥机构” — 表示基层森林防火指挥机构。\"\n        ],\n        \"instance_logicexpression\": [\n            \"FireOccured() → TakeMeasures(基层森林防火指挥机构)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"FireLevel=“一般森林火灾” — 表示火灾等级为一般。\",\n            \"Institution=“县级森林防火指挥机构” — 表示县级森林防火指挥机构。\"\n        ],\n        \"instance_logicexpression\": [\n            \"InitialAssessment(一般森林火灾) ∨ InitialAssessment(较大森林火灾) → CommandResponsibility(县级森林防火指挥机构, 一般或较大)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"FireLevel=“较大森林火灾” — 表示火灾等级为较大。\",\n            \"Institution=“县级森林防火指挥机构” — 表示县级森林防火指挥机构。\"\n        ],\n        \"instance_logicexpression\": [\n            \"InitialAssessment(一般森林火灾) ∨ InitialAssessment(较大森林火灾) → CommandResponsibility(县级森林防火指挥机构, 一般或较大)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"FireLevel=“重大森林火灾” — 表示火灾等级为重大。\",\n            \"Institution=“市级森林防火指挥机构” — 表示市级森林防火指挥机构。\"\n        ],\n        \"instance_logicexpression\": [\n            \"InitialAssessment(重大森林火灾) → CommandResponsibility(市级森林防火指挥机构, 重大)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"FireLevel=“特别重大森林火灾” — 表示火灾等级为特别重大。\",\n            \"Institution=“省级森林防火指挥机构” — 表示省级森林防火指挥机构。\"\n        ],\n        \"instance_logicexpression\": [\n            \"InitialAssessment(特别重大森林火灾) → CommandResponsibility(省级森林防火指挥机构, 特别重大)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Institution=“市级森林防火指挥机构” — 表示市级森林防火指挥机构。\"\n        ],\n        \"instance_logicexpression\": [\n            \"必要时(AdjustCommandHierarchy(市级森林防火指挥机构))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“森林A” — 表示火灾现场在森林A\",\n            \"TeamType=“基层应急队伍” — 表示组织基层应急队伍\",\n            \"Scene=“森林A” — 表示火灾现场在森林A\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (Fire(森林A) → (OrganizeTeam(基层应急队伍, 森林A) ∧ OrganizeTeam(专业森林消防队, 森林A) ∧ ExtinguishFire(森林A)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“森林B” — 表示火灾现场在森林B\",\n            \"Necessity=“是” — 表示在森林B扑火有必要\",\n            \"EquipmentType=“航空消防飞机” — 表示调配航空消防飞机\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (Fire(森林B) ∧ Necessity(是) → (OrganizeTeam(解放军, 森林B) ∨ OrganizeTeam(武警部队, 森林B) ∨ OrganizeTeam(民兵预备役部队, 森林B) ∨ OrganizeTeam(公安消防部队, 森林B) ∧ AllocateEquipment(航空消防飞机, 森林B)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“森林C” — 表示火灾现场在森林C\",\n            \"f=“当地解放军” — 表示当地解放军参与扑火\",\n            \"CommandCenter=“前线指挥部” — 表示前线指挥部负责统一调度\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s ∀f (Fire(森林C) → UnifiedCommand(当地解放军, 前线指挥部))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“森林D” — 表示火灾现场在森林D\",\n            \"c=“前线指挥官王” — 表示现场指挥员为前线指挥官王\",\n            \"Environment=“森林D环境” — 表示森林D的地理环境\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s ∀c (Fire(森林D) → AnalyzeSituation(前线指挥官王, 森林D环境, FireSituation(森林D)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“森林E” — 表示火灾现场在森林E\",\n            \"c=“前线指挥官李” — 表示现场指挥员为前线指挥官李\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s ∀c (Fire(森林E) → MonitorChanges(前线指挥官李, Weather(森林E), Fire(森林E)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“森林F” — 表示火灾现场在森林F\",\n            \"c=“前线指挥官张” — 表示现场指挥员为前线指挥官张\",\n            \"p=“扑火队员” — 表示扑火人员为扑火队员\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s ∀c ∀p (Fire(森林F) → EnsureSafety(前线指挥官张, 扑火队员))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“残疾人” — 表示残疾人不适宜参加扑救工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (InappropriatePersonnel(残疾人) → ¬MobilizePersonnel(残疾人))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“森林边缘的小镇” — 表示森林边缘的小镇受到森林火灾的威胁\",\n            \"p=“小镇居民” — 表示需要疏散的小镇居民\",\n            \"Facility=“临时避难所” — 表示居民被安置在临时避难所\"\n        ],\n        \"instance_logicexpression\": [\n            \"Threatened(森林边缘的小镇) → (TakeFirePrevention(森林边缘的小镇) ∧ FormulateEvacuationPlan(森林边缘的小镇))\",\n            \"Threatened(森林边缘的小镇) ∧ Evacuate(小镇居民, 森林边缘的小镇) → Settle(小镇居民, 临时避难所) ∧ HaveNecessities(小镇居民)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“山区度假村” — 表示山区度假村受到森林火灾的威胁\",\n            \"p=“度假村游客” — 表示需要疏散的度假村游客\",\n            \"Facility=“附近的体育馆” — 表示游客被安置在附近的体育馆\"\n        ],\n        \"instance_logicexpression\": [\n            \"Threatened(山区度假村) → (TakeFirePrevention(山区度假村) ∧ FormulateEvacuationPlan(山区度假村))\",\n            \"Threatened(山区度假村) ∧ Evacuate(度假村游客, 山区度假村) → Settle(度假村游客, 附近的体育馆) ∧ HaveNecessities(度假村游客)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“国家公园” — 表示国家公园受到森林火灾的威胁\",\n            \"p=“公园工作人员” — 表示需要疏散的公园工作人员\",\n            \"Facility=“公园外的接待中心” — 表示工作人员被安置在公园外的接待中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"Threatened(国家公园) → (TakeFirePrevention(国家公园) ∧ FormulateEvacuationPlan(国家公园))\",\n            \"Threatened(国家公园) ∧ Evacuate(公园工作人员, 国家公园) → Settle(公园工作人员, 公园外的接待中心) ∧ HaveNecessities(公园工作人员)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“城市郊区” — 表示城市郊区受到森林火灾的威胁\",\n            \"p=“郊区居民” — 表示需要疏散的郊区居民\",\n            \"Facility=“城市社区中心” — 表示居民被安置在城市社区中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"Threatened(城市郊区) → (TakeFirePrevention(城市郊区) ∧ FormulateEvacuationPlan(城市郊区))\",\n            \"Threatened(城市郊区) ∧ Evacuate(郊区居民, 城市郊区) → Settle(郊区居民, 城市社区中心) ∧ HaveNecessities(郊区居民)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“李明” — 李明为受伤人员\",\n            \"l=“市中心医院” — 表示火灾发生地为市中心医院\"\n        ],\n        \"instance_logicexpression\": [\n            \"受伤人员(李明) → Hospitalize(李明)\",\n            \"火灾(市中心医院) → (DispatchEmergencyTeam(市中心医院) ∧ (EstablishTemporaryHospital(市中心医院) ∨ EstablishMedicalPoint(市中心医院)) ∧ PerformOnsiteTreatment(市中心医院))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“王丽” — 王丽为重伤员\",\n            \"l=“郊区化工厂” — 表示火灾发生地为郊区化工厂\"\n        ],\n        \"instance_logicexpression\": [\n            \"重伤员(王丽) → RemoteTreatment(王丽)\",\n            \"火灾(郊区化工厂) → (DispatchEmergencyTeam(郊区化工厂) ∧ (EstablishTemporaryHospital(郊区化工厂) ∨ EstablishMedicalPoint(郊区化工厂)) ∧ PerformOnsiteTreatment(郊区化工厂))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“赵强” — 赵强为受伤人员\",\n            \"l=“居民区” — 表示火灾发生地为居民区\"\n        ],\n        \"instance_logicexpression\": [\n            \"受伤人员(赵强) → Hospitalize(赵强)\",\n            \"火灾(居民区) → (DispatchEmergencyTeam(居民区) ∧ (EstablishTemporaryHospital(居民区) ∨ EstablishMedicalPoint(居民区)) ∧ PerformOnsiteTreatment(居民区))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“孙红” — 孙红为重伤员\",\n            \"l=“商业中心” — 表示火灾发生地为商业中心\"\n        ],\n        \"instance_logicexpression\": [\n            \"重伤员(孙红) → RemoteTreatment(孙红)\",\n            \"火灾(商业中心) → (DispatchEmergencyTeam(商业中心) ∧ (EstablishTemporaryHospital(商业中心) ∨ EstablishMedicalPoint(商业中心)) ∧ PerformOnsiteTreatment(商业中心))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"v=“李明” — 李明为遇难人员\",\n            \"f=“王强” — 王强为参与扑救森林火灾的消防员\"\n        ],\n        \"instance_logicexpression\": [\n            \"遇难人员(李明) → (Aftercare(李明) ∧ ConsoleFamily(李明))\",\n            \"FightFire(王强) → (Injured(王强) ∨ Disabled(王强) ∨ Deceased(王强) → MedicalCompensation(王强))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"v=“赵红” — 赵红为遇难人员\",\n            \"f=“孙涛” — 孙涛为参与扑救森林火灾的消防员\"\n        ],\n        \"instance_logicexpression\": [\n            \"遇难人员(赵红) → (Aftercare(赵红) ∧ ConsoleFamily(赵红))\",\n            \"FightFire(孙涛) → (Injured(孙涛) ∨ Disabled(孙涛) ∨ Deceased(孙涛) → MedicalCompensation(孙涛))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"v=“周杰” — 周杰为遇难人员\",\n            \"f=“吴亮” — 吴亮为参与扑救森林火灾的消防员\"\n        ],\n        \"instance_logicexpression\": [\n            \"遇难人员(周杰) → (Aftercare(周杰) ∧ ConsoleFamily(周杰))\",\n            \"FightFire(吴亮) → (Injured(吴亮) ∨ Disabled(吴亮) ∨ Deceased(吴亮) → MedicalCompensation(吴亮))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"v=“钱伟” — 钱伟为遇难人员\",\n            \"f=“郑华” — 郑华为参与扑救森林火灾的消防员\"\n        ],\n        \"instance_logicexpression\": [\n            \"遇难人员(钱伟) → (Aftercare(钱伟) ∧ ConsoleFamily(钱伟))\",\n            \"FightFire(郑华) → (Injured(郑华) ∨ Disabled(郑华) ∨ Deceased(郑华) → MedicalCompensation(郑华))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=“军事基地” — 表示重要目标为军事基地\",\n            \"受到火灾威胁：Threatened(军事基地, Fire) — 表示军事基地受到火灾威胁\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t (ImportantTarget(军事基地) ∧ Threatened(军事基地, Fire) → (AssembleTeam(军事基地) ∧ EliminateThreat(军事基地) → EnsureSafety(军事基地)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“核电厂” — 表示重要目标为核电厂\",\n            \"受到火灾威胁：Threatened(核电厂, Fire) — 表示核电厂受到火灾威胁\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t (ImportantTarget(核电厂) ∧ Threatened(核电厂, Fire) → (AssembleTeam(核电厂) ∧ EliminateThreat(核电厂) → EnsureSafety(核电厂)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“化工厂” — 表示重要目标为化工厂\",\n            \"受到火灾威胁：Threatened(化工厂, Fire) — 表示化工厂受到火灾威胁\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t (ImportantTarget(化工厂) ∧ Threatened(化工厂, Fire) → (AssembleTeam(化工厂) ∧ EliminateThreat(化工厂) → EnsureSafety(化工厂)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“输油管道” — 表示重要目标为输油管道\",\n            \"受到火灾威胁：Threatened(输油管道, Fire) — 表示输油管道受到火灾威胁\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀t (ImportantTarget(输油管道) ∧ Threatened(输油管道, Fire) → (AssembleTeam(输油管道) ∧ EliminateThreat(输油管道) → EnsureSafety(输油管道)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“受灾区” — 表示火灾受影响的区域\",\n            \"c=“李明” — 表示进行违法犯罪行为的个人\"\n        ],\n        \"instance_logicexpression\": [\n            \"AffectedByFire(受灾区) → StrengthenManagement(受灾区)\",\n            \"Theft(李明) ∨ Robbery(李明) ∨ Looting(李明) ∨ SpreadRumors(李明) → CrackDown(李明)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"l=“银行” — 表示金融单位\",\n            \"l=“储备仓库” — 表示储备仓库\"\n        ],\n        \"instance_logicexpression\": [\n            \"FinancialUnit(银行) ∨ StorageFacility(银行) → IncreasePatrol(银行)\",\n            \"FinancialUnit(储备仓库) ∨ StorageFacility(储备仓库) → IncreasePatrol(储备仓库)\",\n            \"IncreasePatrol(银行) → SocialStability\",\n            \"IncreasePatrol(储备仓库) → SocialStability\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“王强” — 表示进行哄抢救灾物资的个人\"\n        ],\n        \"instance_logicexpression\": [\n            \"Looting(王强) → CrackDown(王强)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“赵丽” — 表示传播谣言的个人\"\n        ],\n        \"instance_logicexpression\": [\n            \"SpreadRumors(赵丽) → CrackDown(赵丽)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“商业区” — 表示火灾受影响的商业区\"\n        ],\n        \"instance_logicexpression\": [\n            \"AffectedByFire(商业区) → StrengthenManagement(商业区)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"火灾地点：森林A — 表示森林A发生了火灾\",\n            \"扑火人员：消防队1 — 表示消防队1负责扑火工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"Extinguished(森林A) → (OrganizeFirefighters(消防队1, CleanUpEmbers) ∧ DivideResponsibilityAreas() ∧ EnsureGuardsOnDuty())\",\n            \"InspectionPassed(NoFireNoSmokeNoGas) → FirefightersWithdrawn()\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"火灾地点：森林B — 表示森林B发生了火灾\",\n            \"扑火人员：消防队2 — 表示消防队2负责扑火工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"Extinguished(森林B) → (OrganizeFirefighters(消防队2, CleanUpEmbers) ∧ DivideResponsibilityAreas() ∧ EnsureGuardsOnDuty())\",\n            \"InspectionPassed(NoFireNoSmokeNoGas) → FirefightersWithdrawn()\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"火灾地点：森林C — 表示森林C发生了火灾\",\n            \"扑火人员：消防队3 — 表示消防队3负责扑火工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"Extinguished(森林C) → (OrganizeFirefighters(消防队3, CleanUpEmbers) ∧ DivideResponsibilityAreas() ∧ EnsureGuardsOnDuty())\",\n            \"InspectionPassed(NoFireNoSmokeNoGas) → FirefightersWithdrawn()\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"火灾地点：森林D — 表示森林D发生了火灾\",\n            \"扑火人员：消防队4 — 表示消防队4负责扑火工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"Extinguished(森林D) → (OrganizeFirefighters(消防队4, CleanUpEmbers) ∧ DivideResponsibilityAreas() ∧ EnsureGuardsOnDuty())\",\n            \"InspectionPassed(NoFireNoSmokeNoGas) → FirefightersWithdrawn()\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"F=“火场1号” — 表示森林火灾的编号为1号\",\n            \"A=“林业局” — 表示启动应急响应的机构为林业局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀F∀A (FireExtinguished(“火场1号”) ∧ CleanupApproved(“火场1号”) ∧ DisasterConsequencesEliminated(“火场1号”) ∧ ActivateEmergencyResponse(林业局, “火场1号”) → TerminateEmergencyResponse(林业局, “火场1号”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"F=“火场2号” — 表示森林火灾的编号为2号\",\n            \"A=“消防局” — 表示启动应急响应的机构为消防局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀F∀A (FireExtinguished(“火场2号”) ∧ CleanupApproved(“火场2号”) ∧ DisasterConsequencesEliminated(“火场2号”) ∧ ActivateEmergencyResponse(消防局, “火场2号”) → TerminateEmergencyResponse(消防局, “火场2号”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"F=“火场3号” — 表示森林火灾的编号为3号\",\n            \"A=“应急管理局” — 表示启动应急响应的机构为应急管理局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀F∀A (FireExtinguished(“火场3号”) ∧ CleanupApproved(“火场3号”) ∧ DisasterConsequencesEliminated(“火场3号”) ∧ ActivateEmergencyResponse(应急管理局, “火场3号”) → TerminateEmergencyResponse(应急管理局, “火场3号”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"F=“火场4号” — 表示森林火灾的编号为4号\",\n            \"A=“森林防火指挥部” — 表示启动应急响应的机构为森林防火指挥部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀F∀A (FireExtinguished(“火场4号”) ∧ CleanupApproved(“火场4号”) ∧ DisasterConsequencesEliminated(“火场4号”) ∧ ActivateEmergencyResponse(森林防火指挥部, “火场4号”) → TerminateEmergencyResponse(森林防火指挥部, “火场4号”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"A=“150000公顷” — 表示过火面积为150000公顷\",\n            \"S=“严重” — 表示国土安全和社会稳定受到严重威胁\",\n            \"E=“特别巨大” — 表示经济损失特别巨大\",\n            \"C=“无能力” — 表示省级人民政府没有能力和条件有效控制火场蔓延\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A ∀S ∀E ∀C (ForestFire(150000) ∧ (VerySevereForestFire(150000) ∨ NationalSecurityThreat(严重) ∨ EconomicLoss(特别巨大) ∨ ¬ProvincialControlCapability(无能力)) → (Propose(国家森林防火指挥部, Ⅰ级) ∧ Decide(国务院, Ⅰ级))\",\n            \"∀A ∀S ∀E ∀C (ForestFire(150000) ∧ (150000 > 100000) ∧ (S = '严重') ∧ (E = '特别巨大') ∧ (C = '无能力') → Decide(国务院, Ⅰ级))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“120000公顷” — 表示过火面积为120000公顷\",\n            \"S=“非常严重” — 表示国土安全和社会稳定受到非常严重的威胁\",\n            \"E=“巨大” — 表示经济损失巨大\",\n            \"C=“有限能力” — 表示省级人民政府有有限的能力控制火场蔓延\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A ∀S ∀E ∀C (ForestFire(120000) ∧ (VerySevereForestFire(120000) ∨ NationalSecurityThreat(非常严重) ∨ EconomicLoss(巨大) ∨ ¬ProvincialControlCapability(有限能力)) → (Propose(国家森林防火指挥部, Ⅰ级) ∧ Decide(国务院, Ⅰ级))\",\n            \"∀A ∀S ∀E ∀C (ForestFire(120000) ∧ (120000 > 100000) ∧ (S = '非常严重') ∧ (E = '巨大') ∧ (C = '有限能力') → Decide(国务院, Ⅰ级))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“90000公顷” — 表示过火面积为90000公顷\",\n            \"S=“中等” — 表示国土安全和社会稳定受到中等程度的威胁\",\n            \"E=“较大” — 表示经济损失较大\",\n            \"C=“较强能力” — 表示省级人民政府具有较强的能力控制火场蔓延\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A ∀S ∀E ∀C (ForestFire(90000) ∧ (VerySevereForestFire(90000) ∨ NationalSecurityThreat(中等) ∨ EconomicLoss(较大) ∨ ¬ProvincialControlCapability(较强能力)) → (Propose(国家森林防火指挥部, Ⅰ级) ∧ Decide(国务院, Ⅰ级))\",\n            \"∀A ∀S ∀E ∀C (ForestFire(90000) ∧ (90000 > 100000) → Decide(国务院, Ⅰ级))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“50000公顷” — 表示过火面积为50000公顷\",\n            \"S=“轻微” — 表示国土安全和社会稳定受到轻微的威胁\",\n            \"E=“较小” — 表示经济损失较小\",\n            \"C=“完全能力” — 表示省级人民政府具有完全的能力控制火场蔓延\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀A ∀S ∀E ∀C (ForestFire(50000) ∧ (VerySevereForestFire(50000) ∨ NationalSecurityThreat(轻微) ∨ EconomicLoss(较小) ∨ ¬ProvincialControlCapability(完全能力)) → (Propose(国家森林防火指挥部, Ⅰ级) ∧ Decide(国务院, Ⅰ级))\",\n            \"∀A ∀S ∀E ∀C (ForestFire(50000) ∧ (50000 > 100000) → Decide(国务院, Ⅰ级))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“国家森林防火指挥部” — 表示组织是国家森林防火指挥部\",\n            \"t=“火灾扑救” — 表示工作组类型为火灾扑救\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishTaskForce(国家森林防火指挥部, 火灾扑救)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“省级人民政府” — 表示指导单位为省级人民政府\",\n            \"p=“森林火灾扑救方案” — 表示方案类型为森林火灾扑救方案\"\n        ],\n        \"instance_logicexpression\": [\n            \"指导(省级人民政府) → DevelopPlan(省级人民政府, 森林火灾扑救方案)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家森林防火指挥部” — 表示组织是国家森林防火指挥部\",\n            \"r=“解放军” — 表示增调的支援类型为解放军\"\n        ],\n        \"instance_logicexpression\": [\n            \"CoordinateReinforcement(国家森林防火指挥部, 解放军)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家森林防火指挥部” — 表示组织是国家森林防火指挥部\",\n            \"s=“生活救助物资” — 表示安排的物资类型为生活救助物资\",\n            \"TeamType=“卫生应急队伍” — 表示增派的队伍类型为卫生应急队伍\",\n            \"People=“受威胁群众” — 表示协调转移的人群为受威胁群众\"\n        ],\n        \"instance_logicexpression\": [\n            \"ArrangeSupplies(国家森林防火指挥部, 生活救助物资) ∧ DispatchTeams(国家森林防火指挥部, 卫生应急队伍) → CoordinateEvacuation(国家森林防火指挥部, 受威胁群众)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家森林防火指挥部” — 表示组织是国家森林防火指挥部\",\n            \"i=“通信” — 表示抢修的基础设施类型为通信\"\n        ],\n        \"instance_logicexpression\": [\n            \"RepairInfrastructure(国家森林防火指挥部, 通信)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家森林防火指挥部” — 表示组织是国家森林防火指挥部\",\n            \"Target=“重要目标物” — 表示加强保护的目标为重要目标物\"\n        ],\n        \"instance_logicexpression\": [\n            \"StrengthenProtection(国家森林防火指挥部, 重要目标物)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家森林防火指挥部” — 表示组织是国家森林防火指挥部\",\n            \"OperationType=“人工影响天气作业” — 表示实施的作业类型为人工影响天气作业\"\n        ],\n        \"instance_logicexpression\": [\n            \"ImplementOperation(国家森林防火指挥部, 人工影响天气作业)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家森林防火指挥部” — 表示组织是国家森林防火指挥部\",\n            \"InformationType=“森林火灾信息” — 表示发布的信息类型为森林火灾信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"ReleaseInformation(国家森林防火指挥部, 森林火灾信息)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家森林防火指挥部” — 表示组织是国家森林防火指挥部\",\n            \"MatterType=“重大事项” — 表示决定的事项类型为重大事项\"\n        ],\n        \"instance_logicexpression\": [\n            \"DecideMatters(国家森林防火指挥部, 重大事项)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"F=“森林火灾A” — 表示森林火灾A是一个森林火灾事件\",\n            \"VerySevere(F) — 表示森林火灾A是特别重大的\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀F ((VerySevere(F) ∨ (SensitiveTime(F) ∧ SensitiveArea(F) ∧ NotEffectivelyControlled(F))) → ActivateLevelIIResponse(F))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"F=“森林火灾B” — 表示森林火灾B是一个森林火灾事件\",\n            \"SensitiveTime(F) — 表示森林火灾B发生在敏感时段\",\n            \"SensitiveArea(F) — 表示森林火灾B发生在敏感地区\",\n            \"NotEffectivelyControlled(F) — 表示森林火灾B在72小时内未得到有效控制\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀F ((VerySevere(F) ∨ (SensitiveTime(F) ∧ SensitiveArea(F) ∧ NotEffectivelyControlled(F))) → ActivateLevelIIResponse(F))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"F=“森林火灾C” — 表示森林火灾C是一个森林火灾事件\",\n            \"VerySevere(F) — 表示森林火灾C是特别重大的\",\n            \"SensitiveTime(F) — 表示森林火灾C发生在敏感时段\",\n            \"SensitiveArea(F) — 表示森林火灾C发生在敏感地区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀F ((VerySevere(F) ∨ (SensitiveTime(F) ∧ SensitiveArea(F) ∧ NotEffectivelyControlled(F))) → ActivateLevelIIResponse(F))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"F=“森林火灾D” — 表示森林火灾D是一个森林火灾事件\",\n            \"SensitiveTime(F) — 表示森林火灾D发生在敏感时段\",\n            \"SensitiveArea(F) — 表示森林火灾D发生在敏感地区\",\n            \"NotEffectivelyControlled(F) — 表示森林火灾D在72小时内未得到有效控制\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀F ((VerySevere(F) ∨ (SensitiveTime(F) ∧ SensitiveArea(F) ∧ NotEffectivelyControlled(F))) → ActivateLevelIIResponse(F))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"国家森林防火指挥部组织有关成员单位开展火情会商 — 表示国家森林防火指挥部组织有关成员单位开展火情会商\",\n            \"国家森林防火指挥部分析火险形势 — 表示分析火险形势\",\n            \"国家森林防火指挥部研究扑救措施及保障工作 — 表示研究扑救措施及保障工作\",\n            \"国家森林防火指挥部会同有关部门和专家组成工作组 — 表示指挥部会同有关部门和专家组成工作组\",\n            \"工作组赶赴火场 — 表示工作组赶赴火场\",\n            \"工作组协调、指导火灾扑救工作 — 表示协调、指导火灾扑救工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"OrganizeConsultation(国家森林防火指挥部, 有关成员单位) ∧ AnalyzeSituation(国家森林防火指挥部) ∧ StudyMeasures(国家森林防火指挥部) → (FormWorkGroup(国家森林防火指挥部, 有关部门, 专家) ∧ GoToFireScene(工作组) ∧ CoordinateGuide(工作组, 火灾扑救))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"省级森林防火指挥机构请求跨区域支援 — 表示省级森林防火指挥机构请求跨区域支援\",\n            \"国家森林防火指挥部调派武警森林部队跨区域支援 — 表示根据省级森林防火指挥机构的请求，指挥部调派武警森林部队跨区域支援\",\n            \"国家森林防火指挥部调派森林航空消防飞机跨省参加扑火 — 表示调派森林航空消防飞机跨省（区、市）参加扑火\"\n        ],\n        \"instance_logicexpression\": [\n            \"省级森林防火指挥机构请求(跨区域支援) → (DispatchSupport(国家森林防火指挥部, 武警森林部队, 跨区域) ∧ DispatchAircraft(国家森林防火指挥部, 森林航空消防飞机, 跨省))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"火场气象条件为干燥 — 表示根据火场气象条件，指导、督促当地开展人工影响天气作业\"\n        ],\n        \"instance_logicexpression\": [\n            \"火场气象条件(干燥) → GuideOperation(国家森林防火指挥部, 当地, 干燥)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"省级森林防火指挥机构请求物资和卫生应急队伍增援 — 表示根据省级森林防火指挥机构的请求，协调做好扑火物资调拨运输、卫生应急队伍增援等工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"省级森林防火指挥机构请求(物资和卫生应急队伍增援) → CoordinateSupplies(国家森林防火指挥部, 省级, 扑火物资, 卫生应急队伍)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"中央媒体加强扑火救灾宣传报道 — 表示协调中央媒体加强扑火救灾宣传报道\"\n        ],\n        \"instance_logicexpression\": [\n            \"StrengthenMedia(中央媒体, 扑火救灾)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"F=“森林火灾A” — 表示森林火灾A被初判为重大森林火灾\",\n            \"T=“当前时间” — 表示当前时间\",\n            \"A=“非敏感地区” — 表示非敏感地区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀F∀T∀A (MajorForestFire(森林火灾A) ∨ (SensitiveTime(当前时间) ∧ SensitiveArea(非敏感地区) ∧ ¬Extinguish(森林火灾A, 当前时间) ∧ 当前时间 ≤ 48) → LevelIIIResponse()\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"F=“森林火灾B” — 表示森林火灾B\",\n            \"T=“节假日” — 表示节假日是敏感时段\",\n            \"A=“自然保护区” — 表示自然保护区是敏感地区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀F∀T∀A (MajorForestFire(森林火灾B) ∨ (SensitiveTime(节假日) ∧ SensitiveArea(自然保护区) ∧ ¬Extinguish(森林火灾B, 节假日) ∧ 节假日 ≤ 48) → LevelIIIResponse()\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"F=“森林火灾C” — 表示森林火灾C\",\n            \"T=“春季防火期” — 表示春季防火期是敏感时段\",\n            \"A=“国家公园” — 表示国家公园是敏感地区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀F∀T∀A (MajorForestFire(森林火灾C) ∨ (SensitiveTime(春季防火期) ∧ SensitiveArea(国家公园) ∧ ¬Extinguish(森林火灾C, 春季防火期) ∧ 春季防火期 ≤ 48) → LevelIIIResponse()\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"F=“森林火灾D” — 表示森林火灾D\",\n            \"T=“旅游旺季” — 表示旅游旺季是敏感时段\",\n            \"A=“风景名胜区” — 表示风景名胜区是敏感地区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀F∀T∀A (MajorForestFire(森林火灾D) ∨ (SensitiveTime(旅游旺季) ∧ SensitiveArea(风景名胜区) ∧ ¬Extinguish(森林火灾D, 旅游旺季) ∧ 旅游旺季 ≤ 48) → LevelIIIResponse()\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“国家森林防火指挥部办公室” — 表示国家森林防火指挥部办公室\",\n            \"s=“森林火灾最新情况” — 表示森林火灾的最新情况\",\n            \"f=“火场” — 表示火灾发生的现场\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o ∀s (DispatchUnderstand(“国家森林防火指挥部办公室”, “森林火灾最新情况”) ∧ OrganizeConsultation(“国家森林防火指挥部办公室”) ∧ StudyMeasures(“国家森林防火指挥部办公室”) → (∃f SendWorkGroup(“国家森林防火指挥部办公室”, f) ∧ CoordinateGuide(“国家森林防火指挥部办公室”, f)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“省级森林防火指挥机构” — 表示省级森林防火指挥机构\",\n            \"a=“森林航空消防飞机” — 表示森林航空消防飞机\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r ∀a (Request(“省级森林防火指挥机构”) → DispatchAircraft(“省级森林防火指挥机构”, “森林航空消防飞机”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“武警森林指挥部” — 表示武警森林指挥部\",\n            \"f=“当地武警森林部队” — 表示当地武警森林部队\",\n            \"FireScene=“火灾现场” — 表示火灾发生的现场\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c ∀f (CommandExtinguishing(“武警森林指挥部”, “当地武警森林部队”, “火灾现场”) → GuideReinforcement(“武警森林指挥部”, “当地武警森林部队”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"b=“中国气象局” — 表示中国气象局\",\n            \"s=“天气预报和天气实况服务” — 表示天气预报和天气实况服务\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀b ∀s (ProvideService(“中国气象局”, “天气预报和天气实况服务”) → OperationPreparation(“中国气象局”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"F=“森林火灾A” — 表示事件A是森林火灾\",\n            \"T=“2024-04-01 00:00” — 表示时间点\",\n            \"N=2 — 表示死亡人数\",\n            \"Extinguished(F, 24)=false — 表示24小时内未扑灭\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃F (ForestFire(F) ∧ (Death(F, 2) ∨ Injury(F, 3)) ∧ ¬Extinguished(F, 24) → LevelIVResponse(2024-04-01 00:00))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"F=“森林火灾B” — 表示事件B是森林火灾\",\n            \"T=“2024-04-02 00:00” — 表示时间点\",\n            \"L=“自然保护区” — 表示地点是敏感地区\",\n            \"Extinguished(F, 24)=false — 表示24小时内未扑灭\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃F (ForestFire(F) ∧ (SensitiveTime(2024-04-02 00:00) ∨ SensitiveArea(自然保护区)) ∧ ¬Extinguished(F, 24) → LevelIVResponse(2024-04-02 00:00))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"F1=“森林火灾C” — 表示事件C是森林火灾\",\n            \"F2=“森林火灾D” — 表示事件D是森林火灾\",\n            \"F3=“森林火灾E” — 表示事件E是森林火灾\",\n            \"HighRisk(F1)=true — 表示事件C的危险性较大\",\n            \"HighRisk(F2)=true — 表示事件D的危险性较大\",\n            \"HighRisk(F3)=true — 表示事件E的危险性较大\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃F1 ∃F2 ∃F3 (ForestFire(F1) ∧ ForestFire(F2) ∧ ForestFire(F3) ∧ HighRisk(F1) ∧ HighRisk(F2) ∧ HighRisk(F3) → LevelIVResponse(T))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Office=“国家森林防火指挥部办公室” — 表示国家森林防火指挥部办公室\",\n            \"p1=“广东省” — 表示广东省\",\n            \"p2=“广西省” — 表示广西省\",\n            \"Team=“专业森林消防队” — 表示专业森林消防队\",\n            \"s=“高森林火险” — 表示高森林火险情况\",\n            \"Level=“高森林火险预警” — 表示高森林火险预警级别\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyStatus(国家森林防火指挥部办公室) ∧ EnhanceMonitoring(国家森林防火指挥部办公室) ∧ DispatchInformation(国家森林防火指挥部办公室)\",\n            \"GuideExtinguishing(国家森林防火指挥部办公室) → 相邻省份(广东省, 广西省) ∧ CoordinateSupport(广东省, 广西省, 专业森林消防队)\",\n            \"情况(高森林火险) → IssueWarning(国家森林防火指挥部办公室, 高森林火险预警)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Office=“国家森林防火指挥部办公室” — 表示国家森林防火指挥部办公室\",\n            \"p1=“四川省” — 表示四川省\",\n            \"p2=“云南省” — 表示云南省\",\n            \"Team=“专业森林消防队” — 表示专业森林消防队\",\n            \"s=“高森林火险” — 表示高森林火险情况\",\n            \"Level=“高森林火险预警” — 表示高森林火险预警级别\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyStatus(国家森林防火指挥部办公室) ∧ EnhanceMonitoring(国家森林防火指挥部办公室) ∧ DispatchInformation(国家森林防火指挥部办公室)\",\n            \"GuideExtinguishing(国家森林防火指挥部办公室) → 相邻省份(四川省, 云南省) ∧ CoordinateSupport(四川省, 云南省, 专业森林消防队)\",\n            \"情况(高森林火险) → IssueWarning(国家森林防火指挥部办公室, 高森林火险预警)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Office=“国家森林防火指挥部办公室” — 表示国家森林防火指挥部办公室\",\n            \"p1=“黑龙江省” — 表示黑龙江省\",\n            \"p2=“吉林省” — 表示吉林省\",\n            \"Team=“专业森林消防队” — 表示专业森林消防队\",\n            \"s=“高森林火险” — 表示高森林火险情况\",\n            \"Level=“高森林火险预警” — 表示高森林火险预警级别\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyStatus(国家森林防火指挥部办公室) ∧ EnhanceMonitoring(国家森林防火指挥部办公室) ∧ DispatchInformation(国家森林防火指挥部办公室)\",\n            \"GuideExtinguishing(国家森林防火指挥部办公室) → 相邻省份(黑龙江省, 吉林省) ∧ CoordinateSupport(黑龙江省, 吉林省, 专业森林消防队)\",\n            \"情况(高森林火险) → IssueWarning(国家森林防火指挥部办公室, 高森林火险预警)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“县级林业主管部门” — 表示负责调查评估的部门为县级林业主管部门\",\n            \"i=“2024-04-01森林火灾” — 表示2024年4月1日发生的森林火灾\",\n            \"r=“雷击” — 表示火灾发生的原因为雷击\",\n            \"p=“未知” — 表示火灾的肇事者目前未知\",\n            \"a=“100公顷” — 表示受害森林的面积为100公顷\",\n            \"v=“2000立方米” — 表示受害森林的蓄积为2000立方米\",\n            \"c=“5人” — 表示火灾造成的人员伤亡为5人\",\n            \"e=“500万元” — 表示火灾造成的其他经济损失为500万元\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀i ∀r ∀p ∀a ∀v ∀c ∀e (Fire(“2024-04-01森林火灾”) ∧ Department(“县级林业主管部门”) ∧ Cause(“2024-04-01森林火灾”, “雷击”) ∧ Perpetrator(“2024-04-01森林火灾”, “未知”) ∧ AffectedForest(“2024-04-01森林火灾”, “100公顷”, “2000立方米”) ∧ Casualties(“2024-04-01森林火灾”, “5人”) ∧ EconomicLoss(“2024-04-01森林火灾”, “500万元”) → (InvestigateAndAssess(“县级林业主管部门”, “2024-04-01森林火灾”, [“雷击”, “未知”, “100公顷”, “2000立方米”, “5人”, “500万元”]) ∧ SubmitReport(“县级林业主管部门”, Government, Report)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“森林火灾损失评估标准” — 表示森林火灾损失评估的标准\",\n            \"Organization=“国家林业局” — 表示负责制定评估标准的组织为国家林业局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (Standard(“森林火灾损失评估标准”) → EstablishStandard(NationalForestryAdministration, “森林火灾损失评估标准”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“市级森林防火指挥机构” — 表示市级森林防火指挥机构\",\n            \"i=“2023年春季森林火灾” — 表示2023年春季发生的森林火灾事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀i (Fire(i) ∧ Organization(o) → (SummarizeAndAnalyze(o, i) ∧ ProposeImprovements(o)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家森林防火指挥部” — 表示国家森林防火指挥部\",\n            \"i=“2023年特别重大森林火灾” — 表示2023年发生的特别重大森林火灾事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (MajorFire(i) → (∃o (Organization(o) ∧ ReportSummary(o, 国务院) ∧ SummarizeAndAnalyze(o, i))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“省级森林防火指挥机构” — 表示省级森林防火指挥机构\",\n            \"i=“2023年夏季森林火灾” — 表示2023年夏季发生的森林火灾事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀i (Fire(i) ∧ Organization(o) → (SummarizeAndAnalyze(o, i) ∧ ProposeImprovements(o)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“区级森林防火指挥机构” — 表示区级森林防火指挥机构\",\n            \"i=“2023年秋季森林火灾” — 表示2023年秋季发生的森林火灾事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀i (Fire(i) ∧ Organization(o) → (SummarizeAndAnalyze(o, i) ∧ ProposeImprovements(o)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家森林防火指挥部” — 表示国家森林防火指挥部\",\n            \"i=“2023年冬季特别重大森林火灾” — 表示2023年冬季发生的特别重大森林火灾事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀i (MajorFire(i) → (∃o (Organization(o) ∧ ReportSummary(o, 国务院) ∧ SummarizeAndAnalyze(o, i))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“消防局” — 表示消防局在扑火工作中贡献突出\",\n            \"p=“李雷” — 表示李雷个人在扑火工作中贡献突出\"\n        ],\n        \"instance_logicexpression\": [\n            \"OutstandingContribution(消防局, 李雷) → RecognizeAndReward(消防局, 李雷)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“王强” — 表示王强在火灾事故中负有责任\"\n        ],\n        \"instance_logicexpression\": [\n            \"ResponsibleForAccident(王强) → HoldAccountable(王强)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“赵敏” — 表示赵敏在扑火工作中牺牲，符合评定烈士的条件\"\n        ],\n        \"instance_logicexpression\": [\n            \"MeetMartyrCriteria(赵敏) → HandleAccordingToRegulations(赵敏)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“森林消防队” — 表示森林消防队在扑火工作中贡献突出\",\n            \"p=“钱七” — 表示钱七个人在扑火工作中贡献突出\"\n        ],\n        \"instance_logicexpression\": [\n            \"OutstandingContribution(森林消防队, 钱七) → RecognizeAndReward(森林消防队, 钱七)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“孙八” — 表示孙八在火灾事故中负有责任\"\n        ],\n        \"instance_logicexpression\": [\n            \"ResponsibleForAccident(孙八) → HoldAccountable(孙八)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“周九” — 表示周九在扑火工作中牺牲，符合评定烈士的条件\"\n        ],\n        \"instance_logicexpression\": [\n            \"MeetMartyrCriteria(周九) → HandleAccordingToRegulations(周九)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"f=“专业森林消防队A” — 表示专业森林消防队A参与扑救森林火灾\",\n            \"f=“武警森林部队B” — 表示武警森林部队B参与扑救森林火灾\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f (FightForestFire(f) → (Trained(f) ∧ (ProfessionalFirefightingTeam(f) ∨ ArmedPoliceForestTroops(f))) ∨ (StationedForce(f) ∨ OtherArmedPoliceForces(f) ∨ Militia(f) ∨ ReserveForce(f)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“驻军C” — 表示驻军C参与扑救森林火灾\",\n            \"f=“武警其他部队D” — 表示武警其他部队D参与扑救森林火灾\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f (FightForestFire(f) → (Trained(f) ∧ (ProfessionalFirefightingTeam(f) ∨ ArmedPoliceForestTroops(f))) ∨ (StationedForce(f) ∨ OtherArmedPoliceForces(f) ∨ Militia(f) ∨ ReserveForce(f)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“民兵E” — 表示民兵E参与扑救森林火灾\",\n            \"f=“预备役部队F” — 表示预备役部队F参与扑救森林火灾\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f (FightForestFire(f) → (Trained(f) ∧ (ProfessionalFirefightingTeam(f) ∨ ArmedPoliceForestTroops(f))) ∨ (StationedForce(f) ∨ OtherArmedPoliceForces(f) ∨ Militia(f) ∨ ReserveForce(f)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“当地林区职工G” — 表示当地林区职工G参与扑救森林火灾\",\n            \"f=“机关干部H” — 表示机关干部H参与扑救森林火灾\",\n            \"f=“当地群众I” — 表示当地群众I参与扑救森林火灾\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f (FightForestFire(f) → (LocalForestryWorkers(f) ∨ GovernmentOfficials(f) ∨ LocalPeople(f)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“跨省调动部队J” — 表示跨省调动部队J参与扑救森林火灾\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f (InterProvincialDeployment(f) → OrganizeAccordingToRegulations(FightForestFire(f)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=“增援扑火兵力1” — 表示增援扑火兵力1\",\n            \"e=“携行装备1” — 表示携行装备1\",\n            \"Mode=“Railway” — 表示运输方式为铁路\"\n        ],\n        \"instance_logicexpression\": [\n            \"TransportMode(增援扑火兵力1, 携行装备1, Railway) ∨ (特殊情况(增援扑火兵力1, 携行装备1) ∧ AirTransport(民航部门, 增援扑火兵力1, 携行装备1))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“增援扑火兵力2” — 表示增援扑火兵力2\",\n            \"e=“携行装备2” — 表示携行装备2\",\n            \"特殊情况(t=“增援扑火兵力2”, e=“携行装备2”) — 表示增援扑火兵力2和携行装备2的运输为特殊情况\"\n        ],\n        \"instance_logicexpression\": [\n            \"特殊情况(增援扑火兵力2, 携行装备2) ∧ AirTransport(民航部门, 增援扑火兵力2, 携行装备2)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“专业森林消防队1” — 表示专业森林消防队1\",\n            \"e=“携行装备3” — 表示携行装备3\"\n        ],\n        \"instance_logicexpression\": [\n            \"专业森林消防队1 ∨ 武警森林部队1 → (IssueTransportTask(国家森林防火指挥部, 铁道部, 专业森林消防队1, 携行装备3) ∨ IssueTransportTask(国家森林防火指挥部, 民航部门, 专业森林消防队1, 携行装备3))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“武警森林部队2” — 表示武警森林部队2\",\n            \"e=“携行装备4” — 表示携行装备4\"\n        ],\n        \"instance_logicexpression\": [\n            \"专业森林消防队2 ∨ 武警森林部队2 → ContactImplement(所在地森林防火指挥部, 铁道部, 武警森林部队2, 携行装备4) ∨ ContactImplement(所在地森林防火指挥部, 民航部门, 武警森林部队2, 携行装备4)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"A=“大兴安岭” — 表示大兴安岭区域发生森林火灾\",\n            \"P=“大兴安岭” — 表示大兴安岭区域\",\n            \"N=“黑龙江省” — 表示黑龙江省\",\n            \"防火指挥机构=“黑龙江省森林防火指挥机构” — 表示黑龙江省森林防火指挥机构\",\n            \"总站=“北方航空护林总站” — 表示北方航空护林总站\",\n            \"I=“国家林业局” — 表示国家林业局\"\n        ],\n        \"instance_logicexpression\": [\n            \"ForestFire(大兴安岭) → (RelyingOnAirStation(大兴安岭) ∧ MobilizeAircraft(大兴安岭, 大兴安岭, ForestFireAircraft))\",\n            \"ForestFire(大兴安岭) ∧ Province(大兴安岭, 黑龙江省) → (MobilizeAircraft(大兴安岭, 黑龙江省, ForestFireAircraft) ∧ MakeRequest(黑龙江省森林防火指挥机构, 北方航空护林总站) ∧ UnifiedDispatch(北方航空护林总站))\",\n            \"MajorForestFire(大兴安岭) ∧ Province(大兴安岭, 黑龙江省) → (MobilizeAircraft(大兴安岭, 黑龙江省, ForestFireAircraft) ∧ MakeRequest(黑龙江省森林防火指挥机构, 北方航空护林总站) ∧ OrganizeImplementation(北方航空护林总站) ∧ 国家林业局同意)\",\n            \"NeedForMilitaryCivilAircraft(国家林业局) → CallForMilitaryCivilAircraft(国家林业局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“神农架” — 表示神农架区域发生森林火灾\",\n            \"P=“神农架” — 表示神农架区域\",\n            \"N=“湖北省” — 表示湖北省\",\n            \"防火指挥机构=“湖北省森林防火指挥机构” — 表示湖北省森林防火指挥机构\",\n            \"总站=“南方航空护林总站” — 表示南方航空护林总站\"\n        ],\n        \"instance_logicexpression\": [\n            \"ForestFire(神农架) → (RelyingOnAirStation(神农架) ∧ MobilizeAircraft(神农架, 神农架, ForestFireAircraft))\",\n            \"ForestFire(神农架) ∧ Province(神农架, 湖北省) → (MobilizeAircraft(神农架, 湖北省, ForestFireAircraft) ∧ MakeRequest(湖北省森林防火指挥机构, 南方航空护林总站) ∧ UnifiedDispatch(南方航空护林总站))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“长白山” — 表示长白山区域发生重大森林火灾\",\n            \"P=“长白山” — 表示长白山区域\",\n            \"N=“吉林省” — 表示吉林省\",\n            \"防火指挥机构=“吉林省森林防火指挥机构” — 表示吉林省森林防火指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"MajorForestFire(长白山) ∧ Province(长白山, 吉林省) → (MobilizeAircraft(长白山, 吉林省, ForestFireAircraft) ∧ MakeRequest(吉林省森林防火指挥机构, 北方航空护林总站) ∧ OrganizeImplementation(北方航空护林总站) ∧ 国家林业局同意)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"A=“武夷山” — 表示武夷山区域发生特别重大森林火灾\",\n            \"P=“武夷山” — 表示武夷山区域\",\n            \"N=“福建省” — 表示福建省\",\n            \"防火指挥机构=“福建省森林防火指挥机构” — 表示福建省森林防火指挥机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"MajorForestFire(武夷山) ∧ Province(武夷山, 福建省) → (MobilizeAircraft(武夷山, 福建省, ForestFireAircraft) ∧ MakeRequest(福建省森林防火指挥机构, 南方航空护林总站) ∧ OrganizeImplementation(南方航空护林总站) ∧ 国家林业局同意)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“市级人民政府” — 表示市级人民政府\",\n            \"System=“森林防火应急通信保障体系” — 表示森林防火应急通信保障体系\"\n        ],\n        \"instance_logicexpression\": [\n            \"Government(市级人民政府) → Establish(市级人民政府, 森林防火应急通信保障体系)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“通信保障部门” — 表示通信保障部门\",\n            \"Equipment=“通信设备” — 表示通信设备\",\n            \"Vehicle=“通信指挥车” — 表示通信指挥车\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(通信保障部门) → Equip(通信保障部门, 通信设备) ∧ Equip(通信保障部门, 通信指挥车)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“通信保障部门” — 表示通信保障部门\",\n            \"s=“紧急状态” — 表示紧急状态\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(通信保障部门) ∧ Emergency(紧急状态) → EnsureCommunication(通信保障部门, 森林火灾(紧急状态))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“林业部门” — 表示林业部门\",\n            \"i=“天气形势分析数据” — 表示天气形势分析数据\",\n            \"s=“扑火指挥” — 表示扑火指挥\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(林业部门) ∧ Information(天气形势分析数据) ∧ ForestFire(扑火指挥) → ProvideInformation(林业部门, 天气形势分析数据, 扑火指挥)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c=“张指挥官” — 表示张指挥官负责扑火指挥\",\n            \"Department=“林业部门” — 表示林业部门\",\n            \"Meteorology=“气象部门” — 表示气象部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"FirefightingCommand(张指挥官) → ProvideInformation(林业部门, 天气形势分析数据, 张指挥官) ∧ ProvideInformation(气象部门, 卫星林火监测云图, 张指挥官) ∧ ProvideInformation(林业部门, 火场实况图片图像, 张指挥官) ∧ ProvideInformation(林业部门, 电子地图, 张指挥官) ∧ ProvideInformation(林业部门, 火情调度, 张指挥官)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"Organization=“国家林业局” — 表示国家林业局作为组织\",\n            \"Location=“东北重点林区” — 表示东北地区作为重点林区\",\n            \"Materials=[“扑火机具”, “防护装备”, “通信器材”] — 表示国家林业局储备的物资种类\",\n            \"Purpose=“支援各地扑火需要” — 表示储备物资的目的是为了支援各地扑火需要\"\n        ],\n        \"instance_logicexpression\": [\n            \"StrengthenConstruction(国家林业局, 东北重点林区) ∧ ReserveMaterials(国家林业局, [扑火机具, 防护装备, 通信器材], 支援各地扑火需要)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“某省森林防火指挥机构” — 表示某省森林防火指挥机构作为组织\",\n            \"Location=“某省” — 表示某省作为地点\",\n            \"Materials=[“扑火机具”, “装备”] — 表示某省森林防火指挥机构储备的物资种类\"\n        ],\n        \"instance_logicexpression\": [\n            \"森林防火指挥机构(某省) → (EstablishReserve(某省森林防火指挥机构, 某省, [扑火机具, 装备]) ∧ SupportNeeds(某省, [扑火机具, 装备]))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“某市森林防火指挥机构” — 表示某市森林防火指挥机构作为组织\",\n            \"Location=“某市” — 表示某市作为地点\",\n            \"Materials=[“扑火机具”, “装备”] — 表示某市森林防火指挥机构储备的物资种类\"\n        ],\n        \"instance_logicexpression\": [\n            \"森林防火指挥机构(某市) → (EstablishReserve(某市森林防火指挥机构, 某市, [扑火机具, 装备]) ∧ SupportNeeds(某市, [扑火机具, 装备]))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"Organization=“某县森林防火指挥机构” — 表示某县森林防火指挥机构作为组织\",\n            \"Location=“某县” — 表示某县作为地点\",\n            \"Materials=[“扑火机具”, “装备”] — 表示某县森林防火指挥机构储备的物资种类\"\n        ],\n        \"instance_logicexpression\": [\n            \"森林防火指挥机构(某县) → (EstablishReserve(某县森林防火指挥机构, 某县, [扑火机具, 装备]) ∧ SupportNeeds(某县, [扑火机具, 装备]))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"g=“省级政府” — 表示省级人民政府\",\n            \"Project=“森林防火基础设施建设” — 表示森林防火基础设施建设项目\"\n        ],\n        \"instance_logicexpression\": [\n            \"GovernmentLevel(省级政府, 县级以上) → (IncludeInPlan(省级政府, 森林防火基础设施建设) ∧ EnsureFunding(省级政府, 森林防火基础设施建设))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“市级政府” — 表示市级人民政府\",\n            \"Project=“森林防火基础设施建设” — 表示森林防火基础设施建设项目\"\n        ],\n        \"instance_logicexpression\": [\n            \"GovernmentLevel(市级政府, 县级以上) → (IncludeInPlan(市级政府, 森林防火基础设施建设) ∧ EnsureFunding(市级政府, 森林防火基础设施建设))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“县级政府” — 表示县级人民政府\",\n            \"Project=“森林防火基础设施建设” — 表示森林防火基础设施建设项目\"\n        ],\n        \"instance_logicexpression\": [\n            \"GovernmentLevel(县级政府, 县级以上) → (IncludeInPlan(县级政府, 森林防火基础设施建设) ∧ EnsureFunding(县级政府, 森林防火基础设施建设))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"g=“乡镇级政府” — 表示乡镇级人民政府\",\n            \"Project=“森林防火基础设施建设” — 表示森林防火基础设施建设项目\"\n        ],\n        \"instance_logicexpression\": [\n            \"GovernmentLevel(乡镇级政府, 县级以上) → (IncludeInPlan(乡镇级政府, 森林防火基础设施建设) ∧ EnsureFunding(乡镇级政府, 森林防火基础设施建设))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"c1=“中国” — 表示中国发生火灾\",\n            \"c2=“邻国A” — 表示中国与邻国A之间已签订双边协定\",\n            \"t=“境外火烧入” — 表示火灾类型为境外火烧入\",\n            \"AgreementSigned(中国, 邻国A) — 表示中国与邻国A之间已签订双边协定\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c1 ∀c2 ∀t (FireOccurrence(中国, 境外火烧入) ∧ AgreementSigned(中国, 邻国A) → ExecuteAgreement(中国))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c1=“中国” — 表示中国发生火灾\",\n            \"c2=“邻国B” — 表示中国与邻国B之间未签订双边协定\",\n            \"t=“境内火烧出” — 表示火灾类型为境内火烧出\",\n            \"¬AgreementSigned(中国, 邻国B) — 表示中国与邻国B之间未签订双边协定\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c1 ∀c2 ∀t (FireOccurrence(中国, 境内火烧出) ∧ ¬AgreementSigned(中国, 邻国B) → (JointResearch(国家森林防火指挥部, 外交部, 中国) ∧ ContactCountry(外交部, 邻国B) ∧ TakeMeasures(中国)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c1=“邻国C” — 表示邻国C发生火灾\",\n            \"c2=“中国” — 表示邻国C与中国之间已签订双边协定\",\n            \"t=“境外火烧入” — 表示火灾类型为境外火烧入\",\n            \"AgreementSigned(邻国C, 中国) — 表示邻国C与中国之间已签订双边协定\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c1 ∀c2 ∀t (FireOccurrence(邻国C, 境外火烧入) ∧ AgreementSigned(邻国C, 中国) → ExecuteAgreement(邻国C))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"c1=“邻国D” — 表示邻国D发生火灾\",\n            \"c2=“中国” — 表示邻国D与中国之间未签订双边协定\",\n            \"t=“境内火烧出” — 表示火灾类型为境内火烧出\",\n            \"¬AgreementSigned(邻国D, 中国) — 表示邻国D与中国之间未签订双边协定\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀c1 ∀c2 ∀t (FireOccurrence(邻国D, 境内火烧出) ∧ ¬AgreementSigned(邻国D, 中国) → (JointResearch(国家森林防火指挥部, 外交部, 邻国D) ∧ ContactCountry(外交部, 中国) ∧ TakeMeasures(邻国D)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“森林火灾应急预案” — 表示规则为森林火灾应急预案\",\n            \"l=“山区” — 表示发生森林火灾的地点在山区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r∀l (ForestFire(山区) ∧ ¬UrbanArea(山区) → Applicable(森林火灾应急预案, 山区))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“森林火灾应急预案” — 表示规则为森林火灾应急预案\",\n            \"l=“自然保护区” — 表示发生森林火灾的地点在自然保护区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r∀l (ForestFire(自然保护区) ∧ ¬UrbanArea(自然保护区) → Applicable(森林火灾应急预案, 自然保护区))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“森林火灾应急预案” — 表示规则为森林火灾应急预案\",\n            \"l=“国家公园” — 表示发生森林火灾的地点在国家公园\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r∀l (ForestFire(国家公园) ∧ ¬UrbanArea(国家公园) → Applicable(森林火灾应急预案, 国家公园))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“森林火灾应急预案” — 表示规则为森林火灾应急预案\",\n            \"l=“郊外” — 表示发生森林火灾的地点在郊外\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r∀l (ForestFire(郊外) ∧ ¬UrbanArea(郊外) → Applicable(森林火灾应急预案, 郊外))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“有害程序事件” — 表示由于恶意软件等造成的网络安全事件\",\n            \"Reason=“人为原因” — 表示事件原因为恶意行为\",\n            \"Impact=“对社会造成负面影响” — 表示事件对社会有负面影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"CyberSecurityIncident(“有害程序事件”, “人为原因”, “对社会造成负面影响”) → ResponseWork(“有害程序事件”)\",\n            \"CyberSecurityIncident(“有害程序事件”, “人为原因”, “对社会造成负面影响”) ∧ (Reason = “信息内容安全”) → SpecialPlan(“有害程序事件”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“网络攻击事件” — 表示网络遭受攻击的网络安全事件\",\n            \"Reason=“软硬件缺陷或故障” — 表示事件原因为技术问题\",\n            \"Impact=“对网络和信息系统造成危害” — 表示事件对网络和信息系统有危害\"\n        ],\n        \"instance_logicexpression\": [\n            \"CyberSecurityIncident(“网络攻击事件”, “软硬件缺陷或故障”, “对网络和信息系统造成危害”) → ResponseWork(“网络攻击事件”)\",\n            \"CyberSecurityIncident(“网络攻击事件”, “软硬件缺陷或故障”, “对网络和信息系统造成危害”) ∧ (Reason = “信息内容安全”) → SpecialPlan(“网络攻击事件”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“信息破坏事件” — 表示信息被破坏的网络安全事件\",\n            \"Reason=“自然灾害” — 表示事件原因为自然灾害\",\n            \"Impact=“对数据造成危害” — 表示事件对数据有危害\"\n        ],\n        \"instance_logicexpression\": [\n            \"CyberSecurityIncident(“信息破坏事件”, “自然灾害”, “对数据造成危害”) → ResponseWork(“信息破坏事件”)\",\n            \"CyberSecurityIncident(“信息破坏事件”, “自然灾害”, “对数据造成危害”) ∧ (Reason = “信息内容安全”) → SpecialPlan(“信息破坏事件”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“信息内容安全事件” — 表示信息内容遭受威胁的网络安全事件\",\n            \"Reason=“人为原因” — 表示事件原因为恶意行为\",\n            \"Impact=“对社会造成负面影响” — 表示事件对社会有负面影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"CyberSecurityIncident(“信息内容安全事件”, “人为原因”, “对社会造成负面影响”) → ResponseWork(“信息内容安全事件”)\",\n            \"CyberSecurityIncident(“信息内容安全事件”, “人为原因”, “对社会造成负面影响”) ∧ (Reason = “信息内容安全”) → SpecialPlan(“信息内容安全事件”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“设备设施故障” — 表示设备设施故障导致的网络安全事件\",\n            \"Reason=“软硬件缺陷或故障” — 表示事件原因为技术问题\",\n            \"Impact=“对网络和信息系统造成危害” — 表示事件对网络和信息系统有危害\"\n        ],\n        \"instance_logicexpression\": [\n            \"CyberSecurityIncident(“设备设施故障”, “软硬件缺陷或故障”, “对网络和信息系统造成危害”) → ResponseWork(“设备设施故障”)\",\n            \"CyberSecurityIncident(“设备设施故障”, “软硬件缺陷或故障”, “对网络和信息系统造成危害”) ∧ (Reason = “信息内容安全”) → SpecialPlan(“设备设施故障”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"E=“网络攻击事件X” — 表示一个特定的网络攻击事件X\",\n            \"L=“系统损失Y” — 表示由于网络攻击事件X导致的系统损失Y\",\n            \"S=“业务中断Z” — 表示由于系统损失Y导致的业务中断Z\",\n            \"C=“恢复代价W” — 表示恢复系统正常运行和消除网络攻击事件X负面影响所需付出的代价W\"\n        ],\n        \"instance_logicexpression\": [\n            \"CyberSecurityIncident(网络攻击事件X) → SystemLoss(系统损失Y) ∧ BusinessInterruption(业务中断Z) → RecoveryCost(恢复代价W)\",\n            \"SystemLoss(系统损失Y) → (SevereSystemLoss(系统损失Y) ∨ ¬SevereSystemLoss(系统损失Y))\",\n            \"SevereSystemLoss(系统损失Y) → (SystemParalysis(业务中断Z) ∨ LossOfBusinessCapability(业务中断Z) ∨ DataConfidentialityBreach(系统损失Y) ∨ DataIntegrityBreach(系统损失Y) ∨ DataAvailabilityBreach(系统损失Y)) ∧ UnbearableCost(恢复代价W)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“数据泄露事件A” — 表示一个特定的数据泄露事件A\",\n            \"L=“系统损失B” — 表示由于数据泄露事件A导致的系统损失B\",\n            \"S=“业务中断C” — 表示由于系统损失B导致的业务中断C\",\n            \"C=“恢复代价D” — 表示恢复系统正常运行和消除数据泄露事件A负面影响所需付出的代价D\"\n        ],\n        \"instance_logicexpression\": [\n            \"CyberSecurityIncident(数据泄露事件A) → SystemLoss(系统损失B) ∧ BusinessInterruption(业务中断C) → RecoveryCost(恢复代价D)\",\n            \"SystemLoss(系统损失B) → (SevereSystemLoss(系统损失B) ∨ ¬SevereSystemLoss(系统损失B))\",\n            \"SevereSystemLoss(系统损失B) → (SystemParalysis(业务中断C) ∨ LossOfBusinessCapability(业务中断C) ∨ DataConfidentialityBreach(系统损失B) ∨ DataIntegrityBreach(系统损失B) ∨ DataAvailabilityBreach(系统损失B)) ∧ UnbearableCost(恢复代价D)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“服务拒绝攻击事件D” — 表示一个特定的服务拒绝攻击事件D\",\n            \"L=“系统损失E” — 表示由于服务拒绝攻击事件D导致的系统损失E\",\n            \"S=“业务中断F” — 表示由于系统损失E导致的业务中断F\",\n            \"C=“恢复代价G” — 表示恢复系统正常运行和消除服务拒绝攻击事件D负面影响所需付出的代价G\"\n        ],\n        \"instance_logicexpression\": [\n            \"CyberSecurityIncident(服务拒绝攻击事件D) → SystemLoss(系统损失E) ∧ BusinessInterruption(业务中断F) → RecoveryCost(恢复代价G)\",\n            \"SystemLoss(系统损失E) → (SevereSystemLoss(系统损失E) ∨ ¬SevereSystemLoss(系统损失E))\",\n            \"SevereSystemLoss(系统损失E) → (SystemParalysis(业务中断F) ∨ LossOfBusinessCapability(业务中断F) ∨ DataConfidentialityBreach(系统损失E) ∨ DataIntegrityBreach(系统损失E) ∨ DataAvailabilityBreach(系统损失E)) ∧ UnbearableCost(恢复代价G)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“系统A” — 表示系统A长时间中断\",\n            \"Duration=“8小时” — 表示系统中断持续8小时\",\n            \"Impact=“极大” — 表示对业务处理能力的影响极大\",\n            \"Severity=“高” — 表示数据保密性、完整性、可用性遭到的破坏严重程度高\",\n            \"Cost=“1000万” — 表示恢复系统正常运行和消除安全事件负面影响所需付出的代价为1000万\",\n            \"Organization=“公司X” — 表示事发组织为公司X\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s ((SystemInterruption(系统A, 8小时) ∨ PartialParalysis(极大)) ∧ (DataConfidentialityBreach(高) ∨ DataIntegrityBreach(高) ∨ DataAvailabilityBreach(高)) → (RecoveryCost(1000万, 公司X)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“系统B” — 表示系统B局部瘫痪\",\n            \"Impact=“极大” — 表示对业务处理能力的影响极大\",\n            \"Severity=“高” — 表示数据保密性、完整性、可用性遭到的破坏严重程度高\",\n            \"Cost=“500万” — 表示恢复系统正常运行和消除安全事件负面影响所需付出的代价为500万\",\n            \"Organization=“公司Y” — 表示事发组织为公司Y\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s ((PartialParalysis(极大) ∧ (DataConfidentialityBreach(高) ∨ DataIntegrityBreach(高) ∨ DataAvailabilityBreach(高)) → (RecoveryCost(500万, 公司Y)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“系统C” — 表示系统C长时间中断\",\n            \"Duration=“6小时” — 表示系统中断持续6小时\",\n            \"Impact=“极大” — 表示对业务处理能力的影响极大\",\n            \"Severity=“高” — 表示数据保密性、完整性、可用性遭到的破坏严重程度高\",\n            \"Cost=“800万” — 表示恢复系统正常运行和消除安全事件负面影响所需付出的代价为800万\",\n            \"Organization=“公司Z” — 表示事发组织为公司Z\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s ((SystemInterruption(系统C, 6小时) ∨ PartialParalysis(极大)) ∧ (DataConfidentialityBreach(高) ∨ DataIntegrityBreach(高) ∨ DataAvailabilityBreach(高)) → (RecoveryCost(800万, 公司Z)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"S=“银行核心系统” — 表示系统S为银行核心系统\",\n            \"Type=“重要信息系统” — 表示系统S的业务处理能力受到影响，且为重要信息系统\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀S (SystemInterruption(“银行核心系统”) ∧ AffectEfficiency(“银行核心系统”) ∧ (AffectedBusinessProcessing(“银行核心系统”, 重要信息系统) ∨ AffectedBusinessProcessing(“银行核心系统”, 一般信息系统)) ∧ (DataConfidentialityBreach(“银行核心系统”) ∨ DataIntegrityBreach(“银行核心系统”) ∨ DataAvailabilityBreach(“银行核心系统”)) → RecoveryCostHigh(“银行核心系统”) ∧ BearableByOrganization(“银行核心系统”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"S=“医院信息系统” — 表示系统S为医院信息系统\",\n            \"Type=“重要信息系统” — 表示系统S的业务处理能力受到影响，且为重要信息系统\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀S (SystemInterruption(“医院信息系统”) ∧ AffectEfficiency(“医院信息系统”) ∧ (AffectedBusinessProcessing(“医院信息系统”, 重要信息系统) ∨ AffectedBusinessProcessing(“医院信息系统”, 一般信息系统)) ∧ (DataConfidentialityBreach(“医院信息系统”) ∨ DataIntegrityBreach(“医院信息系统”) ∨ DataAvailabilityBreach(“医院信息系统”)) → RecoveryCostHigh(“医院信息系统”) ∧ BearableByOrganization(“医院信息系统”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"S=“企业资源规划系统” — 表示系统S为企业资源规划系统\",\n            \"Type=“一般信息系统” — 表示系统S的业务处理能力受到影响，且为一般信息系统\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀S (SystemInterruption(“企业资源规划系统”) ∧ AffectEfficiency(“企业资源规划系统”) ∧ (AffectedBusinessProcessing(“企业资源规划系统”, 重要信息系统) ∨ AffectedBusinessProcessing(“企业资源规划系统”, 一般信息系统)) ∧ (DataConfidentialityBreach(“企业资源规划系统”) ∨ DataIntegrityBreach(“企业资源规划系统”) ∨ DataAvailabilityBreach(“企业资源规划系统”)) → RecoveryCostHigh(“企业资源规划系统”) ∧ BearableByOrganization(“企业资源规划系统”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"S=“在线购物平台” — 表示系统S为在线购物平台\",\n            \"Type=“一般信息系统” — 表示系统S的业务处理能力受到影响，且为一般信息系统\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀S (SystemInterruption(“在线购物平台”) ∧ AffectEfficiency(“在线购物平台”) ∧ (AffectedBusinessProcessing(“在线购物平台”, 重要信息系统) ∨ AffectedBusinessProcessing(“在线购物平台”, 一般信息系统)) ∧ (DataConfidentialityBreach(“在线购物平台”) ∨ DataIntegrityBreach(“在线购物平台”) ∨ DataAvailabilityBreach(“在线购物平台”)) → RecoveryCostHigh(“在线购物平台”) ∧ BearableByOrganization(“在线购物平台”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"s=“系统A” — 表示系统A发生了中断\",\n            \"Severity=“轻微” — 表示中断的严重程度为轻微\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (SystemInterruption(系统A, 轻微) ∧ AffectEfficiency(系统A, 轻微) ∧ AffectBusinessProcessing(系统A, 轻微) ∨ (DataConfidentialityAffected(系统A, 轻微) ∨ DataIntegrityAffected(系统A, 轻微) ∨ DataAvailabilityAffected(系统A, 轻微)) → RecoveryCost(系统A, 轻微))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“系统B” — 表示系统B发生了中断\",\n            \"Severity=“轻微” — 表示中断的严重程度为轻微\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (SystemInterruption(系统B, 轻微) ∧ AffectEfficiency(系统B, 轻微) ∧ AffectBusinessProcessing(系统B, 轻微) ∨ (DataConfidentialityAffected(系统B, 轻微) ∨ DataIntegrityAffected(系统B, 轻微) ∨ DataAvailabilityAffected(系统B, 轻微)) → RecoveryCost(系统B, 轻微))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“系统C” — 表示系统C发生了中断\",\n            \"Severity=“轻微” — 表示中断的严重程度为轻微\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (SystemInterruption(系统C, 轻微) ∧ AffectEfficiency(系统C, 轻微) ∧ AffectBusinessProcessing(系统C, 轻微) ∨ (DataConfidentialityAffected(系统C, 轻微) ∨ DataIntegrityAffected(系统C, 轻微) ∨ DataAvailabilityAffected(系统C, 轻微)) → RecoveryCost(系统C, 轻微))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“系统D” — 表示系统D发生了中断\",\n            \"Severity=“轻微” — 表示中断的严重程度为轻微\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀s (SystemInterruption(系统D, 轻微) ∧ AffectEfficiency(系统D, 轻微) ∧ AffectBusinessProcessing(系统D, 轻微) ∨ (DataConfidentialityAffected(系统D, 轻微) ∨ DataIntegrityAffected(系统D, 轻微) ∨ DataAvailabilityAffected(系统D, 轻微)) → RecoveryCost(系统D, 轻微))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“国家电网攻击事件” — 表示事件为国家电网攻击事件\",\n            \"SystemLoss(e, Severe) — 表示国家电网攻击事件中遭受了严重的系统损失\",\n            \"LossOfBusinessCapability(e) — 表示国家电网攻击事件导致丧失业务处理能力\"\n        ],\n        \"instance_logicexpression\": [\n            \"CyberSecurityEvent(国家电网攻击事件, SpecialMajor) ↔ ((SystemLoss(国家电网攻击事件, Severe) ∧ LossOfBusinessCapability(国家电网攻击事件)) ∨ (DataBreach(国家电网攻击事件, Classified) ∨ DataBreach(国家电网攻击事件, Sensitive) ∨ DataTamperingOrForgery(国家电网攻击事件)) ∨ (NationalSecurityThreat(国家电网攻击事件) ∧ SocialStabilityThreat(国家电网攻击事件) ∧ EconomicConstructionImpact(国家电网攻击事件) ∧ PublicInterestImpact(国家电网攻击事件)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“政府机密数据泄露” — 表示事件为政府机密数据泄露\",\n            \"DataBreach(e, Classified) — 表示政府机密数据泄露中国家秘密信息被窃取\"\n        ],\n        \"instance_logicexpression\": [\n            \"CyberSecurityEvent(政府机密数据泄露, SpecialMajor) ↔ ((SystemLoss(政府机密数据泄露, Severe) ∧ LossOfBusinessCapability(政府机密数据泄露)) ∨ (DataBreach(政府机密数据泄露, Classified) ∨ DataBreach(政府机密数据泄露, Sensitive) ∨ DataTamperingOrForgery(政府机密数据泄露)) ∨ (NationalSecurityThreat(政府机密数据泄露) ∧ SocialStabilityThreat(政府机密数据泄露) ∧ EconomicConstructionImpact(政府机密数据泄露) ∧ PublicInterestImpact(政府机密数据泄露)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“金融系统篡改事件” — 表示事件为金融系统篡改\",\n            \"DataTamperingOrForgery(e) — 表示金融系统篡改事件中关键数据被篡改\"\n        ],\n        \"instance_logicexpression\": [\n            \"CyberSecurityEvent(金融系统篡改事件, SpecialMajor) ↔ ((SystemLoss(金融系统篡改事件, Severe) ∧ LossOfBusinessCapability(金融系统篡改事件)) ∨ (DataBreach(金融系统篡改事件, Classified) ∨ DataBreach(金融系统篡改事件, Sensitive) ∨ DataTamperingOrForgery(金融系统篡改事件)) ∨ (NationalSecurityThreat(金融系统篡改事件) ∧ SocialStabilityThreat(金融系统篡改事件) ∧ EconomicConstructionImpact(金融系统篡改事件) ∧ PublicInterestImpact(金融系统篡改事件)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“大规模网络钓鱼攻击” — 表示事件为大规模网络钓鱼攻击\",\n            \"NationalSecurityThreat(e) — 表示大规模网络钓鱼攻击对国家安全构成威胁\",\n            \"SocialStabilityThreat(e) — 表示大规模网络钓鱼攻击对社会稳定构成威胁\",\n            \"EconomicConstructionImpact(e) — 表示大规模网络钓鱼攻击对经济建设造成影响\",\n            \"PublicInterestImpact(e) — 表示大规模网络钓鱼攻击对公众利益造成影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"CyberSecurityEvent(大规模网络钓鱼攻击, SpecialMajor) ↔ ((SystemLoss(大规模网络钓鱼攻击, Severe) ∧ LossOfBusinessCapability(大规模网络钓鱼攻击)) ∨ (DataBreach(大规模网络钓鱼攻击, Classified) ∨ DataBreach(大规模网络钓鱼攻击, Sensitive) ∨ DataTamperingOrForgery(大规模网络钓鱼攻击)) ∨ (NationalSecurityThreat(大规模网络钓鱼攻击) ∧ SocialStabilityThreat(大规模网络钓鱼攻击) ∧ EconomicConstructionImpact(大规模网络钓鱼攻击) ∧ PublicInterestImpact(大规模网络钓鱼攻击)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"n=“国家电网” — 表示重要网络是国家电网\",\n            \"s=“电力系统” — 表示信息系统是电力系统\",\n            \"Duration=“48小时” — 表示系统中断时长为48小时\",\n            \"Impact=“极大” — 表示业务处理能力受到极大影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃n ∃s (SystemLoss(国家电网, 电力系统) ∧ (SystemInterruption(国家电网, '48小时') ∨ PartialParalysis(国家电网)) ∧ BusinessImpact(国家电网, '极大') → MajorCyberSecurityEvent(国家电网))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“国防机密文件” — 表示信息是国家机密文件\",\n            \"Threat=“国家安全” — 表示对国家安全构成严重威胁\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃i (InformationLoss(国防机密文件) ∨ InformationTheft(国防机密文件) ∨ InformationTampering(国防机密文件) ∨ InformationForgery(国防机密文件) → SecurityThreat(国家安全))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t=“金融系统攻击” — 表示其他威胁是金融系统攻击\",\n            \"Threat=“经济建设” — 表示对经济建设构成严重威胁\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃t OtherThreat(金融系统攻击) → MajorCyberSecurityEvent(金融系统攻击)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"n=“政府数据中心” — 表示重要网络是政府数据中心\",\n            \"s=“政务系统” — 表示信息系统是政务系统\",\n            \"Impact=“极大” — 表示业务处理能力受到极大影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃n ∃s (SystemLoss(政府数据中心, 政务系统) ∧ (SystemInterruption(政府数据中心, 'long') ∨ PartialParalysis(政府数据中心)) ∧ BusinessImpact(政府数据中心, '极大') → MajorCyberSecurityEvent(政府数据中心))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“个人隐私数据” — 表示信息是个人隐私数据\",\n            \"Threat=“公众利益” — 表示对公众利益构成严重威胁\"\n        ],\n        \"instance_logicexpression\": [\n            \"∃i (InformationLoss(个人隐私数据) ∨ InformationTheft(个人隐私数据) ∨ InformationTampering(个人隐私数据) ∨ InformationForgery(个人隐私数据) → SecurityThreat(公众利益))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"n=“国家电网” — 表示重要网络和信息系统为国家电网\",\n            \"System=“电力调度系统” — 表示遭受损失的系统为电力调度系统\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀n ((SystemLoss(国家电网, 电力调度系统) ∧ SystemInterruption(国家电网) ∧ AffectEfficiency(国家电网) ∧ AffectedBusinessCapability(国家电网)) ∨ (DataLossOrTheft(国家电网关键数据) ∨ DataTamperingOrForgery(国家电网关键数据) ∧ PoseThreat(国家安全和社会稳定, 严重)) ∨ PoseThreat(国家安全、社会秩序、经济建设和公众利益, 严重)) → CyberSecurityIncident(较大)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"n=“军事通信网络” — 表示重要网络和信息系统为军事通信网络\",\n            \"Information=“军事行动计划” — 表示丢失或被窃取的信息为军事行动计划\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀n ((SystemLoss(军事通信网络, 通信系统) ∧ SystemInterruption(军事通信网络) ∧ AffectEfficiency(军事通信网络) ∧ AffectedBusinessCapability(军事通信网络)) ∨ (DataLossOrTheft(军事行动计划) ∨ DataTamperingOrForgery(军事行动计划) ∧ PoseThreat(国家安全和社会稳定, 严重)) ∨ PoseThreat(国家安全、社会秩序、经济建设和公众利益, 严重)) → CyberSecurityIncident(较大)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"n=“金融交易系统” — 表示重要网络和信息系统为金融交易系统\",\n            \"Information=“客户敏感信息” — 表示被篡改或假冒的信息为客户敏感信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀n ((SystemLoss(金融交易系统, 交易处理系统) ∧ SystemInterruption(金融交易系统) ∧ AffectEfficiency(金融交易系统) ∧ AffectedBusinessCapability(金融交易系统)) ∨ (DataLossOrTheft(客户敏感信息) ∨ DataTamperingOrForgery(客户敏感信息) ∧ PoseThreat(国家安全和社会稳定, 严重)) ∨ PoseThreat(国家安全、社会秩序、经济建设和公众利益, 严重)) → CyberSecurityIncident(较大)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"n=“政府数据中心” — 表示重要网络和信息系统为政府数据中心\",\n            \"ThreatType=“经济安全” — 表示构成威胁的类型为经济安全\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀n ((PoseThreat(经济安全, 严重))) → CyberSecurityIncident(较大)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"E=“网络钓鱼攻击” — 表示事件E为网络钓鱼攻击\",\n            \"Domain=“国家安全” — 表示事件对国家安全领域构成威胁和影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (¬MajorCyberSecurityEvent(E) ∧ (PoseThreat(E, 国家安全) ∨ PoseThreat(E, 社会秩序) ∨ PoseThreat(E, 经济建设) ∨ PoseThreat(E, 公众利益)) ∧ (CauseImpact(E, 国家安全) ∨ CauseImpact(E, 社会秩序) ∨ CauseImpact(E, 经济建设) ∨ CauseImpact(E, 公众利益)) → GeneralCyberSecurityEvent(E))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“数据泄露事件” — 表示事件E为数据泄露事件\",\n            \"Domain=“经济建设” — 表示事件对经济建设领域构成威胁和影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (¬MajorCyberSecurityEvent(E) ∧ (PoseThreat(E, 国家安全) ∨ PoseThreat(E, 社会秩序) ∨ PoseThreat(E, 经济建设) ∨ PoseThreat(E, 公众利益)) ∧ (CauseImpact(E, 国家安全) ∨ CauseImpact(E, 社会秩序) ∨ CauseImpact(E, 经济建设) ∨ CauseImpact(E, 公众利益)) → GeneralCyberSecurityEvent(E))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“分布式拒绝服务攻击” — 表示事件E为分布式拒绝服务攻击\",\n            \"Domain=“社会秩序” — 表示事件对社会秩序领域构成威胁和影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (¬MajorCyberSecurityEvent(E) ∧ (PoseThreat(E, 国家安全) ∨ PoseThreat(E, 社会秩序) ∨ PoseThreat(E, 经济建设) ∨ PoseThreat(E, 公众利益)) ∧ (CauseImpact(E, 国家安全) ∨ CauseImpact(E, 社会秩序) ∨ CauseImpact(E, 经济建设) ∨ CauseImpact(E, 公众利益)) → GeneralCyberSecurityEvent(E))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“恶意软件传播” — 表示事件E为恶意软件传播\",\n            \"Domain=“公众利益” — 表示事件对公众利益领域构成威胁和影响\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (¬MajorCyberSecurityEvent(E) ∧ (PoseThreat(E, 国家安全) ∨ PoseThreat(E, 社会秩序) ∨ PoseThreat(E, 经济建设) ∨ PoseThreat(E, 公众利益)) ∧ (CauseImpact(E, 国家安全) ∨ CauseImpact(E, 社会秩序) ∨ CauseImpact(E, 经济建设) ∨ CauseImpact(E, 公众利益)) → GeneralCyberSecurityEvent(E))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"领导小组=“中央网络安全和信息化领导小组” — 表示领导小组的领导作用\",\n            \"中央网信办=“中央网络安全和信息化领导小组办公室” — 表示中央网信办统筹协调组织国家网络安全事件应对工作\",\n            \"Department1=“工业和信息化部” — 表示工业和信息化部负责相关网络安全事件应对工作\",\n            \"Department2=“公安部” — 表示公安部负责相关网络安全事件应对工作\",\n            \"Department3=“国家保密局” — 表示国家保密局负责相关网络安全事件应对工作\",\n            \"Event1=“网络攻击事件” — 表示一个具体的网络安全事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"Lead(中央网络安全和信息化领导小组) → (Coordinate(中央网络安全和信息化领导小组办公室) ∧ ∀d (EstablishMechanism(d) → ResponsibleForResponse(d, 网络攻击事件)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“国家级网络基础设施攻击” — 表示一个特别重大的网络安全事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"Event(国家级网络基础设施攻击) ∧ Major(国家级网络基础设施攻击) → EstablishCommand(指挥部) ∧ ResponsibleForMajorEvent(指挥部, 国家级网络基础设施攻击)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"领导小组=“中央网络安全和信息化领导小组” — 表示领导小组的领导作用\",\n            \"中央网信办=“中央网络安全和信息化领导小组办公室” — 表示中央网信办统筹协调组织国家网络安全事件应对工作\",\n            \"Department1=“工业和信息化部” — 表示工业和信息化部负责相关网络安全事件应对工作\",\n            \"Department2=“公安部” — 表示公安部负责相关网络安全事件应对工作\",\n            \"Department3=“国家保密局” — 表示国家保密局负责相关网络安全事件应对工作\",\n            \"Event2=“数据泄露事件” — 表示另一个具体的网络安全事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"Lead(中央网络安全和信息化领导小组) → (Coordinate(中央网络安全和信息化领导小组办公室) ∧ ∀d (EstablishMechanism(d) → ResponsibleForResponse(d, 数据泄露事件)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“大规模网络钓鱼攻击” — 表示另一个特别重大的网络安全事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"Event(大规模网络钓鱼攻击) ∧ Major(大规模网络钓鱼攻击) → EstablishCommand(指挥部) ∧ ResponsibleForMajorEvent(指挥部, 大规模网络钓鱼攻击)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"应急办被设立在中央网信办下级\"\n        ],\n        \"instance_logicexpression\": [\n            \"Established(应急办, 中央网信办)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"中央网信办网络安全协调局承担应急办具体工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"Undertake(中央网信办网络安全协调局, 应急办具体工作)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"应急办负责网络安全应急跨部门协调\"\n        ],\n        \"instance_logicexpression\": [\n            \"Responsible(应急办, 网络安全应急跨部门协调)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"应急办负责网络安全应急跨地区协调\"\n        ],\n        \"instance_logicexpression\": [\n            \"Responsible(应急办, 网络安全应急跨地区协调)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"应急办负责指挥部事务性工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"Responsible(应急办, 指挥部事务性工作)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"应急办组织指导国家网络安全应急技术支撑队伍完成应急处置技术支撑\"\n        ],\n        \"instance_logicexpression\": [\n            \"OrganizeGuide(应急办, 国家网络安全应急技术支撑队伍, 应急处置技术支撑)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"工业和信息化部负责相关工作，派张伟为联络员联络应急办\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀l (负责相关工作(d) ∧ 司局级(l) → AssignLiaison(d, l, 应急办))\",\n            \"AssignLiaison(工业和信息化部, 张伟, 应急办)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"公安部负责相关工作，派李娜为联络员联络应急办\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d ∀l (负责相关工作(d) ∧ 司局级(l) → AssignLiaison(d, l, 应急办))\",\n            \"AssignLiaison(公安部, 李娜, 应急办)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“中央情报局” — 表示中央情报局负责网络安全事件\",\n            \"e=“数据泄露” — 表示网络安全事件为数据泄露\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀e (Department(中央情报局) ∧ CyberSecurityEvent(数据泄露) → (Responsible(中央情报局, Prevent(数据泄露)) ∧ Responsible(中央情报局, Monitor(数据泄露)) ∧ Responsible(中央情报局, Report(数据泄露)) ∧ Responsible(中央情报局, EmergencyResponse(数据泄露))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家电网公司” — 表示国家电网公司负责网络安全事件\",\n            \"e=“电力系统攻击” — 表示网络安全事件为电力系统攻击\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀e (Department(国家电网公司) ∧ CyberSecurityEvent(电力系统攻击) → (Responsible(国家电网公司, Prevent(电力系统攻击)) ∧ Responsible(国家电网公司, Monitor(电力系统攻击)) ∧ Responsible(国家电网公司, Report(电力系统攻击)) ∧ Responsible(国家电网公司, EmergencyResponse(电力系统攻击))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“教育部” — 表示教育部负责网络安全事件\",\n            \"e=“在线教育平台入侵” — 表示网络安全事件为在线教育平台入侵\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀e (Department(教育部) ∧ CyberSecurityEvent(在线教育平台入侵) → (Responsible(教育部, Prevent(在线教育平台入侵)) ∧ Responsible(教育部, Monitor(在线教育平台入侵)) ∧ Responsible(教育部, Report(在线教育平台入侵)) ∧ Responsible(教育部, EmergencyResponse(在线教育平台入侵))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“交通部” — 表示交通部负责网络安全事件\",\n            \"e=“交通控制系统故障” — 表示网络安全事件为交通控制系统故障\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀e (Department(交通部) ∧ CyberSecurityEvent(交通控制系统故障) → (Responsible(交通部, Prevent(交通控制系统故障)) ∧ Responsible(交通部, Monitor(交通控制系统故障)) ∧ Responsible(交通部, Report(交通控制系统故障)) ∧ Responsible(交通部, EmergencyResponse(交通控制系统故障))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“北京市网信部门” — 表示北京市的网信部门\",\n            \"r=“北京市” — 表示地区为北京市\",\n            \"t=“网络安全事件” — 表示任务为网络安全事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p ∀r ∀t (Lead(党委网络安全和信息化领导小组, 网信部门北京市网信部门) ∧ Region(北京市) → (Coordinate(网信部门北京市网信部门, 北京市, 预防网络安全事件) ∧ Coordinate(网信部门北京市网信部门, 北京市, 监测网络安全事件) ∧ Coordinate(网信部门北京市网信部门, 北京市, 报告网络安全事件) ∧ Coordinate(网信部门北京市网信部门, 北京市, 应急处置网络安全事件)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“广东省网信部门” — 表示广东省的网信部门\",\n            \"r=“广东省” — 表示地区为广东省\",\n            \"t=“信息系统安全事件” — 表示任务为信息系统安全事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p ∀r ∀t (Lead(党委网络安全和信息化领导小组, 网信部门广东省网信部门) ∧ Region(广东省) → (Coordinate(网信部门广东省网信部门, 广东省, 预防信息系统安全事件) ∧ Coordinate(网信部门广东省网信部门, 广东省, 监测信息系统安全事件) ∧ Coordinate(网信部门广东省网信部门, 广东省, 报告信息系统安全事件) ∧ Coordinate(网信部门广东省网信部门, 广东省, 应急处置信息系统安全事件)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“上海市网信部门” — 表示上海市的网信部门\",\n            \"r=“上海市” — 表示地区为上海市\",\n            \"t=“数据泄露事件” — 表示任务为数据泄露事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p ∀r ∀t (Lead(党委网络安全和信息化领导小组, 网信部门上海市网信部门) ∧ Region(上海市) → (Coordinate(网信部门上海市网信部门, 上海市, 预防数据泄露事件) ∧ Coordinate(网信部门上海市网信部门, 上海市, 监测数据泄露事件) ∧ Coordinate(网信部门上海市网信部门, 上海市, 报告数据泄露事件) ∧ Coordinate(网信部门上海市网信部门, 上海市, 应急处置数据泄露事件)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“四川省网信部门” — 表示四川省的网信部门\",\n            \"r=“四川省” — 表示地区为四川省\",\n            \"t=“网络攻击事件” — 表示任务为网络攻击事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p ∀r ∀t (Lead(党委网络安全和信息化领导小组, 网信部门四川省网信部门) ∧ Region(四川省) → (Coordinate(网信部门四川省网信部门, 四川省, 预防网络攻击事件) ∧ Coordinate(网信部门四川省网信部门, 四川省, 监测网络攻击事件) ∧ Coordinate(网信部门四川省网信部门, 四川省, 报告网络攻击事件) ∧ Coordinate(网信部门四川省网信部门, 四川省, 应急处置网络攻击事件)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“国家电网公司” — 表示国家电网公司作为组织\",\n            \"n=“电力信息系统” — 表示电力信息系统作为网络和信息系统\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀n (主管(国家电网公司) ∧ 运行(国家电网公司) → (ResponsibleForMonitoring(国家电网公司, 电力信息系统) ∧ OrganizeMonitoring(国家电网公司, 电力信息系统)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“金融监管局” — 表示金融监管局作为组织\",\n            \"i=“金融行业” — 表示金融行业作为重点行业\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀i (主管(金融监管局) → GuideMonitoring(金融监管局, 金融行业))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“上海市网信办” — 表示上海市网信办作为部门\",\n            \"r=“上海市” — 表示上海市作为地区\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀r (网信部门(上海市网信办) ∧ 地区(上海市) → (CoordinateMonitoring(上海市网信办, 上海市) ∧ ∀o∀n (运行(o, n, 上海市) → ResponsibleForMonitoring(o, n))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“广东省” — 表示广东省作为省份\",\n            \"d=“国家应急办” — 表示国家应急办作为部门\",\n            \"i=“网络安全威胁情报” — 表示网络安全威胁情报作为重要监测信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p∀d∀i (报告信息(广东省, 国家应急办, 网络安全威胁情报) → ShareInformation(国家应急办, 网络安全威胁情报))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“教育部” — 表示教育部作为部门\",\n            \"i=“教育系统网络安全漏洞” — 表示教育系统网络安全漏洞作为重要监测信息\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀i (ShareInformation(教育部, 教育系统网络安全漏洞))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“江苏省政府” — 表示研判的组织为江苏省政府\",\n            \"i=“网络攻击监测信息” — 表示监测到的信息为网络攻击\",\n            \"d=“省公安厅” — 表示需要通知的部门为省公安厅\",\n            \"EmergencyOffice=“国家应急办” — 表示报告的应急办为国家应急办\",\n            \"l=“黄色” — 表示发布的预警级别为黄色\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀i∀d (Assess(“江苏省政府”, “网络攻击监测信息”) ∧ NeedPrecautions(Assessment) → (Notify(“江苏省政府”, “省公安厅”) ∧ Report(“江苏省政府”, “国家应急办”)))\",\n            \"∀o∀l (Assess(“江苏省政府”, “网络攻击监测信息”) → IssueWarning(“江苏省政府”, “黄色”)) ∧ “黄色” ≤ '橙色'\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“教育部” — 表示研判的组织为教育部\",\n            \"i=“校园网络安全漏洞” — 表示监测到的信息为校园网络安全漏洞\",\n            \"d=“网络安全局” — 表示需要通知的部门为网络安全局\",\n            \"EmergencyOffice=“地方应急办” — 表示报告的应急办为地方应急办\",\n            \"l=“蓝色” — 表示发布的预警级别为蓝色\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀i∀d (Assess(“教育部”, “校园网络安全漏洞”) ∧ NeedPrecautions(Assessment) → (Notify(“教育部”, “网络安全局”) ∧ Report(“教育部”, “地方应急办”)))\",\n            \"∀o∀l (Assess(“教育部”, “校园网络安全漏洞”) → IssueWarning(“教育部”, “蓝色”)) ∧ “蓝色” ≤ '橙色'\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“北京市交通委员会” — 表示研判的组织为北京市交通委员会\",\n            \"i=“交通系统网络异常” — 表示监测到的信息为交通系统网络异常\",\n            \"d=“市应急响应中心” — 表示需要通知的部门为市应急响应中心\",\n            \"EmergencyOffice=“市应急办” — 表示报告的应急办为市应急办\",\n            \"l=“橙色” — 表示发布的预警级别为橙色\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀i∀d (Assess(“北京市交通委员会”, “交通系统网络异常”) ∧ NeedPrecautions(Assessment) → (Notify(“北京市交通委员会”, “市应急响应中心”) ∧ Report(“北京市交通委员会”, “市应急办”)))\",\n            \"∀o∀l (Assess(“北京市交通委员会”, “交通系统网络异常”) → IssueWarning(“北京市交通委员会”, “橙色”)) ∧ “橙色” ≤ '橙色'\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“国家电网公司” — 表示研判的组织为国家电网公司\",\n            \"i=“电网控制系统安全威胁” — 表示监测到的信息为电网控制系统安全威胁\",\n            \"d=“能源部” — 表示需要通知的部门为能源部\",\n            \"EmergencyOffice=“国家能源应急办” — 表示报告的应急办为国家能源应急办\",\n            \"l=“红色” — 表示发布的预警级别为红色（注意：红色预警不在本规则的发布范围内，因此此条逻辑表达式不成立）\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀i∀d (Assess(“国家电网公司”, “电网控制系统安全威胁”) ∧ NeedPrecautions(Assessment) → (Notify(“国家电网公司”, “能源部”) ∧ Report(“国家电网公司”, “国家能源应急办”)))\",\n            \"∀o∀l (Assess(“国家电网公司”, “电网控制系统安全威胁”) → IssueWarning(“国家电网公司”, “红色”)) ∧ “红色” > '橙色'\" // 此条逻辑表达式不成立，因为红色预警不在发布范围内\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“国家应急办” — 表示应急办为国家应急办\",\n            \"w=“红色预警20240324” — 表示预警编号为红色预警20240324\",\n            \"Provinces=[“北京”, “天津”, “河北”] — 表示预警涉及北京、天津和河北\",\n            \"Departments=[“气象局”, “水利部”] — 表示预警涉及气象局和水利部\",\n            \"Industries=[“农业”, “交通”] — 表示预警涉及农业和交通行业\",\n            \"Category=“极端天气” — 表示事件类别为极端天气\",\n            \"Level=“一级” — 表示预警级别为一级\",\n            \"StartTime=“2024-03-24 08:00” — 表示预警起始时间为2024年3月24日08:00\",\n            \"AffectedRange=“华北区域” — 表示可能影响范围为华北区域\",\n            \"Precautions=“注意防洪” — 表示警示事项为注意防洪\",\n            \"Measures=“启动应急响应” — 表示应采取的措施为启动应急响应\",\n            \"Deadline=“2024-03-26 00:00” — 表示时限要求为2024年3月26日00:00前\",\n            \"IssuingBody=“国家应急办” — 表示发布机关为国家应急办\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀w (OrganizeAssessment(国家应急办) ∧ DetermineWarning(国家应急办, 红色预警20240324) → PublishWarning(国家应急办, 红色预警20240324) ∧ Involve(红色预警20240324, [北京, 天津, 河北], [气象局, 水利部], [农业, 交通]) ∧ WarningInfo(红色预警20240324, 极端天气, 一级, 2024-03-24 08:00, 华北区域, 注意防洪, 启动应急响应, 2024-03-26 00:00, 国家应急办))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“省级应急办” — 表示应急办为省级应急办\",\n            \"w=“红色预警20240515” — 表示预警编号为红色预警20240515\",\n            \"Provinces=[“广东”, “广西”] — 表示预警涉及广东和广西\",\n            \"Departments=[“消防局”, “公安厅”] — 表示预警涉及消防局和公安厅\",\n            \"Industries=[“化工”, “建筑”] — 表示预警涉及化工和建筑行业\",\n            \"Category=“森林火灾” — 表示事件类别为森林火灾\",\n            \"Level=“一级” — 表示预警级别为一级\",\n            \"StartTime=“2024-05-15 12:00” — 表示预警起始时间为2024年5月15日12:00\",\n            \"AffectedRange=“华南区域” — 表示可能影响范围为华南区域\",\n            \"Precautions=“注意防火” — 表示警示事项为注意防火\",\n            \"Measures=“疏散人群” — 表示应采取的措施为疏散人群\",\n            \"Deadline=“2024-05-17 00:00” — 表示时限要求为2024年5月17日00:00前\",\n            \"IssuingBody=“省级应急办” — 表示发布机关为省级应急办\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀w (OrganizeAssessment(省级应急办) ∧ DetermineWarning(省级应急办, 红色预警20240515) → PublishWarning(省级应急办, 红色预警20240515) ∧ Involve(红色预警20240515, [广东, 广西], [消防局, 公安厅], [化工, 建筑]) ∧ WarningInfo(红色预警20240515, 森林火灾, 一级, 2024-05-15 12:00, 华南区域, 注意防火, 疏散人群, 2024-05-17 00:00, 省级应急办))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"l='红色预警' — 表示预警等级为红色\",\n            \"Office='应急办' — 表示负责组织预警响应的办公室\",\n            \"Experts='网络安全专家' — 表示联系的专家\",\n            \"Institutions='相关网络安全机构' — 表示联系的相关机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"WarningLevel('红色预警', '红色') → (OrganizeResponse(应急办, 网络安全专家, 相关网络安全机构) ∧ TrackJudging(应急办) ∧ DevelopPreventiveMeasures(应急办) ∧ DevelopEmergencyPlan(应急办) ∧ CoordinateResourceDispatch(应急办) ∧ DepartmentCollaboration(应急办))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i='红色预警' — 表示预警等级为红色\",\n            \"Institution='某省网络安全应急指挥机构' — 表示实行24小时值班的机构\"\n        ],\n        \"instance_logicexpression\": [\n            \"WarningLevel('红色预警', '红色') → (24HourDuty(某省网络安全应急指挥机构) ∧ MaintainCommunication(某省网络安全应急指挥机构) ∧ EnhanceMonitoring(某省网络安全应急指挥机构) ∧ GatherInformation(某省网络安全应急指挥机构) ∧ OrganizeEmergencyResponse(某省网络安全应急指挥机构) ∧ RiskAssessment(某省网络安全应急指挥机构) ∧ ReportToOffice(某省网络安全应急指挥机构))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"t='红色预警' — 表示预警等级为红色\",\n            \"Team='国家网络安全应急技术支撑队伍' — 表示技术支撑队伍\"\n        ],\n        \"instance_logicexpression\": [\n            \"WarningLevel('红色预警', '红色') → (StandbyTechnicalSupport(国家网络安全应急技术支撑队伍) ∧ DevelopResponsePlan(国家网络安全应急技术支撑队伍) ∧ InspectEmergencyEquipment(国家网络安全应急技术支撑队伍) ∧ EnsureGoodCondition(国家网络安全应急技术支撑队伍))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“北京市” — 表示橙色预警发生在北京市\",\n            \"d=“市网信办” — 表示市网信办负责应急响应\",\n            \"TechnicalSupportTeam=“国家网络安全应急响应中心” — 表示国家网络安全应急技术支撑队伍\"\n        ],\n        \"instance_logicexpression\": [\n            \"橙色预警(北京市) → (ActivateEmergencyPlan(北京市, 市网信办) ∧ OrganizeWarningResponse(北京市, 市网信办) ∧ PerformRiskAssessment(北京市, 市网信办) ∧ EmergencyPreparation(北京市, 市网信办) ∧ RiskControl(北京市, 市网信办))\",\n            \"橙色预警(北京市) → ReportSituation(北京市, 市网信办, 应急办)\",\n            \"CloselyMonitorSituation(应急办) → ∀m (重大事项(m) → NotifyMajorMatters(应急办, 北京市, 市网信办))\",\n            \"MaintainCommunication(国家网络安全应急响应中心) ∧ InspectEmergencyResources(国家网络安全应急响应中心) → EnsureGoodCondition(国家网络安全应急响应中心)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“广东省” — 表示橙色预警发生在广东省\",\n            \"d=“省网信办” — 表示省网信办负责应急响应\",\n            \"TechnicalSupportTeam=“华南网络安全应急响应中心” — 表示华南网络安全应急技术支撑队伍\"\n        ],\n        \"instance_logicexpression\": [\n            \"橙色预警(广东省) → (ActivateEmergencyPlan(广东省, 省网信办) ∧ OrganizeWarningResponse(广东省, 省网信办) ∧ PerformRiskAssessment(广东省, 省网信办) ∧ EmergencyPreparation(广东省, 省网信办) ∧ RiskControl(广东省, 省网信办))\",\n            \"橙色预警(广东省) → ReportSituation(广东省, 省网信办, 应急办)\",\n            \"CloselyMonitorSituation(应急办) → ∀m (重大事项(m) → NotifyMajorMatters(应急办, 广东省, 省网信办))\",\n            \"MaintainCommunication(华南网络安全应急响应中心) ∧ InspectEmergencyResources(华南网络安全应急响应中心) → EnsureGoodCondition(华南网络安全应急响应中心)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“上海市” — 表示橙色预警发生在上海市\",\n            \"d=“市应急办” — 表示市应急办负责应急响应\",\n            \"TechnicalSupportTeam=“华东网络安全应急响应中心” — 表示华东网络安全应急技术支撑队伍\"\n        ],\n        \"instance_logicexpression\": [\n            \"橙色预警(上海市) → (ActivateEmergencyPlan(上海市, 市应急办) ∧ OrganizeWarningResponse(上海市, 市应急办) ∧ PerformRiskAssessment(上海市, 市应急办) ∧ EmergencyPreparation(上海市, 市应急办) ∧ RiskControl(上海市, 市应急办))\",\n            \"橙色预警(上海市) → ReportSituation(上海市, 市应急办, 应急办)\",\n            \"CloselyMonitorSituation(应急办) → ∀m (重大事项(m) → NotifyMajorMatters(应急办, 上海市, 市应急办))\",\n            \"MaintainCommunication(华东网络安全应急响应中心) ∧ InspectEmergencyResources(华东网络安全应急响应中心) → EnsureGoodCondition(华东网络安全应急响应中心)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“北京市” — 表示有关地区为北京市\",\n            \"d=“网络安全局” — 表示相关部门为网络安全局\",\n            \"p=“黄色预警预案” — 表示启动的应急预案为黄色预警预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r ∀d ∀p (预警响应(p) → (ActivateEmergencyPlan(北京市, 网络安全局, 黄色预警预案) ∧ GuideOrganization(北京市, 网络安全局, 黄色预警预案)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“上海市” — 表示有关地区为上海市\",\n            \"d=“应急响应中心” — 表示相关部门为应急响应中心\",\n            \"p=“蓝色预警预案” — 表示启动的应急预案为蓝色预警预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r ∀d ∀p (预警响应(p) → (ActivateEmergencyPlan(上海市, 应急响应中心, 蓝色预警预案) ∧ GuideOrganization(上海市, 应急响应中心, 蓝色预警预案)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“广东省” — 表示有关地区为广东省\",\n            \"d=“信息安全部” — 表示相关部门为信息安全部\",\n            \"p=“网络安全黄色预警” — 表示启动的应急预案为网络安全黄色预警\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r ∀d ∀p (预警响应(p) → (ActivateEmergencyPlan(广东省, 信息安全部, 网络安全黄色预警) ∧ GuideOrganization(广东省, 信息安全部, 网络安全黄色预警)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“浙江省” — 表示有关地区为浙江省\",\n            \"d=“网络应急指挥机构” — 表示相关部门为网络应急指挥机构\",\n            \"p=“蓝色网络安全预警” — 表示启动的应急预案为蓝色网络安全预警\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r ∀d ∀p (预警响应(p) → (ActivateEmergencyPlan(浙江省, 网络应急指挥机构, 蓝色网络安全预警) ∧ GuideOrganization(浙江省, 网络应急指挥机构, 蓝色网络安全预警)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“气象局” — 表示预警发布部门为气象局\",\n            \"s=“暴雨” — 表示当前的实际情况为暴雨\",\n            \"Message=“暴雨预警解除” — 表示发布的预警解除信息为暴雨预警解除\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀s (ActualCondition(暴雨) → (IssueWarning(气象局, 暴雨) → (LiftWarning(气象局, 暴雨) → PublishInfo(气象局, '暴雨预警解除'))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“环保局” — 表示预警发布部门为环保局\",\n            \"s=“重度污染” — 表示当前的实际情况为重度污染\",\n            \"Message=“重度污染预警解除” — 表示发布的预警解除信息为重度污染预警解除\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀s (ActualCondition(重度污染) → (IssueWarning(环保局, 重度污染) → (LiftWarning(环保局, 重度污染) → PublishInfo(环保局, '重度污染预警解除'))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“地震局” — 表示预警发布部门为地震局\",\n            \"s=“地震风险” — 表示当前的实际情况为地震风险\",\n            \"Message=“地震风险预警解除” — 表示发布的预警解除信息为地震风险预警解除\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀s (ActualCondition(地震风险) → (IssueWarning(地震局, 地震风险) → (LiftWarning(地震局, 地震风险) → PublishInfo(地震局, '地震风险预警解除'))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“消防局” — 表示预警发布部门为消防局\",\n            \"s=“森林火灾” — 表示当前的实际情况为森林火灾\",\n            \"Message=“森林火灾预警解除” — 表示发布的预警解除信息为森林火灾预警解除\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d∀s (ActualCondition(森林火灾) → (IssueWarning(消防局, 森林火灾) → (LiftWarning(消防局, 森林火灾) → PublishInfo(消防局, '森林火灾预警解除'))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"i=“系统入侵” — 表示发生了系统入侵这一网络安全事件\",\n            \"Unit=“数据中心” — 表示数据中心是事发单位\",\n            \"r=“本市” — 表示相关地区为本市\",\n            \"d=“市公安局网安支队” — 表示相关网络安全部门为市公安局网安支队\",\n            \"MajorOrExtremelyMajor(i)=“True” — 表示系统入侵事件被初判为特别重大或重大网络安全事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"CyberSecurityEvent(“系统入侵”) → (ActivateEmergencyPlan(数据中心) ∧ ImplementDisposal(数据中心) ∧ ReportInformation(数据中心))\",\n            \"CyberSecurityEvent(“系统入侵”) → (OrganizeInitialResponse(本市, 市公安局网安支队) ∧ ControlSituation(本市, 市公安局网安支队) ∧ EliminateRisks(本市, 市公安局网安支队) ∧ OrganizeAssessment(本市, 市公安局网安支队) ∧ PreserveEvidence(本市, 市公安局网安支队) ∧ InformOthers(本市, 市公安局网安支队))\",\n            \"CyberSecurityEvent(“系统入侵”) ∧ MajorOrExtremelyMajor(“系统入侵”) → ReportEmergencyOffice(“系统入侵”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“数据泄露” — 表示发生了数据泄露这一网络安全事件\",\n            \"Unit=“金融公司” — 表示金融公司是事发单位\",\n            \"r=“本省” — 表示相关地区为本省\",\n            \"d=“省网络安全应急响应中心” — 表示相关网络安全部门为省网络安全应急响应中心\",\n            \"MajorOrExtremelyMajor(i)=“False” — 表示数据泄露事件被初判为非特别重大、重大网络安全事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"CyberSecurityEvent(“数据泄露”) → (ActivateEmergencyPlan(金融公司) ∧ ImplementDisposal(金融公司) ∧ ReportInformation(金融公司))\",\n            \"CyberSecurityEvent(“数据泄露”) → (OrganizeInitialResponse(本省, 省网络安全应急响应中心) ∧ ControlSituation(本省, 省网络安全应急响应中心) ∧ EliminateRisks(本省, 省网络安全应急响应中心) ∧ OrganizeAssessment(本省, 省网络安全应急响应中心) ∧ PreserveEvidence(本省, 省网络安全应急响应中心) ∧ InformOthers(本省, 省网络安全应急响应中心))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"i=“服务中断” — 表示发生了服务中断这一网络安全事件\",\n            \"Unit=“云服务提供商” — 表示云服务提供商是事发单位\",\n            \"r=“全国” — 表示相关地区为全国\",\n            \"d=“国家网络安全应急响应中心” — 表示相关网络安全部门为国家网络安全应急响应中心\",\n            \"MajorOrExtremelyMajor(i)=“True” — 表示服务中断事件被初判为特别重大或重大网络安全事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"CyberSecurityEvent(“服务中断”) → (ActivateEmergencyPlan(云服务提供商) ∧ ImplementDisposal(云服务提供商) ∧ ReportInformation(云服务提供商))\",\n            \"CyberSecurityEvent(“服务中断”) → (OrganizeInitialResponse(全国, 国家网络安全应急响应中心) ∧ ControlSituation(全国, 国家网络安全应急响应中心) ∧ EliminateRisks(全国, 国家网络安全应急响应中心) ∧ OrganizeAssessment(全国, 国家网络安全应急响应中心) ∧ PreserveEvidence(全国, 国家网络安全应急响应中心) ∧ InformOthers(全国, 国家网络安全应急响应中心))\",\n            \"CyberSecurityEvent(“服务中断”) ∧ MajorOrExtremelyMajor(“服务中断”) → ReportEmergencyOffice(“服务中断”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“网络攻击A” — 表示一个特别重大的网络安全事件\",\n            \"Level=“I级” — 表示事件的应急响应级别为I级\",\n            \"CommandCenter=“国家网络安全应急指挥中心” — 表示成立的指挥部\",\n            \"Responsibility=“统一领导、指挥、协调” — 表示指挥部需要履行的职责\",\n            \"Organization=“国家网络安全应急指挥中心”\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyResponseLevel(网络攻击A, I级) → (EstablishCommandCenter(网络攻击A) ∧ PerformDuties(国家网络安全应急指挥中心, 统一领导、指挥、协调) ∧ OnDuty24Hours(国家网络安全应急指挥中心))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“省级网络安全应急响应小组” — 表示省级的应急响应组织\",\n            \"Work=“应急处置工作” — 表示省级组织负责的工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyStatus(省级网络安全应急响应小组) → (OnDuty24Hours(省级网络安全应急响应小组) ∧ ResponsibleForWork(省级网络安全应急响应小组, 应急处置工作))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“技术支持部门” — 表示技术支持部门组织\",\n            \"Work=“支援保障工作” — 表示技术支持部门负责的工作\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyStatus(技术支持部门) → (OnDuty24Hours(技术支持部门) ∧ ResponsibleForWork(技术支持部门, 支援保障工作))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“省级网络安全应急响应小组” — 表示省级的应急响应组织\"\n        ],\n        \"instance_logicexpression\": [\n            \"EmergencyStatus(省级网络安全应急响应小组) → (TrackSituation(省级网络安全应急响应小组) ∧ ReportSituation(国家网络安全应急指挥中心, 省级网络安全应急响应小组))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“I级响应策略” — 表示I级响应的策略\",\n            \"Organization=“省级网络安全应急响应小组” — 表示负责实施策略的组织\"\n        ],\n        \"instance_logicexpression\": [\n            \"DeployStrategy(国家网络安全应急指挥中心, I级响应策略) → ResponsibleForWork(省级网络安全应急响应小组, ImplementStrategy(I级响应策略))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“Ⅲ级响应” — 表示响应级别为Ⅲ级\",\n            \"d=“市应急局” — 表示响应的部门为市应急局\",\n            \"p=“洪涝灾害预案” — 表示相关的预案为洪涝灾害预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r ∀d ∀p ((Ⅲ级响应(Ⅲ级响应) ∨ Ⅳ级响应(r)) ∧ 预案(洪涝灾害预案) → EmergencyResponse(市应急局, 市应急局, 洪涝灾害预案))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“Ⅳ级响应” — 表示响应级别为Ⅳ级\",\n            \"d=“区消防局” — 表示响应的部门为区消防局\",\n            \"p=“火灾应急处置预案” — 表示相关的预案为火灾应急处置预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r ∀d ∀p ((Ⅲ级响应(r) ∨ Ⅳ级响应(Ⅳ级响应)) ∧ 预案(火灾应急处置预案) → EmergencyResponse(区消防局, 区消防局, 火灾应急处置预案))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“Ⅲ级响应” — 表示响应级别为Ⅲ级\",\n            \"d=“县卫生局” — 表示响应的部门为县卫生局\",\n            \"p=“公共卫生事件预案” — 表示相关的预案为公共卫生事件预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r ∀d ∀p ((Ⅲ级响应(Ⅲ级响应) ∨ Ⅳ级响应(r)) ∧ 预案(公共卫生事件预案) → EmergencyResponse(县卫生局, 县卫生局, 公共卫生事件预案))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“Ⅳ级响应” — 表示响应级别为Ⅳ级\",\n            \"d=“市交通局” — 表示响应的部门为市交通局\",\n            \"p=“交通事故应急处理预案” — 表示相关的预案为交通事故应急处理预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r ∀d ∀p ((Ⅲ级响应(r) ∨ Ⅳ级响应(Ⅳ级响应)) ∧ 预案(交通事故应急处理预案) → EmergencyResponse(市交通局, 市交通局, 交通事故应急处理预案))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"EmergencyOffice=“应急办” — 表示应急办提出建议。\",\n            \"CommandCenter=“指挥部” — 表示指挥部批准。\",\n            \"Province=“北京市” — 表示需要通报的省份。\",\n            \"Department=“交通部” — 表示需要通报的部门。\"\n        ],\n        \"instance_logicexpression\": [\n            \"Suggest(应急办) ∧ Approve(指挥部) → Notify(北京市, 交通部)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"EmergencyOffice=“应急办” — 表示应急办提出建议。\",\n            \"CommandCenter=“指挥部” — 表示指挥部批准。\",\n            \"Province=“上海市” — 表示需要通报的省份。\",\n            \"Department=“卫生局” — 表示需要通报的部门。\"\n        ],\n        \"instance_logicexpression\": [\n            \"Suggest(应急办) ∧ Approve(指挥部) → Notify(上海市, 卫生局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"EmergencyOffice=“应急办” — 表示应急办提出建议。\",\n            \"CommandCenter=“指挥部” — 表示指挥部批准。\",\n            \"Province=“广东省” — 表示需要通报的省份。\",\n            \"Department=“环保局” — 表示需要通报的部门。\"\n        ],\n        \"instance_logicexpression\": [\n            \"Suggest(应急办) ∧ Approve(指挥部) → Notify(广东省, 环保局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"EmergencyOffice=“应急办” — 表示应急办提出建议。\",\n            \"CommandCenter=“指挥部” — 表示指挥部批准。\",\n            \"Province=“四川省” — 表示需要通报的省份。\",\n            \"Department=“教育局” — 表示需要通报的部门。\"\n        ],\n        \"instance_logicexpression\": [\n            \"Suggest(应急办) ∧ Approve(指挥部) → Notify(四川省, 教育局)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“广东省” — 表示事件发生在广东省\",\n            \"r=“广东省” — 表示应急办需要通报的省\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (Decide(广东省) → (ReportToEmergencyOffice(广东省) ∧ ∀r (Notify(EmergencyOffice, r) → (r = 广东省 ∨ r 相关于 广东省))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“北京市” — 表示事件发生在北京市\",\n            \"r=“北京市” — 表示应急办需要通报的市\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (Decide(北京市) → (ReportToEmergencyOffice(北京市) ∧ ∀r (Notify(EmergencyOffice, r) → (r = 北京市 ∨ r 相关于 北京市))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“长江流域管理办公室” — 表示事件发生在长江流域管理办公室\",\n            \"r=“长江流域管理办公室” — 表示应急办需要通报的部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (Decide(长江流域管理办公室) → (ReportToEmergencyOffice(长江流域管理办公室) ∧ ∀r (Notify(EmergencyOffice, r) → (r = 长江流域管理办公室 ∨ r 相关于 长江流域管理办公室))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“上海市” — 表示事件发生在上海市\",\n            \"r=“上海市” — 表示应急办需要通报的市\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (Decide(上海市) → (ReportToEmergencyOffice(上海市) ∧ ∀r (Notify(EmergencyOffice, r) → (r = 上海市 ∨ r 相关于 上海市))))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“黄河水利委员会” — 表示事件发生在黄河水利委员会\",\n            \"r=“黄河水利委员会” — 表示应急办需要通报的部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀p (Decide(黄河水利委员会) → (ReportToEmergencyOffice(黄河水利委员会) ∧ ∀r (Notify(EmergencyOffice, r) → (r = 黄河水利委员会 ∨ r 相关于 黄河水利委员会))))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“2023-11-05全国断网事件” — 表示2023年11月5日发生的全国性断网事件\",\n            \"Severity=“特别重大” — 表示事件的严重程度为特别重大\",\n            \"Department=“国家网络安全局” — 表示参与调查的部门为国家网络安全局\",\n            \"Province=“全国” — 表示事件影响范围为全国\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (CyberSecurityEvent(“2023-11-05全国断网事件”, 特别重大) → (Organize(EmergencyOffice, 国家网络安全局, 全国) ∧ Investigate(Handle, “2023-11-05全国断网事件”) ∧ SummarizeAssess(“2023-11-05全国断网事件”, Report) ∧ ReportTo(国家网络安全局, “2023-11-05全国断网事件”)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“2023-09-15金融系统攻击事件” — 表示2023年9月15日发生的金融系统攻击事件\",\n            \"Severity=“重大” — 表示事件的严重程度为重大\",\n            \"Department=“金融监管局” — 表示事件发生地区或部门为金融监管局\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (CyberSecurityEvent(“2023-09-15金融系统攻击事件”, 重大) → (SelfOrganize(金融监管局, “2023-09-15金融系统攻击事件”) ∧ Investigate(Handle, “2023-09-15金融系统攻击事件”) ∧ SummarizeAssess(“2023-09-15金融系统攻击事件”, Report) ∧ ReportTo(EmergencyOffice, Report)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“2023-07-20电力系统故障事件” — 表示2023年7月20日发生的电力系统故障事件\",\n            \"Severity=“以下” — 表示事件的严重程度为重大以下\",\n            \"Department=“电力公司” — 表示事件发生地区或部门为电力公司\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (CyberSecurityEvent(“2023-07-20电力系统故障事件”, 以下) → (SelfOrganize(电力公司, “2023-07-20电力系统故障事件”) ∧ Investigate(Handle, “2023-07-20电力系统故障事件”) ∧ SummarizeAssess(“2023-07-20电力系统故障事件”, Report)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“2023-11-05全国断网事件” — 表示2023年11月5日发生的全国性断网事件\",\n            \"Report=“全国断网事件调查报告” — 表示对事件的总结评估报告\",\n            \"Suggestion=“加强网络安全防护措施” — 表示提出的处理意见和改进措施\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀e (SummarizeAssess(“2023-11-05全国断网事件”, “全国断网事件调查报告”) → (Propose(“加强网络安全防护措施”, “2023-11-05全国断网事件”) ∧ (“全国断网事件调查报告” ⊕ EventCause(“2023-11-05全国断网事件”) ∧ EventNature(“2023-11-05全国断网事件”) ∧ EventImpact(“2023-11-05全国断网事件”) ∧ EventResponsibility(“2023-11-05全国断网事件”))))\",\n            \"∀e (EmergencyResponseEnd(“2023-11-05全国断网事件”) → (Complete(“2023-11-05全国断网事件”, 30)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“华东地区” — 表示华东地区\",\n            \"d=“教育局” — 表示教育局\"\n        ],\n        \"instance_logicexpression\": [\n            \"PerformPrevention(华东地区, 教育局) ∧ DevelopEmergencyPlan(华东地区, 教育局) ∧ ConductSecurityCheck(华东地区, 教育局) ∧ IdentifyVulnerabilities(华东地区, 教育局) ∧ ConductRiskAssessment(华东地区, 教育局) ∧ PerformDisasterRecoveryBackup(华东地区, 教育局) ∧ EstablishCommunicationMechanism(华东地区, 教育局) → TakeEffectiveMeasures(华东地区, 教育局) ∧ ReduceAndAvoidIncidents(华东地区, 教育局) ∧ EnhanceResponseCapability(华东地区, 教育局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“华南地区” — 表示华南地区\",\n            \"d=“公安局” — 表示公安局\"\n        ],\n        \"instance_logicexpression\": [\n            \"PerformPrevention(华南地区, 公安局) ∧ DevelopEmergencyPlan(华南地区, 公安局) ∧ ConductSecurityCheck(华南地区, 公安局) ∧ IdentifyVulnerabilities(华南地区, 公安局) ∧ ConductRiskAssessment(华南地区, 公安局) ∧ PerformDisasterRecoveryBackup(华南地区, 公安局) ∧ EstablishCommunicationMechanism(华南地区, 公安局) → TakeEffectiveMeasures(华南地区, 公安局) ∧ ReduceAndAvoidIncidents(华南地区, 公安局) ∧ EnhanceResponseCapability(华南地区, 公安局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“华北地区” — 表示华北地区\",\n            \"d=“财政局” — 表示财政局\"\n        ],\n        \"instance_logicexpression\": [\n            \"PerformPrevention(华北地区, 财政局) ∧ DevelopEmergencyPlan(华北地区, 财政局) ∧ ConductSecurityCheck(华北地区, 财政局) ∧ IdentifyVulnerabilities(华北地区, 财政局) ∧ ConductRiskAssessment(华北地区, 财政局) ∧ PerformDisasterRecoveryBackup(华北地区, 财政局) ∧ EstablishCommunicationMechanism(华北地区, 财政局) → TakeEffectiveMeasures(华北地区, 财政局) ∧ ReduceAndAvoidIncidents(华北地区, 财政局) ∧ EnhanceResponseCapability(华北地区, 财政局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“华中地区” — 表示华中地区\",\n            \"d=“交通局” — 表示交通局\"\n        ],\n        \"instance_logicexpression\": [\n            \"PerformPrevention(华中地区, 交通局) ∧ DevelopEmergencyPlan(华中地区, 交通局) ∧ ConductSecurityCheck(华中地区, 交通局) ∧ IdentifyVulnerabilities(华中地区, 交通局) ∧ ConductRiskAssessment(华中地区, 交通局) ∧ PerformDisasterRecoveryBackup(华中地区, 交通局) ∧ EstablishCommunicationMechanism(华中地区, 交通局) → TakeEffectiveMeasures(华中地区, 交通局) ∧ ReduceAndAvoidIncidents(华中地区, 交通局) ∧ EnhanceResponseCapability(华中地区, 交通局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“西南地区” — 表示西南地区\",\n            \"d=“卫生局” — 表示卫生局\"\n        ],\n        \"instance_logicexpression\": [\n            \"PerformPrevention(西南地区, 卫生局) ∧ DevelopEmergencyPlan(西南地区, 卫生局) ∧ ConductSecurityCheck(西南地区, 卫生局) ∧ IdentifyVulnerabilities(西南地区, 卫生局) ∧ ConductRiskAssessment(西南地区, 卫生局) ∧ PerformDisasterRecoveryBackup(西南地区, 卫生局) ∧ EstablishCommunicationMechanism(西南地区, 卫生局) → TakeEffectiveMeasures(西南地区, 卫生局) ∧ ReduceAndAvoidIncidents(西南地区, 卫生局) ∧ EnhanceResponseCapability(西南地区, 卫生局)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“中央网信办” — 表示中央网信办\",\n            \"d=“公安部” — 表示公安部\",\n            \"d=“应急管理部” — 表示应急管理部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Department(d) → (OrganizeDrill(d) ∧ Regularly(d) ∧ ReviewAndImprovePlan(d) ∧ EnhanceCombatReadiness(d)))\",\n            \"∀d (Department(d) → ReportDrill(d, CentralCyber))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“北京市” — 表示北京市\",\n            \"d=“上海市” — 表示上海市\",\n            \"d=“广东省” — 表示广东省\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Department(d) → (OrganizeDrill(d) ∧ Regularly(d) ∧ ReviewAndImprovePlan(d) ∧ EnhanceCombatReadiness(d)))\",\n            \"∀d (Department(d) → ReportDrill(d, CentralCyber))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“教育部门” — 表示教育部门\",\n            \"d=“卫生部门” — 表示卫生部门\",\n            \"d=“交通部门” — 表示交通部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (Department(d) → (OrganizeDrill(d) ∧ Regularly(d) ∧ ReviewAndImprovePlan(d) ∧ EnhanceCombatReadiness(d)))\",\n            \"∀d (Department(d) → ReportDrill(d, CentralCyber))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“北京市” — 表示地区为北京市\",\n            \"d=“教育局” — 表示部门为教育局\",\n            \"m=“社交媒体” — 表示传播媒介为社交媒体\"\n        ],\n        \"instance_logicexpression\": [\n            \"Region(北京市) ∧ Department(教育局) ∧ Medium(社交媒体) → EnhancePromotion(北京市, 教育局, 社交媒体)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“上海市” — 表示地区为上海市\",\n            \"d=“公安局” — 表示部门为公安局\",\n            \"c=“网络安全法规” — 表示宣传内容为网络安全法规\"\n        ],\n        \"instance_logicexpression\": [\n            \"Region(上海市) ∧ Department(公安局) ∧ Content(网络安全法规) → PromoteContent(上海市, 公安局, 网络安全法规)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“广州市” — 表示地区为广州市\",\n            \"d=“文化局” — 表示部门为文化局\",\n            \"a=“网络安全知识讲座” — 表示宣传活动为网络安全知识讲座\"\n        ],\n        \"instance_logicexpression\": [\n            \"Region(广州市) ∧ Department(文化局) ∧ Activity(网络安全知识讲座) → ConductPromotionActivity(广州市, 文化局, 网络安全知识讲座)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“深圳市” — 表示地区为深圳市\",\n            \"d=“科技局” — 表示部门为科技局\",\n            \"m=“电视广播” — 表示传播媒介为电视广播\"\n        ],\n        \"instance_logicexpression\": [\n            \"Region(深圳市) ∧ Department(科技局) ∧ Medium(电视广播) → EnhancePromotion(深圳市, 科技局, 电视广播)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“杭州市” — 表示地区为杭州市\",\n            \"d=“市场监管局” — 表示部门为市场监管局\",\n            \"c=“网络安全防护技能” — 表示宣传内容为网络安全防护技能\"\n        ],\n        \"instance_logicexpression\": [\n            \"Region(杭州市) ∧ Department(市场监管局) ∧ Content(网络安全防护技能) → PromoteContent(杭州市, 市场监管局, 网络安全防护技能)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“华东地区” — 表示华东地区\",\n            \"d=“教育部门” — 表示教育部门\",\n            \"c=“网络安全事件应急知识” — 表示培训内容为网络安全事件应急知识\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r ∀d ∀c (TrainingContent(华东地区, 教育部门, 网络安全事件应急知识) ∧ Content(网络安全事件应急知识, '网络安全事件应急知识') → EnhanceTraining(华东地区, 教育部门, '网络安全') ∧ EnhanceTraining(华东地区, 教育部门, '网络安全应急预案'))\",\n            \"∀r ∀d ∀c (EnhanceTraining(华东地区, 教育部门, '网络安全') ∧ EnhanceTraining(华东地区, 教育部门, '网络安全应急预案') → ∀p (Person(p) → ImproveAwarenessSkills(p)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“华南地区” — 表示华南地区\",\n            \"d=“卫生部门” — 表示卫生部门\",\n            \"c=“网络安全应急预案” — 表示培训内容为网络安全应急预案\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r ∀d ∀c (TrainingContent(华南地区, 卫生部门, 网络安全应急预案) ∧ Content(网络安全应急预案, '网络安全事件应急知识') → EnhanceTraining(华南地区, 卫生部门, '网络安全') ∧ EnhanceTraining(华南地区, 卫生部门, '网络安全应急预案'))\",\n            \"∀r ∀d ∀c (EnhanceTraining(华南地区, 卫生部门, '网络安全') ∧ EnhanceTraining(华南地区, 卫生部门, '网络安全应急预案') → ∀p (Person(p) → ImproveAwarenessSkills(p)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“华北地区” — 表示华北地区\",\n            \"d=“公安部门” — 表示公安部门\",\n            \"c=“网络安全意识” — 表示培训内容为网络安全意识\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r ∀d ∀c (TrainingContent(华北地区, 公安部门, 网络安全意识) ∧ Content(网络安全意识, '网络安全事件应急知识') → EnhanceTraining(华北地区, 公安部门, '网络安全') ∧ EnhanceTraining(华北地区, 公安部门, '网络安全应急预案'))\",\n            \"∀r ∀d ∀c (EnhanceTraining(华北地区, 公安部门, '网络安全') ∧ EnhanceTraining(华北地区, 公安部门, '网络安全应急预案') → ∀p (Person(p) → ImproveAwarenessSkills(p)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“西南地区” — 表示西南地区\",\n            \"d=“交通部门” — 表示交通部门\",\n            \"c=“网络安全技能” — 表示培训内容为网络安全技能\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r ∀d ∀c (TrainingContent(西南地区, 交通部门, 网络安全技能) ∧ Content(网络安全技能, '网络安全事件应急知识') → EnhanceTraining(西南地区, 交通部门, '网络安全') ∧ EnhanceTraining(西南地区, 交通部门, '网络安全应急预案'))\",\n            \"∀r ∀d ∀c (EnhanceTraining(西南地区, 交通部门, '网络安全') ∧ EnhanceTraining(西南地区, 交通部门, '网络安全应急预案') → ∀p (Person(p) → ImproveAwarenessSkills(p)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"p=“北京” — 表示北京省（区、市）\",\n            \"d=“公安厅” — 表示公安厅部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"ImportantEvent(北京) → (EnhancePrevention(北京, 公安厅) ∧ EmergencyResponse(北京, 公安厅))\",\n            \"∀e (Coordinate(e) → (∃p ∃d (ImportantEvent(北京) ∧ ActivateAlert(北京, 公安厅, RedAlert))))\",\n            \"ImportantEvent(北京) → (MonitorCybersecurity(北京, 公安厅) ∧ AnalyzeAssess(北京, 公安厅) ∧ WarnRisk(北京, 公安厅))\",\n            \"ImportantEvent(北京) → DetectHandle(北京, 公安厅)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“上海” — 表示上海省（区、市）\",\n            \"d=“教育局” — 表示教育局部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"ImportantEvent(上海) → (EnhancePrevention(上海, 教育局) ∧ EmergencyResponse(上海, 教育局))\",\n            \"∀e (Coordinate(e) → (∃p ∃d (ImportantEvent(上海) ∧ ActivateAlert(上海, 教育局, RedAlert))))\",\n            \"ImportantEvent(上海) → (MonitorCybersecurity(上海, 教育局) ∧ AnalyzeAssess(上海, 教育局) ∧ WarnRisk(上海, 教育局))\",\n            \"ImportantEvent(上海) → DetectHandle(上海, 教育局)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“应急办” — 表示应急办\",\n            \"p=“广东省” — 表示广东省（区、市）\",\n            \"d=“交通厅” — 表示交通厅部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"Coordinate(应急办) → (∃p ∃d (ImportantEvent(广东省) ∧ ActivateAlert(广东省, 交通厅, RedAlert)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"k=“国家电网公司” — 表示国家电网公司为重点部门\",\n            \"kp=“网络安全中心” — 表示网络安全中心为重点岗位\"\n        ],\n        \"instance_logicexpression\": [\n            \"KeyDepartment(国家电网公司) ∧ KeyPosition(网络安全中心) → 24HourShift(国家电网公司, 网络安全中心)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“浙江省” — 表示浙江省（区、市）\",\n            \"d=“卫生厅” — 表示卫生厅部门\"\n        ],\n        \"instance_logicexpression\": [\n            \"ImportantEvent(浙江省) → (EnhancePrevention(浙江省, 卫生厅) ∧ EmergencyResponse(浙江省, 卫生厅))\",\n            \"∀e (Coordinate(e) → (∃p ∃d (ImportantEvent(浙江省) ∧ ActivateAlert(浙江省, 卫生厅, RedAlert))))\",\n            \"ImportantEvent(浙江省) → (MonitorCybersecurity(浙江省, 卫生厅) ∧ AnalyzeAssess(浙江省, 卫生厅) ∧ WarnRisk(浙江省, 卫生厅))\",\n            \"ImportantEvent(浙江省) → DetectHandle(浙江省, 卫生厅)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“华东地区” — 表示华东地区\",\n            \"p=“网络安全部” — 表示网络安全部\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r∀p (Region(华东地区) ∨ Department(华东地区) ∨ Unit(华东地区) → (ImplementResponsibility(华东地区, 网络安全部) ∧ EstablishEmergencyMechanism(华东地区)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“教育部” — 表示教育部\",\n            \"p=“信息安全岗位” — 表示信息安全岗位\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r∀p (Region(教育部) ∨ Department(教育部) ∨ Unit(教育部) → (ImplementResponsibility(教育部, 信息安全岗位) ∧ EstablishEmergencyMechanism(教育部)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“国家电网公司” — 表示国家电网公司\",\n            \"p=“张伟” — 表示张伟个人\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r∀p (Region(国家电网公司) ∨ Department(国家电网公司) ∨ Unit(国家电网公司) → (ImplementResponsibility(国家电网公司, 张伟) ∧ EstablishEmergencyMechanism(国家电网公司)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“西部某省” — 表示西部某省\",\n            \"p=“应急响应小组” — 表示应急响应小组\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r∀p (Region(西部某省) ∨ Department(西部某省) ∨ Unit(西部某省) → (ImplementResponsibility(西部某省, 应急响应小组) ∧ EstablishEmergencyMechanism(西部某省)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“科技公司” — 表示科技公司\",\n            \"p=“数据保护专员” — 表示数据保护专员\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r∀p (Region(科技公司) ∨ Department(科技公司) ∨ Unit(科技公司) → (ImplementResponsibility(科技公司, 数据保护专员) ∧ EstablishEmergencyMechanism(科技公司)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"t=“国家网络安全应急技术支撑队伍” — 表示加强国家网络安全应急技术支撑队伍的建设\",\n            \"e=“网络攻击事件X” — 表示一个具体的网络安全事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"Team('国家网络安全应急技术支撑队伍') ∧ Type('国家网络安全应急技术支撑队伍', '网络安全应急技术支撑队伍') → StrengthenConstruction('国家网络安全应急技术支撑队伍')\",\n            \"CyberSecurityEvent('网络攻击事件X') → (MonitorWarning('网络攻击事件X') ∧ PreventProtection('网络攻击事件X') ∧ EmergencyHandling('网络攻击事件X'))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"s=“网络安全企业A” — 表示一个具体的网络安全企业\",\n            \"e=“网络攻击事件Y” — 表示另一个具体的网络安全事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"Enterprise('网络安全企业A') ∧ Type('网络安全企业A', '网络安全企业') → EnhanceCapability('网络安全企业A')\",\n            \"CyberSecurityEvent('网络攻击事件Y') → ∃s (Supporter('网络安全企业A') ∧ TechnicalSupport('网络安全企业A', '网络攻击事件Y'))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“中央网信办” — 表示中央网信办\",\n            \"Standard=“网络安全应急技术支撑队伍评估标准” — 表示中央网信办制定的评估认定标准\"\n        ],\n        \"instance_logicexpression\": [\n            \"CentralCybersecurityOffice('中央网信办') ∧ EstablishStandard('中央网信办', '网络安全应急技术支撑队伍评估标准') ∧ OrganizeAssessment('中央网信办', '国家网络安全应急技术支撑队伍')\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“某省公安厅” — 表示省公安厅\",\n            \"t=“网络安全专业技术人才Z” — 表示省公安厅配备的专业技术人才\",\n            \"Mechanism=“网络安全信息共享机制” — 表示省公安厅建立的信息共享机制\"\n        ],\n        \"instance_logicexpression\": [\n            \"Province('某省公安厅') → (∃t (Talent('网络安全专业技术人才Z') ∧ EquipTalent('某省公安厅', '网络安全专业技术人才Z')) ∧ CommunicateCoordinate('某省公安厅', NationalCybersecurityUnit) ∧ EstablishMechanism('某省公安厅', '网络安全信息共享机制'))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“某市信息部门” — 表示市信息部门\",\n            \"t=“网络安全专业技术人才W” — 表示市信息部门配备的专业技术人才\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department('某市信息部门') → (∃t (Talent('网络安全专业技术人才W') ∧ EquipTalent('某市信息部门', '网络安全专业技术人才W')) ∧ CommunicateCoordinate('某市信息部门', NationalCybersecurityUnit) ∧ EstablishMechanism('某市信息部门', InformationSharingMechanism))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"国家=“中国” — 表示国家建立了专家组\",\n            \"国家应急专家组=“中国网络安全应急专家组” — 表示中国建立的专家组名称\",\n            \"事件=“网络攻击” — 表示网络安全事件为网络攻击\"\n        ],\n        \"instance_logicexpression\": [\n            \"EstablishExpertGroup(中国) ∧ ∀e (网络安全事件(e) → (ProvideConsultation(中国网络安全应急专家组, e) ∨ ProvideAdvice(中国网络安全应急专家组, e)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"组织=“北京市” — 表示北京市加强了专家队伍的建设\",\n            \"事件=“数据泄露” — 表示网络安全事件为数据泄露\"\n        ],\n        \"instance_logicexpression\": [\n            \"StrengthenConstruction(北京市)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"组织=“教育部” — 表示教育部加强了专家队伍的建设\",\n            \"专家=“张教授” — 表示张教授是网络安全领域的专家\",\n            \"事件=“系统漏洞” — 表示网络安全事件为系统漏洞\"\n        ],\n        \"instance_logicexpression\": [\n            \"StrengthenConstruction(教育部) ∧ 网络安全事件(e) ∧ Expert(张教授) → PlayRole(张教授, e)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"组织=“公安部” — 表示公安部加强了专家队伍的建设\",\n            \"专家=“李博士” — 表示李博士是网络安全领域的专家\",\n            \"事件=“网络钓鱼” — 表示网络安全事件为网络钓鱼\"\n        ],\n        \"instance_logicexpression\": [\n            \"StrengthenConstruction(公安部) ∧ 网络安全事件(e) ∧ Expert(李博士) → PlayRole(李博士, e)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"组织=“工业和信息化部” — 表示工业和信息化部加强了专家队伍的建设\",\n            \"事件=“恶意软件” — 表示网络安全事件为恶意软件\"\n        ],\n        \"instance_logicexpression\": [\n            \"StrengthenConstruction(工业和信息化部)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“清华大学” — 表示组织为清华大学\",\n            \"t=“李明” — 表示网络安全人才为李明\",\n            \"Resource=“数据科学与人工智能技术” — 表示汇集的技术与数据资源\",\n            \"Service=“网络安全应急响应平台” — 表示建立的网络安全事件应急服务体系\",\n            \"Capability=“应对特别重大网络安全事件” — 表示提高的能力\",\n            \"e=“重大数据泄露” — 表示网络安全事件及其严重程度\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀t (Organization(“清华大学”) ∧ (教育科研机构(“清华大学”) ∨ 企事业单位(“清华大学”) ∨ 协会(“清华大学”)) → (Select(“清华大学”, “李明”) ∧ Pool(“清华大学”, “数据科学与人工智能技术”) ∧ Establish(“清华大学”, “网络安全应急响应平台”))\",\n            \"∀o∀s (Establish(“清华大学”, “网络安全应急响应平台”) → Enhance(“清华大学”, “应对特别重大网络安全事件”))\",\n            \"∀o∀e (Enhance(“清华大学”, “应对特别重大网络安全事件”) ∧ CyberSecurityEvent(“重大数据泄露”) → Capability(“清华大学”, “重大数据泄露”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“华为技术有限公司” — 表示组织为华为技术有限公司\",\n            \"t=“王华” — 表示网络安全人才为王华\",\n            \"Resource=“云计算与网络安全防护” — 表示汇集的技术与数据资源\",\n            \"Service=“企业级网络安全防护体系” — 表示建立的网络安全事件应急服务体系\",\n            \"Capability=“应对重大网络安全攻击” — 表示提高的能力\",\n            \"e=“网络攻击” — 表示网络安全事件及其严重程度\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀t (Organization(“华为技术有限公司”) ∧ (教育科研机构(“华为技术有限公司”) ∨ 企事业单位(“华为技术有限公司”) ∨ 协会(“华为技术有限公司”)) → (Select(“华为技术有限公司”, “王华”) ∧ Pool(“华为技术有限公司”, “云计算与网络安全防护”) ∧ Establish(“华为技术有限公司”, “企业级网络安全防护体系”))\",\n            \"∀o∀s (Establish(“华为技术有限公司”, “企业级网络安全防护体系”) → Enhance(“华为技术有限公司”, “应对重大网络安全攻击”))\",\n            \"∀o∀e (Enhance(“华为技术有限公司”, “应对重大网络安全攻击”) ∧ CyberSecurityEvent(“网络攻击”) → Capability(“华为技术有限公司”, “网络攻击”))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“中国互联网协会” — 表示组织为中国互联网协会\",\n            \"t=“赵丽” — 表示网络安全人才为赵丽\",\n            \"Resource=“互联网安全标准与协议” — 表示汇集的技术与数据资源\",\n            \"Service=“互联网安全事件预警系统” — 表示建立的网络安全事件应急服务体系\",\n            \"Capability=“应对重大网络安全威胁” — 表示提高的能力\",\n            \"e=“网络钓鱼” — 表示网络安全事件及其严重程度\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀o∀t (Organization(“中国互联网协会”) ∧ (教育科研机构(“中国互联网协会”) ∨ 企事业单位(“中国互联网协会”) ∨ 协会(“中国互联网协会”)) → (Select(“中国互联网协会”, “赵丽”) ∧ Pool(“中国互联网协会”, “互联网安全标准与协议”) ∧ Establish(“中国互联网协会”, “互联网安全事件预警系统”))\",\n            \"∀o∀s (Establish(“中国互联网协会”, “互联网安全事件预警系统”) → Enhance(“中国互联网协会”, “应对重大网络安全威胁”))\",\n            \"∀o∀e (Enhance(“中国互联网协会”, “应对重大网络安全威胁”) ∧ CyberSecurityEvent(“网络钓鱼”) → Capability(“中国互联网协会”, “网络钓鱼”))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"r=“华东地区” — 表示华东地区加强平台建设\",\n            \"t=“网络安全应急基础平台” — 表示加强建设的平台类型为网络安全应急基础平台\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r∀t (StrengthenConstruction(华东地区, 网络安全应急基础平台) → (EarlyDiscovery(华东地区) ∧ EarlyWarning(华东地区) ∧ EarlyResponse(华东地区)))\",\n            \"∀r (EarlyDiscovery(华东地区) ∧ EarlyWarning(华东地区) ∧ EarlyResponse(华东地区) → ImproveCapability(华东地区))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“教育部” — 表示教育部加强平台建设\",\n            \"t=“网络安全管理平台” — 表示加强建设的平台类型为网络安全管理平台\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r∀t (StrengthenConstruction(教育部, 网络安全管理平台) → (EarlyDiscovery(教育部) ∧ EarlyWarning(教育部) ∧ EarlyResponse(教育部)))\",\n            \"∀r (EarlyDiscovery(教育部) ∧ EarlyWarning(教育部) ∧ EarlyResponse(教育部) → ImproveCapability(教育部))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“西部地区” — 表示西部地区加强平台建设\",\n            \"t=“网络安全应急基础平台” — 表示加强建设的平台类型为网络安全应急基础平台\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r∀t (StrengthenConstruction(西部地区, 网络安全应急基础平台) → (EarlyDiscovery(西部地区) ∧ EarlyWarning(西部地区) ∧ EarlyResponse(西部地区)))\",\n            \"∀r (EarlyDiscovery(西部地区) ∧ EarlyWarning(西部地区) ∧ EarlyResponse(西部地区) → ImproveCapability(西部地区))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"r=“工业和信息化部” — 表示工业和信息化部加强平台建设\",\n            \"t=“网络安全管理平台” — 表示加强建设的平台类型为网络安全管理平台\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀r∀t (StrengthenConstruction(工业和信息化部, 网络安全管理平台) → (EarlyDiscovery(工业和信息化部) ∧ EarlyWarning(工业和信息化部) ∧ EarlyResponse(工业和信息化部)))\",\n            \"∀r (EarlyDiscovery(工业和信息化部) ∧ EarlyWarning(工业和信息化部) ∧ EarlyResponse(工业和信息化部) → ImproveCapability(工业和信息化部))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“科技部” — 表示科技部加强网络安全防范技术研究\",\n            \"d=“科技部” — 表示科技部不断改进技术装备\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (EnhanceResearch(科技部) ∧ ImproveEquipment(科技部) → ProvideTechnicalSupport(科技部))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“工信部” — 表示工信部加强政策引导\",\n            \"d1=“监测预警” — 表示工信部重点支持网络安全监测预警方向\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (StrengthenPolicyGuidance(工信部) → ∀d1 (SupportDirection(工信部, 监测预警) → (d1 = 监测预警)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“国家网信办” — 表示国家网信办提升网络安全应急产业整体水平\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (ImproveIndustryLevel(国家网信办) → EnhanceSupportCapacity(国家网信办))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“公安部” — 表示公安部不断改进技术装备\",\n            \"d1=“预防防护” — 表示公安部重点支持网络安全预防防护方向\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (ImproveEquipment(公安部) → ProvideTechnicalSupport(公安部))\",\n            \"∀d (StrengthenPolicyGuidance(公安部) → ∀d1 (SupportDirection(公安部, 预防防护) → (d1 = 预防防护)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“发改委” — 表示发改委加强政策引导\",\n            \"d1=“处置救援” — 表示发改委重点支持网络安全处置救援方向\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (StrengthenPolicyGuidance(发改委) → ∀d1 (SupportDirection(发改委, 处置救援) → (d1 = 处置救援)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“教育部” — 表示教育部提升网络安全应急产业整体水平\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (ImproveIndustryLevel(教育部) → EnhanceSupportCapacity(教育部))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“外交部” — 表示外交部建立国际合作渠道并签订合作协定\",\n            \"e=“必要” — 表示在必要的情况下\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (EstablishChannel(外交部) ∧ SignAgreement(外交部) → ∃e (Necessary(必要) ∧ RespondToCyberSecurityEvent(外交部)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“商务部” — 表示商务部建立国际合作渠道并签订合作协定\",\n            \"e=“紧急” — 表示在紧急的情况下\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (EstablishChannel(商务部) ∧ SignAgreement(商务部) → ∃e (Necessary(紧急) ∧ RespondToCyberSecurityEvent(商务部)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“科技部” — 表示科技部建立国际合作渠道并签订合作协定\",\n            \"e=“关键” — 表示在关键的情况下\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (EstablishChannel(科技部) ∧ SignAgreement(科技部) → ∃e (Necessary(关键) ∧ RespondToCyberSecurityEvent(科技部)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“公安部” — 表示公安部建立国际合作渠道并签订合作协定\",\n            \"e=“危机” — 表示在危机的情况下\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀d (EstablishChannel(公安部) ∧ SignAgreement(公安部) → ∃e (Necessary(危机) ∧ RespondToCyberSecurityEvent(公安部)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"e=“防火墙” — 表示储备的网络安全应急装备为防火墙\",\n            \"t=“防火墙” — 表示软件硬件工具为防火墙\"\n        ],\n        \"instance_logicexpression\": [\n            \"ReserveEmergencyEquipment(防火墙) → UpgradeSoftwareHardware(防火墙)\",\n            \"UpgradeSoftwareHardware(防火墙) → EnhanceTechnicalSupportCapability(防火墙)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“入侵检测系统” — 表示储备的网络安全应急装备为入侵检测系统\",\n            \"t=“入侵检测系统” — 表示软件硬件工具为入侵检测系统\"\n        ],\n        \"instance_logicexpression\": [\n            \"ReserveEmergencyEquipment(入侵检测系统) → UpgradeSoftwareHardware(入侵检测系统)\",\n            \"UpgradeSoftwareHardware(入侵检测系统) → EnhanceTechnicalSupportCapability(入侵检测系统)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“安全信息和事件管理工具” — 表示储备的网络安全应急装备为安全信息和事件管理工具\",\n            \"t=“安全信息和事件管理工具” — 表示软件硬件工具为安全信息和事件管理工具\"\n        ],\n        \"instance_logicexpression\": [\n            \"ReserveEmergencyEquipment(安全信息和事件管理工具) → UpgradeSoftwareHardware(安全信息和事件管理工具)\",\n            \"UpgradeSoftwareHardware(安全信息和事件管理工具) → EnhanceTechnicalSupportCapability(安全信息和事件管理工具)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"e=“数据泄露防护系统” — 表示储备的网络安全应急装备为数据泄露防护系统\",\n            \"t=“数据泄露防护系统” — 表示软件硬件工具为数据泄露防护系统\"\n        ],\n        \"instance_logicexpression\": [\n            \"ReserveEmergencyEquipment(数据泄露防护系统) → UpgradeSoftwareHardware(数据泄露防护系统)\",\n            \"UpgradeSoftwareHardware(数据泄露防护系统) → EnhanceTechnicalSupportCapability(数据泄露防护系统)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"d=“财政部门” — 表示财政部门\",\n            \"Event=“网络安全事件应急处置” — 表示网络安全事件的应急处置\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(财政部门) → ProvideFinancialSupport(财政部门, 网络安全事件应急处置)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“科技部门” — 表示科技部门\",\n            \"w=“技术支撑队伍建设” — 表示技术支撑队伍的建设\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(科技部门) ∧ WorkType(技术支撑队伍建设) → SupportWork(科技部门, 技术支撑队伍建设)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“教育部门” — 表示教育部门\",\n            \"Policy=“教育信息化政策” — 表示教育信息化政策\",\n            \"Channel=“教育基金” — 表示教育基金\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(教育部门) → (UsePolicyAndFunds(教育部门, 教育信息化政策, 教育基金) ∧ (TechnicalSupportTeamBuilding(教育部门) ∨ ExpertTeamBuilding(教育部门) ∨ BasicPlatformBuilding(教育部门) ∨ TechnologyRD(教育部门) ∨ EmergencyPlanExercise(教育部门) ∨ MaterialSupport(教育部门)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“工业和信息化部门” — 表示工业和信息化部门\",\n            \"w=“技术研发” — 表示技术研发\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(工业和信息化部门) ∧ WorkType(技术研发) → SupportWork(工业和信息化部门, 技术研发)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"d=“公安部门” — 表示公安部门\",\n            \"Policy=“公共安全政策” — 表示公共安全政策\",\n            \"Channel=“公共安全基金” — 表示公共安全基金\"\n        ],\n        \"instance_logicexpression\": [\n            \"Department(公安部门) → (UsePolicyAndFunds(公安部门, 公共安全政策, 公共安全基金) ∧ (TechnicalSupportTeamBuilding(公安部门) ∨ ExpertTeamBuilding(公安部门) ∨ BasicPlatformBuilding(公安部门) ∨ TechnologyRD(公安部门) ∨ EmergencyPlanExercise(公安部门) ∨ MaterialSupport(公安部门)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"o=“网络安全应急响应小组” — 表示网络安全应急响应小组在网络安全事件应急管理工作中作出突出贡献\",\n            \"p=“李明” — 表示个人李明在网络安全事件应急管理工作中作出突出贡献\"\n        ],\n        \"instance_logicexpression\": [\n            \"OutstandingContribution(“网络安全应急响应小组”, “李明”) → RecognizeAndReward(中央网信办, “网络安全应急响应小组”) ∧ RecognizeAndReward(有关地区和部门, “网络安全应急响应小组”) ∧ RecognizeAndReward(中央网信办, “李明”) ∧ RecognizeAndReward(有关地区和部门, “李明”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“信息系统管理部门” — 表示信息系统管理部门在网络安全事件应急管理工作中有失职、渎职行为\",\n            \"p=“王强” — 表示个人王强在网络安全事件应急管理工作中有失职、渎职行为\"\n        ],\n        \"instance_logicexpression\": [\n            \"DerelictionOfDuty(“信息系统管理部门”, “王强”) → Punish(中央网信办, “信息系统管理部门”) ∧ Punish(有关地区和部门, “信息系统管理部门”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"p=“赵红” — 表示个人赵红的行为构成犯罪\"\n        ],\n        \"instance_logicexpression\": [\n            \"Crime(“赵红”) → 依法追究刑事责任(“赵红”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“网络安全技术研发团队” — 表示网络安全技术研发团队在网络安全事件应急管理工作中作出突出贡献\",\n            \"p=“孙涛” — 表示个人孙涛在网络安全事件应急管理工作中作出突出贡献\"\n        ],\n        \"instance_logicexpression\": [\n            \"OutstandingContribution(“网络安全技术研发团队”, “孙涛”) → RecognizeAndReward(中央网信办, “网络安全技术研发团队”) ∧ RecognizeAndReward(有关地区和部门, “网络安全技术研发团队”) ∧ RecognizeAndReward(中央网信办, “孙涛”) ∧ RecognizeAndReward(有关地区和部门, “孙涛”)\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"o=“数据保护局” — 表示数据保护局在网络安全事件应急管理工作中有失职、渎职行为\",\n            \"p=“周梅” — 表示个人周梅在网络安全事件应急管理工作中有失职、渎职行为\"\n        ],\n        \"instance_logicexpression\": [\n            \"DerelictionOfDuty(“数据保护局”, “周梅”) → Punish(中央网信办, “数据保护局”) ∧ Punish(有关地区和部门, “数据保护局”)\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"E=“数据篡改案” — 表示事件为数据篡改案\",\n            \"TamperingEvent(E) — 表示事件为信息篡改事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (InformationDestructionEvent(E) → (TamperingEvent(E) ∨ ImpersonationEvent(E) ∨ LeakageEvent(E) ∨ TheftEvent(E) ∨ LossEvent(E) ∨ OtherDestructionEvent(E)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“身份盗用案” — 表示事件为身份盗用案\",\n            \"ImpersonationEvent(E) — 表示事件为信息假冒事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (InformationDestructionEvent(E) → (TamperingEvent(E) ∨ ImpersonationEvent(E) ∨ LeakageEvent(E) ∨ TheftEvent(E) ∨ LossEvent(E) ∨ OtherDestructionEvent(E)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“客户信息泄露案” — 表示事件为客户信息泄露案\",\n            \"LeakageEvent(E) — 表示事件为信息泄露事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (InformationDestructionEvent(E) → (TamperingEvent(E) ∨ ImpersonationEvent(E) ∨ LeakageEvent(E) ∨ TheftEvent(E) ∨ LossEvent(E) ∨ OtherDestructionEvent(E)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“商业机密窃取案” — 表示事件为商业机密窃取案\",\n            \"TheftEvent(E) — 表示事件为信息窃取事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (InformationDestructionEvent(E) → (TamperingEvent(E) ∨ ImpersonationEvent(E) ∨ LeakageEvent(E) ∨ TheftEvent(E) ∨ LossEvent(E) ∨ OtherDestructionEvent(E)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“重要文件丢失案” — 表示事件为重要文件丢失案\",\n            \"LossEvent(E) — 表示事件为信息丢失事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (InformationDestructionEvent(E) → (TamperingEvent(E) ∨ ImpersonationEvent(E) ∨ LeakageEvent(E) ∨ TheftEvent(E) ∨ LossEvent(E) ∨ OtherDestructionEvent(E)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“未知信息破坏案” — 表示事件为未知信息破坏案\",\n            \"OtherDestructionEvent(E) — 表示事件为其他类型的信息破坏事件\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (InformationDestructionEvent(E) → (TamperingEvent(E) ∨ ImpersonationEvent(E) ∨ LeakageEvent(E) ∨ TheftEvent(E) ∨ LossEvent(E) ∨ OtherDestructionEvent(E)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"a=“黑客组织” — 表示主体为黑客组织\",\n            \"c=“恐怖主义宣传材料” — 表示内容为恐怖主义宣传材料\",\n            \"Issue=“国家安全” — 表示敏感问题为国家安全\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀c (SpreadInformation(黑客组织, 恐怖主义宣传材料) ∧ Prohibited(恐怖主义宣传材料) → (OrganizeCollusion(黑客组织) ∨ InciteAssembly(黑客组织) ∨ HypeIssue(黑客组织, 国家安全)) ∧ EndangerSecurity(黑客组织, NationalSecurity) ∨ EndangerSecurity(黑客组织, SocialStability) ∨ EndangerSecurity(黑客组织, PublicInterest))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“激进分子” — 表示主体为激进分子\",\n            \"c=“非法集会号召” — 表示内容为非法集会号召\",\n            \"Issue=“社会稳定” — 表示敏感问题为社会稳定\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀c (SpreadInformation(激进分子, 非法集会号召) ∧ Prohibited(非法集会号召) → (OrganizeCollusion(激进分子) ∨ InciteAssembly(激进分子) ∨ HypeIssue(激进分子, 社会稳定)) ∧ EndangerSecurity(激进分子, NationalSecurity) ∨ EndangerSecurity(激进分子, SocialStability) ∨ EndangerSecurity(激进分子, PublicInterest))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“网络大V” — 表示主体为网络大V\",\n            \"c=“虚假新闻” — 表示内容为虚假新闻\",\n            \"Issue=“公众利益” — 表示敏感问题为公众利益\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀c (SpreadInformation(网络大V, 虚假新闻) ∧ Prohibited(虚假新闻) → (OrganizeCollusion(网络大V) ∨ InciteAssembly(网络大V) ∨ HypeIssue(网络大V, 公众利益)) ∧ EndangerSecurity(网络大V, NationalSecurity) ∨ EndangerSecurity(网络大V, SocialStability) ∨ EndangerSecurity(网络大V, PublicInterest))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"a=“匿名用户” — 表示主体为匿名用户\",\n            \"c=“种族歧视言论” — 表示内容为种族歧视言论\",\n            \"Issue=“社会和谐” — 表示敏感问题为社会和谐\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀a∀c (SpreadInformation(匿名用户, 种族歧视言论) ∧ Prohibited(种族歧视言论) → (OrganizeCollusion(匿名用户) ∨ InciteAssembly(匿名用户) ∨ HypeIssue(匿名用户, 社会和谐)) ∧ EndangerSecurity(匿名用户, NationalSecurity) ∨ EndangerSecurity(匿名用户, SocialStability) ∨ EndangerSecurity(匿名用户, PublicInterest))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"f=“服务器宕机” — 表示服务器宕机是软硬件自身故障\",\n            \"Hardware=“服务器” — 表示硬件为服务器\",\n            \"Software=“操作系统” — 表示软件为操作系统\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f (设备设施故障(f) → (软硬件自身故障(f) ∨ 外围保障设施故障(f) ∨ 人为破坏事故(f) ∨ 其他设备设施故障(f)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“电源系统失效” — 表示电源系统失效是外围保障设施故障\",\n            \"Peripheral=“电源系统” — 表示外围保障设施为电源系统\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f (设备设施故障(f) → (软硬件自身故障(f) ∨ 外围保障设施故障(f) ∨ 人为破坏事故(f) ∨ 其他设备设施故障(f)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“网络攻击” — 表示网络攻击是人为破坏事故\",\n            \"Sabotage=“网络攻击” — 表示人为破坏事故为网络攻击\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f (设备设施故障(f) → (软硬件自身故障(f) ∨ 外围保障设施故障(f) ∨ 人为破坏事故(f) ∨ 其他设备设施故障(f)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"f=“环境温度过高” — 表示环境温度过高是其他设备设施故障\",\n            \"Other=“环境温度过高” — 表示其他设备设施故障为环境温度过高\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀f (设备设施故障(f) → (软硬件自身故障(f) ∨ 外围保障设施故障(f) ∨ 人为破坏事故(f) ∨ 其他设备设施故障(f)))\"\n        ]\n    }\n]\n```",
    "```json\n[\n    {\n        \"instance_predicates\": [\n            \"E=“地震” — 表示事件E是一个地震\",\n            \"Cause=“地震” — 表示原因为地震\",\n            \"Effect=“网络中断” — 表示结果为网络中断\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (DisasterEvent(地震) ↔ (NaturalDisaster(地震) ∨ EmergencyEvent(地震)) ∧ LeadsTo(地震, CyberSecurityEvent(网络中断)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“台风” — 表示事件E是一个台风\",\n            \"Cause=“台风” — 表示原因为台风\",\n            \"Effect=“数据中心故障” — 表示结果为数据中心故障\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (DisasterEvent(台风) ↔ (NaturalDisaster(台风) ∨ EmergencyEvent(台风)) ∧ LeadsTo(台风, CyberSecurityEvent(数据中心故障)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“恐怖袭击” — 表示事件E是一个恐怖袭击\",\n            \"Cause=“恐怖袭击” — 表示原因为恐怖袭击\",\n            \"Effect=“关键基础设施瘫痪” — 表示结果为关键基础设施瘫痪\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (DisasterEvent(恐怖袭击) ↔ (NaturalDisaster(恐怖袭击) ∨ EmergencyEvent(恐怖袭击)) ∧ LeadsTo(恐怖袭击, CyberSecurityEvent(关键基础设施瘫痪)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“洪水” — 表示事件E是一个洪水\",\n            \"Cause=“洪水” — 表示原因为洪水\",\n            \"Effect=“通信中断” — 表示结果为通信中断\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (DisasterEvent(洪水) ↔ (NaturalDisaster(洪水) ∨ EmergencyEvent(洪水)) ∧ LeadsTo(洪水, CyberSecurityEvent(通信中断)))\"\n        ]\n    },\n    {\n        \"instance_predicates\": [\n            \"E=“网络攻击” — 表示事件E是一个网络攻击\",\n            \"Cause=“网络攻击” — 表示原因为网络攻击\",\n            \"Effect=“数据泄露” — 表示结果为数据泄露\"\n        ],\n        \"instance_logicexpression\": [\n            \"∀E (DisasterEvent(网络攻击) ↔ (NaturalDisaster(网络攻击) ∨ EmergencyEvent(网络攻击)) ∧ LeadsTo(网络攻击, CyberSecurityEvent(数据泄露)))\"\n        ]\n    }\n]\n```"
]